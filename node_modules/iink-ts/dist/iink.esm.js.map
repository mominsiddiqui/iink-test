{"version":3,"file":"iink.esm.js","sources":["../src/Constants.ts","../src/utils/DeferredPromise.ts","../src/utils/math.ts","../src/utils/geometry.ts","../src/utils/version.ts","../src/utils/crypto.ts","../src/utils/units.ts","../src/utils/uuid.ts","../src/utils/object.ts","../src/utils/font.ts","../src/utils/language.ts","../src/utils/quadratics.ts","../src/utils/infos.ts","../src/logger/logger.ts","../src/logger/LoggerManager.ts","../src/logger/LoggerConfiguration.ts","../src/editor/EditorEvent.ts","../src/model/Export.ts","../src/model/ExportV2.ts","../src/editor/EditorLayer.ts","../src/editor/AbstractEditor.ts","../src/symbol/Box.ts","../src/style/Style.ts","../src/style/PenStyle.ts","../src/style/Theme.ts","../node_modules/json-css/lib/jsoncss.min.js","../src/style/StyleHelper.ts","../src/style/StyleManager.ts","../src/symbol/IIDecorator.ts","../src/symbol/Symbol.ts","../src/symbol/geometry/IIEdge.ts","../src/symbol/geometry/IIShape.ts","../src/symbol/recognized/IIRecognizedBase.ts","../src/transform/Matrix.ts","../src/symbol/IISymbolBase.ts","../src/symbol/Point.ts","../src/symbol/geometry/IIEdgeArc.ts","../src/symbol/geometry/IIEdgeLine.ts","../src/symbol/geometry/IIEdgePolyLine.ts","../src/symbol/geometry/IIShapeCircle.ts","../src/symbol/geometry/IIShapeEllipse.ts","../src/symbol/geometry/IIShapePolygon.ts","../src/symbol/IIStroke.ts","../src/symbol/recognized/IIRecognizedArc.ts","../src/symbol/recognized/IIRecognizedCircle.ts","../src/symbol/recognized/IIRecognizedEllipse.ts","../src/symbol/recognized/IIRecognizedLine.ts","../src/symbol/recognized/IIRecognizedPolyLine.ts","../src/symbol/recognized/IIRecognizedPolygon.ts","../src/symbol/recognized/IIRecognizedText.ts","../src/symbol/IISymbolGroup.ts","../src/symbol/IIText.ts","../src/symbol/IIEraser.ts","../src/symbol/Stroke.ts","../src/model/Model.ts","../src/model/IIModel.ts","../src/model/IModel.ts","../src/recognizer/ServerConfiguration.ts","../src/recognizer/recognition/EraserConfiguration.ts","../src/recognizer/recognition/DiagramConfiguration.ts","../src/recognizer/recognition/ExportConfiguration.ts","../src/recognizer/recognition/MarginConfiguration.ts","../src/recognizer/recognition/MathConfiguration.ts","../src/recognizer/recognition/RawContentConfiguration.ts","../src/recognizer/recognition/RecognitionRendererConfiguration.ts","../src/recognizer/recognition/TextConfiguration.ts","../src/recognizer/recognition/TextConfigurationV2.ts","../src/recognizer/recognition/ConvertionConfiguration.ts","../src/recognizer/recognition/ShapeConfiguration.ts","../src/recognizer/RecognizerEvent.ts","../src/recognizer/RecognizerError.ts","../src/recognizer/RecognizerHTTPV1Configuration.ts","../src/recognizer/RecognizerHTTPV1.ts","../src/recognizer/RecognizerHTTPV2Configuration.ts","../src/recognizer/RecognizerHTTPV2.ts","../src/recognizer/RecognizerWebSocketMessage.ts","../src/recognizer/RecognizerWebSocketConfiguration.ts","../src/recognizer/RecognizerWebSocket.ts","../src/recognizer/RecognizerWebSocketSSRConfiguration.ts","../src/recognizer/RecognizerWebSocketSSR.ts","../src/renderer/canvas/CanvasRendererShape.ts","../src/renderer/canvas/CanvasRendererStroke.ts","../src/renderer/canvas/CanvasRendererText.ts","../src/renderer/canvas/CanvasRenderer.ts","../src/renderer/svg/SVGRendererConst.ts","../src/renderer/svg/SVGBuilder.ts","../src/renderer/svg/SVGRendererEdgeUtil.ts","../src/renderer/svg/SVGRendererEraserUtil.ts","../src/renderer/svg/SVGRendererDecoratorUtil.ts","../src/renderer/svg/SVGRendererShapeUtil.ts","../src/renderer/svg/SVGRendererStrokeUtil.ts","../src/renderer/svg/SVGRendererTextUtil.ts","../src/renderer/svg/SVGRendererRecognizedUtil.ts","../src/renderer/svg/SVGRendererGroupUtil.ts","../src/renderer/svg/SVGRenderer.ts","../src/renderer/svg/SVGStroker.ts","../src/renderer/svg/SVGSSRenderer.ts","../src/renderer/RendererConfiguration.ts","../src/grabber/GrabberConfiguration.ts","../src/grabber/PointerEventGrabber.ts","../src/manager/AbstractWriterManager.ts","../src/manager/IIConversionManager.ts","../src/manager/IIResizeManager.ts","../src/manager/IIRotationManager.ts","../src/manager/IISelectionManager.ts","../src/manager/IITextManager.ts","../src/manager/IITranslateManager.ts","../src/manager/IIWriterManager.ts","../src/manager/IIDebugSVGManager.ts","../src/manager/IIMoveManager.ts","../src/manager/IDebugSVGManager.ts","../src/manager/EraseManager.ts","../src/history/HistoryContext.ts","../src/history/HistoryManager.ts","../src/history/IIHistoryManager.ts","../src/history/IHistoryManager.ts","../src/history/HistoryConfiguration.ts","../src/menu/IIMenu.ts","../src/gesture/Gesture.ts","../src/gesture/GestureConfiguration.ts","../src/gesture/IIGestureManager.ts","../src/menu/IIMenuSub.ts","../src/menu/IIMenuAction.ts","../src/menu/IIMenuTool.ts","../src/menu/IIMenuStyle.ts","../src/menu/IIMenuContext.ts","../src/menu/MenuConfiguration.ts","../src/menu/IIMenuManager.ts","../src/snap/IISnapConfiguration.ts","../src/snap/IISnapManager.ts","../src/editor/InteractiveInkEditorConfiguration.ts","../src/editor/InteractiveInkEditor.ts","../src/editor/IEditorTriggerConfiguration.ts","../src/editor/InkEditorDeprecatedConfiguration.ts","../src/editor/InkEditorDeprecated.ts","../src/smartguide/InteractiveInkSSRSmartGuide.ts","../src/editor/IIEditorTriggerConfiguration.ts","../src/editor/InteractiveInkSSREditorConfiguration.ts","../src/editor/InteractiveInkSSREditor.ts","../src/editor/InkEditorConfiguration.ts","../src/manager/IWriterManager.ts","../src/editor/InkEditor.ts","../src/editor/Editor.ts"],"sourcesContent":["/**\n * @group Editor\n * @summary\n * List the possibilities of interactions\n */\nexport enum EditorTool\n{\n  Write = \"write\",\n  Erase = \"erase\",\n  /**\n   * @remarks only usable in the case of offscreen\n   */\n  Select = \"select\",\n  /**\n   * @remarks only usable in the case of offscreen\n   */\n  Move = \"move\"\n}\n\n/**\n * @group Editor\n * @summary\n * List all the shapes that can be drawn\n * @remarks\n * only usable in the case of offscreen\n */\nexport enum EditorWriteTool\n{\n  Pencil = \"pencil\",\n  Rectangle = \"rectangle\",\n  Rhombus = \"rhombus\",\n  Circle = \"circle\",\n  Ellipse = \"ellipse\",\n  Triangle = \"triangle\",\n  Parallelogram = \"parallelogram\",\n  Line = \"line\",\n  Arrow = \"arrow\",\n  DoubleArrow = \"double-arrow\",\n}\n\n/**\n * @group Renderer\n * @summary\n * List all svg elements roles\n * @remarks\n * only usable in the case of offscreen\n */\nexport enum SvgElementRole\n{\n  Guide = \"guide\",\n  InteractElementsGroup = \"interact-elements-group\",\n  Translate = \"translate\",\n  Resize = \"resize\",\n  Rotate = \"rotate\",\n}\n\n/**\n * @group Renderer\n * @summary\n * List all svg elements resize direction\n * @remarks\n * only usable in the case of offscreen\n */\nexport const enum ResizeDirection\n{\n  North = \"n-resize\",\n  East = \"e-resize\",\n  South = \"s-resize\",\n  West = \"w-resize\",\n  NorthEast = \"ne-resize\",\n  NorthWest = \"nw-resize\",\n  SouthEast = \"se-resize\",\n  SouthWest = \"sw-resize\"\n}\n\n/**\n * @group Renderer\n */\nexport const SELECTION_MARGIN = 10 as const\n","\n/**\n * @group Utils\n */\nexport class DeferredPromise<T> {\n  promise: Promise<T>\n  resolve!: (value: T) => void\n  reject!: (value: Error | string) => void\n\n  isFullFilled: boolean\n  isPending: boolean\n\n\n  constructor()\n  {\n    this.isFullFilled = false\n    this.isPending = true\n\n    this.promise = new Promise((resolve, reject) =>\n    {\n      this.reject = async (v: unknown) =>\n      {\n        this.isFullFilled = true\n        this.isPending = false\n        return reject(v)\n      }\n      this.resolve = async (v: unknown) =>\n      {\n        this.isFullFilled = true\n        this.isPending = false\n        return resolve(v as T)\n      }\n    })\n  }\n}\n","/**\n * @group Utils\n */\nexport function isValidNumber(x: unknown): boolean\n{\n  if (x === undefined || x === null) return false\n  return !isNaN(parseFloat(x.toString())) && isFinite(+x)\n}\n/**\n * @group Utils\n */\nexport function isBetween(val: number, min: number, max: number): boolean\n{\n  return val >= min && val <= max\n}\n\n/**\n * @group Utils\n */\nexport function computeAverage(arr: number[]): number\n{\n  return arr.reduce((p, c) => p + c, 0) / (arr.length || 1)\n}\n","import { TBox, TPoint, TSegment } from \"../symbol\"\nimport { isBetween } from \"./math\"\n\n/**\n * @group Utils\n */\nexport function computeDistance(p1: TPoint, p2: TPoint): number\n{\n  const distance = Math.hypot(p2.y - p1.y, p2.x - p1.x)\n  return isNaN(distance) ? 0 : distance\n}\n\n/**\n * @group Utils\n */\nexport function computeAngleAxeRadian(begin: TPoint, end: TPoint): number\n{\n  return Math.atan2(end.y - begin.y, end.x - begin.x)\n}\n\n/**\n * @group Utils\n */\nexport function createPointsOnSegment(p1: TPoint, p2: TPoint, spaceBetweenPoint = 1): TPoint[]\n{\n  const points: TPoint[] = []\n  const globalDistance = computeDistance(p1, p2)\n  let spaceWithP1 = spaceBetweenPoint\n  while (spaceWithP1 < globalDistance) {\n    const p = {\n      x: p1.x + (spaceWithP1 * (p2.x - p1.x)) / globalDistance,\n      y: p1.y + (spaceWithP1 * (p2.y - p1.y)) / globalDistance\n    }\n    points.push(p)\n    spaceWithP1 += spaceBetweenPoint\n  }\n  return points\n}\n\n/**\n * @group Utils\n */\nexport function scalaire(v1: TPoint, v2: TPoint): number\n{\n  return v1.x * v2.x + v1.y * v2.y\n}\n\n/**\n * @group Utils\n */\nexport function computeNearestPointOnSegment(p: TPoint, seg: TSegment): TPoint\n{\n  const vectP1P = { x: p.x - seg.p1.x, y: p.y - seg.p1.y }\n  const vectP1P2 = { x: seg.p2.x - seg.p1.x, y: seg.p2.y - seg.p1.y }\n  if (vectP1P2.x === 0 && vectP1P2.y === 0) {\n    return seg.p1\n  }\n  const scalaireP1P_P1P2 = scalaire(vectP1P, vectP1P2)\n  const scalaireP1P2_P1P2 = scalaire(vectP1P2, vectP1P2)\n\n  const t = Math.min(1, Math.max(0, scalaireP1P_P1P2 / scalaireP1P2_P1P2))\n  return { x: seg.p1.x + (vectP1P2.x * t), y: seg.p1.y + (vectP1P2.y * t) }\n}\n\n/**\n * @group Utils\n */\nexport function isPointInsideBox(point: TPoint, box: TBox): boolean\n{\n  return isBetween(point.x, box.x, box.x + box.width) && isBetween(point.y, box.y, box.y + box.height)\n}\n\n/**\n * @group Utils\n */\nexport function convertRadianToDegree(radian: number): number\n{\n  return +((radian % (2 * Math.PI)) / Math.PI * 180).toFixed(4)\n}\n\n/**\n * @group Utils\n */\nexport function convertDegreeToRadian(degree: number): number\n{\n  return +((degree % 360) / 180 * Math.PI).toFixed(4)\n}\n\n/**\n * @group Utils\n */\nexport function computeRotatedPoint(point: TPoint, center: TPoint, radian: number): TPoint\n{\n  const dx = point.x - center.x\n  const dy = point.y - center.y\n  const cos = Math.cos(radian)\n  const sin = Math.sin(radian)\n  return {\n    x: +(center.x + cos * dx - sin * dy).toFixed(3),\n    y: +(center.y + sin * dx + cos * dy).toFixed(3)\n  }\n}\n\n/**\n * @group Utils\n */\nexport function computePointOnEllipse(center: TPoint, radiusX: number, radiusY: number, phi: number, theta: number): TPoint\n{\n  const cosPhi = Math.cos(phi)\n  const sinPhi = Math.sin(phi)\n\n  const M = Math.abs(radiusX) * Math.cos(theta)\n  const N = Math.abs(radiusY) * Math.sin(theta)\n\n  return {\n    x: +(center.x + cosPhi * M - sinPhi * N).toFixed(3),\n    y: +(center.y + sinPhi * M + cosPhi * N).toFixed(3)\n  }\n}\n\n/**\n * @group Utils\n */\nexport function computeDistanceBetweenPointAndSegment(p: TPoint, seg: TSegment): number\n{\n  return computeDistance(p, computeNearestPointOnSegment(p, seg))\n}\n\n/**\n * @group Utils\n */\nexport function findIntersectionBetween2Segment(seg1: TSegment, seg2: TSegment): TPoint | undefined\n{\n\n  if (seg1.p1.x === seg2.p1.x && seg1.p1.y === seg2.p1.y) return seg1.p1\n  if (seg1.p1.x === seg2.p2.x && seg1.p1.y === seg2.p2.y) return seg1.p1\n\n  if (seg1.p2.x === seg2.p1.x && seg1.p2.y === seg2.p1.y) return seg1.p2\n  if (seg1.p2.x === seg2.p2.x && seg1.p2.y === seg2.p2.y) return seg1.p2\n\n  const S1dx = seg1.p2.x - seg1.p1.x\n  const S1dy = seg1.p2.y - seg1.p1.y\n\n  const S2dx = seg2.p2.x - seg2.p1.x\n  const S2dy = seg2.p2.y - seg2.p1.y\n\n  const S1S2dx = seg1.p1.x - seg2.p1.x\n  const S1S2dy = seg1.p1.y - seg2.p1.y\n\n  const ua_t = S2dx * S1S2dy - S2dy * S1S2dx\n  const ub_t = S1dx * S1S2dy - S1dy * S1S2dx\n  const u_b = S2dy * S1dx - S2dx * S1dy\n\n  if (ua_t === 0 || ub_t === 0 || u_b === 0) return\n\n  const ua = ua_t / u_b\n  const ub = ub_t / u_b\n  if (isBetween(ua, 0, 1) && isBetween(ub, 0, 1)) {\n    return {\n      x: seg1.p1.x + ua * S1dx,\n      y: seg1.p1.y + ua * S1dy\n    }\n  }\n  return\n}\n\n/**\n * @group Utils\n */\nexport function findIntersectBetweenSegmentAndCircle(seg: TSegment, c: TPoint, r: number): TPoint[]\n{\n  const result: TPoint[] = []\n\n  const a = Math.pow(seg.p2.x - seg.p1.x, 2) + Math.pow(seg.p2.y - seg.p1.y, 2)\n  const b = 2 * ((seg.p2.x - seg.p1.x) * (seg.p1.x - c.x) + (seg.p2.y - seg.p1.y) * (seg.p1.y - c.y))\n  const cc = Math.pow(c.x, 2) + Math.pow(c.y, 2) + Math.pow(seg.p1.x, 2) + Math.pow(seg.p1.y, 2) - 2 * (c.x * seg.p1.x + c.y * seg.p1.y) - Math.pow(r, 2)\n  const deter = Math.pow(b, 2) - 4 * a * cc\n\n  if (deter <= 0) return []\n\n  const e = Math.sqrt(deter)\n  const u1 = (-b + e) / (2 * a)\n  const u2 = (-b - e) / (2 * a)\n\n  if ((u1 < 0 || u1 > 1) && (u2 < 0 || u2 > 1)) {\n    return result\n  }\n\n  if (isBetween(u1, 0, 1)) {\n    result.push({\n      x: (seg.p2.x - seg.p1.x) * u1 + seg.p1.x,\n      y: (seg.p2.y - seg.p1.y) * u1 + seg.p1.y\n    })\n  }\n\n  if (isBetween(u2, 0, 1)) {\n    result.push({\n      x: (seg.p2.x - seg.p1.x) * u2 + seg.p1.x,\n      y: (seg.p2.y - seg.p1.y) * u2 + seg.p1.y\n    })\n  }\n\n  return result\n}\n\n/**\n * @group Utils\n */\nexport function computeAngleRadian(p1: TPoint, center: TPoint, p2: TPoint): number\n{\n  const p1c = Math.sqrt(Math.pow(center.x - p1.x, 2) + Math.pow(center.y - p1.y, 2))\n  const p2c = Math.sqrt(Math.pow(center.x - p2.x, 2) + Math.pow(center.y - p2.y, 2))\n  const p1p2 = Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2))\n  return Math.acos((p2c * p2c + p1c * p1c - p1p2 * p1p2) / (2 * p2c * p1c))\n}\n\n/**\n * @group Utils\n */\nexport function getClosestPoints(points1: TPoint[], points2: TPoint[]): { p1: TPoint, p2: TPoint }\n{\n  let p1 = points1[0]\n  let p2 = points2[0]\n  let minDistance = Number.MAX_SAFE_INTEGER\n  points1.forEach(_p1 =>\n  {\n    points2.forEach(_p2 =>\n    {\n      const d = computeDistance(_p1, _p2)\n      if (minDistance > d) {\n        minDistance = d\n        p1 = _p1\n        p2 = _p2\n      }\n    })\n  })\n  return { p1, p2 }\n}\n\n/**\n * @group Utils\n */\nexport function getClosestPoint(points: TPoint[], point: TPoint): { point?: TPoint, index: number }\n{\n  let minDistance = Number.MAX_SAFE_INTEGER\n  let closest: TPoint | undefined\n  let index = -1\n  points.forEach((p, i) =>\n  {\n    const d = computeDistance(p, point)\n    if (minDistance > d) {\n      minDistance = d\n      closest = p\n      index = i\n    }\n  })\n  return {\n    point: closest,\n    index\n  }\n}\n\n/**\n * @group Utils\n */\nexport function isPointInsidePolygon(point: TPoint, points: TPoint[])\n{\n  let inside = false\n  for (let i = 0, j = points.length - 1; i < points.length; j = i++) {\n    const p1 = points[i]\n    const p2 = points[j]\n    const intersect = ((p1.y > point.y) != (p2.y > point.y))\n      && (point.x < (p2.x - p1.x) * (point.y - p1.y) / (p2.y - p1.y) + p1.x)\n    if (intersect) inside = !inside\n  }\n\n  return inside\n}\n","\n/**\n * @group Utils\n */\nexport const isVersionSuperiorOrEqual = (source: string, target: string): boolean =>\n{\n  const sourceParts = source.split(\".\")\n  const targetParts = target.split(\".\")\n\n  for (let i = 0; i < targetParts.length; i++) {\n    const a = Number(targetParts[i])\n    const b = Number(sourceParts[i])\n    if (a > b) return false\n    if (a < b) return true\n  }\n  return true\n}\n","/**\n * @group Utils\n */\nexport async function computeHmac(message: string, applicationKey: string, hmacKey: string): Promise<string>\n{\n  const enc = new TextEncoder()\n  const messageEncoded = enc.encode(message)\n  const keyEncoded = enc.encode(applicationKey + hmacKey)\n\n  const key = await crypto.subtle.importKey(\n    \"raw\",\n    keyEncoded,\n    {\n      name: \"HMAC\",\n      hash: { name: \"SHA-512\" }\n    },\n    false,\n    [\"sign\"]\n  )\n\n  const signature = await crypto.subtle.sign(\n    \"HMAC\",\n    key,\n    messageEncoded\n  )\n\n  const buffer = new Uint8Array(signature)\n  return Array.prototype.map.call(buffer, x => x.toString(16).padStart(2, \"0\")).join(\"\")\n}\n","import { TBox } from \"../symbol\"\n\n/**\n * @group Utils\n */\nexport function convertMillimeterToPixel(mm: number): number\n{\n  return +(mm * 96 / 25.4).toFixed(3)\n}\n\n/**\n * @group Utils\n */\nexport function convertPixelToMillimeter(px: number): number\n{\n  return +(px / 96 * 25.4).toFixed(3)\n}\n\n/**\n * @group Utils\n */\nexport function convertBoundingBoxMillimeterToPixel(box?: TBox): TBox\n{\n  if (!box) {\n    return { height: 0, width: 0, x: 0, y: 0}\n  }\n  return {\n    x: convertMillimeterToPixel(box.x),\n    y: convertMillimeterToPixel(box.y),\n    width: convertMillimeterToPixel(box.width),\n    height: convertMillimeterToPixel(box.height),\n  }\n}\n","\n/**\n * @group Utils\n */\nexport function createUUID(): string\n{\n  let dt = Date.now()\n  const uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c)\n  {\n    const r = (dt + Math.random() * 16) % 16 | 0\n    dt = Math.floor(dt / 16)\n    return (c == \"x\" ? r : (r & 0x3 | 0x8)).toString(16)\n  })\n  return uuid\n}\n","\n/**\n * @group Utils\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const mergeDeep = (target: any, ...sources: any[]): any =>\n{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const isObject = (item: any) =>\n  {\n    return (item && typeof item === \"object\" && !Array.isArray(item))\n  }\n  if (!sources.length) return target\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, { [key]: {} })\n        }\n        mergeDeep(target[key], source[key])\n      }\n      else if (Array.isArray(target[key]) && Array.isArray(source[key])) {\n        target[key] = target[key].concat(source[key])\n      }\n      else {\n        Object.assign(target, { [key]: source[key] })\n      }\n    }\n  }\n  else if (Array.isArray(target) && Array.isArray(source)) {\n    target = target.concat(source)\n  }\n  else if (source) {\n    target = source\n  }\n\n  return mergeDeep(target, ...sources)\n}\n\n/**\n * @group Utils\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const isDeepEqual = (object1: any, object2: any) =>\n{\n  const objKeys1 = Object.keys(object1)\n  const objKeys2 = Object.keys(object2)\n\n  if (objKeys1.length !== objKeys2.length) return false\n\n  for (const key of objKeys1) {\n    const value1 = object1[key]\n    const value2 = object2[key]\n\n    const isObjects = isObject(value1) && isObject(value2)\n\n    if (\n      (isObjects && !isDeepEqual(value1, value2)) ||\n      (!isObjects && value1 !== value2)\n    ) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * @group Utils\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isObject = (object: any) =>\n{\n  return object && typeof object === \"object\"\n}\n","import { TServerHTTPConfiguration } from \"../recognizer\"\nimport { PartialDeep } from \"./types\"\n\n/**\n * @group Utils\n */\nexport async function getAvailableFontList(configuration: PartialDeep<{ server: TServerHTTPConfiguration, recognition: { lang: string }}>): Promise<Array<string>>\n{\n  if (!configuration?.server?.scheme && !configuration?.server?.host) {\n    return Promise.reject(\"Failed to get fonts: configuration.server.scheme & configuration.server.host are required!\")\n  }\n  if (!configuration?.recognition?.lang) {\n    return Promise.reject(\"Failed to get fonts: configuration.recognition.lang is required!\")\n  }\n  const serverConfig = configuration.server\n  const response = await fetch(`${ serverConfig.scheme }://${ serverConfig.host }/api/v4.0/iink/font/google/language/` + configuration.recognition.lang)\n  const { result } = await response.json()\n  return result.sort()\n}\n","import { TServerHTTPConfiguration } from \"../recognizer\"\nimport { PartialDeep } from \"./types\"\n\n/**\n * @group Utils\n */\nexport async function getAvailableLanguageList(configuration: PartialDeep<{ server: TServerHTTPConfiguration }>): Promise<{ result: { [key: string]: string } }>\n{\n  if (configuration?.server?.scheme && configuration?.server?.host) {\n    const serverConfig = configuration.server\n    const response = await fetch(`${ serverConfig.scheme }://${ serverConfig.host }/api/v4.0/iink/availableLanguageList`)\n    return response.json()\n  } else {\n    return Promise.reject(\"Failed to get languages: configuration.server.scheme & configuration.server.host are required!\")\n  }\n}\n","import { TPoint, TPointer } from \"../symbol\"\n\n/**\n * @group Utils\n */\nexport function computeLinksPointers(point: TPointer, angle: number, width: number): TPoint[]\n{\n  const radius = point.p * width\n  return [\n    {\n      x: +(point.x - (Math.sin(angle) * radius)).toFixed(3),\n      y: +(point.y + (Math.cos(angle) * radius)).toFixed(3)\n    },\n    {\n      x: +(point.x + (Math.sin(angle) * radius)).toFixed(3),\n      y: +(point.y - (Math.cos(angle) * radius)).toFixed(3),\n    }\n  ]\n}\n\n/**\n * @group Utils\n */\nexport function computeMiddlePointer(point1: TPointer, point2: TPointer): TPointer\n{\n  return {\n    x: +((point2.x + point1.x) / 2).toFixed(3),\n    y: +((point2.y + point1.y) / 2).toFixed(3),\n    p: +((point2.p + point1.p) / 2).toFixed(3),\n    t: +((point2.t + point1.t) / 2).toFixed(3),\n  }\n}\n","import { TServerHTTPConfiguration } from \"../recognizer\"\nimport { PartialDeep } from \"./types\"\n\n/**\n * @group Utils\n */\nexport type TApiInfos = {\n  version: string,\n  gitCommit: string,\n  nativeVersion: string\n}\n\n/**\n * @group Utils\n */\nexport async function getApiInfos(configuration?: PartialDeep<{ server: TServerHTTPConfiguration }>): Promise<TApiInfos>\n{\n  try {\n    if (!configuration?.server?.scheme && !configuration?.server?.host) {\n      return Promise.reject(\"Failed to get infos: configuration.server.scheme & configuration.server.host are required!\")\n    }\n    const response = await fetch(`${ configuration.server.scheme }://${ configuration.server.host }/api/v4.0/iink/version`)\n    if (response.ok) {\n      const version = await response.json() as TApiInfos\n      return version\n    }\n    else {\n      //latest version published before this endpoint\n      return { version: \"3.1.3\", gitCommit: \"unknown\", nativeVersion: \"<=3.1.1\" }\n    }\n\n  } catch {\n    //latest version published before this endpoint\n    return { version: \"3.1.3\", gitCommit: \"7e148bd566438ca77dc83cb4edcc6ed0f51a8a15\", nativeVersion: \"<=3.1.1\" }\n   }\n\n}\n","/**\n * @group Logger\n */\nexport enum LoggerLevel\n{\n  DEBUG = \"1\",\n  INFO = \"2\",\n  WARN = \"3\",\n  ERROR = \"4\"\n}\n\n/**\n * @group Logger\n */\nexport enum LoggerCategory\n{\n  EDITOR = \"EDITOR\",\n  RECOGNIZER = \"RECOGNIZER\",\n  GRABBER = \"GRABBER\",\n  GESTURE = \"GESTURE\",\n  EDITOR_EVENT = \"EDITOR_EVENT\",\n  MODEL = \"MODEL\",\n  RENDERER = \"RENDERER\",\n  SMARTGUIDE = \"SMARTGUIDE\",\n  STYLE = \"STYLE\",\n  HISTORY = \"HISTORY\",\n  SYMBOL = \"SYMBOL\",\n  WRITE = \"WRITE\",\n  TRANSFORMER = \"TRANSFORMER\",\n  CONVERTER = \"CONVERTER\",\n  SELECTION = \"SELECTION\",\n  SVGDEBUG = \"SVGDEBUG\",\n  MENU = \"MENU\"\n}\n\n/**\n * @group Logger\n */\nexport class Logger\n{\n  category: LoggerCategory\n  level: LoggerLevel\n\n  constructor(category: LoggerCategory, level: LoggerLevel)\n  {\n    this.category = category\n    this.level = level\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  debug(functionName: string, ...data: any)\n  {\n    if (LoggerLevel.DEBUG >= this.level) {\n      const dataLog = {\n        level: \"debug\",\n        from: `${ this.category }.${ functionName }`,\n        message: data,\n      }\n      console.debug(dataLog)\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  info(functionName: string, ...data: any)\n  {\n    if (LoggerLevel.INFO >= this.level) {\n      const dataLog = {\n        level: \"info\",\n        from: `${ this.category }.${ functionName }`,\n        message: data,\n      }\n      console.info(dataLog)\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  warn(functionName: string, ...data: any)\n  {\n    if (LoggerLevel.WARN >= this.level) {\n      const dataLog = {\n        level: \"warn\",\n        from: `${ this.category }.${ functionName }`,\n        message: data,\n      }\n      console.warn(dataLog)\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error(functionName: string, ...error: any)\n  {\n    const dataLog = {\n      level: \"error\",\n      from: `${ this.category }.${ functionName }`,\n      message: error,\n    }\n    console.error(dataLog)\n  }\n}\n","import { TLoggerConfiguration } from \"./LoggerConfiguration\"\nimport { Logger, LoggerCategory, LoggerLevel } from \"./logger\"\n\n/**\n * @group Logger\n */\nexport class LoggerManager\n{\n  static #loggerMap: Map<LoggerCategory, Logger> = new Map()\n\n  static getLogger(name: LoggerCategory): Logger\n  {\n    if (!this.#loggerMap.has(name)) {\n      this.#loggerMap.set(name, new Logger(name, LoggerLevel.ERROR))\n    }\n    return this.#loggerMap.get(name) as Logger\n  }\n\n  static setLoggerLevel(config: TLoggerConfiguration)\n  {\n    Object.keys(config).forEach((lc) =>\n    {\n      LoggerManager.getLogger(lc as LoggerCategory).level = config[lc as LoggerCategory]\n    })\n  }\n}\n","import { LoggerCategory, LoggerLevel } from \"./logger\"\n\n/**\n * @group Logger\n */\nexport type TLoggerConfiguration = {\n  [key in keyof typeof LoggerCategory]: LoggerLevel\n}\n\n/**\n * @group Logger\n * @source\n */\nexport const DefaultLoggerConfiguration: TLoggerConfiguration = {\n  [LoggerCategory.EDITOR]: LoggerLevel.ERROR,\n  [LoggerCategory.RECOGNIZER]: LoggerLevel.ERROR,\n  [LoggerCategory.GRABBER]: LoggerLevel.ERROR,\n  [LoggerCategory.RENDERER]: LoggerLevel.ERROR,\n  [LoggerCategory.EDITOR_EVENT]: LoggerLevel.ERROR,\n  [LoggerCategory.MODEL]: LoggerLevel.ERROR,\n  [LoggerCategory.SYMBOL]: LoggerLevel.ERROR,\n  [LoggerCategory.SMARTGUIDE]: LoggerLevel.ERROR,\n  [LoggerCategory.GESTURE]: LoggerLevel.ERROR,\n  [LoggerCategory.STYLE]: LoggerLevel.ERROR,\n  [LoggerCategory.HISTORY]: LoggerLevel.ERROR,\n  [LoggerCategory.TRANSFORMER]: LoggerLevel.ERROR,\n  [LoggerCategory.CONVERTER]: LoggerLevel.ERROR,\n  [LoggerCategory.WRITE]: LoggerLevel.ERROR,\n  [LoggerCategory.SELECTION]: LoggerLevel.ERROR,\n  [LoggerCategory.SVGDEBUG]: LoggerLevel.ERROR,\n  [LoggerCategory.MENU]: LoggerLevel.ERROR,\n}\n","import { EditorTool } from \"../Constants\"\nimport { LoggerManager, LoggerCategory } from \"../logger\"\nimport { TExport, TExportV2 } from \"../model\"\nimport { IIStroke, TIISymbol, TSymbol } from \"../symbol\"\nimport { THistoryContext } from \"../history\"\nimport { TGestureType } from \"../gesture\"\n\n/**\n * @group Editor\n * @remarks Lists all events that can be listened to on the editor or DOM element\n * @example\n * You can run code on \"EditorEventName\" raised by using\n * ```ts\n * editor.event.addEventListener(EditorEventName.CHANGED, (evt) => console.log(evt.detail))\n * ```\n */\nexport enum EditorEventName\n{\n  /**\n   * @remarks event emitted when history has changed i.e. the context of undo-redo\n   */\n  CHANGED = \"changed\",\n  /**\n   * @remarks event emitted when clearing is complete\n   */\n  CLEARED = \"cleared\",\n  /**\n   * @remarks event emitted after the conversion is complete\n   */\n  CONVERTED = \"converted\",\n  /**\n   * @remarks event emitted when the editor encounters an error\n   */\n  ERROR = \"error\",\n  /**\n   * @remarks event emitted on click on pointer events\n   */\n  POINTEREVENTS = \"pointer_events\",\n  /**\n   * @remarks event emitted after\n   */\n  NOTIF = \"notif\",\n  /**\n   * @remarks event emitted after the end of the export\n   */\n  EXPORTED = \"exported\",\n  /**\n   * @remarks event emitted after the end of the import\n   */\n  IMPORTED = \"imported\",\n  /**\n   * @remarks event emitted when the server is idle after a job\n   */\n  IDLE = \"idle\",\n  /**\n   * @remarks event emitted after full editor initialization\n   */\n  LOADED = \"loaded\",\n  /**\n   * @remarks event emitted session opened\n   */\n  SESSION_OPENED = \"session-opened\",\n  /**\n   * @remarks event emitted after selection change\n   */\n  SELECTED = \"selected\",\n  /**\n   * @remarks event emitted after tool change\n   */\n  TOOL_CHANGED = \"tool-changed\",\n  /**\n   * @remarks event emitted after mode change\n   */\n  UI_UPDATED = \"ui-updated\",\n  /**\n   * @remarks event emitted after stroke synchronized with jiix\n   */\n  SYNCHRONIZED = \"synchronized\",\n  /**\n   * @remarks event emitted after applying a gesture\n   */\n  GESTURED = \"gestured\"\n}\n\n/**\n * @group Editor\n */\nexport class EditorEvent extends EventTarget\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.EDITOR_EVENT);\n  protected abortController: AbortController\n  element: Element\n\n  constructor(element: Element)\n  {\n    super()\n    this.#logger.info(\"constructor\", { element })\n    this.abortController = new AbortController()\n    this.element = element\n  }\n\n  removeAllListeners(): void\n  {\n    this.#logger.info(\"removeAllListeners\")\n    this.abortController.abort()\n    this.abortController = new AbortController()\n  }\n\n  protected emit(type: string, data?: unknown): void\n  {\n    const evt = new CustomEvent(type, Object.assign({ bubbles: true, composed: true }, data ? { detail: data } : undefined))\n    this.dispatchEvent(evt)\n    this.element?.dispatchEvent(evt)\n  }\n\n  emitSessionOpened(sessionId: string): void\n  {\n    this.#logger.info(\"emitSessionOpened\")\n    this.emit(EditorEventName.SESSION_OPENED, sessionId)\n  }\n  addSessionOpenedListener(callback: (sessionId: string) => void): void\n  {\n    this.#logger.info(\"addSessionOpenedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.SESSION_OPENED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as string),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitLoaded(): void\n  {\n    this.#logger.info(\"emitLoaded\")\n    this.emit(EditorEventName.LOADED)\n  }\n  addLoadedListener(callback: () => void): void\n  {\n    this.#logger.info(\"addLoadedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.LOADED,\n      () => callback(),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitNotif(notif: { message: string; timeout?: number }): void\n  {\n    this.#logger.info(\"emitNotif\", { notif })\n    this.emit(EditorEventName.NOTIF, notif)\n  }\n  addNotifListener(callback: (notif: { message: string; timeout?: number }) => void): void\n  {\n    this.#logger.info(\"addNotifListener\", { callback })\n    this.addEventListener(\n      EditorEventName.NOTIF,\n      (evt: unknown) => callback((evt as CustomEvent).detail as { message: string; timeout?: number }),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitError(err: Error): void\n  {\n    this.#logger.info(\"emitError\", { err })\n    this.emit(EditorEventName.ERROR, err)\n  }\n  addErrorListener(callback: (err: Error) => void): void\n  {\n    this.#logger.info(\"addErrorListener\", { callback })\n    this.addEventListener(\n      EditorEventName.ERROR,\n      (evt: unknown) => callback((evt as CustomEvent).detail as Error),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitExported(exports: TExport | TExportV2): void\n  {\n    this.#logger.info(\"emitExported\", { exports })\n    this.emit(EditorEventName.EXPORTED, exports)\n  }\n  addExportedListener(callback: (exports: TExport | TExportV2) => void): void\n  {\n    this.#logger.info(\"addExportedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.EXPORTED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as TExport | TExportV2),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitChanged(undoRedoContext: THistoryContext): void\n  {\n    this.#logger.info(\"emitChanged\", { undoRedoContext })\n    this.emit(EditorEventName.CHANGED, {\n      ...undoRedoContext,\n      canClear: !undoRedoContext.empty\n    })\n  }\n  addChangedListener(callback: (context: THistoryContext) => void): void\n  {\n    this.#logger.info(\"addChangedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.CHANGED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as THistoryContext),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitIdle(idle: boolean): void\n  {\n    this.#logger.info(\"emitIdle\", { idle })\n    this.emit(EditorEventName.IDLE, idle)\n  }\n  addIdleListener(callback: (idle: boolean) => void): void\n  {\n    this.#logger.info(\"addIdleListener\", { callback })\n    this.addEventListener(\n      EditorEventName.IDLE,\n      (evt: unknown) => callback((evt as CustomEvent).detail as boolean),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitCleared(): void\n  {\n    this.#logger.info(\"emitCleared\")\n    this.emit(EditorEventName.CLEARED)\n  }\n  addClearedListener(callback: () => void): void\n  {\n    this.#logger.info(\"addClearedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.CLEARED,\n      () => callback(),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitConverted(exports: TExport): void\n  {\n    this.#logger.info(\"emitConverted\", { exports })\n    this.emit(EditorEventName.CONVERTED, exports)\n  }\n  addConvertedListener(callback: (exports: TExport) => void): void\n  {\n    this.#logger.info(\"addConvertedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.CONVERTED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as TExport),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitImported(exports: TExport): void\n  {\n    this.#logger.info(\"emitImported\", { exports })\n    this.emit(EditorEventName.IMPORTED, exports)\n  }\n  addImportedListener(callback: (exports: TExport) => void): void\n  {\n    this.#logger.info(\"addImportedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.IMPORTED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as TExport),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitSelected(symbols: TSymbol[]): void\n  {\n    this.#logger.info(\"emitSelected\")\n    this.emit(EditorEventName.SELECTED, symbols)\n  }\n  addSelectedListener(callback: (symbols: TIISymbol[]) => void): void\n  {\n    this.#logger.info(\"addSelectedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.SELECTED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as TIISymbol[]),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitToolChanged(mode: EditorTool): void\n  {\n    this.#logger.info(\"emitToolChanged\")\n    this.emit(EditorEventName.TOOL_CHANGED, mode)\n  }\n  addToolChangedListener(callback: (mode: EditorTool) => void): void\n  {\n    this.#logger.info(\"addToolChangedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.TOOL_CHANGED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as EditorTool),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitUIpdated(): void\n  {\n    this.#logger.info(\"emitUIpdated\")\n    this.emit(EditorEventName.UI_UPDATED)\n  }\n  addUIpdatedListener(callback: () => void): void\n  {\n    this.#logger.info(\"addUIpdatedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.UI_UPDATED,\n      () => callback(),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitSynchronized(): void\n  {\n    this.#logger.info(\"emitSynchronized\")\n    this.emit(EditorEventName.SYNCHRONIZED)\n  }\n  addSynchronizedListener(callback: () => void): void\n  {\n    this.#logger.info(\"addSynchronizedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.SYNCHRONIZED,\n      () => callback(),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitGestured(gesture: { gestureType: TGestureType, stroke: IIStroke }): void\n  {\n    this.#logger.info(\"emitSynchronized\")\n    this.emit(EditorEventName.GESTURED, gesture)\n  }\n  addGesturedListener(callback: (gesture: { gestureType: TGestureType, stroke: IIStroke }) => void): void\n  {\n    this.#logger.info(\"addSynchronizedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.GESTURED,\n      (evt) => callback((evt as CustomEvent).detail as { gestureType: TGestureType, stroke: IIStroke }),\n      { signal: this.abortController.signal }\n    )\n  }\n}\n","import { EdgeDecoration, TBox, TPoint } from \"../symbol\"\n\n/**\n * @group Exports\n * @remarks List all supported MIME types for export. Please note, the MIME types supported depend on the recognition type configured\n */\nexport enum ExportType\n{\n  JIIX = \"application/vnd.myscript.jiix\",\n  TEXT = \"text/plain\",\n  LATEX = \"application/x-latex\",\n  MATHML = \"application/mathml+xml\",\n  SVG = \"image/svg+xml\",\n  OFFICE_DOCUMENT = \"application/vnd.openxmlformats-officedocument.presentationml.presentation\"\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix  Element type}\n */\nexport enum JIIXELementType\n{\n  Text = \"Text\",\n  Node = \"Node\",\n  Edge = \"Edge\",\n  RawContent = \"Raw Content\",\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix/#diagram-item-blocks | Element node kind}\n */\nexport enum JIIXNodeKind\n{\n  Circle = \"circle\",\n  Ellipse = \"ellipse\",\n  Rectangle = \"rectangle\",\n  Triangle = \"triangle\",\n  Parallelogram = \"parallelogram\",\n  Polygon = \"polygon\",\n  Rhombus = \"rhombus\",\n}\n\n/**\n * @group Exports\n */\nexport enum JIIXEdgeKind\n{\n  Line = \"line\",\n  PolyEdge = \"polyedge\",\n  Arc = \"arc\",\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix/#stroke-item | Stroke item}\n */\nexport type TJIIXStrokeItem = {\n  type: \"stroke\"\n  id: string\n  \"full-id\"?: string\n  timestamp?: string\n  X?: number[]\n  Y?: number[]\n  F?: number[]\n  T?: number[]\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXBase = {\n  \"bounding-box\"?: TBox\n  items?: TJIIXStrokeItem[]\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXElementBase<T = string> = TJIIXBase & {\n  id: string\n  type: T\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix/#word-object | Word object}\n */\nexport type TJIIXWord = TJIIXBase & {\n  id?: string\n  label: string\n  candidates?: string[]\n  \"first-char\"?: number\n  \"last-char\"?: number\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix/#character-object | Character object}\n */\nexport type TJIIXChar = TJIIXBase & {\n  label: string\n  candidates?: string[]\n  word: number\n  grid: TPoint[]\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix/#text-interpretation | Text Element }\n */\nexport type TJIIXLine = {\n  \"baseline-y\": number\n  \"first-char\"?: number\n  \"last-char\"?: number\n  \"x-height\": number\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix/#text-interpretation | Text Element }\n */\nexport type TJIIXTextElement = TJIIXElementBase<JIIXELementType.Text> & {\n  id: string\n  \"bounding-box\"?: TBox\n  label: string\n  words?: TJIIXWord[]\n  chars?: TJIIXChar[]\n  lines?: TJIIXLine[]\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeElementBase<K = string> = TJIIXElementBase<JIIXELementType.Node> & {\n  id: string\n  kind: K\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeCircle = TJIIXNodeElementBase<JIIXNodeKind.Circle> & {\n  id: string\n  cx: number\n  cy: number\n  r: number\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeEllipse = TJIIXNodeElementBase<JIIXNodeKind.Ellipse> & {\n  id: string\n  cx: number\n  cy: number\n  rx: number\n  ry: number\n  orientation: number\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeRectangle = TJIIXNodeElementBase<JIIXNodeKind.Rectangle> & {\n  id: string\n  height: number\n  width: number\n  x: number\n  y: number\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeTriangle = TJIIXNodeElementBase<JIIXNodeKind.Triangle> & {\n  id: string\n  points: number[]\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeParrallelogram = TJIIXNodeElementBase<JIIXNodeKind.Parallelogram> & {\n  id: string\n  points: number[]\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodePolygon = TJIIXNodeElementBase<JIIXNodeKind.Polygon> & {\n  id: string\n  points: number[]\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeRhombus = TJIIXNodeElementBase<JIIXNodeKind.Rhombus> & {\n  id: string\n  points: number[]\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeElement =\n  TJIIXNodeCircle |\n  TJIIXNodeEllipse |\n  TJIIXNodeRectangle |\n  TJIIXNodeTriangle |\n  TJIIXNodeParrallelogram |\n  TJIIXNodePolygon |\n  TJIIXNodeRhombus\n\n/**\n * @group Exports\n */\nexport type TJIIXEdgeElementBase<K = string> = TJIIXElementBase<JIIXELementType.Edge> & {\n  kind: K\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix/#line-item | Element line}\n */\nexport type TJIIXEdgeLine = TJIIXEdgeElementBase<JIIXEdgeKind.Line> & {\n  x1: number\n  x2: number\n  y1: number\n  y2: number\n  p1Decoration?: EdgeDecoration\n  p2Decoration?: EdgeDecoration\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXEdgePolyEdge = TJIIXEdgeElementBase<JIIXEdgeKind.PolyEdge> & {\n  edges: TJIIXEdgeLine[]\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix/#arc-item | Element arc}\n */\nexport type TJIIXEdgeArc = TJIIXEdgeElementBase<JIIXEdgeKind.Arc> & {\n  cx: number,\n  cy: number,\n  rx: number,\n  ry: number,\n  phi: number,\n  startAngle: number,\n  sweepAngle: number\n  startDecoration?: EdgeDecoration\n  endDecoration?: EdgeDecoration\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXEdgeElement =\n  TJIIXEdgeLine |\n  TJIIXEdgePolyEdge |\n  TJIIXEdgeArc\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/web/jiix | Exports}\n */\nexport type TJIIXElement =\n  TJIIXTextElement |\n  TJIIXNodeElement |\n  TJIIXEdgeElement\n\n/**\n * @group Exports\n */\nexport type TJIIXExport = {\n  type: string\n  id: string\n  \"bounding-box\"?: TBox\n  version: string\n  elements?: TJIIXElement[]\n  label?: string\n  words?: TJIIXWord[]\n  chars?: TJIIXChar[]\n}\n\n/**\n * @group Exports\n * @remarks\n * List all supported MIME types for export.\n *\n * Attention the MIME types supported depend on the {@link TRecognitionType | type of recognition}\n *\n * {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix | Documentation}\n */\nexport type TExport = {\n  /** @hidden */\n  [key: string]: unknown\n  /**\n   * @remarks vnd.myscript.jiix is used for text and raw-content exports\n   */\n  \"application/vnd.myscript.jiix\"?: TJIIXExport\n  /**\n   * @remarks text/plain is only use for text export\n   */\n  \"text/plain\"?: string\n  /**\n   * @remarks x-latex is only use for math export\n   * @see {@link https://katex.org/docs/browser.html | katex} to render\n   */\n  \"application/x-latex\"?: string\n  /**\n   * @remarks mathml+xml is only use for math export\n   * @see {@link https://www.w3.org/Math/whatIsMathML.html | Mathematical Markup Language}\n   */\n  \"application/mathml+xml\"?: string\n  /**\n   * @remarks svg+xml is only use for diagram export\n   */\n  \"image/svg+xml\"?: string\n  /**\n   * @remarks vnd.openxmlformats-officedocument.presentationml.presentation is only use for diagram export\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Blob | Blob}\n   */\n  \"application/vnd.openxmlformats-officedocument.presentationml.presentation\"?: Blob\n}\n","import { TRecognitionV2Type } from \"../recognizer\"\nimport { TJIIXBase, TJIIXWord } from \"./Export\"\n\n/**\n * @group Exports\n * @remarks List all supported MIME types for export in RecognizersV2. Please note, the MIME types supported depend on the recognition type configured\n */\nexport enum ExportV2Type {\n  JIIX = \"application/vnd.myscript.jiix\",\n  TEXT = \"text/plain\",\n  LATEX = \"application/x-latex\",\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix  Element type}\n */\n\n\n/**\n * @group Exports\n*/\nexport type JIIXV2RangeItem = {\n  from: { stroke: number }\n  to: { stroke: number }\n}\n\n/**\n * @group Exports\n * @remarks Only in InkRecognizer () activated with recognition.export.JIIXV2.range = true\n */\nexport type JIIXV2Range = JIIXV2RangeItem[]\n\n/**\n * @group Exports\n */\nexport type JIIXV2Base = TJIIXBase & {\n  range?: JIIXV2Range\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ElementBase<T = TRecognitionV2Type> = JIIXV2Base & {\n  id: string\n  type: T\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2LineSpan = {\n  type: string\n  range: JIIXV2RangeItem[]\n  label: string\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2Line = {\n  type: string\n  range: JIIXV2RangeItem[]\n  label: string\n  spans: JIIXV2LineSpan[]\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix/#word-object | Word object}\n */\nexport type JIIXV2Expression = JIIXV2Base & TJIIXWord & {\n  lines: JIIXV2Line[]\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix#text-interpretation | Text Element }\n */\nexport type JIIXV2TextElement = JIIXV2ElementBase<\"Text\"> & JIIXV2Expression\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix#text-interpretation | Math Element }\n */\nexport type JIIXV2MathElement = JIIXV2ElementBase<\"Math\"> & JIIXV2Expression\n\n/** @group Exports\n */\nexport type JIIXV2DrawingElement = JIIXV2ElementBase<\"Drawing\"> & JIIXV2Expression\n\n/**\n * @group Exports\n */\nexport enum JIIXV2ShapeKind {\n  Circle = \"circle\",\n  Ellipse = \"ellipse\",\n  Rectangle = \"rectangle\",\n  Triangle = \"triangle\",\n  IsoscelesTriangle = \"isosceles triangle\",\n  RightTriangle = \"right triangle\",\n  RightIsoscelesTriangle = \"right isosceles triangle\",\n  EquilateralTriangle = \"equilateral triangle\",\n  Quadrilateral = \"quadrilateral\",\n  Trapezoid = \"trapezoid\",\n  Square = \"square\",\n  Parallelogram = \"parallelogram\",\n  Polygon = \"polygon\",\n  Rhombus = \"rhombus\",\n  Line = \"line\",\n  ArcOfEllipse = \"arc of ellipse\",\n  ArcOfCircle = \"arc of circle\",\n  PolyLine = \"polyline\",\n  Arrow = \"arrow\",\n  CurvedDoubleArrow = \"curved double arrow\",\n  CurvedArrow = \"curved arrow\",\n  PolylineArrow = \"polyline arrow\",\n  PolylineDoubleArrow = \"polyline double arrow\",\n  DoubleArrow = \"double arrow\",\n}\n\n/**\n   * @group Exports\n   */\nexport type JIIXV2PolygonType = \"triangle\" | \"isosceles triangle\" | \"right triangle\" | \"right isosceles triangle\" | \"equilateral triangle\" | \"quadrilateral\" | \"trapezoid\" | \"parallelogram\" | \"rhombus\" | \"rectangle\" | \"square\"\n\n/**\n   * @group Exports\n   */\nexport type JIIXV2ShapeItemBase<K = JIIXV2ShapeKind> = JIIXV2ElementBase<K> & {\n  kind: K\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2EllipseBase<K = JIIXV2ShapeKind.Ellipse | JIIXV2ShapeKind.Circle> = JIIXV2ShapeItemBase<JIIXV2ShapeKind.Ellipse | JIIXV2ShapeKind.Circle> & {\n  kind: K\n  id: string\n  cx: number\n  cy: number\n  rx: number\n  ry: number\n  orientation: number\n  type: string\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2Circle = JIIXV2EllipseBase<JIIXV2ShapeKind.Circle>\n\n/**\n * @group Exports\n */\nexport type JIIXV2Ellipse = JIIXV2EllipseBase<JIIXV2ShapeKind.Ellipse>\n\n/**\n * @group Exports\n */\nexport type JIIXV2PrimitiveArc = {\n  type: \"arc\"\n  cx: number,\n  cy: number,\n  rx: number,\n  ry: number,\n  phi: number,\n  startAngle: number,\n  sweepAngle: number\n  startDecoration?: string\n  endDecoration?: string\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2PrimitiveLine = {\n  type: \"line\"\n  x1: number\n  y1: number\n  x2: number\n  y2: number\n  startDecoration?: string\n  endDecoration?: string\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2PolygonBase<K = JIIXV2PolygonType> = JIIXV2ShapeItemBase<K> & {\n  kind: K\n  primitives: JIIXV2PrimitiveLine[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygon = JIIXV2PolygonBase<JIIXV2ShapeKind.Polygon>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonTriangle = JIIXV2PolygonBase<JIIXV2ShapeKind.Triangle>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonIsoscelesTriangle = JIIXV2PolygonBase<JIIXV2ShapeKind.IsoscelesTriangle>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonRightTriangle = JIIXV2PolygonBase<JIIXV2ShapeKind.RightTriangle>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonRightIsoscelesTriangle = JIIXV2PolygonBase<JIIXV2ShapeKind.RightIsoscelesTriangle>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonEquilateralTriangle = JIIXV2PolygonBase<JIIXV2ShapeKind.EquilateralTriangle>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonQuadrilateral = JIIXV2PolygonBase<JIIXV2ShapeKind.Quadrilateral>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonTrapezoid = JIIXV2PolygonBase<JIIXV2ShapeKind.Trapezoid>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonParallelogram = JIIXV2PolygonBase<JIIXV2ShapeKind.Parallelogram>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonRhombus = JIIXV2PolygonBase<JIIXV2ShapeKind.Rhombus>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonRectangle = JIIXV2PolygonBase<JIIXV2ShapeKind.Rectangle>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonSquare = JIIXV2PolygonBase<JIIXV2ShapeKind.Square>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeLine = JIIXV2ShapeItemBase<JIIXV2ShapeKind.Line> & {\n  primitives: JIIXV2PrimitiveLine[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeLineArrow = JIIXV2ShapeItemBase<JIIXV2ShapeKind.Arrow> & {\n  primitives: JIIXV2PrimitiveLine[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeLineDoubleArrow = JIIXV2ShapeItemBase<JIIXV2ShapeKind.DoubleArrow> & {\n  primitives: JIIXV2PrimitiveLine[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeLinePolyline = JIIXV2ShapeItemBase<JIIXV2ShapeKind.PolyLine> & {\n  primitives: JIIXV2PrimitiveLine[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeLinePolylineArrow = JIIXV2ShapeItemBase<JIIXV2ShapeKind.PolylineArrow> & {\n  primitives: JIIXV2PrimitiveLine[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeLinePolylineDoubleArrow = JIIXV2ShapeItemBase<JIIXV2ShapeKind.PolylineDoubleArrow> & {\n  primitives: JIIXV2PrimitiveLine[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeCurvedDoubleArrow = JIIXV2ShapeItemBase<JIIXV2ShapeKind.CurvedDoubleArrow> & {\n  primitives: JIIXV2PrimitiveArc[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeCurvedArrow = JIIXV2ShapeItemBase<JIIXV2ShapeKind.CurvedArrow> & {\n  primitives: JIIXV2PrimitiveArc[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeArcOfEllipse = JIIXV2ShapeItemBase<JIIXV2ShapeKind.ArcOfEllipse> & {\n  primitives: JIIXV2PrimitiveArc[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeArcOfCircle = JIIXV2ShapeItemBase<JIIXV2ShapeKind.ArcOfCircle> & {\n  primitives: JIIXV2PrimitiveArc[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeElement = JIIXV2Circle | JIIXV2Ellipse | JIIXV2ShapePolygon | JIIXV2ShapePolygonTriangle | JIIXV2ShapePolygonIsoscelesTriangle | JIIXV2ShapePolygonRightTriangle | JIIXV2ShapePolygonRightIsoscelesTriangle | JIIXV2ShapePolygonEquilateralTriangle | JIIXV2ShapePolygonQuadrilateral | JIIXV2ShapePolygonTrapezoid | JIIXV2ShapePolygonParallelogram | JIIXV2ShapePolygonRhombus | JIIXV2ShapePolygonRectangle | JIIXV2ShapePolygonSquare | JIIXV2ShapeLineArrow | JIIXV2ShapeLineDoubleArrow | JIIXV2ShapeLinePolyline | JIIXV2ShapeLinePolylineArrow | JIIXV2ShapeLinePolylineDoubleArrow | JIIXV2ShapeCurvedDoubleArrow | JIIXV2ShapeCurvedArrow | JIIXV2ShapeArcOfEllipse | JIIXV2ShapeArcOfCircle | JIIXV2ShapeLine\n\n/**\n * @group Exports\n * @remarks Only in InkRecognizer () activated with recognition.export.JIIXV2.range = true\n */\nexport type JIIXV2RawContentBase<T = TRecognitionV2Type> = {\n  type: T\n  range?: JIIXV2Range\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2RawContentItemText = JIIXV2RawContentBase<\"Text\"> & JIIXV2Expression\n\n/**\n * @group Exports\n */\nexport type JIIXV2RawContentTextLine = {\n  type: \"Line\"\n  label: string\n  range?: JIIXV2RangeItem\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2RawContentShape = JIIXV2RawContentBase<\"Shape\"> & {\n  label: string\n  shape: JIIXV2RawContentItemShape[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2RawContentItemShape = JIIXV2RawContentBase<\"Shape\"> & {\n  range: JIIXV2RangeItem[]\n  elements: JIIXV2ShapeElement[]\n}\n\nexport type JIIXV2RawContentElement = JIIXV2RawContentItemText | JIIXV2RawContentItemShape\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/web/JIIXV2 | Exports}\n */\nexport type JIIXV2Element =\n  JIIXV2TextElement |\n  JIIXV2ShapeElement |\n  JIIXV2MathElement |\n  JIIXV2DrawingElement |\n  JIIXV2RawContentElement\n\n/**\n * @group Exports\n */\nexport type JIIXV2Export = JIIXV2Base & {\n  type: string\n  id: string\n  version: string\n  elements?: JIIXV2Element[]\n  label?: string\n  words?: JIIXV2Expression[]\n}\n\n/**\n * @group Exports\n * @remarks\n * List all supported MIME types for export.\n *\n * Attention the MIME types supported depend on the {@link TRecognitionType | type of recognition}\n *\n * {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/JIIXV2 | Documentation}\n */\nexport type TExportV2 = {\n  /** @hidden */\n  [key: string]: unknown\n  /**\n   * @remarks vnd.myscript.jiix is used for text and raw-content exports\n   */\n  \"application/vnd.myscript.jiix\"?: JIIXV2Export\n  /**\n   * @remarks text/plain is only use for text export\n   */\n  \"text/plain\"?: string\n  /**\n   * @remarks x-latex is only use for math export\n   * @see {@link https://katex.org/docs/browser.html | katex} to render\n   */\n  \"application/x-latex\"?: string\n}\n","\nimport style from \"../iink.css\"\n/**\n * @group Editor\n */\nexport type EditorLayerUIInfoModal = {\n  root: HTMLDivElement,\n  text: HTMLParagraphElement\n}\n\n/**\n * @group Editor\n */\nexport type EditorLayerUIMessage = {\n  root: HTMLDivElement\n  overlay: HTMLDivElement\n  modal: EditorLayerUIInfoModal\n}\n\n/**\n * @group Editor\n */\nexport type EditorLayerUIState = {\n  root: HTMLDivElement\n  busy: HTMLDivElement\n}\n\n/**\n * @group Editor\n */\nexport type EditorLayerUI = {\n  root: HTMLDivElement\n  loader: HTMLDivElement\n  message: EditorLayerUIMessage\n  state: EditorLayerUIState\n}\n\n/**\n * @group Editor\n */\nexport class EditorLayer\n{\n  root: HTMLElement\n  ui: EditorLayerUI\n  rendering: HTMLElement\n\n  onCloseModal?: (inError?: boolean) => void\n\n  constructor(root: HTMLElement, rootClassCss: string = \"ms-editor\")\n  {\n    this.root = root\n    this.root.classList.add(rootClassCss)\n    this.rendering = this.createLayerRender()\n    this.ui = this.createLayerUI()\n  }\n\n  render(): void\n  {\n    const styleElement = document.createElement(\"style\")\n    styleElement.appendChild(document.createTextNode(style as string))\n    this.root.prepend(styleElement)\n\n    this.root.appendChild(this.rendering)\n    this.root.appendChild(this.ui.root)\n  }\n\n  createLoader(): HTMLDivElement\n  {\n    const loaderHTML = document.createElement(\"div\")\n    loaderHTML.classList.add(\"loader\")\n    loaderHTML.style.display = \"none\"\n    return loaderHTML\n  }\n  showLoader(): void\n  {\n    this.ui.loader.style.display = \"block\"\n  }\n  hideLoader(): void\n  {\n    this.ui.loader.style.display = \"none\"\n  }\n\n  createMessageOverlay(): HTMLDivElement\n  {\n    const overlay = document.createElement(\"div\")\n    overlay.classList.add(\"message-overlay\")\n    return overlay\n  }\n  closeMessageModal(): void\n  {\n    this.onCloseModal?.(this.ui.message.modal.root.classList.contains(\"error-msg\"))\n    this.hideMessageModal()\n  }\n\n  hideMessageModal(): void\n  {\n    this.ui.message.root.style.display = \"none\"\n    this.ui.message.modal.text.innerText = \"\"\n    this.ui.message.modal.root.classList.remove(\"error-msg\")\n    this.ui.message.modal.root.classList.remove(\"info-msg\")\n  }\n  createMessageModal(): EditorLayerUIInfoModal\n  {\n    const element = document.createElement(\"div\")\n    element.classList.add(\"message-modal\")\n\n    const closeBtn = document.createElement(\"button\")\n    closeBtn.classList.add(\"ms-button\", \"close\")\n    closeBtn.addEventListener(\"pointerup\", this.closeMessageModal.bind(this))\n    element.appendChild(closeBtn)\n\n    const text = document.createElement(\"p\")\n    element.appendChild(text)\n    return { root: element, text }\n  }\n  createMessage(): EditorLayerUIMessage\n  {\n    const root = document.createElement(\"div\")\n    root.classList.add(\"message-container\")\n    root.style.display = \"none\"\n\n    const overlay = this.createMessageOverlay()\n    root.appendChild(overlay)\n\n    const modal = this.createMessageModal()\n    root.appendChild(modal.root)\n\n    return {\n      root,\n      overlay,\n      modal\n    }\n  }\n  showMessageInfo(notif: { message: string, timeout?: number })\n  {\n    this.ui.message.modal.root.classList.add(\"info-msg\")\n    this.ui.message.modal.root.classList.remove(\"error-msg\")\n    this.ui.message.root.style.display = \"block\"\n    this.ui.message.modal.text.innerText = notif.message\n    setTimeout(() =>\n    {\n      this.closeMessageModal()\n    }, notif.timeout || 2500)\n  }\n  showMessageError(err: Error | string)\n  {\n    this.ui.message.modal.root.classList.add(\"error-msg\")\n    this.ui.message.modal.root.classList.remove(\"info-msg\")\n    this.ui.message.root.style.display = \"block\"\n    this.ui.message.modal.text.innerText = typeof err === \"string\" ? err : err.message\n  }\n\n  createBusy(): HTMLDivElement\n  {\n    const busy = document.createElement(\"div\")\n    busy.classList.add(\"busy\")\n    return busy\n  }\n  createState(): EditorLayerUIState\n  {\n    const root = document.createElement(\"div\")\n    root.classList.add(\"state\")\n    root.style.display = \"none\"\n\n    const busy = this.createBusy()\n    root.appendChild(busy)\n\n    return {\n      root,\n      busy\n    }\n  }\n  showState(): void\n  {\n    this.ui.state.root.style.display = \"block\"\n  }\n  hideState(): void\n  {\n    this.ui.state.root.style.display = \"none\"\n  }\n  updateState(idle: boolean): void\n  {\n    if (idle) {\n      this.hideState()\n    }\n    else {\n      this.showState()\n    }\n  }\n\n  createLayerUI(): EditorLayerUI\n  {\n    const root = document.createElement(\"div\")\n    root.classList.add(\"ms-layer-ui\")\n\n    const loader = this.createLoader()\n    root.appendChild(loader)\n\n    const message = this.createMessage()\n    root.appendChild(message.root)\n\n    const state = this.createState()\n    root.appendChild(state.root)\n\n    return {\n      root,\n      loader,\n      message,\n      state\n    }\n  }\n\n  createLayerRender(): HTMLDivElement\n  {\n    const render = document.createElement(\"div\")\n    render.classList.add(\"ms-layer-rendering\")\n    return render\n  }\n\n  destroy(): void\n  {\n    while (this.root.lastChild) {\n      this.root.removeChild(this.root.lastChild)\n    }\n  }\n}\n","import { getApiInfos, PartialDeep, TApiInfos } from \"../utils\"\nimport {\n  LoggerCategory,\n  LoggerManager,\n  DefaultLoggerConfiguration,\n  TLoggerConfiguration\n} from \"../logger\"\nimport { TServerHTTPConfiguration } from \"../recognizer\"\nimport { EditorEvent } from \"./EditorEvent\"\nimport { EditorLayer } from \"./EditorLayer\"\n\n/**\n * @hidden\n * @group Editor\n */\nexport type TEditorConfiguration = {\n  logger: TLoggerConfiguration\n}\n\n/**\n * @group Editor\n * @remarks \"INKV1\" is deprecated use \"INKV2\" instead.\n */\nexport type EditorType = \"INTERACTIVEINK\" | \"INKV1\" | \"INTERACTIVEINKSSR\" | \"INKV2\"\n\n/**\n * @hidden\n * @group Editor\n */\nexport type EditorOptionsBase = {\n  configuration: TEditorConfiguration\n  override?: {\n    cssClass?: string\n  }\n}\n\n/**\n * @hidden\n * @group Editor\n */\nexport abstract class AbstractEditor\n{\n  logger = LoggerManager.getLogger(LoggerCategory.EDITOR)\n  layers: EditorLayer\n  event: EditorEvent\n  info?: TApiInfos\n\n  #loggerConfiguration!: TLoggerConfiguration\n\n  constructor(rootElement: HTMLElement, options?: PartialDeep<EditorOptionsBase>)\n  {\n    this.loggerConfiguration = Object.assign({}, DefaultLoggerConfiguration, options?.configuration?.logger)\n    this.logger.info(\"constructor\", { rootElement, options })\n\n    this.event = new EditorEvent(rootElement)\n    this.layers = new EditorLayer(rootElement, options?.override?.cssClass || \"ms-editor\")\n\n    //@ts-ignore\n    rootElement.editor = this\n  }\n\n  get loggerConfiguration(): TLoggerConfiguration\n  {\n    return this.#loggerConfiguration\n  }\n\n  set loggerConfiguration(loggerConfig: TLoggerConfiguration)\n  {\n    this.#loggerConfiguration = Object.assign({}, DefaultLoggerConfiguration, loggerConfig)\n    LoggerManager.setLoggerLevel(this.#loggerConfiguration)\n  }\n\n  abstract initialize(): Promise<void>\n\n  abstract clear(): Promise<void>\n\n  abstract destroy(): Promise<void>\n\n  async loadInfo(server: TServerHTTPConfiguration): Promise<TApiInfos>\n  {\n    if (!this.info) {\n      this.info = await getApiInfos({ server })\n    }\n    return this.info\n  }\n}\n","import { isBetween } from \"../utils\"\nimport { TPoint, TSegment } from \"./Point\"\n\n/**\n * @group Symbol\n */\nexport type TBox = {\n  x: number,\n  y: number,\n  width: number,\n  height: number\n}\n\n/**\n * @group Symbol\n */\nexport class Box implements TBox\n{\n  x: number\n  y: number\n  width: number\n  height: number\n\n  constructor(boundindBox: TBox)\n  {\n    if (boundindBox.width < 0) throw new Error(\"width must be positive\")\n    if (boundindBox.height < 0) throw new Error(\"height must be positive\")\n    this.height = boundindBox.height\n    this.width = boundindBox.width\n    this.x = boundindBox.x\n    this.y = boundindBox.y\n  }\n\n  static createFromBoxes(boxes: TBox[]): Box\n  {\n    if (!boxes?.length) {\n      return new Box({ height: 0, width: 0, x: 0, y: 0 })\n    }\n    const x = Math.min(...boxes.map(b => b.x))\n    const width = Math.max(...boxes.map(b => b.x + b.width)) - x\n    const y = Math.min(...boxes.map(b => b.y))\n    const height = Math.max(...boxes.map(b => b.y + b.height)) - y\n    return new Box({ x, y, width, height })\n  }\n\n  static createFromPoints(points: TPoint[]): Box\n  {\n    if (!points?.length) {\n      return new Box({ height: 0, width: 0, x: 0, y: 0 })\n    }\n    const x = Math.min(...points.map(p => p.x))\n    const width = Math.max(...points.map(p => p.x)) - x\n    const y = Math.min(...points.map(p => p.y))\n    const height = Math.max(...points.map(p => p.y)) - y\n    return new Box({ x, y, width, height })\n  }\n\n  static getCorners(box: TBox): TPoint[]\n  {\n    return [\n      { x: box.x, y: box.y },\n      { x: box.x + box.width, y: box.y },\n      { x: box.x + box.width, y: box.y + box.height },\n      { x: box.x, y: box.y + box.height }\n    ]\n  }\n\n  static getSide(box: TBox): TPoint[]\n  {\n    return [\n      { x: box.x + box.width / 2, y: box.y },\n      { x: box.x + box.width, y: box.y + box.height / 2 },\n      { x: box.x + box.width / 2, y: box.y + box.height },\n      { x: box.x, y: box.y + box.height / 2 }\n    ];\n\n  }\n\n  static getCenter(box: TBox): TPoint\n  {\n    return { x: box.x + box.width / 2, y: box.y + box.height / 2 }\n  }\n\n  static getSides(box: TBox): TSegment[]\n  {\n    const vertices = Box.getCorners(box)\n    return vertices.map((p, i) =>\n    {\n      if (i === 3) {\n        return { p1: vertices[0], p2: p }\n      }\n      else {\n        return { p1: p, p2: vertices[i + 1] }\n      }\n    })\n  }\n\n  static isContained(box: TBox, wrapper: TBox): boolean\n  {\n    return isBetween(box.x, wrapper.x, wrapper.x + wrapper.width) &&\n      isBetween(box.x + box.width, wrapper.x, wrapper.x + wrapper.width) &&\n      isBetween(box.y, wrapper.y, wrapper.y + wrapper.height) &&\n      isBetween(box.y + box.height, wrapper.y, wrapper.y + wrapper.height)\n  }\n\n  static containsPoint(box: TBox, point: TPoint): boolean\n  {\n    return isBetween(point.x, box.x, box.x + box.width) &&\n      isBetween(point.y, box.y, box.y + box.height)\n  }\n\n  static contains(box: TBox, child: TBox): boolean\n  {\n    return isBetween(child.x, box.x, box.x + box.width) &&\n      isBetween(child.x + child.width, box.x, box.x + box.width) &&\n      isBetween(child.y, box.y, box.y + box.height) &&\n      isBetween(child.y + child.height, box.y, box.y + box.height)\n  }\n\n  static overlaps(box1: TBox, box2: TBox): boolean\n  {\n    if (box1.x > box2.x + box2.width) return false\n    if (box1.x + box1.width < box2.x) return false\n    if (box1.y > box2.y + box2.height) return false\n    if (box1.y + box1.height < box2.y) return false\n\n    return true\n  }\n\n  get xMin(): number\n  {\n    return this.x\n  }\n\n  get xMid(): number\n  {\n    return this.x + this.width / 2\n  }\n\n  get xMax(): number\n  {\n    return this.x + this.width\n  }\n\n  get yMin(): number\n  {\n    return this.y\n  }\n\n  get yMid(): number\n  {\n    return this.y + this.height / 2\n  }\n\n  get yMax(): number\n  {\n    return this.y + this.height\n  }\n\n  get corners(): TPoint[]\n  {\n    return Box.getCorners(this)\n  }\n\n  get center(): TPoint\n  {\n    return Box.getCenter(this)\n  }\n\n  get side(): TPoint[]\n  {\n    return Box.getSide(this)\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return [\n      ...this.corners,\n      this.center\n    ]\n  }\n\n  isContained(wrapper: TBox): boolean\n  {\n    return Box.isContained(this, wrapper)\n  }\n\n  contains(child: TBox): boolean\n  {\n    return Box.contains(this, child)\n  }\n\n  containsPoint(point: TPoint): boolean\n  {\n    return Box.containsPoint(this, point)\n  }\n\n  overlaps(boundaries: TBox): boolean\n  {\n    return Box.overlaps(this, boundaries)\n  }\n}\n","/**\n * @group Style\n * @property {String} color=#000000 Color (supported formats rgb() rgba() hsl() hsla() #rgb #rgba #rrggbb #rrggbbaa)\n * @property {String} width in px\n\n */\nexport type TStyle = {\n  [key: string]: string | number | undefined\n  width: number\n  color: string\n  opacity?: number\n  fill?: string\n}\n\n/**\n * @group Style\n * @source\n */\nexport const DefaultStyle: TStyle = {\n  width: 2,\n  color: \"#000000\",\n//   opacity: 1,\n//   fill: \"transparent\",\n} as const\n","import { PartialDeep } from \"../utils\"\nimport { TStyle } from \"./Style\"\n\n/**\n * @group Style\n * @property {String} -myscript-pen-width=1 Width of strokes and primitives in mm (no other unit is supported yet)\n * @property {String} -myscript-pen-fill-style=none\n * @property {String} -myscript-pen-fill-color=#FFFFFF00 Color filled inside the area delimited by strokes and primitives\n */\nexport type TPenStyle = PartialDeep<TStyle> & {\n  \"-myscript-pen-width\"?: number\n  \"-myscript-pen-fill-style\"?: string\n  \"-myscript-pen-fill-color\"?: string\n}\n\n/**\n * @group Style\n * @source\n */\nexport const DefaultPenStyle: TPenStyle = {\n}\n","import { TPenStyle } from \"./PenStyle\"\n\n/**\n * @group Style\n */\nexport type TThemeMath = {\n  \"font-family\": string\n}\n\n/**\n * @group Style\n */\nexport type TThemeMathSolved = {\n  \"font-family\": string\n  color: string\n}\n\n/**\n * @group Style\n */\nexport type TThemeText = {\n  \"font-family\": string,\n  \"font-size\": number\n}\n\n/**\n * @group Style\n */\nexport type TTheme = {\n  ink: TPenStyle\n  \".math\": TThemeMath\n  \".math-solved\": TThemeMathSolved\n  \".text\": TThemeText\n  [key: string]: unknown\n}\n\n/**\n * @group Style\n * @source\n */\nexport const DefaultTheme: TTheme = {\n  ink: {\n    color: \"#000000\",\n    width: 1,\n    \"-myscript-pen-width\": 1,\n    \"-myscript-pen-fill-style\": \"none\",\n    \"-myscript-pen-fill-color\": \"#FFFFFF00\"\n  },\n  \".math\": {\n    \"font-family\": \"STIXGeneral\"\n  },\n  \".math-solved\": {\n    \"font-family\": \"STIXGeneral\",\n    color: \"#A8A8A8FF\"\n  },\n  \".text\": {\n    \"font-family\": \"MyScriptInter\",\n    \"font-size\": 10\n  }\n}\n","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.JsonCSS=e():t.JsonCSS=e()}(this,function(){return function(t){function e(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};return e.m=t,e.c=n,e.i=function(t){return t},e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:o})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,\"a\",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"\",e(e.s=1)}([function(t,e,n){\"use strict\";function o(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(e,\"__esModule\",{value:!0});var r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},i=function t(e){var n=this;o(this,t),this.toJSON=function(t){if(\"string\"!=typeof t)return console.error(\"Need a CSS string but given \",void 0===t?\"undefined\":r(t),t),\"Not a valid CSS..!\";var e={},o=void 0,i=void 0,u=void 0;try{t.split(\"{\").forEach(function(t){if(i=t.trim())if(-1===i.indexOf(\"}\"))e[i]={},o=i;else{i.substring(0,i.indexOf(\"}\")).split(\";\").forEach(function(t){(u=t.split(\":\"))&&2===u.length&&(e[o][u[0].trim().replace(/^\\\"|\\\"$/g,\"\")]=n._trimSemiColon(u[1].trim().replace(/^\\\"|\\\"$/g,\"\")))});try{o=i.split(\"}\")[1].trim(),o&&(e[o]={})}catch(t){}}})}catch(t){return\"Not a valid CSS..!\"}return e},this.toCSS=function(t){if(\"object\"!==(void 0===t?\"undefined\":r(t)))return console.error(\"Need a JSON object but given \",void 0===t?\"undefined\":r(t),t),\"Not a valid JSON..!\";var e=\"\";try{for(var n in t)if(t.hasOwnProperty(n)){e+=n+\" {\\n\";for(var o in t[n])t[n].hasOwnProperty(o)&&(e+=o+\": \"+t[n][o]+\";\\n\");e+=\"}\\n\"}}catch(t){return\"Not a valid JSON..!\"}return e},this._trimSemiColon=function(t){return\";\"===t.slice(-1)?t.slice(0,n.length-1):t}};e.default=i},function(t,e,n){\"use strict\";t.exports=n(0).default}])});","import JsonCSS from \"json-css\"\nimport { TTheme } from \"./Theme\"\nimport { TPenStyle } from \"./PenStyle\"\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst parser: any = new JsonCSS()\n\n/**\n * @group Style\n */\nexport const StyleHelper = {\n  themeToCSS(json: TTheme): string\n  {\n    return parser.toCSS(json) as string\n    // css = css.replace( /[\\r\\n]+/gm, \"\" )\n    // return css\n  },\n  themeToJSON(style: string): TTheme\n  {\n    const theme = parser.toJSON(style) as TTheme\n    theme[\".text\"][\"font-size\"] = Number(theme[\".text\"][\"font-size\"])\n    theme.ink[\"-myscript-pen-width\"] = Number(theme.ink[\"-myscript-pen-width\"])\n    theme.ink.width = Number(theme.ink.width)\n    return theme\n  },\n  penStyleToCSS (penStyle: TPenStyle): string {\n    let css = parser.toCSS({ css: penStyle }) as string\n    css = css.substring(6, css.length - 3)\n    return css\n  },\n  penStyleToJSON (penStyleString: string): TPenStyle {\n    const penStyle = parser.toJSON(`css {${penStyleString}}`).css as TPenStyle\n    if (penStyle.width) {\n      penStyle.width = Number(penStyle.width)\n    } else {\n      delete penStyle.width\n    }\n    if (penStyle[\"-myscript-pen-width\"]) {\n      penStyle[\"-myscript-pen-width\"] = Number(penStyle[\"-myscript-pen-width\"])\n    } else {\n      delete penStyle[\"-myscript-pen-width\"]\n    }\n    return penStyle\n  },\n\n  stringToJSON(style: string): {[key: string]: string}\n  {\n    return parser.toJSON(`css {${style}}`).css\n  },\n  JSONToString(style: {[key: string]: string}): string\n  {\n    return Object.entries(style).map(([k, v]) => `${k}:${v}`).join(\";\")\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { PartialDeep, mergeDeep } from \"../utils\"\nimport { DefaultPenStyle, TPenStyle } from \"./PenStyle\"\nimport { DefaultTheme, TTheme } from \"./Theme\"\n\n/**\n * @group Style\n */\nexport class StyleManager\n{\n  #penStyle!: TPenStyle\n  #theme!: TTheme\n  #penStyleClasses!: string\n  #currentPenStyle!: TPenStyle\n  #logger =  LoggerManager.getLogger(LoggerCategory.STYLE)\n\n  constructor(penStyle?: PartialDeep<TPenStyle>, theme?: PartialDeep<TTheme>)\n  {\n    this.#logger.info(\"constructor\", { penStyle, theme })\n    this.setTheme(theme)\n    this.setPenStyleClasses()\n    this.setPenStyle(penStyle)\n  }\n\n  get currentPenStyle(): TPenStyle\n  {\n    return this.#currentPenStyle || this.#penStyle\n  }\n\n  get penStyle(): TPenStyle\n  {\n    return this.#penStyle\n  }\n  setPenStyle(style?: PartialDeep<TPenStyle>)\n  {\n    this.#logger.info(\"setPenStyle\", { style })\n    this.#penStyle = mergeDeep(structuredClone(DefaultPenStyle), style || {}) as TPenStyle\n    this.#currentPenStyle = style || (this.theme[`.${ this.#penStyleClasses }`]) as TPenStyle\n    this.#logger.debug(\"setPenStyle\", this.#currentPenStyle)\n  }\n\n  get theme(): TTheme\n  {\n    return this.#theme\n  }\n  setTheme(theme?: PartialDeep<TTheme>)\n  {\n    this.#logger.info(\"setTheme\", { theme })\n    this.#theme = mergeDeep(structuredClone(DefaultTheme), theme || {}) as TTheme\n    this.#logger.debug(\"setTheme\", this.#theme)\n  }\n\n  get penStyleClasses(): string\n  {\n    return this.#penStyleClasses\n  }\n  setPenStyleClasses(penStyleClass = \"\")\n  {\n    this.#logger.info(\"setPenStyleClasses\", { penStyleClass })\n    this.#penStyleClasses = penStyleClass\n    this.#currentPenStyle = (this.theme[`.${ this.#penStyleClasses }`]) as TPenStyle\n    this.#logger.debug(\"setPenStyleClasses\", this.#currentPenStyle)\n  }\n\n}\n","import { createUUID, mergeDeep, PartialDeep } from \"../utils\"\nimport { DefaultStyle, TStyle } from \"../style\"\n\n/**\n * @group Symbol\n */\nexport enum DecoratorKind\n{\n  Highlight = \"highlight\",\n  Surround = \"surround\",\n  Underline = \"underline\",\n  Strikethrough = \"strikethrough\",\n}\n\n/**\n * @group Symbol\n */\nexport class IIDecorator\n{\n  id: string\n  kind: DecoratorKind\n  style: TStyle\n\n  constructor(kind: DecoratorKind, style: PartialDeep<TStyle>)\n  {\n    this.id = `${ kind }-${ createUUID() }`\n    this.style = structuredClone(mergeDeep({}, DefaultStyle ,style))\n    this.kind = kind\n  }\n\n  clone(): IIDecorator\n  {\n    const clone = new IIDecorator(this.kind, structuredClone(this.style))\n    clone.id = this.id\n    return clone\n  }\n\n}\n","import { TStyle } from \"../style\"\nimport { PartialDeep } from \"../utils\"\n\n/**\n * @group Symbol\n */\nexport enum SymbolType\n{\n  Stroke = \"stroke\",\n  Group = \"group\",\n  Shape = \"shape\",\n  Edge = \"edge\",\n  Text = \"text\",\n  Eraser = \"eraser\",\n  Recognized = \"recognized\"\n}\n\n/**\n * @group Symbol\n */\nexport interface TSymbol {\n  id: string\n  creationTime: number\n  modificationDate: number\n  type: string\n  style: PartialDeep<TStyle>\n}\n","import { SELECTION_MARGIN } from \"../../Constants\"\nimport { TStyle } from \"../../style\"\nimport { findIntersectionBetween2Segment, PartialDeep } from \"../../utils\"\nimport { Box, TBox } from \"../Box\"\nimport { IISymbolBase } from \"../IISymbolBase\"\nimport { TPoint } from \"../Point\"\nimport { SymbolType } from \"../Symbol\"\n\n/**\n * @group Symbol\n */\nexport enum EdgeKind\n{\n  Line = \"line\",\n  PolyEdge = \"polyedge\",\n  Arc = \"arc\",\n}\n\n/**\n * @group Symbol\n */\nexport enum EdgeDecoration\n{\n  Arrow = \"arrow-head\"\n}\n\n/**\n * @group Symbol\n */\nexport abstract class OIEdgeBase<K = EdgeKind> extends IISymbolBase<SymbolType.Edge>\n{\n  readonly kind: K\n  readonly isClosed = false\n\n  startDecoration?: EdgeDecoration\n  endDecoration?: EdgeDecoration\n\n  constructor(\n    kind: K,\n    startDecoration?: EdgeDecoration,\n    endDecoration?: EdgeDecoration,\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(SymbolType.Edge, style)\n    this.kind = kind\n\n    this.startDecoration = startDecoration\n    this.endDecoration = endDecoration\n  }\n\n  abstract get vertices(): TPoint[]\n\n  get bounds(): Box\n  {\n    const bb = Box.createFromPoints(this.vertices)\n    bb.x -= SELECTION_MARGIN / 2\n    bb.y -= SELECTION_MARGIN / 2\n    bb.height += SELECTION_MARGIN\n    bb.width += SELECTION_MARGIN\n    if (this.startDecoration || this.endDecoration) {\n      bb.x -= ((this.style.width || 1) * 2.5)\n      bb.y -= ((this.style.width || 1) * 2.5)\n      bb.height += ((this.style.width || 1) * 5)\n      bb.width += ((this.style.width || 1) * 5)\n    }\n    return bb\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return this.vertices\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.bounds.isContained(box) ||\n      this.edges.some(e1 => Box.getSides(box).some(e2 => !!findIntersectionBetween2Segment(e1, e2)))\n  }\n\n  abstract clone(): OIEdgeBase\n}\n","import { TStyle } from \"../../style\"\nimport { findIntersectionBetween2Segment, PartialDeep } from \"../../utils\"\nimport { Box, TBox } from \"../Box\"\nimport { IISymbolBase } from \"../IISymbolBase\"\nimport { TPoint } from \"../Point\"\nimport { SymbolType } from \"../Symbol\"\n\n/**\n * @group Symbol\n */\nexport enum ShapeKind\n{\n  Circle = \"circle\",\n  Ellipse = \"ellipse\",\n  Polygon = \"polygon\",\n  Table = \"table\"\n}\n\n/**\n * @group Symbol\n */\nexport abstract class OIShapeBase<K = ShapeKind> extends IISymbolBase<SymbolType.Shape>\n{\n  readonly kind: K\n  readonly isClosed = true\n\n  constructor(kind: K, style?: PartialDeep<TStyle>)\n  {\n    super(SymbolType.Shape, style)\n    this.kind = kind\n  }\n\n  get bounds(): Box\n  {\n    return Box.createFromPoints(this.vertices)\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return this.bounds.snapPoints\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.bounds.isContained(box) ||\n      this.edges.some(e1 => Box.getSides(box).some(e2 => !!findIntersectionBetween2Segment(e1, e2)))\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { Box, TBox } from \"../Box\"\nimport { IIStroke } from \"../IIStroke\"\nimport { IISymbolBase } from \"../IISymbolBase\"\nimport { TPoint } from \"../Point\"\nimport { SymbolType } from \"../Symbol\"\n\n/**\n * @group Symbol\n */\nexport enum RecognizedKind\n{\n  Text = \"text\",\n  Line = \"line\",\n  PolyEdge = \"polyedge\",\n  Arc = \"arc\",\n  Circle = \"circle\",\n  Ellipse = \"ellipse\",\n  Polygone = \"polygone\",\n}\n\n/**\n * @group Symbol\n */\nexport abstract class IIRecognizedBase<K = RecognizedKind> extends IISymbolBase<SymbolType.Recognized>\n{\n  readonly kind: K\n\n  strokes: IIStroke[]\n\n  constructor(\n    kind: K,\n    strokes: IIStroke[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(SymbolType.Recognized, style)\n    this.kind = kind\n    this.strokes = strokes\n  }\n\n  get vertices(): TPoint[]\n  {\n    return this.strokes.flatMap(s => s.vertices)\n  }\n\n  get bounds(): Box\n  {\n    return Box.createFromBoxes(this.strokes.map(c => c.bounds))\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return this.bounds.snapPoints\n  }\n\n  updateChildrenStyle(): void\n  {\n    this.strokes.forEach(child => child.style = Object.assign({}, child.style, this.style))\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.strokes.some(s => s.overlaps(box))\n  }\n\n  containsStroke(strokeId: string): boolean\n  {\n    return this.strokes.some(s => s.id === strokeId)\n  }\n\n  removeStrokes(strokeIds: string[]): IIStroke[]\n  {\n    const strokeRemoved = this.strokes.filter(s => strokeIds.includes(s.id))\n    this.strokes = this.strokes.filter(s => !strokeIds.includes(s.id))\n    return strokeRemoved\n  }\n}\n","import { TPoint } from \"../symbol\"\n\n/**\n * @group Transform\n * @remarks Represents a 2D affine transform, defined as a 3x3 matrix with an implicit third raw of <code>[ 0 0 1 ]</code>\n */\nexport type TMatrixTransform = {\n  /**\n   * @remarks scaling x\n   */\n  xx: number,\n  /**\n   * @remarks shearing x\n   */\n  yx: number,\n  /**\n   * @remarks translation x\n   */\n  tx: number,\n  /**\n   * @remarks shearing y\n   */\n  xy: number,\n  /**\n   * @remarks scaling y\n   */\n  yy: number,\n  /**\n   * @remarks translation y\n   */\n  ty: number,\n}\n\n/**\n * @group Transform\n * @remarks Represents a 2D affine transform, defined as a 3x3 matrix with an implicit third raw of <code>[ 0 0 1 ]</code>\n */\nexport class MatrixTransform implements TMatrixTransform\n{\n  xx: number\n  yx: number\n  xy: number\n  yy: number\n  tx: number\n  ty: number\n\n  constructor(xx: number, yx: number, xy: number, yy: number, tx: number, ty: number)\n  {\n    this.xx = xx\n    this.yx = yx\n    this.xy = xy\n    this.yy = yy\n    this.tx = tx\n    this.ty = ty\n  }\n\n  static identity(): MatrixTransform\n  {\n    return new MatrixTransform(1, 0, 0, 1, 0, 0)\n  }\n\n  static applyToPoint(mat: TMatrixTransform, point: TPoint): TPoint\n  {\n    return {\n      x: mat.xx * point.x + mat.xy * point.y + mat.tx,\n      y: mat.yx * point.x + mat.yy * point.y + mat.ty,\n    }\n  }\n\n  static rotation(mat: TMatrixTransform): number\n  {\n    let rotation\n\n    if (mat.xx !== 0 || mat.xy !== 0) {\n      const hypotAc = Math.hypot(mat.xx, mat.xy)\n      rotation = Math.acos(mat.xx / hypotAc) * (mat.xy > 0 ? -1 : 1)\n    } else if (mat.yx !== 0 || mat.yy !== 0) {\n      const hypotBd = Math.hypot(mat.yx, mat.yy)\n      rotation = Math.PI / 2 + Math.acos(mat.yx / hypotBd) * (mat.yy > 0 ? -1 : 1)\n    } else {\n      rotation = 0\n    }\n\n    return rotation\n  }\n\n  static toCssString(matrix: TMatrixTransform): string\n  {\n    return `matrix(${ matrix.xx }, ${ matrix.yx }, ${ matrix.xy }, ${ matrix.yy }, ${ matrix.tx }, ${ matrix.ty })`\n  }\n\n\tinvert() {\n\t\tconst { xx, yx, xy, yy, tx, ty } = this\n\t\tconst denom = xx * yy - yx * xy\n\t\tthis.xx = yy / denom\n\t\tthis.yx = yx / -denom\n\t\tthis.xy = xy / -denom\n\t\tthis.yy = xx / denom\n\t\tthis.tx = (yy * tx - xy * ty) / -denom\n\t\tthis.ty = (yx * tx - xx * ty) / denom\n\t\treturn this\n\t}\n\n  multiply(m: TMatrixTransform): MatrixTransform\n  {\n    const { xx, yx, xy, yy, tx, ty } = this\n    this.xx = xx * m.xx + xy * m.yx\n    this.yx = yx * m.xx + yy * m.yx\n    this.xy = xx * m.xy + xy * m.yy\n    this.yy = yx * m.xy + yy * m.yy\n    this.tx = xx * m.tx + xy * m.ty + tx\n    this.ty = yx * m.tx + yy * m.ty + ty\n    return this\n  }\n\n  translate(tx: number, ty: number): MatrixTransform\n  {\n    return this.multiply({ xx: 1, yx: 0, xy: 0, yy: 1, tx, ty })\n  }\n\n  rotate(radian: number, center?: TPoint): MatrixTransform\n  {\n    if (center) {\n      this.translate(center.x, center.y)\n    }\n    const cosAngle = Math.round(Math.cos(radian) * 1000) / 1000\n    const sinAngle = Math.round(Math.sin(radian) * 1000) / 1000\n    this.multiply({\n      xx: cosAngle,\n      yx: sinAngle,\n      xy: -sinAngle,\n      yy: cosAngle,\n      tx: 0,\n      ty: 0\n    })\n    if (center) {\n      this.translate(-center.x, -center.y)\n    }\n    return this\n  }\n\n  scale(x: number, y: number, center?: TPoint): MatrixTransform\n  {\n    if (center) {\n      this.translate(center.x, center.y)\n    }\n    this.multiply({\n      xx: x,\n      yx: 0,\n      xy: 0,\n      yy: y,\n      tx: 0,\n      ty: 0\n    })\n    if (center) {\n      this.translate(-center.x, -center.y)\n    }\n    return this\n  }\n\n  applyToPoint(point: TPoint): TPoint\n  {\n    return MatrixTransform.applyToPoint(this, point)\n  }\n\n  clone(): MatrixTransform\n  {\n    return new MatrixTransform(this.xx, this.yx, this.xy, this.yy, this.tx, this.ty)\n  }\n\n  toCssString(): string\n  {\n    return MatrixTransform.toCssString(this)\n  }\n\n}\n","import { PartialDeep, createUUID, findIntersectionBetween2Segment } from \"../utils\"\nimport { TBox } from \"./Box\"\nimport { TPoint, TSegment } from \"./Point\"\nimport { SymbolType, TSymbol } from \"./Symbol\"\nimport { DefaultStyle, TStyle } from \"../style\"\nimport { MatrixTransform } from \"../transform\"\n\n/**\n * @group Symbol\n */\nexport abstract class IISymbolBase<T extends string = SymbolType> implements TSymbol\n{\n  readonly type: T\n  abstract readonly isClosed: boolean\n  style: TStyle\n\n  id: string\n  creationTime: number\n  modificationDate: number\n  selected: boolean\n  deleting: boolean\n  transform: MatrixTransform\n\n  constructor(type: T, style?: PartialDeep<TStyle>)\n  {\n    this.type = type\n    this.id = `${ this.type }-${ createUUID() }`\n\n    this.creationTime = Date.now()\n    this.modificationDate = this.creationTime\n    this.selected = false\n    this.deleting = false\n\n    this.transform = MatrixTransform.identity()\n\n    this.style = Object.assign({}, DefaultStyle, style)\n    if (this.style.opacity) {\n      this.style.opacity = +this.style.opacity\n    }\n    this.style.width = +this.style.width\n  }\n\n  abstract get vertices(): TPoint[]\n\n  abstract get snapPoints(): TPoint[]\n\n  get edges(): TSegment[]\n  {\n    if (this.isClosed) {\n      return this.vertices.map((p, i) =>\n      {\n        if (i === this.vertices.length - 1) {\n          return { p1: p, p2: this.vertices[0] }\n        }\n        else {\n          return { p1: p, p2: this.vertices[i + 1] }\n        }\n      })\n    }\n    else {\n      return this.vertices.slice(0, -1).map((p, i) =>\n      {\n        return { p1: p, p2: this.vertices[i + 1] }\n      })\n    }\n  }\n\n  abstract overlaps(box: TBox): boolean\n\n  abstract clone(): IISymbolBase\n\n  abstract toJSON(): PartialDeep<IISymbolBase>\n\n  isIntersected(seg: TSegment): boolean\n  {\n    return this.edges.some(edge =>\n    {\n      return findIntersectionBetween2Segment(edge, seg)\n    })\n  }\n}\n","import { PartialDeep, isValidNumber } from \"../utils\"\n\n/**\n * @group Symbol\n */\nexport type TPoint = {\n  x: number\n  y: number\n}\n\n/**\n * @group Symbol\n */\nexport type TPointer = TPoint & {\n  t: number\n  p: number\n}\n\n/**\n * @group Symbol\n */\nexport type TSegment = {\n  p1: TPoint\n  p2: TPoint\n}\n\n/**\n * @group Symbol\n */\nexport function isValidPoint(p?: PartialDeep<TPoint>): boolean\n{\n  if (!p) return false\n  if (!isValidNumber(p.x)) return false\n  if (!isValidNumber(p.y)) return false\n  return true\n}\n","import { SELECTION_MARGIN } from \"../../Constants\"\nimport { TStyle } from \"../../style\"\nimport { PartialDeep, computePointOnEllipse, isValidNumber } from \"../../utils\"\nimport { EdgeDecoration, EdgeKind, OIEdgeBase } from \"./IIEdge\"\nimport { TPoint, isValidPoint } from \"../Point\"\n\n/**\n * @group Symbol\n */\nexport class IIEdgeArc extends OIEdgeBase<EdgeKind.Arc>\n{\n  center: TPoint\n  startAngle: number\n  sweepAngle: number\n  radiusX: number\n  radiusY: number\n  phi: number\n  protected _vertices: Map<string, TPoint[]>\n\n  constructor(\n    center: TPoint,\n    startAngle: number,\n    sweepAngle: number,\n    radiusX: number,\n    radiusY: number,\n    phi: number,\n    startDecoration?: EdgeDecoration,\n    endDecoration?: EdgeDecoration,\n    style?: PartialDeep<TStyle>,\n  )\n  {\n    super(EdgeKind.Arc, startDecoration, endDecoration, style)\n    this.center = center\n    this.startAngle = startAngle\n    this.sweepAngle = sweepAngle\n    this.radiusX = radiusX\n    this.radiusY = radiusY\n    this.phi = phi\n    this._vertices = new Map<string, TPoint[]>()\n    this._vertices.set(this.verticesId, this.computedVertices())\n  }\n\n  protected get verticesId(): string\n  {\n    return `${ this.center.x }-${ this.center.y }-${ this.startAngle }-${ this.sweepAngle }-${ this.radiusX }-${ this.radiusY }-${ this.phi }`\n  }\n\n  protected computedVertices(): TPoint[]\n  {\n    const length = Math.abs(this.sweepAngle) * Math.sqrt((Math.pow(this.radiusX, 2) + Math.pow(this.radiusY, 2)) / 2)\n    const nbVertices = Math.max(8, Math.round(length / SELECTION_MARGIN))\n    const angleStep = this.sweepAngle / nbVertices\n    const v: TPoint[] = []\n    const endAngle = this.startAngle + this.sweepAngle\n    if (this.sweepAngle > 0) {\n      for (let angle = this.startAngle; angle < endAngle; angle += angleStep) {\n        v.push(computePointOnEllipse(this.center, this.radiusX, this.radiusY, this.phi, angle))\n      }\n    } else {\n      for (let angle = this.startAngle; angle > endAngle; angle += angleStep) {\n        v.push(computePointOnEllipse(this.center, this.radiusX, this.radiusY, this.phi, angle))\n      }\n    }\n    v.push(computePointOnEllipse(this.center, this.radiusX, this.radiusY, this.phi, endAngle))\n    return v\n  }\n\n  get vertices(): TPoint[]\n  {\n    if (!this._vertices.has(this.verticesId)) {\n      this._vertices.set(this.verticesId, this.computedVertices())\n    }\n    return this._vertices.get(this.verticesId)!\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return [\n      this.vertices[0],\n      this.vertices.at(-1)!\n    ]\n  }\n\n  clone(): IIEdgeArc\n  {\n    const clone = new IIEdgeArc(\n      structuredClone(this.center),\n      this.startAngle,\n      this.sweepAngle,\n      this.radiusX,\n      this.radiusY,\n      this.phi,\n      this.startDecoration,\n      this.endDecoration,\n      structuredClone(this.style)\n    )\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIEdgeArc>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      center: this.center,\n      startAngle: this.startAngle,\n      sweepAngle: this.sweepAngle,\n      radiusX: this.radiusX,\n      radiusY: this.radiusY,\n      phi: this.phi,\n      startDecoration: this.startDecoration,\n      style: this.style,\n      endDecoration: this.endDecoration,\n    }\n  }\n\n  static create(partial: PartialDeep<IIEdgeArc>): IIEdgeArc\n  {\n    if (!isValidPoint(partial?.center)) throw new Error(`Unable to create a arc, center point is invalid`)\n    if (!isValidNumber(partial?.startAngle)) throw new Error(`Unable to create a arc, startAngle is invalid`)\n    if (!isValidNumber(partial?.sweepAngle)) throw new Error(`Unable to create a arc, sweepAngle is invalid`)\n    if (!isValidNumber(partial?.radiusX)) throw new Error(`Unable to create a arc, radiusX is invalid`)\n    if (!isValidNumber(partial?.radiusY)) throw new Error(`Unable to create a arc, radiusY is invalid`)\n    const arc = new IIEdgeArc(\n      partial?.center as TPoint,\n      partial.startAngle!,\n      partial.sweepAngle!,\n      partial.radiusX!,\n      partial.radiusY!,\n      partial.phi || 0,\n      partial.startDecoration,\n      partial.endDecoration,\n      partial.style\n    )\n    if (partial.id) {\n      arc.id = partial.id\n    }\n    return arc\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { EdgeDecoration, EdgeKind, OIEdgeBase } from \"./IIEdge\"\nimport { TPoint, isValidPoint } from \"../Point\"\n\n/**\n * @group Symbol\n */\nexport class IIEdgeLine extends OIEdgeBase<EdgeKind.Line>\n{\n  start: TPoint\n  end: TPoint\n\n  constructor(\n    start: TPoint,\n    end: TPoint,\n    startDecoration?: EdgeDecoration,\n    endDecoration?: EdgeDecoration,\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(EdgeKind.Line, startDecoration, endDecoration, style)\n    this.start = start\n    this.end = end\n  }\n\n  get vertices(): TPoint[]\n  {\n    return [\n      this.start,\n      this.end\n    ]\n  }\n\n  clone(): IIEdgeLine\n  {\n    const clone = new IIEdgeLine(structuredClone(this.start), structuredClone(this.end), this.startDecoration, this.endDecoration, structuredClone(this.style))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIEdgeLine>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      start: this.start,\n      end: this.end,\n      style: this.style,\n      startDecoration: this.startDecoration,\n      endDecoration: this.endDecoration,\n    }\n  }\n\n  static create(partial: PartialDeep<IIEdgeLine>): IIEdgeLine\n  {\n    if (!isValidPoint(partial?.start)) throw new Error(`Unable to create a arc, start point is invalid`)\n    if (!isValidPoint(partial?.end)) throw new Error(`Unable to create a arc, end point is invalid`)\n    const line = new IIEdgeLine(partial?.start as TPoint, partial?.end as TPoint, partial.startDecoration, partial.endDecoration, partial.style)\n    if (partial.id) {\n      line.id = partial.id\n    }\n    return line\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { EdgeDecoration, EdgeKind, OIEdgeBase } from \"./IIEdge\"\nimport { TPoint, isValidPoint } from \"../Point\"\n\n/**\n * @group Symbol\n */\nexport class IIEdgePolyLine extends OIEdgeBase<EdgeKind.PolyEdge>\n{\n  points: TPoint[]\n\n  constructor(\n    points: TPoint[],\n    startDecoration?: EdgeDecoration,\n    endDecoration?: EdgeDecoration,\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(EdgeKind.PolyEdge, startDecoration, endDecoration, style)\n    this.points = points\n  }\n\n  get vertices(): TPoint[]\n  {\n    return this.points\n  }\n\n  clone(): IIEdgePolyLine\n  {\n    const clone = new IIEdgePolyLine(structuredClone(this.points),this.startDecoration, this.endDecoration, structuredClone(this.style))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIEdgePolyLine>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      points: this.points,\n      style: this.style,\n      startDecoration: this.startDecoration,\n      endDecoration: this.endDecoration,\n    }\n  }\n\n  static create(partial: PartialDeep<IIEdgePolyLine>): IIEdgePolyLine\n  {\n    if (!partial?.points?.map(p => isValidPoint(p))) throw new Error(`Unable to create a PolyLine, points are invalid`)\n    const polyline = new IIEdgePolyLine(partial?.points as TPoint[], partial.startDecoration, partial.endDecoration, partial.style)\n    if (partial.id) {\n      polyline.id = partial.id\n    }\n    return polyline\n  }\n}\n","import { SELECTION_MARGIN } from \"../../Constants\"\nimport { TStyle } from \"../../style\"\nimport { PartialDeep, findIntersectBetweenSegmentAndCircle, isValidNumber, computeRotatedPoint } from \"../../utils\"\nimport { TPoint, isValidPoint } from \"../Point\"\nimport { OIShapeBase, ShapeKind } from \"./IIShape\"\nimport { Box, TBox } from \"../Box\"\n\n/**\n * @group Symbol\n */\nexport class IIShapeCircle extends OIShapeBase<ShapeKind.Circle>\n{\n  center: TPoint\n  radius: number\n  protected _vertices: Map<string, TPoint[]>\n  protected _bounds: Map<string, Box>\n\n  constructor(\n    center: TPoint,\n    radius: number,\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(ShapeKind.Circle, style)\n    this.center = center\n    this.radius = radius\n    this._vertices = new Map<string, TPoint[]>()\n    this._vertices.set(this.verticesId, this.computedVertices())\n    this._bounds = new Map<string, Box>()\n    this._bounds.set(this.verticesId, this.computedBondingBox())\n  }\n\n  protected get verticesId(): string\n  {\n    return `${ this.center.x }-${ this.center.y }-${ this.radius }`\n  }\n\n  protected computedVertices(): TPoint[]\n  {\n    const firstPoint: TPoint = {\n      x: this.center.x,\n      y: this.radius + this.center.y\n    }\n    const perimeter = 2 * Math.PI * this.radius\n    const nbPoint = Math.max(8, Math.round(perimeter / SELECTION_MARGIN))\n    const points: TPoint[] = []\n    for (let i = 0; i < nbPoint; i++) {\n      const rad = 2 * Math.PI * (i / nbPoint)\n      points.push(computeRotatedPoint(firstPoint, this.center, rad))\n    }\n    return points\n  }\n\n  protected computedBondingBox(): Box\n  {\n    const boundingBox: TBox = {\n      x: this.center.x - this.radius,\n      y: this.center.y - this.radius,\n      height: this.radius * 2,\n      width: this.radius * 2\n    }\n    return new Box(boundingBox)\n  }\n\n  get bounds(): Box\n  {\n    if (!this._bounds.has(this.verticesId)) {\n      this._bounds.set(this.verticesId, this.computedBondingBox())\n    }\n    return this._bounds.get(this.verticesId)!\n  }\n\n  get vertices(): TPoint[]\n  {\n    if (!this._vertices.has(this.verticesId)) {\n      this._vertices.set(this.verticesId, this.computedVertices())\n    }\n    return this._vertices.get(this.verticesId)!\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.bounds.isContained(box) ||\n      Box.getSides(box).some(seg => findIntersectBetweenSegmentAndCircle(seg, this.center, this.radius).length)\n  }\n\n  clone(): IIShapeCircle\n  {\n    const clone = new IIShapeCircle(structuredClone(this.center), this.radius, structuredClone(this.style))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIShapeCircle>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      center: this.center,\n      radius: this.radius,\n      style: this.style,\n    }\n  }\n\n  static createBetweenPoints(origin: TPoint, target: TPoint, style?: PartialDeep<TStyle>): IIShapeCircle\n  {\n    const center = {\n      x: (origin.x + target.x) / 2,\n      y: (origin.y + target.y) / 2\n    }\n\n    const width = Math.abs(origin.x - target.x)\n    const height = Math.abs(origin.y - target.y)\n    const radius = Math.min(width, height) / 2\n    return new IIShapeCircle(center, radius, style)\n  }\n\n  static updateBetweenPoints(circle: IIShapeCircle, origin: TPoint, target: TPoint): IIShapeCircle\n  {\n    circle.center = {\n      x: (origin.x + target.x) / 2,\n      y: (origin.y + target.y) / 2\n    }\n    const width = Math.abs(origin.x - target.x)\n    const height = Math.abs(origin.y - target.y)\n    circle.radius = Math.min(width, height) / 2\n    return circle\n  }\n\n  static create(partial: PartialDeep<IIShapeCircle>): IIShapeCircle\n  {\n    if (!isValidPoint(partial.center)) throw new Error(`Unable to create circle, center is invalid`)\n    if (!isValidNumber(partial.radius)) throw new Error(`Unable to create circle, radius is undefined`)\n    const circle = new IIShapeCircle(partial.center as TPoint, partial.radius!, partial.style)\n    if (partial.id) {\n      circle.id = partial.id\n    }\n    return circle\n  }\n}\n","import { SELECTION_MARGIN } from \"../../Constants\"\nimport { TStyle } from \"../../style\"\nimport { PartialDeep, computePointOnEllipse, findIntersectionBetween2Segment, isValidNumber, } from \"../../utils\"\nimport { TPoint, isValidPoint } from \"../Point\"\nimport { OIShapeBase, ShapeKind } from \"./IIShape\"\nimport { Box, TBox } from \"../Box\"\n\n/**\n * @group Symbol\n */\nexport class IIShapeEllipse extends OIShapeBase<ShapeKind.Ellipse>\n{\n  center: TPoint\n  radiusX: number\n  radiusY: number\n  orientation: number\n  protected _vertices: Map<string, TPoint[]>\n\n  constructor(\n    center: TPoint,\n    radiusX: number,\n    radiusY: number,\n    orientation: number,\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(ShapeKind.Ellipse, style)\n    this.center = center\n    this.radiusX = radiusX\n    this.radiusY = radiusY\n    this.orientation = orientation\n    this._vertices = new Map<string, TPoint[]>()\n  }\n\n  protected get verticesId(): string\n  {\n    return `${ this.center.x }-${ this.center.y }-${ this.radiusX }-${ this.radiusY }-${ this.orientation }`\n  }\n\n  protected computedVertices(): TPoint[]\n  {\n    const points: TPoint[] = []\n    const perimeter = 2 * Math.PI * Math.sqrt((Math.pow(this.radiusX, 2) + Math.pow(this.radiusY, 2)) / 2)\n    const nbPoint = Math.max(8, Math.round(perimeter / SELECTION_MARGIN))\n    for (let i = 0; i < nbPoint; i++) {\n      const theta = 2 * Math.PI * (i / nbPoint)\n      points.push(computePointOnEllipse(this.center, this.radiusX, this.radiusY, this.orientation, theta))\n    }\n\n    return points\n  }\n\n  get vertices(): TPoint[]\n  {\n    if (!this._vertices.has(this.verticesId)) {\n      this._vertices.set(this.verticesId, this.computedVertices())\n    }\n    return this._vertices.get(this.verticesId)!\n  }\n\n  overlaps(box: TBox): boolean\n  {\n\n    return this.bounds.isContained(box) ||\n      this.edges.some(e1 => Box.getSides(box).some(e2 => !!findIntersectionBetween2Segment(e1, e2)))\n  }\n\n  clone(): IIShapeEllipse\n  {\n    const clone = new IIShapeEllipse(structuredClone(this.center), this.radiusX, this.radiusY, this.orientation, structuredClone(this.style))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIShapeEllipse>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      center: this.center,\n      orientation: this.orientation,\n      radiusX: this.radiusX,\n      radiusY: this.radiusY,\n      style: this.style,\n    }\n  }\n\n  static createBetweenPoints(origin: TPoint, target: TPoint, style?: PartialDeep<TStyle>): IIShapeEllipse\n  {\n    const center = {\n      x: (origin.x + target.x) / 2,\n      y: (origin.y + target.y) / 2\n    }\n    const radiusX = Math.abs(origin.x - target.x) / 2\n    const radiusY = Math.abs(origin.y - target.y) / 2\n    return new IIShapeEllipse(center, radiusX, radiusY, 0, style)\n  }\n\n  static updateBetweenPoints(ellipse: IIShapeEllipse, origin: TPoint, target: TPoint): IIShapeEllipse\n  {\n    ellipse.center = {\n      x: (origin.x + target.x) / 2,\n      y: (origin.y + target.y) / 2\n    }\n    ellipse.radiusX = Math.abs(origin.x - target.x) / 2\n    ellipse.radiusY = Math.abs(origin.y - target.y) / 2\n    return ellipse\n  }\n\n  static create(partial: PartialDeep<IIShapeEllipse>): IIShapeEllipse\n  {\n    if (!isValidPoint(partial.center)) throw new Error(`Unable to create ellipse, center is undefined`)\n    if (!isValidNumber(partial.radiusX)) throw new Error(`Unable to create ellipse, radiusX is undefined`)\n    if (!isValidNumber(partial.radiusY)) throw new Error(`Unable to create ellipse, radiusY is undefined`)\n    const ellipse = new IIShapeEllipse(partial.center as TPoint, partial.radiusX!, partial.radiusY!, partial.orientation || 0, partial.style)\n    if (partial.id) {\n      ellipse.id = partial.id\n    }\n    return ellipse\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { TPoint, isValidPoint } from \"../Point\"\nimport { OIShapeBase, ShapeKind } from \"./IIShape\"\nimport { Box } from \"../Box\"\nimport { PartialDeep } from \"../../utils\"\n\n/**\n * @group Symbol\n */\nexport class IIShapePolygon extends OIShapeBase<ShapeKind.Polygon>\n{\n  points: TPoint[]\n\n  constructor(points: TPoint[], style?: PartialDeep<TStyle>)\n  {\n    super(ShapeKind.Polygon, style)\n    this.points = points\n  }\n\n  get vertices(): TPoint[]\n  {\n    return this.points\n  }\n\n  get bounds(): Box\n  {\n    return Box.createFromPoints(this.vertices)\n  }\n\n  clone(): IIShapePolygon\n  {\n    const clone = new IIShapePolygon(structuredClone(this.points), structuredClone(this.style))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIShapePolygon>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      points: this.points,\n      style: this.style,\n    }\n  }\n\n  static create(partial: PartialDeep<IIShapePolygon>): IIShapePolygon\n  {\n    if (!partial?.points || partial?.points?.length < 3) throw new Error(`Unable to create polygon at least 3 points required`)\n    if (partial?.points?.some(p => !isValidPoint(p))) throw new Error(`Unable to create a polygon, one or more points are invalid`)\n    const polygon = new IIShapePolygon(partial.points as TPoint[], partial.style)\n    if (partial.id) {\n      polygon.id = partial.id\n    }\n    return polygon\n  }\n\n  static createTriangleBetweenPoints(origin: TPoint, target: TPoint, style?: PartialDeep<TStyle>): IIShapePolygon\n  {\n    const points: TPoint[] = [\n      { x: origin.x, y: origin.y },\n      { x: target.x, y: origin.y },\n      { x: (origin.x + target.x) / 2, y: target.y }\n    ]\n    return new IIShapePolygon(points, style)\n  }\n  static updateTriangleBetweenPoints(poly: IIShapePolygon, origin: TPoint, target: TPoint): IIShapePolygon\n  {\n    poly.points = [\n      { x: origin.x, y: origin.y },\n      { x: target.x, y: origin.y },\n      { x: (origin.x + target.x) / 2, y: target.y }\n    ]\n    poly.modificationDate = Date.now()\n    return poly\n  }\n\n  static createParallelogramBetweenPoints(origin: TPoint, target: TPoint, style?: PartialDeep<TStyle>): IIShapePolygon\n  {\n    const points: TPoint[] = [\n      { x: origin.x, y: origin.y },\n      { x: origin.x + (target.x - origin.x) * 0.75, y: origin.y },\n      { x: target.x, y: target.y },\n      { x: origin.x + (target.x - origin.x) * 0.25, y: target.y },\n    ]\n    return new IIShapePolygon(points, style)\n  }\n  static updateParallelogramBetweenPoints(poly: IIShapePolygon, origin: TPoint, target: TPoint): IIShapePolygon\n  {\n    const points: TPoint[] = [\n      { x: origin.x, y: origin.y },\n      { x: origin.x + (target.x - origin.x) * 0.75, y: origin.y },\n      { x: target.x, y: target.y },\n      { x: origin.x + (target.x - origin.x) * 0.25, y: target.y },\n    ]\n    poly.points = points\n    poly.modificationDate = Date.now()\n    return poly\n  }\n\n  static createRectangleBetweenPoints(origin: TPoint, target: TPoint, style?: PartialDeep<TStyle>): IIShapePolygon\n  {\n    const box = Box.createFromPoints([origin, target])\n    const points: TPoint[] = [\n      { x: box.xMin, y: box.yMin },\n      { x: box.xMax, y: box.yMin },\n      { x: box.xMax, y: box.yMax },\n      { x: box.xMin, y: box.yMax },\n    ]\n    return new IIShapePolygon(points, style)\n  }\n  static updateRectangleBetweenPoints(poly: IIShapePolygon, origin: TPoint, target: TPoint): IIShapePolygon\n  {\n    const box = Box.createFromPoints([origin, target])\n    const points: TPoint[] = [\n      { x: box.xMin, y: box.yMin },\n      { x: box.xMax, y: box.yMin },\n      { x: box.xMax, y: box.yMax },\n      { x: box.xMin, y: box.yMax },\n    ]\n    poly.points = points\n    poly.modificationDate = Date.now()\n    return poly\n  }\n\n  static createRhombusBetweenPoints(origin: TPoint, target: TPoint, style?: PartialDeep<TStyle>): IIShapePolygon\n  {\n    const box = Box.createFromPoints([origin, target])\n    const points: TPoint[] = [\n      { x: box.xMid, y: box.yMin },\n      { x: box.xMax, y: box.yMid },\n      { x: box.xMid, y: box.yMax },\n      { x: box.xMin, y: box.yMid },\n    ]\n    return new IIShapePolygon(points, style)\n  }\n\n  static updateRhombusBetweenPoints(poly: IIShapePolygon, origin: TPoint, target: TPoint): IIShapePolygon\n  {\n    const box = Box.createFromPoints([origin, target])\n    const points: TPoint[] = [\n      { x: box.xMid, y: box.yMin },\n      { x: box.xMax, y: box.yMid },\n      { x: box.xMid, y: box.yMax },\n      { x: box.xMin, y: box.yMid },\n    ]\n    poly.points = points\n    poly.modificationDate = Date.now()\n    return poly\n  }\n}\n","import { TStyle } from \"../style\"\nimport { PartialDeep, computeDistance, getClosestPoint } from \"../utils\"\nimport { TStroke, TStrokeToSend } from \"./Stroke\"\nimport { TPoint, TPointer } from \"./Point\"\nimport { Box, TBox } from \"./Box\"\nimport { SymbolType } from \"./Symbol\"\nimport { IIDecorator } from \"./IIDecorator\"\nimport { IISymbolBase } from \"./IISymbolBase\"\n\n/**\n * @group Symbol\n */\nexport class IIStroke extends IISymbolBase<SymbolType.Stroke>\n{\n  readonly isClosed = false\n\n  pointerType: string\n  length: number\n  decorators: IIDecorator[]\n  pointers: Array<TPointer>\n\n  constructor(style?: PartialDeep<TStyle>, pointerType = \"pen\")\n  {\n    super(SymbolType.Stroke, style)\n\n    this.pointerType = pointerType\n    this.pointers = []\n    this.decorators = []\n    this.length = 0\n  }\n\n  get bounds(): Box\n  {\n    return Box.createFromPoints(this.vertices)\n  }\n\n  static split(strokeToSplit: IIStroke, i: number): { before: IIStroke, after: IIStroke }\n  {\n    const before = new IIStroke(strokeToSplit.style, strokeToSplit.pointerType)\n    before.pointers = strokeToSplit.pointers.slice(0, i)\n\n    const after = new IIStroke(strokeToSplit.style, strokeToSplit.pointerType)\n    after.pointers = strokeToSplit.pointers.slice(i)\n\n    return { before, after }\n  }\n\n  static substract(stroke: IIStroke, partStroke: IIStroke): { before?: IIStroke, after?: IIStroke }\n  {\n    if (!partStroke.length) return { before: stroke }\n    const result: { before?: IIStroke, after?: IIStroke } = {}\n    const lastPointBeforeStroke = {\n      x: partStroke.pointers[0].x as number,\n      y: partStroke.pointers[0].y as number\n    }\n    const closestLastPointBeforeStroke = getClosestPoint(stroke.pointers, lastPointBeforeStroke)\n    if (closestLastPointBeforeStroke.index > -1) {\n      const newStrokes = IIStroke.split(stroke, closestLastPointBeforeStroke.index)\n      result.before = newStrokes.before\n      result.after = newStrokes.after\n    }\n    const strokeAfter = result.after || stroke\n    const firstPointAfterStroke = {\n      x: partStroke.pointers.at(-1)!.x as number,\n      y: partStroke.pointers.at(-1)!.y as number\n    }\n    const closestFirstPointStrokeAfter = getClosestPoint(strokeAfter.pointers, firstPointAfterStroke)\n    if (closestFirstPointStrokeAfter.index > -1) {\n      const newStrokes = IIStroke.split(strokeAfter, closestFirstPointStrokeAfter.index)\n      result.after = newStrokes.after\n    }\n    if (!result.before?.pointers.length) result.before = undefined\n    if (!result.after?.pointers.length) result.after = undefined\n    return result\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return this.bounds.snapPoints\n  }\n\n  get vertices(): TPoint[]\n  {\n    return this.pointers\n  }\n\n  protected computePressure(distance: number): number\n  {\n    let ratio = 1.0\n    if (distance === this.length) {\n      ratio = 1.0\n    } else if (distance < 10) {\n      ratio = 0.2 + Math.pow(0.1 * distance, 0.4)\n    } else if (distance > this.length - 10) {\n      ratio = 0.2 + Math.pow(0.1 * (this.length - distance), 0.4)\n    }\n    const pressure = ratio * Math.max(0.1, 1.0 - (0.1 * Math.sqrt(distance)))\n    return isNaN(pressure) ? 0.5 : Math.round(pressure * 100) / 100\n  }\n\n  protected filterPointByAcquisitionDelta(point: TPointer): boolean\n  {\n    const lastPointer = this.pointers.at(-1)\n    const delta: number = (2 + ((this.style.width || 1) / 4))\n    return !lastPointer ||\n      Math.abs(lastPointer.x - point.x) >= delta ||\n      Math.abs(lastPointer.y - point.y) >= delta\n  }\n\n  addPointer(pointer: TPointer): void\n  {\n    if (this.filterPointByAcquisitionDelta(pointer)) {\n      const lastPointer = this.pointers.at(-1)\n      const distance = lastPointer ? computeDistance(pointer, lastPointer) : 0\n      this.length += distance\n      pointer.p = this.computePressure(distance)\n      this.pointers.push(pointer)\n      this.modificationDate = Date.now()\n    }\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.pointers.some(p =>\n    {\n      return p.x >= box.x && p.x <= box.x + box.width\n        && p.y >= box.y && p.y <= box.y + box.height\n    })\n  }\n\n  clone(): IIStroke\n  {\n    const clone = new IIStroke(this.style, this.pointerType)\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    clone.pointers = structuredClone(this.pointers)\n    clone.decorators = this.decorators.map(d => d.clone())\n    clone.length = this.length\n    return clone\n  }\n\n  formatToSend(): TStrokeToSend\n  {\n    const json: TStrokeToSend = {\n      id: this.id,\n      pointerType: this.pointerType,\n      p: [],\n      t: [],\n      x: [],\n      y: []\n    }\n    this.pointers.forEach(p =>\n    {\n      json.p.push(p.p)\n      json.t.push(p.t)\n      json.x.push(p.x)\n      json.y.push(p.y)\n    })\n    return json\n  }\n\n  toJSON(): PartialDeep<IIStroke>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      pointers: this.pointers,\n      style: this.style,\n      decorators: this.decorators.length ? this.decorators : undefined\n    }\n  }\n\n  static create(partial: PartialDeep<IIStroke>): IIStroke\n  {\n    if (!partial.pointers?.length) {\n      throw new Error(`not pointers`)\n    }\n    const stroke = new IIStroke(partial.style, partial.pointerType)\n    if (partial.id) {\n      stroke.id = partial.id\n    }\n    const errors: string[] = []\n    let flag = true\n    partial.pointers?.forEach((pp, pIndex) =>\n    {\n      if (!pp) {\n        errors.push(`no pointer at ${ pIndex }`)\n        flag = false\n        return\n      }\n      const pointer: TPointer = {\n        p: pp.p || 1,\n        t: pp.t || pIndex,\n        x: 0,\n        y: 0\n      }\n      if (pp?.x == undefined || pp?.x == null) {\n        errors.push(`no x at pointer at ${ pIndex }`)\n        flag = false\n        return\n      }\n      else {\n        pointer.x = pp.x\n      }\n      if (pp?.y == undefined || pp?.y == null) {\n        errors.push(`no y at pointer at ${ pIndex }`)\n        flag = false\n        return\n      }\n      else {\n        pointer.y = pp.y\n      }\n      if (flag) {\n        stroke.addPointer(pointer)\n      }\n    })\n\n    if (errors.length) {\n      throw new Error(errors.join(\" and \"))\n    }\n    if (partial.decorators?.length) {\n      partial.decorators.forEach(d => {\n        if(d?.kind) {\n          stroke.decorators.push(new IIDecorator(d.kind, Object.assign({}, stroke.style, d.style)))\n        }\n      })\n    }\n    return stroke\n  }\n}\n\n/**\n * @group Symbol\n * @group Utils\n */\nexport function convertPartialStrokesToOIStrokes(json: PartialDeep<TStroke>[]): IIStroke[]\n{\n  const errors: string[] = []\n  const strokes: IIStroke[] = []\n  json.forEach((j, i) =>\n  {\n    try {\n      strokes.push(IIStroke.create(j as PartialDeep<IIStroke>))\n    } catch (e) {\n      errors.push(`stroke ${ i + 1 } has ${ (e as Error).message }`)\n    }\n  })\n\n  if (errors.length) {\n    throw new Error(errors.join(\"\\n\"))\n  }\n\n  return strokes\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { IIRecognizedBase, RecognizedKind } from \"./IIRecognizedBase\"\nimport { IIStroke } from \"../IIStroke\"\n\n/**\n * @group Symbol\n */\nexport class IIRecognizedArc extends IIRecognizedBase<RecognizedKind.Arc>\n{\n  readonly isClosed = false\n\n  constructor(\n    strokes: IIStroke[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(RecognizedKind.Arc, strokes, style)\n  }\n\n  clone(): IIRecognizedArc\n  {\n    const clone = new IIRecognizedArc(this.strokes.map(s => s.clone()), structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIRecognizedArc>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      strokes: JSON.parse(JSON.stringify(this.strokes)),\n    }\n  }\n\n  static create(partial: PartialDeep<IIRecognizedArc>): IIRecognizedArc\n  {\n    if (!partial.strokes?.length) {\n      throw new Error(`no strokes`)\n    }\n    const strokes = partial.strokes.map(s => IIStroke.create(s!))\n    const ws = new IIRecognizedArc(strokes, partial.style)\n\n    if (partial.id) {\n      ws.id = partial.id\n    }\n    return ws\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { IIRecognizedBase, RecognizedKind } from \"./IIRecognizedBase\"\nimport { IIStroke } from \"../IIStroke\"\n\n/**\n * @group Symbol\n */\nexport class IIRecognizedCircle extends IIRecognizedBase<RecognizedKind.Circle>\n{\n  readonly isClosed = true\n\n  constructor(\n    strokes: IIStroke[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(RecognizedKind.Circle, strokes, style)\n  }\n\n  clone(): IIRecognizedCircle\n  {\n    const clone = new IIRecognizedCircle(this.strokes.map(s => s.clone()), structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIRecognizedCircle>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      strokes: JSON.parse(JSON.stringify(this.strokes)),\n    }\n  }\n\n  static create(partial: PartialDeep<IIRecognizedCircle>): IIRecognizedCircle\n  {\n    if (!partial.strokes?.length) {\n      throw new Error(`no strokes`)\n    }\n    const strokes = partial.strokes.map(s => IIStroke.create(s!))\n\n    const ws = new IIRecognizedCircle(strokes, partial.style)\n\n    if (partial.id) {\n      ws.id = partial.id\n    }\n    return ws\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { IIRecognizedBase, RecognizedKind } from \"./IIRecognizedBase\"\nimport { IIStroke } from \"../IIStroke\"\n\n/**\n * @group Symbol\n */\nexport class IIRecognizedEllipse extends IIRecognizedBase<RecognizedKind.Ellipse>\n{\n  readonly isClosed = true\n\n  constructor(\n    strokes: IIStroke[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(RecognizedKind.Ellipse, strokes, style)\n  }\n\n  clone(): IIRecognizedEllipse\n  {\n    const clone = new IIRecognizedEllipse(this.strokes.map(s => s.clone()), structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIRecognizedEllipse>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      strokes: JSON.parse(JSON.stringify(this.strokes)),\n    }\n  }\n\n  static create(partial: PartialDeep<IIRecognizedEllipse>): IIRecognizedEllipse\n  {\n    if (!partial.strokes?.length) {\n      throw new Error(`no strokes`)\n    }\n    const strokes = partial.strokes.map(s => IIStroke.create(s!))\n\n    const ws = new IIRecognizedEllipse(strokes, partial.style)\n\n    if (partial.id) {\n      ws.id = partial.id\n    }\n    return ws\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { IIRecognizedBase, RecognizedKind } from \"./IIRecognizedBase\"\nimport { IIStroke } from \"../IIStroke\"\n\n/**\n * @group Symbol\n */\nexport class IIRecognizedLine extends IIRecognizedBase<RecognizedKind.Line>\n{\n  readonly isClosed = false\n\n  constructor(\n    strokes: IIStroke[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(RecognizedKind.Line, strokes, style)\n  }\n\n  clone(): IIRecognizedLine\n  {\n    const clone = new IIRecognizedLine(this.strokes.map(s => s.clone()), structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIRecognizedLine>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      strokes: JSON.parse(JSON.stringify(this.strokes)),\n    }\n  }\n\n  static create(partial: PartialDeep<IIRecognizedLine>): IIRecognizedLine\n  {\n    if (!partial.strokes?.length) {\n      throw new Error(`no strokes`)\n    }\n    const strokes = partial.strokes.map(s => IIStroke.create(s!))\n\n    const ws = new IIRecognizedLine(strokes, partial.style)\n\n    if (partial.id) {\n      ws.id = partial.id\n    }\n    return ws\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { IIRecognizedBase, RecognizedKind } from \"./IIRecognizedBase\"\nimport { IIStroke } from \"../IIStroke\"\n\n/**\n * @group Symbol\n */\nexport class IIRecognizedPolyLine extends IIRecognizedBase<RecognizedKind.PolyEdge>\n{\n  readonly isClosed = false\n\n  constructor(\n    strokes: IIStroke[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(RecognizedKind.PolyEdge, strokes, style)\n  }\n\n  clone(): IIRecognizedPolyLine\n  {\n    const clone = new IIRecognizedPolyLine(this.strokes.map(s => s.clone()), structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIRecognizedPolyLine>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      strokes: JSON.parse(JSON.stringify(this.strokes)),\n    }\n  }\n\n  static create(partial: PartialDeep<IIRecognizedPolyLine>): IIRecognizedPolyLine\n  {\n    if (!partial.strokes?.length) {\n      throw new Error(`no strokes`)\n    }\n    const strokes = partial.strokes.map(s => IIStroke.create(s!))\n\n    const ws = new IIRecognizedPolyLine(strokes, partial.style)\n\n    if (partial.id) {\n      ws.id = partial.id\n    }\n    return ws\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { IIRecognizedBase, RecognizedKind } from \"./IIRecognizedBase\"\nimport { IIStroke } from \"../IIStroke\"\n\n/**\n * @group Symbol\n */\nexport class IIRecognizedPolygon extends IIRecognizedBase<RecognizedKind.Polygone>\n{\n  readonly isClosed = true\n\n  constructor(\n    strokes: IIStroke[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(RecognizedKind.Polygone, strokes, style)\n  }\n\n  clone(): IIRecognizedPolygon\n  {\n    const clone = new IIRecognizedPolygon(this.strokes.map(s => s.clone()), structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIRecognizedPolygon>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      strokes: JSON.parse(JSON.stringify(this.strokes)),\n    }\n  }\n\n  static create(partial: PartialDeep<IIRecognizedPolygon>): IIRecognizedPolygon\n  {\n    if (!partial.strokes?.length) {\n      throw new Error(`no strokes`)\n    }\n    const strokes = partial.strokes.map(s => IIStroke.create(s!))\n\n    const ws = new IIRecognizedPolygon(strokes, partial.style)\n\n    if (partial.id) {\n      ws.id = partial.id\n    }\n    return ws\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { IIDecorator } from \"../IIDecorator\"\nimport { IIRecognizedBase, RecognizedKind } from \"./IIRecognizedBase\"\nimport { IIStroke } from \"../IIStroke\"\n\n/**\n * @group Symbol\n */\nexport class IIRecognizedText extends IIRecognizedBase<RecognizedKind.Text>\n{\n  readonly isClosed = false\n\n  decorators: IIDecorator[]\n\n  baseline: number\n  xHeight: number\n  label?: string\n\n  constructor(\n    strokes: IIStroke[],\n    lines: { baseline: number, xHeight: number },\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(RecognizedKind.Text, strokes, style)\n    this.baseline = lines.baseline\n    this.xHeight = lines.xHeight\n    this.decorators = []\n  }\n\n  clone(): IIRecognizedText\n  {\n    const clone = new IIRecognizedText(this.strokes.map(s => s.clone()), { baseline: this.baseline, xHeight: this.xHeight }, structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.label = this.label\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    clone.decorators = this.decorators.map(d => d.clone())\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIRecognizedText>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      label: this.label,\n      baseline: this.baseline,\n      xHeight: this.xHeight,\n      strokes: JSON.parse(JSON.stringify(this.strokes)),\n      decorators: this.decorators.length ? JSON.parse(JSON.stringify(this.decorators)) : undefined\n    }\n  }\n\n  static create(partial: PartialDeep<IIRecognizedText>): IIRecognizedText\n  {\n    if (!partial.strokes?.length) {\n      throw new Error(`no strokes`)\n    }\n    const strokes = partial.strokes.map(s => IIStroke.create(s!))\n    const line = {\n      baseline: partial.baseline || 0,\n      xHeight: partial.xHeight || 0\n    }\n    const ws = new IIRecognizedText(strokes, line, partial.style)\n\n    if (partial.decorators?.length) {\n      partial.decorators.forEach(d =>\n      {\n        if (d?.kind) {\n          ws.decorators.push(new IIDecorator(d.kind, Object.assign({}, ws.style, d.style)))\n        }\n      })\n    }\n    if (partial.id) {\n      ws.id = partial.id\n    }\n    return ws\n  }\n}\n","import { TStyle } from \"../style\"\nimport { PartialDeep } from \"../utils\"\nimport { TPoint } from \"./Point\"\nimport { Box, TBox } from \"./Box\"\nimport { SymbolType } from \"./Symbol\"\nimport { IIDecorator } from \"./IIDecorator\"\nimport { IISymbolBase } from \"./IISymbolBase\"\nimport { IIStroke } from \"./IIStroke\"\nimport { IIText } from \"./IIText\"\nimport { TIISymbol } from \".\"\n\n/**\n * @group Symbol\n */\nexport class IISymbolGroup extends IISymbolBase<SymbolType.Group>\n{\n  readonly isClosed = false\n\n  children: TIISymbol[]\n  decorators: IIDecorator[]\n\n  constructor(\n    children: TIISymbol[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(SymbolType.Group, style)\n    this.children = children\n    this.decorators = []\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return this.bounds.snapPoints\n  }\n\n  get vertices(): TPoint[]\n  {\n    return this.children.flatMap(s => s.vertices)\n  }\n\n  get bounds(): Box\n  {\n    return Box.createFromBoxes(this.children.map(c => c.bounds))\n  }\n\n  updateChildrenStyle(): void\n  {\n    this.children.forEach(child => {\n      child.style = Object.assign({}, child.style, this.style)\n      switch (child.type) {\n        case SymbolType.Group:\n          child.updateChildrenStyle()\n          break\n        case SymbolType.Text:\n          child.chars.forEach(c =>\n          {\n            if (child.style.color) {\n              c.color = child.style.color\n            }\n          })\n          break\n        case SymbolType.Recognized:\n          child.updateChildrenStyle()\n          break\n      }\n\n    })\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.children.some(s => s.overlaps(box))\n  }\n\n  containsSymbol(strokeId: string): boolean\n  {\n    return IISymbolGroup.containsSymbol(this, strokeId)\n  }\n\n  containsOnlyStroke(): boolean\n  {\n    return IISymbolGroup.containsOnlyStroke(this)\n  }\n\n  extractText(): IIText[]\n  {\n    return IISymbolGroup.extractText(this)\n  }\n\n  extractStrokes(): IIStroke[]\n  {\n    return IISymbolGroup.extractStrokes(this)\n  }\n\n  removeChilds(symbolIds: string[]): IISymbolGroup\n  {\n    return IISymbolGroup.removeChilds(this, symbolIds)\n  }\n\n  static containsOnlyStroke(group: IISymbolGroup): boolean\n  {\n    return group.children.every(s =>\n    {\n      if (s.type === SymbolType.Group) {\n        return IISymbolGroup.containsOnlyStroke(s as IISymbolGroup)\n      }\n      if (s.type === SymbolType.Stroke) {\n        return true\n      }\n      return false\n    })\n  }\n\n  static extractText(group: IISymbolGroup): IIText[]\n  {\n    const texts: IIText[] = []\n    group.children.forEach(s =>\n    {\n      switch (s.type) {\n        case SymbolType.Text:\n          texts.push(s)\n          break;\n        case SymbolType.Group:\n          texts.push(...IISymbolGroup.extractText(s))\n          break;\n      }\n    })\n    return texts\n  }\n\n  static extractStrokes(group: IISymbolGroup): IIStroke[]\n  {\n    const strokes: IIStroke[] = []\n    group.children.forEach(s =>\n    {\n      switch (s.type) {\n        case SymbolType.Stroke:\n          strokes.push(s)\n          break;\n        case SymbolType.Recognized:\n          strokes.push(...s.strokes)\n          break;\n        case SymbolType.Group:\n          strokes.push(...IISymbolGroup.extractStrokes(s))\n          break;\n      }\n    })\n    return strokes\n  }\n\n  static containsSymbol(group: IISymbolGroup, symbolId: string): boolean\n  {\n    return group.children.some(symbol =>\n    {\n      if (symbol.id === symbolId) return true\n      if (symbol.type === SymbolType.Group) {\n        return IISymbolGroup.containsSymbol(symbol, symbolId)\n      }\n      else if (symbol.type === SymbolType.Recognized) {\n        return symbol.containsStroke(symbolId)\n      }\n      return false\n    })\n  }\n\n  static removeChilds(group: IISymbolGroup, symbolIds: string[]): IISymbolGroup\n  {\n    group.children = group.children.filter(s => !symbolIds.includes(s.id))\n    const symbolsToRemove = group.children.slice()\n    symbolsToRemove.forEach(s =>\n    {\n      if (s.type === SymbolType.Group) {\n        if (!s.removeChilds(symbolIds).children.length) {\n          group.children = group.children.filter(s1 => s1.id !== s.id)\n        }\n      }\n      else if (s.type === SymbolType.Recognized) {\n        s.removeStrokes(symbolIds)\n        if (!s.strokes.length) {\n          group.removeChilds([s.id])\n        }\n      }\n    })\n    return group\n  }\n\n  clone(): IISymbolGroup\n  {\n    const clone = new IISymbolGroup(this.children.map(s => s.clone()), structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    clone.decorators = this.decorators.map(d => d.clone())\n    return clone\n  }\n\n  toJSON(): PartialDeep<IISymbolGroup>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      children: JSON.parse(JSON.stringify(this.children)),\n      decorators: this.decorators.length ? JSON.parse(JSON.stringify(this.decorators)) : undefined\n    }\n  }\n}\n","import { TStyle } from \"../style\"\nimport { PartialDeep, convertDegreeToRadian, findIntersectionBetween2Segment, isPointInsidePolygon, computeRotatedPoint } from \"../utils\"\nimport { TPoint, isValidPoint } from \"./Point\"\nimport { SymbolType } from \"./Symbol\"\nimport { Box, TBox } from \"./Box\"\nimport { IIDecorator } from \"./IIDecorator\"\nimport { IISymbolBase } from \"./IISymbolBase\"\n\n/**\n * @group Symbol\n */\nexport type TIISymbolChar = {\n  id: string\n  label: string\n  fontSize: number\n  fontWeight: \"normal\" | \"bold\"\n  color: string\n  bounds: TBox\n}\n\n/**\n * @group Symbol\n */\nexport class IIText extends IISymbolBase<SymbolType.Text>\n{\n  readonly isClosed = true\n\n  point: TPoint\n  chars: TIISymbolChar[]\n  decorators: IIDecorator[]\n  bounds: Box\n  rotation?: {\n    degree: number,\n    center: TPoint\n  }\n\n  constructor(\n    chars: TIISymbolChar[],\n    point: TPoint,\n    bounds: TBox,\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(SymbolType.Text, style)\n    this.point = point\n    this.bounds = new Box(bounds)\n    this.chars = chars\n    this.decorators = []\n  }\n\n  get label(): string\n  {\n    return this.chars.map(c => c.label).join(\"\")\n  }\n\n  get vertices(): TPoint[]\n  {\n    if (this.rotation) {\n      const center = this.rotation.center\n      const rad = convertDegreeToRadian(-this.rotation.degree)\n      return this.bounds.corners\n        .map(p =>\n        {\n          return computeRotatedPoint(p, center, rad)\n        })\n    }\n    else {\n      return this.bounds.corners\n    }\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    const offsetY = this.bounds.yMax - this.point.y\n    const points = [\n      { x: this.bounds.x, y: this.bounds.yMin + offsetY },\n      { x: this.bounds.xMax, y: this.bounds.yMin + offsetY },\n      { x: this.bounds.xMax, y: this.bounds.yMax - offsetY },\n      { x: this.bounds.x, y: this.bounds.yMax - offsetY },\n      this.bounds.center\n    ]\n    if (this.rotation) {\n      const center = this.rotation.center\n      const rad = convertDegreeToRadian(-this.rotation.degree)\n      return points\n        .map(p =>\n        {\n          return computeRotatedPoint(p, center, rad)\n        })\n    }\n    return points\n  }\n\n  protected getCharCorners(char: TIISymbolChar): TPoint[]\n  {\n    const boxBox = new Box(char.bounds)\n    if (this.rotation) {\n      const center = this.rotation.center\n      const rad = convertDegreeToRadian(-this.rotation.degree)\n      return boxBox.corners\n        .map(p =>\n        {\n          return computeRotatedPoint(p, center, rad)\n        })\n    }\n    return boxBox.corners\n  }\n\n  updateChildrenStyle(): void\n  {\n    this.chars.forEach(c => {\n      if (this.style.color) {\n        c.color = this.style.color\n      }\n    })\n    this.modificationDate = Date.now()\n  }\n\n  updateChildrenFont( { fontSize, fontWeight }: { fontSize?: number, fontWeight?: \"normal\" | \"bold\" }): void\n  {\n    this.chars.forEach(c => {\n      if (fontSize) {\n        c.fontSize = fontSize\n      }\n      if (fontWeight) {\n        c.fontWeight = fontWeight\n      }\n    })\n    this.modificationDate = Date.now()\n  }\n\n  getCharsOverlaps(points: TPoint[]): TIISymbolChar[]\n  {\n    return this.chars.filter(c =>\n    {\n      const charCorners = this.getCharCorners(c)\n      return points.some(p => isPointInsidePolygon(p, charCorners))\n    })\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.vertices.some(p => Box.containsPoint(box, p)) ||\n      this.edges.some(e1 => Box.getSides(box).some(e2 => !!findIntersectionBetween2Segment(e1, e2)))\n  }\n\n  clone(): IIText\n  {\n    const clone = new IIText(structuredClone(this.chars), structuredClone(this.point), this.bounds, structuredClone(this.style))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    clone.decorators = this.decorators.map(d => d.clone())\n    clone.rotation = this.rotation ? structuredClone(this.rotation) : undefined\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIText>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      point: this.point,\n      chars: this.chars,\n      style: this.style,\n      rotation: this.rotation,\n      bounds: this.bounds,\n      decorators: this.decorators.length ? this.decorators : undefined\n    }\n  }\n\n  static create(partial: PartialDeep<IIText>): IIText\n  {\n    if (!isValidPoint(partial?.point)) throw new Error(`Unable to create a IIText, point are invalid`)\n    if (!partial.chars?.length) throw new Error(`Unable to create a IIText, no chars`)\n    if (!partial.bounds) throw new Error(`Unable to create a IIText, no boundingBox`)\n    const text = new IIText(partial.chars as TIISymbolChar[], partial.point as TPoint, partial.bounds as TBox, partial.style)\n    if (partial.id) text.id = partial.id\n    if (partial.decorators?.length) {\n      partial.decorators.forEach(d => {\n        if(d?.kind) {\n          text.decorators.push(new IIDecorator(d.kind, Object.assign({}, text.style, d.style)))\n        }\n      })\n    }\n    return text\n  }\n}\n","import { createUUID, PartialDeep } from \"../utils\"\nimport { TPoint, TPointer } from \"./Point\"\nimport { Box, TBox } from \"./Box\"\nimport { SymbolType } from \"./Symbol\"\nimport { IISymbolBase } from \"./IISymbolBase\"\nimport { TStyle } from \"../style\"\n\nconst style: TStyle = {\n  color: \"grey\",\n  fill: \"none\",\n  width: 12,\n  opacity: 0.2\n}\n\n/**\n * @group Symbol\n */\nexport class IIEraser extends IISymbolBase<SymbolType.Eraser>\n{\n  readonly isClosed = false\n  pointers: TPointer[]\n\n  constructor()\n  {\n    super(SymbolType.Eraser, style)\n    this.id = `${ this.type }-${ createUUID() }`\n    this.creationTime = Date.now()\n    this.modificationDate = this.creationTime\n    this.pointers = []\n  }\n\n  get bounds(): Box\n  {\n    return Box.createFromPoints(this.vertices)\n  }\n\n  get vertices(): TPoint[]\n  {\n    return this.pointers\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return []\n  }\n\n  clone(): IISymbolBase\n  {\n    const clone = new IIEraser()\n    clone.id = this.id\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    clone.pointers = structuredClone(this.pointers)\n    return clone\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.pointers.some(p =>\n    {\n      return p.x >= box.x && p.x <= box.x + box.width\n        && p.y >= box.y && p.y <= box.y + box.height\n    })\n  }\n\n  toJSON(): PartialDeep<IIEraser>\n  {\n    return {\n      id: this.id,\n      pointers: this.pointers,\n      style: this.style\n    }\n  }\n}\n","import { DefaultPenStyle, TPenStyle } from \"../style\"\nimport { PartialDeep, createUUID } from \"../utils\"\nimport { TPointer } from \"./Point\"\nimport { SymbolType, TSymbol } from \"./Symbol\"\n\n/**\n * @group Symbol\n */\nexport type TStrokeToSend = {\n  id: string\n  pointerType: string\n  x: number[]\n  y: number[]\n  t: number[]\n  p: number[]\n}\n\n/**\n * @group Symbol\n */\nexport type TStrokeGroupToSend = {\n  penStyle?: string\n  strokes: TStrokeToSend[]\n}\n\n/**\n * @group Symbol\n */\nexport type TStroke = TSymbol & {\n  style: TPenStyle\n  pointerType: string\n  pointers: TPointer[]\n  length: number\n}\n\n/**\n * @group Symbol\n */\nexport type TStrokeGroup = {\n  penStyle: TPenStyle\n  strokes: Stroke[]\n}\n\n/**\n * @group Symbol\n */\nexport class Stroke implements TStroke\n{\n  type = SymbolType.Stroke\n  id: string\n  creationTime: number\n  modificationDate: number\n  style: TPenStyle\n  pointerType: string\n  pointers: TPointer[]\n  length: number\n\n  constructor(style: TPenStyle, pointerType = \"pen\")\n  {\n    this.id = `${this.type}-${createUUID()}`\n    this.creationTime = Date.now()\n    this.modificationDate = this.creationTime\n    this.style = style\n    this.pointerType = pointerType\n    this.pointers = []\n    this.length = 0\n  }\n\n  clone(): Stroke\n  {\n    const clone = new Stroke(this.style, this.pointerType)\n    clone.id = this.id\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    clone.pointers = structuredClone(this.pointers)\n    clone.length = this.length\n    return clone\n  }\n\n  formatToSend(): TStrokeToSend\n  {\n    const json: TStrokeToSend = {\n      id: this.id,\n      pointerType: this.pointerType,\n      p: [],\n      t: [],\n      x: [],\n      y: []\n    }\n    this.pointers.forEach(p => {\n      json.p.push(p.p)\n      json.t.push(p.t)\n      json.x.push(p.x)\n      json.y.push(p.y)\n    })\n    return json\n  }\n}\n\n/**\n * @group Symbol\n * @group Utils\n */\nexport function convertPartialStrokesToStrokes(json: PartialDeep<TStroke>[]): Stroke[]\n{\n  const errors: string[] = []\n  const strokes: Stroke[] = []\n  json.forEach((j, ji) => {\n    let flag = true\n    const stroke = new Stroke(j.style || DefaultPenStyle, j.pointerType)\n    if (j.id) stroke.id = j.id\n    if (!j.pointers?.length) {\n      errors.push(`stroke ${ji + 1} has not pointers`)\n      flag = false\n      return\n    }\n    j.pointers?.forEach((pp, pIndex) => {\n      if (!pp) {\n        errors.push(`stroke ${ji + 1} has no pointer at ${pIndex}`)\n        flag = false\n        return\n      }\n      const pointer: TPointer = {\n        p: pp.p || 1,\n        t: pp.t || pIndex,\n        x: 0,\n        y: 0\n      }\n      if (pp?.x == undefined || pp?.x == null) {\n        errors.push(`stroke ${ji + 1} has no x at pointer at ${pIndex}`)\n        flag = false\n        return\n      }\n      else {\n        pointer.x = pp.x\n      }\n      if (pp?.y == undefined || pp?.y == null) {\n        errors.push(`stroke ${ji + 1} has no y at pointer at ${pIndex}`)\n        flag = false\n        return\n      }\n      else {\n        pointer.y = pp.y\n      }\n      if (flag) {\n        stroke.pointers.push(pointer)\n      }\n    })\n    if (flag) {\n      strokes.push(stroke)\n    }\n  })\n\n  if (errors.length) {\n    throw new Error(errors.join(\"\\n\"))\n  }\n\n  return strokes\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { TPenStyle } from \"../style\"\nimport { computeDistance } from \"../utils\"\nimport { TExport } from \"./Export\"\nimport { Stroke, TPoint, TPointer } from \"../symbol\"\n\n/**\n * @group Model\n */\nexport type TRecognitionPositions = {\n  lastSentPosition: number\n  lastReceivedPosition: number\n}\n\n/**\n * @group Model\n */\nexport class Model\n{\n  readonly creationTime: number\n  modificationDate: number\n  positions: TRecognitionPositions\n  currentSymbol?: Stroke\n  symbols: Stroke[]\n  exports?: TExport\n  converts?: TExport\n  width: number\n  height: number\n  rowHeight: number\n  idle: boolean\n  #logger = LoggerManager.getLogger(LoggerCategory.MODEL)\n\n  constructor(width = 100, height = 100, rowHeight = 0, creationDate = Date.now())\n  {\n    this.#logger.info(\"constructor\", { width, height, creationDate })\n    this.creationTime = creationDate\n    this.modificationDate = creationDate\n    this.width = width\n    this.height = height\n    this.rowHeight = rowHeight\n    this.symbols = []\n    this.positions = {\n      lastSentPosition: 0,\n      lastReceivedPosition: 0\n    }\n    this.idle = true\n  }\n\n  protected computePressure(distance: number, globalDistance: number): number\n  {\n    let ratio = 1.0\n    if (distance === globalDistance) {\n      ratio = 1.0\n    } else if (distance < 10) {\n      ratio = 0.2 + Math.pow(0.1 * distance, 0.4)\n    } else if (distance > globalDistance - 10) {\n      ratio = 0.2 + Math.pow(0.1 * (globalDistance - distance), 0.4)\n    }\n    const pressure = ratio * Math.max(0.1, 1.0 - (0.1 * Math.sqrt(distance)))\n    return isNaN(pressure) ? 0.5 : Math.round(pressure * 100) / 100\n  }\n\n  protected filterPointByAcquisitionDelta(stroke: Stroke, point: TPointer, lastPointer?: TPointer): boolean\n  {\n    const delta: number = (2 + ((stroke.style[\"-myscript-pen-width\"] || 0) / 4))\n    return !lastPointer ||\n      stroke.pointers.length === 0 ||\n      Math.abs(lastPointer.x - point.x) >= delta ||\n      Math.abs(lastPointer.y - point.y) >= delta\n  }\n\n  getStrokeFromPoint(point: TPoint): Stroke[]\n  {\n    this.#logger.info(\"getStrokeFromPoint\", { point })\n    const isBetween = (val: number, min: number, max: number): boolean => (val >= min && val <= max)\n\n    const _strokeList: Stroke[] = []\n    this.symbols.forEach((stroke) =>\n    {\n      for (let i = 0; i < stroke.pointers.length; i++) {\n        const strokePointer = stroke.pointers[i]\n        if (\n          isBetween(strokePointer.x, point.x - 5, point.x + 5) &&\n          isBetween(strokePointer.y, point.y - 5, point.y + 5)\n        ) {\n          _strokeList.push(stroke)\n          break\n        }\n        else {\n          if (computeDistance(point, strokePointer) < 10) {\n            _strokeList.push(stroke)\n            break\n          }\n        }\n      }\n    })\n    this.#logger.debug(\"getStrokeFromPoint\", { strokes: _strokeList })\n    return _strokeList\n  }\n\n  addPoint(stroke: Stroke, pointer: TPointer): void\n  {\n    this.#logger.debug(\"addPoint\", { stroke, pointer })\n    const lastPointer = stroke.pointers.at(-1)\n    if (this.filterPointByAcquisitionDelta(stroke, pointer, lastPointer)) {\n      const distance = lastPointer ? computeDistance(pointer, lastPointer) : 0\n      stroke.length += distance\n      pointer.p = this.computePressure(distance, stroke.length)\n      stroke.pointers.push(pointer)\n      stroke.modificationDate = Date.now()\n    }\n  }\n\n  addStroke(stroke: Stroke): void\n  {\n    this.#logger.info(\"addStroke\", { stroke })\n    this.symbols.push(stroke)\n    this.modificationDate = Date.now()\n    this.converts = undefined\n    this.exports = undefined\n  }\n\n  updateStroke(updatedStroke: Stroke): void\n  {\n    this.#logger.info(\"updateStroke\", { updatedStroke })\n    const strokeIndex = this.symbols.findIndex((s: Stroke): boolean => s.id === updatedStroke.id)\n    if (strokeIndex !== -1) {\n      updatedStroke.modificationDate = Date.now()\n      this.symbols.splice(strokeIndex, 1, updatedStroke)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n    this.#logger.debug(\"updateStroke\", this.symbols)\n  }\n\n  removeStroke(id: string): void\n  {\n    this.#logger.info(\"removeStroke\", { id })\n    const strokeIndex = this.symbols.findIndex(s => s.id === id)\n    if (strokeIndex !== -1) {\n      this.positions.lastSentPosition--\n      this.positions.lastReceivedPosition--\n      this.symbols.splice(strokeIndex, 1)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n    this.#logger.debug(\"removeStroke\", this.symbols)\n  }\n\n  removeStrokesFromPoint(point: TPoint): string[]\n  {\n    this.#logger.info(\"removeStrokesFromPoint\", { point })\n    const strokes = this.getStrokeFromPoint(point)\n    strokes.forEach(strokeToRemove =>\n    {\n      this.removeStroke(strokeToRemove.id)\n    })\n    this.#logger.debug(\"removeStrokesFromPoint\", strokes.map(s => s.id))\n    return strokes.map(s => s.id)\n  }\n\n  extractUnsentStrokes(): Stroke[]\n  {\n    return this.symbols.slice(this.positions.lastSentPosition)\n  }\n\n  initCurrentStroke(point: TPointer, pointerType: string, style: TPenStyle, dpi = 96): void\n  {\n    this.#logger.info(\"initCurrentStroke\", { point, pointerType, style, dpi })\n    if (style[\"-myscript-pen-width\"]) {\n      const pxWidth = (style[\"-myscript-pen-width\"] * dpi) / 25.4\n      style.width = pxWidth / 2\n    }\n    this.modificationDate = Date.now()\n    this.exports = undefined\n    this.currentSymbol = new Stroke(style, pointerType)\n    this.#logger.debug(\"initCurrentStroke\", this.currentSymbol)\n    this.addPoint(this.currentSymbol, point)\n  }\n\n  appendToCurrentStroke(point: TPointer): void\n  {\n    this.#logger.info(\"appendToCurrentStroke\", { point })\n    if (this.currentSymbol) {\n      this.addPoint(this.currentSymbol, point)\n    }\n    this.#logger.debug(\"appendToCurrentStroke\", this.currentSymbol)\n  }\n\n  endCurrentStroke(point: TPointer): void\n  {\n    this.#logger.info(\"endCurrentStroke\", { point })\n    if (this.currentSymbol) {\n      this.addPoint(this.currentSymbol, point)\n      this.addStroke(this.currentSymbol)\n      this.currentSymbol = undefined\n    }\n    this.#logger.debug(\"endCurrentStroke\", this.currentSymbol)\n  }\n\n  updatePositionSent(position: number = this.symbols.length): void\n  {\n    this.#logger.info(\"updatePositionSent\", { position })\n    this.positions.lastSentPosition = position\n    this.#logger.debug(\"updatePositionSent\", this.positions.lastSentPosition)\n  }\n\n  updatePositionReceived(): void\n  {\n    this.#logger.info(\"updatePositionReceived\")\n    this.positions.lastReceivedPosition = this.positions.lastSentPosition\n    this.#logger.debug(\"updatePositionReceived\", this.positions.lastReceivedPosition)\n  }\n\n  mergeExport(exports: TExport)\n  {\n    this.#logger.info(\"mergeExport\", { exports })\n    if (this.exports) {\n      Object.assign(this.exports, exports)\n    } else {\n      this.exports = exports\n    }\n    this.#logger.debug(\"mergeExport\", this.exports)\n  }\n\n  mergeConvert(converts: TExport)\n  {\n    this.#logger.info(\"mergeConvert\", { converts })\n    if (this.converts) {\n      Object.assign(this.converts, converts)\n    } else {\n      this.converts = converts\n    }\n    this.#logger.debug(\"mergeConvert\", this.converts)\n  }\n\n  clone(): Model\n  {\n    this.#logger.info(\"clone\")\n    const clonedModel = new Model(this.width, this.height, this.rowHeight, this.creationTime)\n    clonedModel.modificationDate = JSON.parse(JSON.stringify(this.modificationDate))\n    clonedModel.currentSymbol = this.currentSymbol ? this.currentSymbol.clone() : undefined\n    clonedModel.symbols = this.symbols.map(s => s.clone())\n    clonedModel.positions = JSON.parse(JSON.stringify(this.positions))\n    clonedModel.exports = this.exports ? JSON.parse(JSON.stringify(this.exports)) : undefined\n    clonedModel.converts = this.converts ? JSON.parse(JSON.stringify(this.converts)) : undefined\n    clonedModel.idle = this.idle\n    this.#logger.debug(\"clone\", { clonedModel })\n    return clonedModel\n  }\n\n  clear(): void\n  {\n    this.#logger.info(\"clear\")\n    this.modificationDate = Date.now()\n    this.currentSymbol = undefined\n    this.symbols = []\n    this.positions.lastSentPosition = 0\n    this.positions.lastReceivedPosition = 0\n    this.exports = undefined\n    this.converts = undefined\n    this.idle = true\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport\n{\n  RecognizedKind,\n  SymbolType,\n  TIISymbol,\n} from \"../symbol\"\nimport { TExport } from \"./Export\"\n\n/**\n * @group Model\n */\nexport class IIModel\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.MODEL)\n  readonly creationTime: number\n  modificationDate: number\n  currentSymbol?: TIISymbol\n  symbols: TIISymbol[]\n  exports?: TExport\n  converts?: TExport\n  width: number\n  height: number\n  rowHeight: number\n  idle: boolean\n\n  constructor(width = 100, height = 100, rowHeight = 0, creationDate = Date.now())\n  {\n    this.creationTime = creationDate\n    this.modificationDate = creationDate\n    this.width = width\n    this.height = height\n    this.rowHeight = rowHeight\n    this.symbols = []\n    this.exports = undefined\n    this.converts = undefined\n    this.idle = true\n  }\n\n  get symbolsSelected(): TIISymbol[]\n  {\n    return this.symbols.filter(s => s.selected)\n  }\n\n  get symbolsToDelete(): TIISymbol[]\n  {\n    return this.symbols.filter(s => s.deleting)\n  }\n\n  selectSymbol(id: string): void\n  {\n    const symbol = this.symbols.find(s => s.id === id || (s.type === SymbolType.Group && s.containsSymbol(id)))\n    if (symbol) {\n      symbol.selected = true\n    }\n  }\n\n  unselectSymbol(id: string): void\n  {\n    const symbol = this.symbols.find(s => s.id === id)\n    if (symbol) {\n      symbol.selected = false\n    }\n  }\n\n  resetSelection(): void\n  {\n    this.symbols.forEach(s => s.selected = false)\n  }\n\n  getRootSymbol(id: string): TIISymbol | undefined\n  {\n    return this.symbols.find(s =>\n    {\n      if (s.id === id) return s\n      if (s.type === SymbolType.Group && s.containsSymbol(id)) {\n        return s\n      }\n      if (s.type === SymbolType.Recognized && s.containsStroke(id)) {\n        return s\n      }\n      return\n    })\n  }\n\n  getSymbolRowIndex(symbol: TIISymbol): number\n  {\n    return Math.round((symbol.type === SymbolType.Recognized && symbol.kind === RecognizedKind.Text ? symbol.baseline : symbol.bounds.yMid) / this.rowHeight)\n  }\n\n  getSymbolsByRowOrdered(): { rowIndex: number, symbols: TIISymbol[] }[]\n  {\n    const rows: { rowIndex: number, symbols: TIISymbol[] }[] = []\n    this.symbols.forEach(s =>\n    {\n      const rowIndex = this.getSymbolRowIndex(s)\n      const row = rows.find(r => r.rowIndex === rowIndex)\n      if (row) {\n        row.symbols.push(s)\n      }\n      else {\n        rows.push({ rowIndex, symbols: [s] })\n      }\n    })\n    rows.forEach(r =>\n    {\n      r.symbols.sort((s1, s2) => s1.bounds.xMid - s2.bounds.xMid)\n    })\n    return rows.sort((r1, r2) => r1.rowIndex - r2.rowIndex)\n  }\n\n  roundToLineGuide(y: number): number\n  {\n    return Math.round(y / this.rowHeight) * this.rowHeight\n  }\n\n  isSymbolAbove(source: TIISymbol, target: TIISymbol): boolean\n  {\n    return this.getSymbolRowIndex(source) > this.getSymbolRowIndex(target)\n  }\n\n  isSymbolInRow(source: TIISymbol, target: TIISymbol): boolean\n  {\n    return this.getSymbolRowIndex(source) === this.getSymbolRowIndex(target)\n  }\n\n  isSymbolBelow(source: TIISymbol, target: TIISymbol): boolean\n  {\n    return this.getSymbolRowIndex(source) < this.getSymbolRowIndex(target)\n  }\n\n  getFirstSymbol(symbols: TIISymbol[]): TIISymbol | undefined\n  {\n    if (!symbols.length) return\n    return symbols.reduce((previous, current) =>\n    {\n      if (previous) {\n        if (this.getSymbolRowIndex(previous) < this.getSymbolRowIndex(current)) {\n          return previous\n        }\n        else if (this.getSymbolRowIndex(previous) == this.getSymbolRowIndex(current) && previous.bounds.xMid < current.bounds.xMid) {\n          return previous\n        }\n      }\n      return current\n    })\n  }\n\n  getLastSymbol(symbols: TIISymbol[]): TIISymbol | undefined\n  {\n    if (!symbols.length) return\n    return symbols.reduce((previous, current) =>\n    {\n      if (previous) {\n        if (this.getSymbolRowIndex(previous) > this.getSymbolRowIndex(current)) {\n          return previous\n        }\n        if (this.getSymbolRowIndex(previous) < this.getSymbolRowIndex(current)) {\n          return current\n        }\n        else if (previous.bounds.xMid > current.bounds.xMid) {\n          return previous\n        }\n      }\n      return current\n    })\n  }\n\n  addSymbol(symbol: TIISymbol): void\n  {\n    this.#logger.info(\"addSymbol\", { symbol })\n    const sIndex = this.symbols.findIndex(s => s.id === symbol.id)\n    if (sIndex > -1) {\n      throw new Error(`Symbol id already exist: ${ symbol.id }`)\n    }\n    this.symbols.push(symbol)\n    this.modificationDate = Date.now()\n    this.converts = undefined\n    this.exports = undefined\n    this.#logger.debug(\"addSymbol\", this.symbols)\n  }\n\n  updateSymbol(updatedSymbol: TIISymbol): void\n  {\n    this.#logger.info(\"updateSymbol\", { updatedSymbol })\n    const sIndex = this.symbols.findIndex(s => s.id === updatedSymbol.id)\n    if (sIndex !== -1) {\n      updatedSymbol.modificationDate = Date.now()\n      this.symbols.splice(sIndex, 1, updatedSymbol)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n    this.#logger.debug(\"updateSymbol\", this.symbols)\n  }\n\n  replaceSymbol(id: string, symbols: TIISymbol[]): void\n  {\n    const sIndex = this.symbols.findIndex(s => s.id === id)\n    if (sIndex !== -1) {\n      this.symbols.splice(sIndex, 1, ...symbols)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n  }\n\n  changeOrderSymbol(id: string, position: \"first\" | \"last\" | \"forward\" | \"backward\")\n  {\n    const fromIndex = this.symbols.findIndex(s => s.id === id)\n    if (fromIndex > -1) {\n      let toIndex = fromIndex\n      switch (position) {\n        case \"first\":\n          toIndex = 0\n          break\n        case \"last\":\n          toIndex = this.symbols.length - 1\n          break\n        case \"forward\":\n          toIndex = Math.min(toIndex + 1, this.symbols.length - 1)\n          break\n        case \"backward\":\n          toIndex = Math.max(toIndex - 1, 0)\n          break\n      }\n      const sym = this.symbols.splice(fromIndex, 1)[0]\n      this.symbols.splice(toIndex, 0, sym)\n    }\n  }\n\n  removeSymbol(id: string): void\n  {\n    this.#logger.info(\"removeSymbol\", { id })\n    const symbolIndex = this.symbols.findIndex(s => s.id === id)\n    if (symbolIndex !== -1) {\n      this.symbols.splice(symbolIndex, 1)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n    this.#logger.debug(\"removeSymbol\", this.symbols)\n  }\n\n  extractDifferenceSymbols(model: IIModel): { added: TIISymbol[], removed: TIISymbol[] }\n  {\n    return {\n      added: this.symbols.filter(s1 => model.symbols.findIndex(s2 => s1.id === s2.id && s1.modificationDate === s2.modificationDate) === -1),\n      removed: model.symbols.filter(s1 => this.symbols.findIndex(s2 => s1.id === s2.id && s1.modificationDate === s2.modificationDate) === -1)\n    }\n  }\n\n  mergeExport(exports: TExport)\n  {\n    this.#logger.info(\"mergeExport\", { exports })\n    if (this.exports) {\n      Object.assign(this.exports, exports)\n    } else {\n      this.exports = exports\n    }\n    this.#logger.debug(\"mergeExport\", this.exports)\n  }\n\n  clone(): IIModel\n  {\n    this.#logger.info(\"clone\")\n    const clonedModel = new IIModel(this.width, this.height, this.rowHeight, this.creationTime)\n    clonedModel.modificationDate = this.modificationDate\n    clonedModel.symbols = this.symbols.map(s =>\n    {\n      const c = s.clone()\n      c.selected = false\n      return c\n    })\n    clonedModel.exports = structuredClone(this.exports)\n    clonedModel.idle = this.idle\n    this.#logger.debug(\"clone\", { clonedModel })\n    return clonedModel\n  }\n\n  clear(): void\n  {\n    this.#logger.info(\"clear\")\n    this.modificationDate = Date.now()\n    this.symbols = []\n    this.currentSymbol = undefined\n    this.exports = undefined\n    this.converts = undefined\n    this.idle = true\n\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIStroke } from \"../symbol\"\nimport { TExportV2 } from \"./ExportV2\"\n\n/**\n * @group Model\n */\nexport class IModel\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.MODEL)\n  readonly creationTime: number\n  modificationDate: number\n  currentStroke?: IIStroke\n  strokes: IIStroke[]\n  exports?: TExportV2\n  converts?: TExportV2\n  width: number\n  height: number\n  rowHeight: number\n  idle: boolean\n\n  constructor(width = 100, height = 100, rowHeight = 0, creationDate = Date.now())\n  {\n    this.creationTime = creationDate\n    this.modificationDate = creationDate\n    this.width = width\n    this.height = height\n    this.rowHeight = rowHeight\n    this.strokes = []\n    this.exports = undefined\n    this.converts = undefined\n    this.idle = true\n  }\n\n  get strokesToDelete(): IIStroke[]\n  {\n    return this.strokes.filter(s => s.deleting)\n  }\n\n  addStroke(stroke: IIStroke): void\n  {\n    this.#logger.info(\"addStroke\", { stroke })\n    const sIndex = this.strokes.findIndex(s => s.id === stroke.id)\n    if (sIndex > -1) {\n      throw new Error(`Stroke id already exist: ${ stroke.id }`)\n    }\n    this.strokes.push(stroke)\n    this.modificationDate = Date.now()\n    this.converts = undefined\n    this.exports = undefined\n    this.#logger.debug(\"addStroke\", this.strokes)\n  }\n\n  updateStroke(updatedStroke: IIStroke): void\n  {\n    this.#logger.info(\"updateStroke\", { updatedStroke })\n    const sIndex = this.strokes.findIndex(s => s.id === updatedStroke.id)\n    if (sIndex !== -1) {\n      updatedStroke.modificationDate = Date.now()\n      this.strokes.splice(sIndex, 1, updatedStroke)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n    this.#logger.debug(\"updateStroke\", this.strokes)\n  }\n\n  removeStroke(id: string): void\n  {\n    this.#logger.info(\"removeSymbol\", { id })\n    const strokeIndex = this.strokes.findIndex(s => s.id === id)\n    if (strokeIndex !== -1) {\n      this.strokes.splice(strokeIndex, 1)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n    this.#logger.debug(\"removeSymbol\", this.strokes)\n  }\n\n  extractDifferenceStrokes(model: IModel): { added: IIStroke[], removed: IIStroke[] }\n  {\n    return {\n      added: this.strokes.filter(s1 => model.strokes.findIndex(s2 => s1.id === s2.id && s1.modificationDate === s2.modificationDate) === -1),\n      removed: model.strokes.filter(s1 => this.strokes.findIndex(s2 => s1.id === s2.id && s1.modificationDate === s2.modificationDate) === -1)\n    }\n  }\n\n  mergeExport(exports: TExportV2)\n  {\n    this.#logger.info(\"mergeExport\", { exports })\n    if (this.exports) {\n      Object.assign(this.exports, exports)\n    } else {\n      this.exports = exports\n    }\n    this.#logger.debug(\"mergeExport\", this.exports)\n  }\n\n  clone(): IModel\n  {\n    this.#logger.info(\"clone\")\n    const clonedModel = new IModel(this.width, this.height, this.rowHeight, this.creationTime)\n    clonedModel.modificationDate = this.modificationDate\n    clonedModel.strokes = this.strokes.map(s =>\n    {\n      const c = s.clone()\n      c.selected = false\n      return c\n    })\n    clonedModel.exports = structuredClone(this.exports)\n    clonedModel.idle = this.idle\n    this.#logger.debug(\"clone\", { clonedModel })\n    return clonedModel\n  }\n\n  clear(): void\n  {\n    this.#logger.info(\"clear\")\n    this.modificationDate = Date.now()\n    this.strokes = []\n    this.exports = undefined\n    this.converts = undefined\n    this.currentStroke = undefined\n    this.idle = true\n\n  }\n}\n","/**\n * @group Recognizer\n */\nexport type TScheme = \"https\" | \"http\"\n\n/**\n * @group Recognizer\n */\nexport type TServerHTTPConfiguration = {\n  scheme: TScheme,\n  host: string\n  applicationKey: string\n  hmacKey: string\n  version?: string\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultServerHTTPConfiguration: TServerHTTPConfiguration = {\n  scheme: \"https\",\n  host: \"cloud.myscript.com\",\n  applicationKey: \"\",\n  hmacKey: \"\",\n  version: \"\"\n}\n\n/**\n * @group Recognizer\n */\nexport type TServerWebsocketConfiguration = TServerHTTPConfiguration & {\n  websocket: {\n    pingEnabled: boolean\n    pingDelay: number\n    maxPingLostCount: number\n    autoReconnect: boolean\n    maxRetryCount: number\n    fileChunkSize: number\n  }\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultServerWebsocketConfiguration: TServerWebsocketConfiguration = {\n  ...DefaultServerHTTPConfiguration,\n  websocket: {\n    pingEnabled: true,\n    pingDelay: 15000,\n    maxPingLostCount: 20,\n    autoReconnect: true,\n    maxRetryCount: 2,\n    fileChunkSize: 300000\n  }\n}\n","\n/**\n * @group Recognizer\n */\nexport type TEraserConfiguration = {\n  \"erase-precisely\": boolean\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultEraserConfiguration: TEraserConfiguration = {\n  \"erase-precisely\": false\n}\n","\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\nimport { TTextConfConfiguration } from \"./TextConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TDiagramConvertConfiguration = {\n  types?: (\"text\" | \"shape\")[]\n  \"match-text-size\"?: boolean\n}\n\n/**\n * @group Recognizer\n */\nexport type TDiagramConfiguration = {\n  mimeTypes: (\"application/vnd.myscript.jiix\" | \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" | \"image/svg+xml\")[]\n  \"enable-sub-blocks\"?: boolean\n  text?: TTextConfConfiguration\n  convert?: TDiagramConvertConfiguration\n  \"session-time\"?: number\n  eraser?: TEraserConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultDiagramConvertConfiguration: TDiagramConvertConfiguration = {\n  types: [\"text\", \"shape\"],\n  \"match-text-size\": true\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultDiagramConfiguration: TDiagramConfiguration = {\n  convert: DefaultDiagramConvertConfiguration,\n  eraser: DefaultEraserConfiguration,\n  mimeTypes: [\"application/vnd.myscript.jiix\"],\n}\n","\n/**\n * @group Recognizer\n */\nexport type TImageViewportConfiguration = {\n  x: number\n  y: number\n  width: number\n  height: number\n}\n\n/**\n * @group Recognizer\n */\nexport type TImageConfiguration = {\n  guides: boolean\n  viewport: TImageViewportConfiguration\n}\n\n/**\n * @group Recognizer\n */\nexport type TJiixConfiguration = {\n  \"bounding-box\": boolean\n  strokes: boolean\n  ids: boolean\n  \"full-stroke-ids\": boolean\n  text: {\n    chars: boolean\n    words: boolean\n    lines?: boolean\n  }\n  style?: boolean\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultJiixConfiguration: TJiixConfiguration = {\n  \"bounding-box\": false,\n  strokes: false,\n  ids: false,\n  \"full-stroke-ids\": false,\n  text: {\n    chars: false,\n    words: true,\n    lines: false\n  },\n}\n\n/**\n * @group Recognizer\n */\nexport type TMathMLFlavor = {\n  name: string\n}\n\n/**\n * @group Recognizer\n */\nexport type TMathMLExport = {\n  flavor: TMathMLFlavor\n}\n\n/**\n * @group Recognizer\n */\nexport type TExportConfiguration = {\n  \"image-resolution\"?: number\n  image?: TImageConfiguration\n  jiix: TJiixConfiguration\n  mathml?: TMathMLExport\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultExportConfiguration: TExportConfiguration = {\n  \"image-resolution\": 300,\n  jiix: DefaultJiixConfiguration\n}\n","\n/**\n * @group Recognizer\n */\nexport type TMarginConfiguration = {\n  bottom: number\n  left: number\n  right: number\n  top: number\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultMarginConfiguration: TMarginConfiguration = {\n  top: 20,\n  left: 10,\n  right: 10,\n  bottom: 10\n}\n","import { DefaultMarginConfiguration, TMarginConfiguration } from \"./MarginConfiguration\"\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TRoundingMode = \"half up\" | \"truncate\"\n\n/**\n * @group Recognizer\n */\nexport type TAngleUnit = \"deg\" | \"rad\"\n\n/**\n * @group Recognizer\n */\nexport type TSolverOptions = \"algebraic\" | \"numeric\"\n\n/**\n * @group Recognizer\n */\nexport type TSolverConfiguration = {\n  enable?: boolean\n  \"fractional-part-digits\"?: number\n  \"decimal-separator\"?: string\n  \"rounding-mode\"?: TRoundingMode\n  \"angle-unit\"?: TAngleUnit\n  options?: TSolverOptions\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultSolverConfiguration: TSolverConfiguration = {\n  enable: true,\n  \"fractional-part-digits\": 3,\n  \"decimal-separator\": \".\",\n  \"rounding-mode\": \"half up\",\n  \"angle-unit\": \"deg\"\n}\n\n/**\n * @group Recognizer\n */\nexport type TUndoRedoMode = \"stroke\" | \"session\"\n\n/**\n * @group Recognizer\n */\nexport type TMathUndoRedoConfiguration = {\n  mode: TUndoRedoMode\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultMathUndoRedoConfiguration: TMathUndoRedoConfiguration = {\n  mode: \"stroke\"\n}\n\n/**\n * @group Recognizer\n */\nexport type TMathConfiguration = {\n  mimeTypes: (\"application/x-latex\" | \"application/mathml+xml\" | \"application/vnd.myscript.jiix\")[]\n  solver?: TSolverConfiguration\n  margin: TMarginConfiguration\n  \"undo-redo\"?: TMathUndoRedoConfiguration\n  customGrammar?: string\n  customGrammarId?: string\n  customGrammarContent?: string\n  eraser?: TEraserConfiguration\n  \"session-time\"?: number\n  \"recognition-timeout\"?: number\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultMathConfiguration: TMathConfiguration = {\n  solver: DefaultSolverConfiguration,\n  margin: DefaultMarginConfiguration,\n  eraser: DefaultEraserConfiguration,\n  \"undo-redo\": DefaultMathUndoRedoConfiguration,\n  mimeTypes: [\"application/vnd.myscript.jiix\"],\n}\n","\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\nimport { TTextConfConfiguration } from \"./TextConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TRawContentConfiguration = {\n  text?: TTextConfConfiguration\n  \"session-time\"?: number\n  recognition: {\n    types: (\"text\" | \"shape\" | \"math\" | \"decoration\")[]\n  }\n  classification: {\n    types: (\"text\" | \"shape\" | \"math\" | \"decoration\" | \"drawing\")[]\n  }\n  eraser?: TEraserConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultRawContentConfiguration: TRawContentConfiguration = {\n  recognition: {\n    types: [ \"text\", \"math\", \"shape\", \"decoration\"]\n  },\n  classification: {\n    types: [ \"text\", \"math\", \"shape\", \"decoration\", \"drawing\"]\n  },\n  eraser: DefaultEraserConfiguration,\n}\n","\n/**\n * @group Recognizer\n */\nexport type TRecognitionRendererDebugConfiguration = {\n  \"draw-text-boxes\": boolean\n  \"draw-image-boxes\": boolean\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultDebugConfiguration: TRecognitionRendererDebugConfiguration = {\n  \"draw-text-boxes\": false,\n  \"draw-image-boxes\": false\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognitionRendererConfiguration = {\n  debug: TRecognitionRendererDebugConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultRecognitionRendererConfiguration: TRecognitionRendererConfiguration = {\n  debug: DefaultDebugConfiguration\n}\n","import { DefaultMarginConfiguration, TMarginConfiguration } from \"./MarginConfiguration\"\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TTextGuidesConfiguration = {\n  enable: boolean\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultTextGuidesConfiguration: TTextGuidesConfiguration = {\n  enable: true\n}\n\n/**\n * @group Recognizer\n */\nexport type TTextConfConfiguration = {\n  customResources?: string[]\n  customLexicon?: string[]\n  addLKText?: boolean\n}\n\n/**\n * @group Recognizer\n */\nexport type TTextConfiguration = {\n  text?: boolean\n  mimeTypes: (\"text/plain\" | \"application/vnd.myscript.jiix\")[]\n  margin: TMarginConfiguration\n  guides?: TTextGuidesConfiguration\n  configuration?: TTextConfConfiguration\n  eraser?: TEraserConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultTextConfiguration: TTextConfiguration = {\n  guides: DefaultTextGuidesConfiguration,\n  eraser: DefaultEraserConfiguration,\n  margin: DefaultMarginConfiguration,\n  mimeTypes: [\"application/vnd.myscript.jiix\"],\n}\n","import { DefaultMarginConfiguration, TMarginConfiguration } from \"./MarginConfiguration\"\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TTextGuidesConfigurationV2 = {\n  enable: boolean,\n  \"line-gap-mm\"?: number,\n  \"origin-y-mm\"?: number,\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultTextGuidesConfigurationV2: TTextGuidesConfigurationV2 = {\n  enable: true,\n  \"line-gap-mm\": 100,\n  \"origin-y-mm\": 0,\n}\n\n/**\n * @group Recognizer\n */\nexport type TTextRecognizerHTTPV2ConfConfiguration = {\n  customResources?: string[]\n  customLexicon?: string[]\n  addLKText?: boolean\n}\n\n/**\n * @group Recognizer\n */\nexport type TTextRecognizerHTTPV2Configuration = {\n  text?: boolean\n  mimeTypes: (\"text/plain\" | \"application/vnd.myscript.jiix\")[]\n  margin: TMarginConfiguration\n  guides: TTextGuidesConfigurationV2\n  configuration?: TTextRecognizerHTTPV2ConfConfiguration\n  eraser?: TEraserConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultTexConfigurationV2: TTextRecognizerHTTPV2Configuration = {\n  guides: DefaultTextGuidesConfigurationV2,\n  eraser: DefaultEraserConfiguration,\n  margin: DefaultMarginConfiguration,\n  mimeTypes: [\"application/vnd.myscript.jiix\"],\n}\n","\n/**\n * @group Recognizer\n */\nexport type TConvertionConfiguration = {\n    force?: {\n        \"on-stylesheet-change\": boolean\n    }\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultConvertionConfiguration: TConvertionConfiguration = {\n    force: {\n        \"on-stylesheet-change\": false\n    }\n}\n","\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TShapeConvertConfiguration = {\n  types?: (\"shape\")[]\n  \"match-text-size\"?: boolean\n}\n\nexport type TShapeBeautificationConfiguration = {\n    enable?: true\n}\n/**\n * @group Recognizer\n */\nexport type TShapeConfiguration = {\n  mimeTypes: (\"application/vnd.myscript.jiix\" | \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" | \"image/svg+xml\")[]\n  \"enable-sub-blocks\"?: boolean\n  convert?: TShapeConvertConfiguration\n  \"session-time\"?: number\n  eraser?: TEraserConfiguration\n  beautification?: TShapeBeautificationConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultShapeConvertConfiguration: TShapeConvertConfiguration = {\n  types: [\"shape\"],\n  \"match-text-size\": true\n}\n\nexport const DefaultShapeBeautificationConfiguration: TShapeBeautificationConfiguration = {\n    enable: true\n  }\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultShapeConfiguration: TShapeConfiguration = {\n  convert: DefaultShapeConvertConfiguration,\n  eraser: DefaultEraserConfiguration,\n  mimeTypes: [\"application/vnd.myscript.jiix\"],\n  beautification: DefaultShapeBeautificationConfiguration\n}\n","import { THistoryContext } from \"../history\"\nimport { TExport } from \"../model\"\nimport { TRecognizerWebSocketSSRMessageSVGPatch } from \"./RecognizerWebSocketSSRMessage\"\n\n/**\n * @group Recognizer\n * @summary\n * Lists all events that can be listened to on the editor or DOM element\n * @example\n * You can run code on \"RecognizerEventName\" raised by using\n * ```ts\n * recognizer.events.addEventListener(RecognizerEventName.CONTENT_CHANGED, (evt) => console.log(evt.detail))\n * ```\n */\nexport enum RecognizerEventName\n{\n  /**\n   * @summary event emitted at the start of connection initialization\n   */\n  START_INITIALIZATION = \"start-initialization\",\n  /**\n   * @summary event emitted after full recognizer initialization\n   */\n  END_INITIALIZATION = \"end-initialization\",\n  /**\n   * @summary event emitted after receiving an \"contentChanged\" message\n   */\n  CONTENT_CHANGED = \"content-changed\",\n  /**\n   * @summary event emitted after receiving an \"idle\" message\n   */\n  IDLE = \"idle\",\n  /**\n   * @summary event emitted after receiving an \"exported\" message\n   */\n  EXPORTED = \"exported\",\n  /**\n   * @summary event emitted when the recognizer encounters an error\n   */\n  ERROR = \"error\",\n  /**\n   * @remarks event emitted after connection closed\n   */\n  CONNECTION_CLOSE = \"connection-close\",\n  /**\n   * @summary\n   * event emitted after receiving an \"svgPatch\" message\n   * @remarks\n   * only usable in the case of websocket\n   */\n  SVG_PATCH = \"svg-patch\",\n  /**\n   * @summary event emitted session opened\n   */\n  SESSION_OPENED = \"session-opened\",\n\n}\n\n/**\n * @group Recognizer\n */\nexport class RecognizerEvent extends EventTarget\n{\n  protected abortController: AbortController\n\n  constructor()\n  {\n    super()\n    this.abortController = new AbortController()\n  }\n\n  removeAllListeners(): void\n  {\n    this.abortController.abort()\n    this.abortController = new AbortController()\n  }\n\n  protected emit(type: string, data?: unknown): void\n  {\n    const evt = new CustomEvent(type, Object.assign({ bubbles: true, composed: true }, data ? { detail: data } : undefined))\n    this.dispatchEvent(evt)\n  }\n\n  emitStartInitialization(): void\n  {\n    this.emit(RecognizerEventName.START_INITIALIZATION)\n  }\n  addStartInitialization(callback: () => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.START_INITIALIZATION,\n      () => callback(),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitEndtInitialization(): void\n  {\n    this.emit(RecognizerEventName.END_INITIALIZATION)\n  }\n  addEndInitialization(callback: () => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.END_INITIALIZATION,\n      () => callback(),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitSessionOpened(sessionId: string): void\n  {\n    this.emit(RecognizerEventName.SESSION_OPENED, sessionId)\n  }\n  addSessionOpenedListener(callback: (sessionId: string) => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.SESSION_OPENED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as string),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitContentChanged(undoRedoContext: THistoryContext): void\n  {\n    this.emit(RecognizerEventName.CONTENT_CHANGED, {\n      ...undoRedoContext,\n      canClear: !undoRedoContext.empty\n    })\n  }\n  addContentChangedListener(callback: (context: THistoryContext) => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.CONTENT_CHANGED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as THistoryContext),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitIdle(idle: boolean): void\n  {\n    this.emit(RecognizerEventName.IDLE, idle)\n  }\n  addIdleListener(callback: (idle: boolean) => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.IDLE,\n      (evt: unknown) => callback((evt as CustomEvent).detail as boolean),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitExported(exports: TExport): void\n  {\n    this.emit(RecognizerEventName.EXPORTED, exports)\n  }\n  addExportedListener(callback: (exports: TExport) => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.EXPORTED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as TExport),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitError(err: Error): void\n  {\n    this.emit(RecognizerEventName.ERROR, err)\n  }\n  addErrorListener(callback: (err: Error) => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.ERROR,\n      (evt: unknown) => callback((evt as CustomEvent).detail as Error),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitConnectionClose({ code, message }: { code: number, message?: string }): void\n  {\n    this.emit(RecognizerEventName.CONNECTION_CLOSE, { code, message })\n  }\n  addConnectionCloseListener(callback: ({ code, message }: { code: number, message?: string }) => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.CONNECTION_CLOSE,\n      (evt: unknown) => callback((evt as CustomEvent).detail as { code: number, message?: string }),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  /**\n   * @remarks only use in the case of websocket\n   */\n  emitSVGPatch(svgPatch: TRecognizerWebSocketSSRMessageSVGPatch): void\n  {\n    this.emit(RecognizerEventName.SVG_PATCH, svgPatch)\n  }\n  /**\n   * @remarks only usable in the case of websocket\n   */\n  addSVGPatchListener(callback:  (svgPatch: TRecognizerWebSocketSSRMessageSVGPatch) => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.SVG_PATCH,\n      (evt: unknown) => callback((evt as CustomEvent).detail as TRecognizerWebSocketSSRMessageSVGPatch),\n      { signal: this.abortController.signal }\n    )\n  }\n}\n","/**\n * @group Recognizer\n * @remarks List all errors generated by the backend with their descriptions\n */\nexport enum RecognizerError {\n  NO_ACTIVITY = \"Session closed due to no activity. Without a connection on your part, it will be permanently lost after an hour.\",\n  WRONG_CREDENTIALS = \"Application credentials are invalid. Please check or regenerate your application key and hmackey.\",\n  TOO_OLD = \"Session is too old. Max Session Duration Reached.\",\n  NO_SESSION_FOUND = \"No sessions found. Without activation for 1 hour, sessions are deleted from the server. To avoid losing your work, use the json export, then import it this will create a new session.\",\n  UNKNOW = \"An unknown error has occurred.\",\n  ABNORMAL_CLOSURE = \"MyScript recognition server is not reachable.\",\n  CANT_ESTABLISH = \"Unable to establish a connection to MyScript recognition server. Check the host and your connectivity.\",\n  GOING_AWAY = \"MyScript recognition server is going away, either because of a server failure or because the browser is navigating away from the page that opened the connection.\",\n  PROTOCOL_ERROR = \"MyScript recognition server terminated the connection due to a protocol error.\",\n  UNSUPPORTED_DATA = \"MyScript recognition server terminated the connection because the endpoint received data of a type it cannot accept. (For example, a text-only endpoint received binary data.)\",\n  INVALID_FRAME_PAYLOAD = \"MyScript recognition server terminated the connection because a message was received that contained inconsistent data (e.g., non-UTF-8 data within a text message).\",\n  POLICY_VIOLATION = \"MyScript recognition server terminated the connection because it received a message that violates its policy.\",\n  MESSAGE_TOO_BIG = \"MyScript recognition server terminated the connection because a data frame was received that is too large.\",\n  INTERNAL_ERROR = \"MyScript recognition server terminated the connection because it encountered an unexpected condition that prevented it from fulfilling the request.\",\n  SERVICE_RESTART = \"MyScript recognition server terminated the connection because it is restarting.\",\n  TRY_AGAIN = \"MyScript recognition server terminated the connection due to a temporary condition, e.g. it is overloaded and is casting off some of its clients.\",\n  BAD_GATEWAY = \"MyScript recognition server was acting as a gateway or proxy and received an invalid response from the upstream server.\",\n  TLS_HANDSHAKE = \"MyScript recognition server connection was closed due to a failure to perform a TLS handshake\",\n}\n","import { isVersionSuperiorOrEqual, mergeDeep, PartialDeep } from \"../utils\"\nimport {\n  DefaultDiagramConfiguration,\n  DefaultExportConfiguration,\n  DefaultMathConfiguration,\n  DefaultRawContentConfiguration,\n  DefaultRecognitionRendererConfiguration,\n  DefaultTextConfiguration,\n  TConvertionConfiguration,\n  TDiagramConfiguration,\n  TExportConfiguration,\n  TMathConfiguration,\n  TRawContentConfiguration,\n  TRecognitionRendererConfiguration,\n  TTextConfiguration\n} from \"./recognition\"\nimport { TRecognitionType } from \"./RecognitionConfiguration\"\nimport { DefaultServerHTTPConfiguration, TServerHTTPConfiguration } from \"./ServerConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TRecognitionHTTPV1Configuration = {\n  type: TRecognitionType\n  lang: string\n  math: TMathConfiguration\n  text: TTextConfiguration\n  diagram: TDiagramConfiguration\n  \"raw-content\": TRawContentConfiguration\n  renderer: TRecognitionRendererConfiguration\n  export: TExportConfiguration\n  convert?: TConvertionConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaulRecognitionHTTPV1ConfigurationConfiguration: TRecognitionHTTPV1Configuration = {\n  export: DefaultExportConfiguration,\n  math: DefaultMathConfiguration,\n  diagram: DefaultDiagramConfiguration,\n  \"raw-content\": DefaultRawContentConfiguration,\n  renderer: DefaultRecognitionRendererConfiguration,\n  text: DefaultTextConfiguration,\n  type: \"TEXT\",\n  lang: \"en_US\",\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerHTTPV1Configuration = {\n  server: TServerHTTPConfiguration\n  recognition: TRecognitionHTTPV1Configuration\n}\n\n/**\n * @group Recognizer\n */\nexport const DefaultRecognizerHTTPV1Configuration: TRecognizerHTTPV1Configuration =\n{\n  server: DefaultServerHTTPConfiguration,\n  recognition: DefaulRecognitionHTTPV1ConfigurationConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport class RecognizerHTTPV1Configuration implements TRecognizerHTTPV1Configuration {\n  recognition: TRecognitionHTTPV1Configuration\n  server: TServerHTTPConfiguration\n\n  constructor(configuration?: PartialDeep<TRecognizerHTTPV1Configuration>)\n  {\n    this.server = mergeDeep({}, DefaultRecognizerHTTPV1Configuration.server, configuration?.server)\n    this.recognition = mergeDeep({}, DefaultRecognizerHTTPV1Configuration.recognition, configuration?.recognition)\n\n    if (configuration?.recognition?.text?.mimeTypes) {\n      this.recognition.text.mimeTypes = configuration.recognition.text.mimeTypes as (\"text/plain\" | \"application/vnd.myscript.jiix\")[]\n    }\n    this.recognition.text.mimeTypes = [...new Set(this.recognition.text.mimeTypes)]\n\n    if (configuration?.recognition?.math?.mimeTypes) {\n      this.recognition.math.mimeTypes = configuration.recognition.math.mimeTypes as (\"application/vnd.myscript.jiix\" | \"application/x-latex\" | \"application/mathml+xml\")[]\n    }\n    this.recognition.math.mimeTypes = [...new Set(this.recognition.math.mimeTypes)]\n\n    if (configuration?.recognition?.diagram?.mimeTypes) {\n      this.recognition.diagram.mimeTypes = configuration.recognition.diagram.mimeTypes as (\"application/vnd.myscript.jiix\" | \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" | \"image/svg+xml\")[]\n    }\n    this.recognition.diagram.mimeTypes = [...new Set(this.recognition.diagram.mimeTypes)]\n\n    if (configuration?.recognition?.diagram?.convert?.types) {\n      this.recognition.diagram.convert!.types = configuration.recognition.diagram.convert.types as (\"text\" | \"shape\")[]\n    }\n\n    if (configuration?.recognition?.[\"raw-content\"]?.recognition?.types) {\n      this.recognition[\"raw-content\"].recognition!.types = configuration?.recognition?.[\"raw-content\"]?.recognition?.types as (\"text\" | \"shape\")[]\n    }\n    this.recognition[\"raw-content\"].recognition.types = [...new Set(this.recognition[\"raw-content\"].recognition.types.filter((type) => type !== \"decoration\"))]\n\n    if (configuration?.recognition?.[\"raw-content\"]?.classification?.types) {\n      this.recognition[\"raw-content\"].classification!.types = configuration?.recognition?.[\"raw-content\"]?.classification?.types as (\"text\" | \"shape\")[]\n    }\n\n    if (this.server.version) {\n      if (!isVersionSuperiorOrEqual(this.server.version, \"2.3.0\")) {\n        delete this.recognition.convert\n      }\n      if (!isVersionSuperiorOrEqual(this.server.version, \"3.2.0\")) {\n        delete this.recognition.export.jiix.text.lines\n      }\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { Model, TExport, TJIIXExport } from \"../model\"\nimport { TStrokeGroup, TStrokeGroupToSend } from \"../symbol\"\nimport { StyleHelper, TPenStyle } from \"../style\"\nimport { computeHmac, getApiInfos, isVersionSuperiorOrEqual, PartialDeep } from \"../utils\"\nimport { RecognizerError } from \"./RecognizerError\"\nimport { RecognizerHTTPV1Configuration, TRecognizerHTTPV1Configuration } from \"./RecognizerHTTPV1Configuration\"\nimport { TConverstionState } from \"./RecognitionConfiguration\"\nimport { TDiagramConfiguration, TExportConfiguration, TMathConfiguration, TRawContentConfiguration, TTextConfiguration } from \"./recognition\"\n\ntype ApiError = {\n  code?: string\n  message: string\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerHTTPV1PostConfiguration = {\n  lang: string,\n  diagram?: TDiagramConfiguration,\n  math?: TMathConfiguration,\n  \"raw-content\"?: TRawContentConfiguration,\n  text?: TTextConfiguration,\n  export: TExportConfiguration\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerHTTPV1PostData = {\n  configuration: TRecognizerHTTPV1PostConfiguration,\n  xDPI: number,\n  yDPI: number,\n  contentType: string,\n  conversionState?: TConverstionState\n  height: number,\n  width: number,\n  strokeGroups: TStrokeGroupToSend[]\n}\n\n/**\n * @deprecated Use {@link RecognizerHTTPV2} instead.\n * @group Recognizer\n */\nexport class RecognizerHTTPV1\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RECOGNIZER)\n\n  configuration: RecognizerHTTPV1Configuration\n\n  constructor(config: PartialDeep<TRecognizerHTTPV1Configuration>)\n  {\n    this.#logger.info(\"constructor\", { config })\n    this.configuration = new RecognizerHTTPV1Configuration(config)\n  }\n\n  get url()\n  {\n    return `${ this.configuration.server.scheme }://${ this.configuration.server.host }/api/v4.0/iink/batch`\n  }\n\n  get postConfig(): TRecognizerHTTPV1PostConfiguration\n  {\n    switch (this.configuration.recognition.type) {\n      case \"DIAGRAM\":\n        return {\n          lang: this.configuration.recognition.lang,\n          diagram: this.configuration.recognition.diagram,\n          export: this.configuration.recognition.export\n        }\n      case \"MATH\":\n        return {\n          lang: this.configuration.recognition.lang,\n          math: this.configuration.recognition.math,\n          export: this.configuration.recognition.export\n        }\n      case \"Raw Content\":\n        return {\n          lang: this.configuration.recognition.lang,\n          \"raw-content\": this.configuration.recognition[\"raw-content\"],\n          export: this.configuration.recognition.export\n        }\n      case \"TEXT\":\n        return {\n          lang: this.configuration.recognition.lang,\n          text: this.configuration.recognition.text,\n          export: this.configuration.recognition.export\n        }\n      default:\n        throw new Error(`get postConfig error Recognition type unkow \"${ this.configuration.recognition.type }\"`)\n        break\n    }\n  }\n\n  protected buildData(model: Model): TRecognizerHTTPV1PostData\n  {\n    this.#logger.info(\"buildData\", { model })\n    const isPenStyleEqual = (ps1: TPenStyle, ps2: TPenStyle) =>\n    {\n      return ps1 && ps2 && ps1[\"-myscript-pen-fill-color\"] === ps2[\"-myscript-pen-fill-color\"] &&\n        ps1[\"-myscript-pen-fill-style\"] === ps2[\"-myscript-pen-fill-style\"] &&\n        ps1[\"-myscript-pen-width\"] === ps2[\"-myscript-pen-width\"] &&\n        ps1.color === ps2.color &&\n        ps1.width === ps2.width\n    }\n\n    const strokeGroupByPenStyle: TStrokeGroup[] = []\n    model.symbols.forEach((s) =>\n    {\n      const groupIndex = strokeGroupByPenStyle.findIndex(sg => isPenStyleEqual(sg.penStyle, s.style))\n      if (groupIndex > -1) {\n        strokeGroupByPenStyle[groupIndex].strokes.push(s)\n      } else {\n        strokeGroupByPenStyle.push({\n          penStyle: s.style,\n          strokes: [s]\n        })\n      }\n    })\n\n    const strokeGroupsToSend: TStrokeGroupToSend[] = []\n    strokeGroupByPenStyle.forEach((group: TStrokeGroup) =>\n    {\n      const newPenStyle = JSON.stringify(group.penStyle) === \"{}\" ? undefined : StyleHelper.penStyleToCSS(group.penStyle as TPenStyle)\n      const newGroup = {\n        penStyle: newPenStyle,\n        strokes: group.strokes.map(s => s.formatToSend())\n      }\n      strokeGroupsToSend.push(newGroup)\n    })\n\n    const contentType: string = this.configuration.recognition.type === \"Raw Content\" ?\n      \"Raw Content\" :\n      this.configuration.recognition.type.charAt(0).toUpperCase() + this.configuration.recognition.type.slice(1).toLowerCase()\n\n    const data = {\n      configuration: this.postConfig,\n      xDPI: 96,\n      yDPI: 96,\n      contentType,\n      height: model.height,\n      width: model.width,\n      strokeGroups: strokeGroupsToSend\n    }\n    this.#logger.debug(\"buildData\", { data })\n    return data\n  }\n\n  protected async post(data: unknown, mimeType: string): Promise<unknown>\n  {\n    this.#logger.info(\"post\", { data, mimeType })\n    const headers = new Headers()\n    headers.append(\"Accept\", \"application/json,\" + mimeType)\n    headers.append(\"applicationKey\", this.configuration.server.applicationKey)\n    try {\n      const hmac = await computeHmac(JSON.stringify(data), this.configuration.server.applicationKey, this.configuration.server.hmacKey)\n      headers.append(\"hmac\", hmac)\n    } catch (error) {\n      this.#logger.error(\"post.computeHmac\", error)\n    }\n    headers.append(\"Content-Type\", \"application/json\")\n\n    if (!this.configuration.server.version) {\n      this.configuration.server.version = (await getApiInfos(this.configuration)).version\n    }\n    if (isVersionSuperiorOrEqual(this.configuration.server.version!, \"2.0.4\")) {\n      headers.append(\"myscript-client-name\", \"iink-ts\")\n      headers.append(\"myscript-client-version\", \"3.0.2\")\n    }\n    if (!isVersionSuperiorOrEqual(this.configuration.server.version!, \"2.3.0\")) {\n      delete this.configuration.recognition.convert\n    }\n    if (!isVersionSuperiorOrEqual(this.configuration.server.version!, \"3.2.0\")) {\n      delete this.configuration.recognition.export.jiix.text.lines\n    }\n\n    const reqInit: RequestInit = {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(data)\n    }\n    const request = new Request(this.url, reqInit)\n    const response: Response = await fetch(request)\n    if (response.ok) {\n      const contentType = response.headers.get(\"content-type\")\n      let result: unknown\n      switch (contentType) {\n        case \"application/vnd.openxmlformats-officedocument.presentationml.presentation\":\n        case \"image/png\":\n        case \"image/jpeg\":\n          result = await response.blob()\n          break\n        case \"application/json\":\n          result = await response.json()\n          break\n        case \"application/vnd.myscript.jiix\":\n          result = await response.clone().json().catch(async () => await response.text())\n          break\n        default:\n          result = await response.text()\n          break\n      }\n      this.#logger.debug(\"post\", { result })\n      return result\n    } else {\n      const err = await response.json() as ApiError\n      this.#logger.error(\"post\", { err })\n      throw err\n    }\n  }\n\n  protected async tryFetch(data: TRecognizerHTTPV1PostData, mimeType: string): Promise<TExport | never>\n  {\n    this.#logger.debug(\"tryFetch\", { data, mimeType })\n    return this.post(data, mimeType)\n      .then((res) =>\n      {\n        const exports: TExport = {}\n        exports[mimeType] = res as TJIIXExport | string | Blob\n        this.#logger.debug(\"tryFetch\", { exports })\n        return exports\n      })\n      .catch((err) =>\n      {\n        this.#logger.error(\"tryFetch\", { data, mimeType, err })\n        let message = err.message || RecognizerError.UNKNOW\n        if (!err.code) {\n          message = RecognizerError.CANT_ESTABLISH\n        } else if (err.code === \"access.not.granted\") {\n          message = RecognizerError.WRONG_CREDENTIALS\n        }\n        const error = new Error(message)\n        throw error\n      })\n  }\n\n  protected getMimeTypes(requestedMimeTypes?: string[]): string[]\n  {\n    this.#logger.info(\"getMimeTypes\", { requestedMimeTypes })\n    let mimeTypes: string[] = requestedMimeTypes || []\n    if (!mimeTypes.length) {\n      switch (this.configuration.recognition.type) {\n        case \"DIAGRAM\":\n          mimeTypes = this.configuration.recognition.diagram.mimeTypes\n          break\n        case \"MATH\":\n          mimeTypes = this.configuration.recognition.math.mimeTypes\n          break\n        case \"Raw Content\":\n          mimeTypes = [\"application/vnd.myscript.jiix\"]\n          break\n        case \"TEXT\":\n          mimeTypes = this.configuration.recognition.text.mimeTypes\n          break\n        default:\n          throw new Error(`Recognition type \"${ this.configuration.recognition.type }\" is unknown.\\n Possible types are:\\n -DIAGRAM\\n -MATH\\n -Raw Content\\n -TEXT`)\n          break\n      }\n    }\n    return mimeTypes\n  }\n\n  async convert(model: Model, conversionState?: TConverstionState, requestedMimeTypes?: string[]): Promise<Model>\n  {\n    this.#logger.info(\"convert\", { model, conversionState, requestedMimeTypes })\n    const myModel = model.clone()\n    const mimeTypes = this.getMimeTypes(requestedMimeTypes)\n    const dataToConcert = this.buildData(myModel)\n    dataToConcert.conversionState = conversionState\n    const promises = mimeTypes.map(mt => this.tryFetch(dataToConcert, mt))\n    const exports: TExport[] = await Promise.all(promises)\n    exports.forEach(e =>\n    {\n      myModel.mergeConvert(e)\n    })\n    this.#logger.debug(\"convert\", { model: myModel })\n    return myModel\n  }\n\n  async export(model: Model, requestedMimeTypes?: string[]): Promise<Model>\n  {\n    this.#logger.info(\"export\", { model, requestedMimeTypes })\n    const myModel = model.clone()\n    if (myModel.symbols.length === 0) {\n      return Promise.resolve(myModel)\n    }\n    const mimeTypes = this.getMimeTypes(requestedMimeTypes)\n    if (!mimeTypes.length) {\n      this.#logger.error(\"export\", { model, requestedMimeTypes, \"Export failed, no mimeTypes define in recognition configuration\": String })\n      return Promise.reject(new Error(\"Export failed, no mimeTypes define in recognition configuration\"))\n    }\n    const mimeTypesRequiringExport: string[] = mimeTypes.filter(m => !myModel.exports || !myModel.exports[m])\n    const data = this.buildData(model)\n    const exports: TExport[] = await Promise.all(mimeTypesRequiringExport.map(mimeType => this.tryFetch(data, mimeType)))\n    exports.forEach(e =>\n    {\n      myModel.mergeExport(e)\n    })\n    this.#logger.debug(\"export\", { model: myModel })\n    return myModel\n  }\n\n  async resize(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"resize\", { model })\n    return this.export(model)\n  }\n\n}\n","import { mergeDeep, isVersionSuperiorOrEqual, PartialDeep } from \"../utils\"\nimport {\n  DefaultShapeConfiguration,\n  DefaultExportConfiguration,\n  DefaultMathConfiguration,\n  DefaultRawContentConfiguration,\n  DefaultTexConfigurationV2,\n  TConvertionConfiguration,\n  TShapeConfiguration,\n  TExportConfiguration,\n  TMathConfiguration,\n  TRawContentConfiguration,\n  TTextRecognizerHTTPV2Configuration\n} from \"./recognition\"\nimport { TRecognitionV2Type } from \"./RecognitionConfiguration\"\nimport { DefaultServerHTTPConfiguration, TServerHTTPConfiguration } from \"./ServerConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerHTTPV2RecognitionConfiguration = {\n  type: TRecognitionV2Type\n  lang: string\n  math: TMathConfiguration\n  text: TTextRecognizerHTTPV2Configuration\n  shape: TShapeConfiguration\n  \"raw-content\": TRawContentConfiguration\n  export: TExportConfiguration\n  convert?: TConvertionConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultRecognizerHTTPV2RecognitionConfiguration: TRecognizerHTTPV2RecognitionConfiguration = {\n  export: DefaultExportConfiguration,\n  math: DefaultMathConfiguration,\n  shape: DefaultShapeConfiguration,\n  \"raw-content\": DefaultRawContentConfiguration,\n  text: DefaultTexConfigurationV2,\n  type: \"TEXT\",\n  lang: \"en_US\",\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerHTTPV2Configuration = {\n  server: TServerHTTPConfiguration\n  recognition: TRecognizerHTTPV2RecognitionConfiguration\n}\n\n/**\n * @group Recognizer\n */\nexport const DefaultRecognizerHTTPV2Configuration: TRecognizerHTTPV2Configuration =\n{\n  server: DefaultServerHTTPConfiguration,\n  recognition: DefaultRecognizerHTTPV2RecognitionConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport class RecognizerHTTPV2Configuration implements TRecognizerHTTPV2Configuration {\n  recognition: TRecognizerHTTPV2RecognitionConfiguration\n  server: TServerHTTPConfiguration\n\n  constructor(configuration?: PartialDeep<TRecognizerHTTPV2Configuration>)\n  {\n    this.server = mergeDeep({}, DefaultRecognizerHTTPV2Configuration.server, configuration?.server)\n    this.recognition = mergeDeep({}, DefaultRecognizerHTTPV2Configuration.recognition, configuration?.recognition)\n\n    if (configuration?.recognition?.text?.mimeTypes) {\n      this.recognition.text.mimeTypes = configuration.recognition.text.mimeTypes as (\"text/plain\" | \"application/vnd.myscript.jiix\")[]\n    }\n    this.recognition.text.mimeTypes = [...new Set(this.recognition.text.mimeTypes)]\n\n    if (configuration?.recognition?.math?.mimeTypes) {\n      this.recognition.math.mimeTypes = configuration.recognition.math.mimeTypes as (\"application/vnd.myscript.jiix\" | \"application/x-latex\" | \"application/mathml+xml\")[]\n    }\n    this.recognition.math.mimeTypes = [...new Set(this.recognition.math.mimeTypes)]\n\n    if (configuration?.recognition?.shape?.mimeTypes) {\n      this.recognition.shape.mimeTypes = configuration.recognition.shape.mimeTypes as (\"application/vnd.myscript.jiix\" | \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" | \"image/svg+xml\")[]\n    }\n    this.recognition.shape.mimeTypes = [...new Set(this.recognition.shape.mimeTypes)]\n\n    if (configuration?.recognition?.[\"raw-content\"]?.recognition?.types) {\n      this.recognition[\"raw-content\"].recognition!.types = configuration?.recognition?.[\"raw-content\"]?.recognition?.types as (\"text\" | \"shape\")[]\n    }\n    if (configuration?.recognition?.[\"raw-content\"]?.classification?.types) {\n      this.recognition[\"raw-content\"].classification!.types = configuration?.recognition?.[\"raw-content\"]?.classification?.types as (\"text\" | \"shape\")[]\n    }\n\n    if (this.server.version) {\n      if (!isVersionSuperiorOrEqual(this.server.version, \"2.3.0\")) {\n        delete this.recognition.convert\n      }\n      if (!isVersionSuperiorOrEqual(this.server.version, \"3.2.0\")) {\n        delete this.recognition.export.jiix.text.lines\n      }\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { TExportV2, TJIIXExport } from \"../model\"\nimport { TStroke, TStrokeToSend } from \"../symbol\"\nimport { computeHmac, getApiInfos, isVersionSuperiorOrEqual, PartialDeep } from \"../utils\"\nimport { RecognizerError } from \"./RecognizerError\"\nimport { RecognizerHTTPV2Configuration, TRecognizerHTTPV2Configuration } from \"./RecognizerHTTPV2Configuration\"\nimport { TDiagramConfiguration, TExportConfiguration, TMathConfiguration, TRawContentConfiguration, TTextConfiguration } from \"./recognition\"\n\ntype ApiError = {\n  code?: string\n  message: string\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerHTTPV2PostConfiguration = {\n  lang: string,\n  diagram?: TDiagramConfiguration,\n  math?: TMathConfiguration,\n  \"raw-content\"?: TRawContentConfiguration,\n  text?: TTextConfiguration,\n  export: TExportConfiguration\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerHTTPV2PostData = {\n  scaleX: number,\n  scaleY: number,\n  configuration: TRecognizerHTTPV2PostConfiguration,\n  contentType: string,\n  strokes: TStrokeToSend[]\n}\n\n/**\n * @group Recognizer\n */\nexport class RecognizerHTTPV2 {\n  #logger = LoggerManager.getLogger(LoggerCategory.RECOGNIZER)\n\n  configuration: RecognizerHTTPV2Configuration\n\n  constructor(config: PartialDeep<TRecognizerHTTPV2Configuration>) {\n    this.#logger.info(\"constructor\", { config })\n    this.configuration = new RecognizerHTTPV2Configuration(config)\n  }\n\n  get url() {\n    return `${this.configuration.server.scheme}://${this.configuration.server.host}/api/v4.0/iink/recognize`\n  }\n\n  get postConfig(): TRecognizerHTTPV2PostConfiguration {\n    switch (this.configuration.recognition.type) {\n      case \"SHAPE\":\n        return {\n          lang: this.configuration.recognition.lang,\n          diagram: this.configuration.recognition.shape,\n          export: this.configuration.recognition.export\n        }\n      case \"MATH\":\n        return {\n          lang: this.configuration.recognition.lang,\n          math: this.configuration.recognition.math,\n          export: this.configuration.recognition.export\n        }\n      case \"Raw Content\":\n        return {\n          lang: this.configuration.recognition.lang,\n          \"raw-content\": this.configuration.recognition[\"raw-content\"],\n          export: this.configuration.recognition.export\n        }\n      case \"TEXT\":\n        return {\n          lang: this.configuration.recognition.lang,\n          text: this.configuration.recognition.text,\n          export: this.configuration.recognition.export\n        }\n      default:\n        throw new Error(`get postConfig error Recognition type unkow \"${this.configuration.recognition.type}\"`)\n        break\n    }\n  }\n\n  protected formatStrokes(strokes: TStroke[]): TStrokeToSend[] {\n    return strokes.map(s => {\n      return {\n        id: s.id,\n        pointerType: s.pointerType,\n        p: s.pointers.map(p => p.p),\n        t: s.pointers.map(p => p.t),\n        x: s.pointers.map(p => p.x),\n        y: s.pointers.map(p => p.y)\n      }\n    })\n  }\n\n  protected buildData(strokes: TStroke[]): TRecognizerHTTPV2PostData {\n    this.#logger.info(\"buildData\", { strokes })\n\n    const contentType: string = this.configuration.recognition.type === \"Raw Content\" ?\n      \"Raw Content\" :\n      this.configuration.recognition.type.charAt(0).toUpperCase() + this.configuration.recognition.type.slice(1).toLowerCase()\n\n    const data = {\n      configuration: this.postConfig,\n      scaleX: 0.265,\n      scaleY: 0.265,\n      contentType,\n      strokes: this.formatStrokes(strokes)\n    }\n    this.#logger.debug(\"buildData\", { data })\n    return data\n  }\n\n  protected async post(data: unknown, mimeType: string): Promise<unknown> {\n    this.#logger.info(\"post\", { data, mimeType })\n    const headers = new Headers()\n    headers.append(\"Accept\", mimeType)\n    headers.append(\"applicationKey\", this.configuration.server.applicationKey)\n    try {\n      const hmac = await computeHmac(JSON.stringify(data), this.configuration.server.applicationKey, this.configuration.server.hmacKey)\n      headers.append(\"hmac\", hmac)\n    } catch (error) {\n      this.#logger.error(\"post.computeHmac\", error)\n    }\n    headers.append(\"Content-Type\", \"application/json\")\n\n    if (!this.configuration.server.version) {\n      this.configuration.server.version = (await getApiInfos(this.configuration)).version\n    }\n\n    if (this.configuration.server.version && isVersionSuperiorOrEqual(this.configuration.server.version, \"2.0.4\")) {\n      headers.append(\"myscript-client-name\", \"iink-ts\")\n      headers.append(\"myscript-client-version\", \"3.0.2\")\n    }\n\n    const reqInit: RequestInit = {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(data)\n    }\n    const request = new Request(this.url, reqInit)\n    const response: Response = await fetch(request)\n    if (response.ok) {\n      const contentType = response.headers.get(\"content-type\")\n      let result: unknown\n      switch (contentType) {\n        case \"application/vnd.openxmlformats-officedocument.presentationml.presentation\":\n        case \"image/png\":\n        case \"image/jpeg\":\n          result = await response.blob()\n          break\n        case \"application/json\":\n          result = await response.json()\n          break\n        case \"application/vnd.myscript.jiix\":\n          result = await response.clone().json().catch(async () => await response.text())\n          break\n        default:\n          result = await response.text()\n          break\n      }\n      this.#logger.debug(\"post\", { result })\n      return result\n    } else {\n      const err = await response.json() as ApiError\n      this.#logger.error(\"post\", { err })\n      throw err\n    }\n  }\n\n  protected async tryFetch(data: TRecognizerHTTPV2PostData, mimeType: string): Promise<TExportV2 | never> {\n    this.#logger.debug(\"tryFetch\", { data, mimeType })\n    return this.post(data, mimeType)\n      .then((res) => {\n        const exports: TExportV2 = {}\n        exports[mimeType] = res as TJIIXExport | string | Blob\n        this.#logger.debug(\"tryFetch\", { exports })\n        return exports\n      })\n      .catch((err) => {\n        this.#logger.error(\"tryFetch\", { data, mimeType, err })\n        let message = err.message || RecognizerError.UNKNOW\n        if (!err.code) {\n          message = RecognizerError.CANT_ESTABLISH\n        } else if (err.code === \"access.not.granted\") {\n          message = RecognizerError.WRONG_CREDENTIALS\n        }\n        const error = new Error(message)\n        throw error\n      })\n  }\n\n  protected getMimeTypes(requestedMimeTypes?: string[]): string[] {\n    this.#logger.info(\"getMimeTypes\", { requestedMimeTypes })\n    let mimeTypes: string[] = requestedMimeTypes || []\n    if (!mimeTypes.length) {\n      switch (this.configuration.recognition.type) {\n        case \"SHAPE\":\n          mimeTypes = this.configuration.recognition.shape.mimeTypes\n          break\n        case \"MATH\":\n          mimeTypes = this.configuration.recognition.math.mimeTypes\n          break\n        case \"Raw Content\":\n          mimeTypes = [\"application/vnd.myscript.jiix\"]\n          break\n        case \"TEXT\":\n          mimeTypes = this.configuration.recognition.text.mimeTypes\n          break\n        default:\n          throw new Error(`Recognition type \"${this.configuration.recognition.type}\" is unknown.\\n Possible types are:\\n -DIAGRAM\\n -MATH\\n -Raw Content\\n -TEXT\\n -SHAPE`)\n          break\n      }\n    }\n    return mimeTypes\n  }\n\n  async send(strokes: TStroke[], requestedMimeTypes?: string[]): Promise<TExportV2> {\n    this.#logger.info(\"send\", strokes)\n\n    const recognition: TExportV2 = {}\n    if (strokes.length === 0) {\n      return Promise.resolve(recognition)\n    }\n    const mimeTypes = requestedMimeTypes || this.getMimeTypes()\n\n    const data = this.buildData(strokes)\n    const exports: TExportV2[] = await Promise.all(mimeTypes.map(mimeType => this.tryFetch(data, mimeType)))\n      exports.forEach(e => {\n        Object.assign(recognition, e)\n      })\n\n    this.#logger.debug(\"send\", recognition)\n    return recognition\n  }\n}\n","import { TGesture } from \"../gesture\"\nimport { TExport } from \"../model\"\n\n/**\n * @group Recognizer\n */\nexport enum TRecognizerWebSocketMessageType\n{\n  HMAC_Challenge = \"hmacChallenge\",\n  Authenticated = \"authenticated\",\n  SessionDescription = \"sessionDescription\",\n  NewPart = \"newPart\",\n  PartChanged = \"partChanged\",\n  ContentChanged = \"contentChanged\",\n  Idle = \"idle\",\n  Pong = \"pong\",\n  Exported = \"exported\",\n  GestureDetected = \"gestureDetected\",\n  ContextlessGesture = \"contextlessGesture\",\n  Error = \"error\",\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessage<T = string> = {\n  type: T\n  [key: string]: unknown\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageAuthenticated = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.Authenticated>\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageHMACChallenge = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.HMAC_Challenge> & {\n  hmacChallenge: string\n  iinkSessionId: string\n}\n\n/**\n * @group Recognizer\n */\nexport type TInteractiveInkSessionDescriptionMessage = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.SessionDescription> & {\n  contentPartCount: number\n  iinkSessionId: string\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageNewPart = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.NewPart> & {\n  id: string\n  idx: null\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessagePartChange = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.PartChanged> & {\n  partIdx: number\n  partId: string\n  partCount: number\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageContentChange = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.ContentChanged> & {\n  partId: string\n  canUndo: boolean\n  canRedo: boolean\n  empty: boolean\n  undoStackIndex: number\n  possibleUndoCount: number\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageExport = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.Exported> & {\n  partId: string\n  exports: TExport\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageGesture = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.GestureDetected> & TGesture\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageContextlessGesture = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.ContextlessGesture> & {\n  gestureType: \"none\" | \"scratch\" | \"left-right\" | \"right-left\" | \"bottom-top\" | \"top-bottom\" | \"surround\",\n  strokeId: string\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessagePong = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.Pong>\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageIdle = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.Idle>\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageError = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.Error> & {\n  code?: number | string\n  message?: string\n  data?: {\n    code: number | string\n    message: string\n  }\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageReceived =\n  TRecognizerWebSocketMessageAuthenticated |\n  TRecognizerWebSocketMessageHMACChallenge |\n  TInteractiveInkSessionDescriptionMessage |\n  TRecognizerWebSocketMessageNewPart |\n  TRecognizerWebSocketMessagePartChange |\n  TRecognizerWebSocketMessageContentChange |\n  TRecognizerWebSocketMessageExport |\n  TRecognizerWebSocketMessageGesture |\n  TRecognizerWebSocketMessageContextlessGesture |\n  TRecognizerWebSocketMessagePong |\n  TRecognizerWebSocketMessageIdle |\n  TRecognizerWebSocketMessageError\n","import { mergeDeep, isVersionSuperiorOrEqual, PartialDeep } from \"../utils\"\nimport { TExportConfiguration, TTextConfConfiguration } from \"./recognition\"\nimport { DefaultServerWebsocketConfiguration, TServerWebsocketConfiguration } from \"./ServerConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TRecognitionWebSocketConfiguration = {\n  lang: string\n  export: TExportConfiguration\n  \"raw-content\": {\n    text?: TTextConfConfiguration\n    \"session-time\"?: number\n    recognition?: {\n      types: (\"text\" | \"shape\")[]\n    }\n    classification?: {\n      types: (\"text\" | \"shape\")[]\n    }\n    gestures?: (\"underline\" | \"scratch-out\" | \"join\" | \"insert\" | \"strike-through\" | \"surround\")[]\n  }\n  gesture: {\n    enable: boolean,\n    ignoreGestureStrokes: boolean\n  }\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultRecognitionWebSocketConfiguration: TRecognitionWebSocketConfiguration = {\n  export: {\n    jiix: {\n      \"bounding-box\": true,\n      \"full-stroke-ids\": true,\n      ids: true,\n      strokes: false,\n      text: {\n        chars: true,\n        words: true,\n        lines: true\n      }\n    }\n  },\n  \"raw-content\": {\n    recognition: {\n      types: [\"text\", \"shape\"]\n    },\n    classification: {\n      types: [\"text\", \"shape\"]\n    },\n    gestures: [\"underline\", \"scratch-out\", \"join\", \"insert\", \"strike-through\", \"surround\"]\n  },\n  lang: \"en_US\",\n  gesture: {\n    enable: true,\n    ignoreGestureStrokes: false,\n  }\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketConfiguration = {\n  server: TServerWebsocketConfiguration\n  recognition: TRecognitionWebSocketConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultRecognizerWebSocketConfiguration: TRecognizerWebSocketConfiguration =\n{\n  server: DefaultServerWebsocketConfiguration,\n  recognition: DefaultRecognitionWebSocketConfiguration\n}\n\n/**\n * @group Recognizer\n */\nexport class RecognizerWebSocketConfiguration implements TRecognizerWebSocketConfiguration\n{\n  server: TServerWebsocketConfiguration\n  recognition: TRecognitionWebSocketConfiguration\n\n  constructor(configuration?: PartialDeep<TRecognizerWebSocketConfiguration>)\n  {\n    this.server = mergeDeep({}, DefaultRecognizerWebSocketConfiguration.server, configuration?.server)\n\n    this.recognition = mergeDeep({}, DefaultRecognizerWebSocketConfiguration.recognition, configuration?.recognition)\n    this.recognition.export.jiix[\"full-stroke-ids\"] = true\n    this.recognition.export.jiix.ids = true\n    this.recognition.export.jiix.text.words = true\n    this.recognition.export.jiix.text.chars = true\n    this.recognition.export.jiix.text.lines = true\n    this.recognition.export.jiix[\"bounding-box\"] = true\n    if (configuration?.recognition?.[\"raw-content\"]?.recognition?.types) {\n      this.recognition[\"raw-content\"].recognition!.types = configuration.recognition[\"raw-content\"].recognition.types as (\"text\" | \"shape\")[]\n    }\n    if (configuration?.recognition?.[\"raw-content\"]?.classification?.types) {\n      this.recognition[\"raw-content\"].classification!.types = configuration.recognition[\"raw-content\"].classification.types as (\"text\" | \"shape\")[]\n    }\n    if (configuration?.recognition?.[\"raw-content\"]?.gestures) {\n      this.recognition[\"raw-content\"].gestures = configuration.recognition[\"raw-content\"].gestures as (\"underline\" | \"scratch-out\" | \"join\" | \"insert\" | \"strike-through\" | \"surround\")[]\n    }\n    if (this.server.version && !isVersionSuperiorOrEqual(this.server.version, \"3.2.0\")) {\n      delete this.recognition.export.jiix.text.lines\n      delete this.recognition[\"raw-content\"].classification\n    }\n  }\n}\n","import { TIIHistoryBackendChanges, THistoryContext } from \"../history\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { TExport, TJIIXExport } from \"../model\"\nimport { IIStroke } from \"../symbol\"\nimport { TMatrixTransform } from \"../transform\"\nimport { computeHmac, mergeDeep, DeferredPromise, PartialDeep, isVersionSuperiorOrEqual, getApiInfos } from \"../utils\"\nimport\n{\n  TRecognizerWebSocketMessage,\n  TRecognizerWebSocketMessageContentChange,\n  TRecognizerWebSocketMessageContextlessGesture,\n  TRecognizerWebSocketMessageError,\n  TRecognizerWebSocketMessageExport,\n  TRecognizerWebSocketMessageGesture,\n  TRecognizerWebSocketMessageHMACChallenge,\n  TRecognizerWebSocketMessageNewPart,\n  TRecognizerWebSocketMessagePartChange,\n  TRecognizerWebSocketMessageReceived,\n  TRecognizerWebSocketMessageType,\n  TInteractiveInkSessionDescriptionMessage\n} from \"./RecognizerWebSocketMessage\"\nimport { RecognizerError } from \"./RecognizerError\"\nimport PingWorker from \"web-worker:../worker/ping.worker.ts\"\nimport { RecognizerEvent } from \"./RecognizerEvent\"\nimport { RecognizerWebSocketConfiguration, TRecognizerWebSocketConfiguration } from \"./RecognizerWebSocketConfiguration\"\n\n/**\n * A websocket dialog have this sequence :\n * --------------- Client --------------------------------------------------------------- Server ---------------\n * { type: \"authenticate\" }                           ==================>\n *                                                    <==================       { type: \"hmacChallenge\" }\n * { type: \"hmac\" }                                   ==================>\n *                                                    <==================       { type: \"authenticated\" }\n * { type: \"initSession\" | \"restoreSession\" }         ==================>\n *                                                    <==================       { type: \"sessionDescription\" }\n * { type: \"newContentPart\" | \"openContentPart\" }     ==================>\n *                                                    <==================       { type: \"partChanged\" }\n * { type: \"addStrokes\" }                             ==================>\n *                                                    <==================       { type: \"contentChanged\" }\n * { type: \"transform\" }                              ==================>\n *                                                    <==================       { type: \"contentChanged\" }\n * { type: \"eraseStrokes\" }                           ==================>\n *                                                    <==================       { type: \"contentChanged\" }\n */\n\n/**\n * @group Recognizer\n */\nexport class RecognizerWebSocket\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RECOGNIZER)\n\n  protected socket!: WebSocket\n  protected pingWorker?: Worker\n  protected pingCount = 0\n  protected reconnectionCount = 0\n  protected sessionId?: string\n  protected currentPartId?: string\n  protected currentErrorCode?: string | number\n\n  protected addStrokeDeferred?: DeferredPromise<TRecognizerWebSocketMessageGesture | undefined>\n  protected contextlessGestureDeferred: Map<string, DeferredPromise<TRecognizerWebSocketMessageContextlessGesture>>\n  protected transformStrokeDeferred?: DeferredPromise<void>\n  protected eraseStrokeDeferred?: DeferredPromise<void>\n  protected replaceStrokeDeferred?: DeferredPromise<void>\n  protected exportDeferredMap: Map<string, DeferredPromise<TExport>>\n  protected closeDeferred?: DeferredPromise<void>\n  protected waitForIdleDeferred?: DeferredPromise<void>\n  protected undoDeferred?: DeferredPromise<void>\n  protected redoDeferred?: DeferredPromise<void>\n  protected clearDeferred?: DeferredPromise<void>\n\n  configuration: RecognizerWebSocketConfiguration\n  initialized: DeferredPromise<void>\n  url: string\n  event: RecognizerEvent\n\n  constructor(config: PartialDeep<TRecognizerWebSocketConfiguration>, event?: RecognizerEvent)\n  {\n    this.#logger.info(\"constructor\", { config })\n    this.configuration = new RecognizerWebSocketConfiguration(config)\n    const scheme = (this.configuration.server.scheme === \"https\") ? \"wss\" : \"ws\"\n    this.url = `${ scheme }://${ this.configuration.server.host }/api/v4.0/iink/offscreen?applicationKey=${ this.configuration.server.applicationKey }`\n\n    this.event = event || new RecognizerEvent()\n    this.initialized = new DeferredPromise<void>()\n    this.exportDeferredMap = new Map()\n    this.contextlessGestureDeferred = new Map()\n  }\n\n  get mimeTypes(): string[]\n  {\n    return [\"application/vnd.myscript.jiix\"]\n  }\n\n  async #send(message: TRecognizerWebSocketMessage): Promise<void>\n  {\n    if (!this.socket) {\n      throw new Error(\"Recognizer must be initilized\")\n    }\n    if (this.socket.readyState === this.socket.OPEN) {\n      this.socket.send(JSON.stringify(message))\n    }\n    else {\n      throw new Error(`Can not send message: ${message.type}, connection not ready, state: ${ this.socket.readyState }`)\n    }\n  }\n\n  protected rejectDeferredPending(error: Error | string): void\n  {\n    this.initialized.reject(error)\n    this.addStrokeDeferred?.reject(error)\n    this.transformStrokeDeferred?.reject(error)\n    this.eraseStrokeDeferred?.reject(error)\n    this.replaceStrokeDeferred?.reject(error)\n    this.undoDeferred?.reject(error)\n    this.redoDeferred?.reject(error)\n    this.clearDeferred?.reject(error)\n    Array.from(this.contextlessGestureDeferred.values())\n      .forEach(v =>\n      {\n        v.reject(error)\n      })\n    Array.from(this.exportDeferredMap.values())\n      .forEach(v =>\n      {\n        v.reject(error)\n      })\n    this.waitForIdleDeferred?.reject(error)\n  }\n\n  protected resetAllDeferred(): void\n  {\n    this.initialized = new DeferredPromise<void>()\n    this.addStrokeDeferred = undefined\n    this.contextlessGestureDeferred.clear()\n    this.transformStrokeDeferred = undefined\n    this.eraseStrokeDeferred = undefined\n    this.replaceStrokeDeferred = undefined\n    this.exportDeferredMap.clear()\n    this.waitForIdleDeferred = undefined\n    this.closeDeferred = undefined\n  }\n\n  protected clearSocketListener(): void\n  {\n    this.socket.removeEventListener(\"open\", this.openCallback.bind(this))\n    this.socket.removeEventListener(\"close\", this.closeCallback.bind(this))\n    this.socket.removeEventListener(\"message\", this.messageCallback.bind(this))\n  }\n\n  protected closeCallback(evt: CloseEvent): void\n  {\n    this.#logger.info(\"closeCallback\", { evt })\n    let message = evt.reason\n    if (!this.currentErrorCode) {\n      switch (evt.code) {\n        case 1000:\n          // Normal Closure\n          break\n        case 1001:\n          message = RecognizerError.GOING_AWAY\n          break\n        case 1002:\n          message = RecognizerError.PROTOCOL_ERROR\n          break\n        case 1003:\n          message = RecognizerError.UNSUPPORTED_DATA\n          break\n        case 1006:\n          message = RecognizerError.ABNORMAL_CLOSURE\n          break\n        case 1007:\n          message = RecognizerError.INVALID_FRAME_PAYLOAD\n          break\n        case 1008:\n          message = RecognizerError.POLICY_VIOLATION\n          break\n        case 1009:\n          message = RecognizerError.MESSAGE_TOO_BIG\n          break\n        case 1011:\n          message = RecognizerError.INTERNAL_ERROR\n          break\n        case 1012:\n          message = RecognizerError.SERVICE_RESTART\n          break\n        case 1013:\n          message = RecognizerError.TRY_AGAIN\n          break\n        case 1014:\n          message = RecognizerError.BAD_GATEWAY\n          break\n        case 1015:\n          message = RecognizerError.TLS_HANDSHAKE\n          break\n        default:\n          message = RecognizerError.CANT_ESTABLISH\n          break\n      }\n    }\n\n    this.clearSocketListener()\n    this.closeDeferred?.resolve()\n    if (!this.currentErrorCode && evt.code !== 1000) {\n      const error = new Error(message)\n      this.event.emitError(error)\n      this.rejectDeferredPending(message)\n    }\n    this.pingWorker?.terminate()\n    this.resetAllDeferred()\n  }\n\n  protected openCallback(): void\n  {\n    this.reconnectionCount = 0\n    this.#send({\n      type: \"authenticate\",\n      \"myscript-client-name\": \"iink-ts\",\n      \"myscript-client-version\": \"3.0.2\",\n    })\n  }\n\n  protected async manageHMACChallenge(hmacChallengeMessage: TRecognizerWebSocketMessageHMACChallenge): Promise<void>\n  {\n    this.#send({\n      type: \"hmac\",\n      hmac: await computeHmac(hmacChallengeMessage.hmacChallenge, this.configuration.server.applicationKey, this.configuration.server.hmacKey)\n    })\n  }\n\n  protected initPing(): void\n  {\n    this.pingWorker = new PingWorker()\n    this.pingWorker.postMessage({\n      pingDelay: this.configuration.server.websocket.pingDelay,\n    })\n    this.pingWorker.onmessage = () =>\n    {\n      if (this.socket.readyState <= 1) {\n        if (this.pingCount < this.configuration.server.websocket.maxPingLostCount) {\n          this.send({ type: \"ping\" })\n        }\n        else {\n          this.close(1000, \"MAXIMUM_PING_REACHED\")\n          this.pingWorker?.terminate()\n        }\n        this.pingCount++\n      }\n    }\n  }\n\n  protected manageAuthenticated(): void\n  {\n    if (!isVersionSuperiorOrEqual(this.configuration.server.version!, \"3.2.0\")) {\n      delete this.configuration.recognition.export.jiix.text.lines\n      delete this.configuration.recognition[\"raw-content\"].classification\n    }\n    const pixelTomm = 25.4 / 96\n    this.#send({\n      type: this.sessionId ? \"restoreSession\" : \"initSession\",\n      iinkSessionId: this.sessionId,\n      scaleX: pixelTomm,\n      scaleY: pixelTomm,\n      configuration: this.configuration.recognition\n    })\n  }\n\n  protected manageSessionDescriptionMessage(sessionDescriptionMessage: TInteractiveInkSessionDescriptionMessage): void\n  {\n    if (sessionDescriptionMessage.iinkSessionId) {\n      this.sessionId = sessionDescriptionMessage.iinkSessionId\n      this.event.emitSessionOpened(this.sessionId)\n    }\n    if (this.currentPartId) {\n      this.#send({ type: \"openContentPart\", id: this.currentPartId })\n    }\n    else {\n      this.#send({ type: \"newContentPart\", contentType: \"Raw Content\", mimeTypes: this.mimeTypes })\n    }\n  }\n\n  protected manageNewPartMessage(newPartMessage: TRecognizerWebSocketMessageNewPart): void\n  {\n    this.initialized.resolve()\n    this.currentPartId = newPartMessage.id\n  }\n\n  protected managePartChangeMessage(partChangeMessage: TRecognizerWebSocketMessagePartChange): void\n  {\n    this.initialized.resolve()\n    this.currentPartId = partChangeMessage.partId\n  }\n\n  protected manageContentChangedMessage(contentChangeMessage: TRecognizerWebSocketMessageContentChange): void\n  {\n    this.initialized.resolve()\n    this.replaceStrokeDeferred?.resolve()\n    this.transformStrokeDeferred?.resolve()\n    this.eraseStrokeDeferred?.resolve()\n    this.undoDeferred?.resolve()\n    this.redoDeferred?.resolve()\n    this.clearDeferred?.resolve()\n    this.event.emitContentChanged({\n      canRedo: contentChangeMessage.canRedo,\n      canUndo: contentChangeMessage.canRedo,\n    } as THistoryContext)\n  }\n\n  protected manageExportMessage(exportMessage: TRecognizerWebSocketMessageExport): void\n  {\n    if (exportMessage.exports[\"application/vnd.myscript.jiix\"]) {\n      exportMessage.exports[\"application/vnd.myscript.jiix\"] = JSON.parse(exportMessage.exports[\"application/vnd.myscript.jiix\"].toString()) as TJIIXExport\n    }\n\n    Object.keys(exportMessage.exports)\n      .forEach(key =>\n      {\n        if (this.exportDeferredMap.has(key)) {\n          this.exportDeferredMap.get(key)!.resolve(exportMessage.exports)\n        }\n      })\n    this.event.emitExported(exportMessage.exports)\n  }\n\n  protected manageWaitForIdle(): void\n  {\n    this.waitForIdleDeferred?.resolve()\n    this.event.emitIdle(true)\n  }\n\n  protected manageErrorMessage(errorMessage: TRecognizerWebSocketMessageError): void\n  {\n    this.currentErrorCode = errorMessage.data?.code || errorMessage.code\n    let message = errorMessage.data?.message || errorMessage.message || RecognizerError.UNKNOW\n\n    if (this.currentErrorCode === \"no.activity\") {\n      this.rejectDeferredPending(message)\n      this.event.emitConnectionClose({ code: 1000,  message: RecognizerError.NO_ACTIVITY })\n    }\n    else {\n      switch (this.currentErrorCode) {\n        case \"access.not.granted\":\n          message = RecognizerError.WRONG_CREDENTIALS\n          break\n        case \"session.too.old\":\n          message = RecognizerError.TOO_OLD\n          break\n        case \"restore.session.not.found\":\n          message = RecognizerError.NO_SESSION_FOUND\n          break\n      }\n      this.rejectDeferredPending(message)\n      this.event.emitError(new Error(message))\n    }\n  }\n\n  protected manageGestureDetected(gestureMessage: TRecognizerWebSocketMessageGesture): void\n  {\n    this.addStrokeDeferred?.resolve(gestureMessage)\n  }\n\n  protected manageContextlessGesture(gestureMessage: TRecognizerWebSocketMessageContextlessGesture): void\n  {\n    this.contextlessGestureDeferred.get(gestureMessage.strokeId)?.resolve(gestureMessage)\n  }\n\n  protected messageCallback(message: MessageEvent<string>): void\n  {\n    this.currentErrorCode = undefined\n    try {\n      const websocketMessage: TRecognizerWebSocketMessageReceived = JSON.parse(message.data)\n      if (websocketMessage.type === TRecognizerWebSocketMessageType.Pong) {\n        return\n      }\n      this.pingCount = 0\n      switch (websocketMessage.type) {\n        case TRecognizerWebSocketMessageType.HMAC_Challenge:\n          this.manageHMACChallenge(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.Authenticated:\n          this.manageAuthenticated()\n          break\n        case TRecognizerWebSocketMessageType.SessionDescription:\n          this.manageSessionDescriptionMessage(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.NewPart:\n          this.manageNewPartMessage(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.PartChanged:\n          this.managePartChangeMessage(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.ContentChanged:\n          this.manageContentChangedMessage(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.Exported:\n          this.manageExportMessage(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.GestureDetected:\n          this.manageGestureDetected(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.ContextlessGesture:\n          this.manageContextlessGesture(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.Error:\n          this.manageErrorMessage(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.Idle:\n          this.manageWaitForIdle()\n          break\n        default:\n          this.#logger.warn(\"messageCallback\", `Message type unknow: \"${ websocketMessage }\".`)\n          break\n      }\n    }\n    catch {\n      this.event.emitError(new Error(message.data))\n    }\n  }\n\n  async newSession(config: PartialDeep<TRecognizerWebSocketConfiguration>): Promise<void>\n  {\n    await this.close(1000, \"new-session\")\n    this.configuration = mergeDeep({}, this.configuration, config)\n    this.sessionId = undefined\n    this.currentPartId = undefined\n    await this.init()\n  }\n\n  async init(): Promise<void>\n  {\n    this.event.emitStartInitialization()\n    if (this.currentErrorCode === \"restore.session.not.found\") {\n      this.currentErrorCode = undefined\n      this.sessionId = undefined\n      this.currentPartId = undefined\n    }\n    this.initialized = new DeferredPromise<void>()\n    if (!this.configuration.server.version) {\n      this.configuration.server.version = (await getApiInfos(this.configuration)).version\n    }\n    this.socket = new WebSocket(this.url)\n    this.clearSocketListener()\n    this.socket.addEventListener(\"open\", this.openCallback.bind(this))\n    this.socket.addEventListener(\"close\", this.closeCallback.bind(this))\n    this.socket.addEventListener(\"message\", this.messageCallback.bind(this))\n    await this.initialized.promise\n    if (this.configuration.server.websocket.pingEnabled) {\n      this.pingCount = 0\n      this.initPing()\n    }\n    this.event.emitEndtInitialization()\n  }\n\n  async send(message: TRecognizerWebSocketMessage): Promise<void>\n  {\n    if (!this.socket) {\n      return Promise.reject(new Error(\"Recognizer must be initilized\"))\n    }\n\n    switch (this.socket.readyState) {\n      case this.socket.CONNECTING:\n      case this.socket.OPEN:\n        await this.initialized.promise\n        this.#send(message)\n        return Promise.resolve()\n      case this.socket.CLOSING:\n      case this.socket.CLOSED:\n        if (this.configuration.server.websocket.autoReconnect) {\n          this.reconnectionCount++\n          if (this.configuration.server.websocket.maxRetryCount > this.reconnectionCount) {\n            await this.init()\n            await this.waitForIdle()\n            return this.#send(message)\n          }\n          else {\n            return Promise.reject(new Error(\"Unable to send message. The maximum number of connection attempts has been reached.\"))\n          }\n        }\n        else {\n          return Promise.reject(new Error(\"Unable to send message. Connection closed and automatic reconnection disabled\"))\n        }\n        break\n    }\n  }\n\n  protected buildAddStrokesMessage(strokes: IIStroke[], processGestures = true): TRecognizerWebSocketMessage\n  {\n    return {\n      type: \"addStrokes\",\n      processGestures,\n      strokes: strokes.map(s => s.formatToSend())\n    }\n  }\n  async addStrokes(strokes: IIStroke[], processGestures = true): Promise<TRecognizerWebSocketMessageGesture | undefined>\n  {\n    this.addStrokeDeferred = new DeferredPromise<TRecognizerWebSocketMessageGesture | undefined>()\n    if (strokes.length === 0) {\n      this.addStrokeDeferred.resolve(undefined)\n      return this.addStrokeDeferred?.promise\n    }\n    await this.send(this.buildAddStrokesMessage(strokes, processGestures))\n    return this.addStrokeDeferred?.promise\n  }\n\n  protected buildReplaceStrokesMessage(oldStrokeIds: string[], newStrokes: IIStroke[]): TRecognizerWebSocketMessage\n  {\n    return {\n      type: \"replaceStrokes\",\n      oldStrokeIds,\n      newStrokes: newStrokes.map(s => s.formatToSend())\n    }\n  }\n  async replaceStrokes(oldStrokeIds: string[], newStrokes: IIStroke[]): Promise<void>\n  {\n    this.replaceStrokeDeferred = new DeferredPromise<void>()\n    if (oldStrokeIds.length === 0) {\n      this.replaceStrokeDeferred.resolve()\n      return this.replaceStrokeDeferred?.promise\n    }\n    await this.send(this.buildReplaceStrokesMessage(oldStrokeIds, newStrokes))\n    return this.replaceStrokeDeferred?.promise\n  }\n\n  protected buildTransformTranslateMessage(strokeIds: string[], tx: number, ty: number): TRecognizerWebSocketMessage\n  {\n    return {\n      type: \"transform\",\n      transformationType: \"TRANSLATE\",\n      strokeIds,\n      tx,\n      ty\n    }\n  }\n  async transformTranslate(strokeIds: string[], tx: number, ty: number): Promise<void>\n  {\n    this.transformStrokeDeferred = new DeferredPromise<void>()\n    if (strokeIds.length === 0) {\n      this.transformStrokeDeferred.resolve()\n      return this.transformStrokeDeferred?.promise\n    }\n    await this.send(this.buildTransformTranslateMessage(strokeIds, tx, ty))\n    return this.transformStrokeDeferred?.promise\n  }\n\n  protected buildTransformRotateMessage(strokeIds: string[], angle: number, x0: number = 0, y0: number = 0): TRecognizerWebSocketMessage\n  {\n    return {\n      type: \"transform\",\n      transformationType: \"ROTATE\",\n      strokeIds,\n      angle,\n      x0,\n      y0\n    }\n  }\n  async transformRotate(strokeIds: string[], angle: number, x0: number = 0, y0: number = 0): Promise<void>\n  {\n    this.transformStrokeDeferred = new DeferredPromise<void>()\n    if (strokeIds.length === 0) {\n      this.transformStrokeDeferred.resolve()\n      return this.transformStrokeDeferred?.promise\n    }\n    await this.send(this.buildTransformRotateMessage(strokeIds, angle, x0, y0))\n    return this.transformStrokeDeferred?.promise\n  }\n\n  protected buildTransformScaleMessage(strokeIds: string[], scaleX: number, scaleY: number, x0: number = 0, y0: number = 0): TRecognizerWebSocketMessage\n  {\n    return {\n      type: \"transform\",\n      transformationType: \"SCALE\",\n      strokeIds,\n      scaleX,\n      scaleY,\n      x0,\n      y0\n    }\n  }\n  async transformScale(strokeIds: string[], scaleX: number, scaleY: number, x0: number = 0, y0: number = 0): Promise<void>\n  {\n    this.transformStrokeDeferred = new DeferredPromise<void>()\n    if (strokeIds.length === 0) {\n      this.transformStrokeDeferred.resolve()\n      return this.transformStrokeDeferred?.promise\n    }\n    await this.send(this.buildTransformScaleMessage(strokeIds, scaleX, scaleY, x0, y0))\n    return this.transformStrokeDeferred?.promise\n  }\n\n  protected buildTransformMatrixMessage(strokeIds: string[], matrix: TMatrixTransform): TRecognizerWebSocketMessage\n  {\n    return {\n      type: \"transform\",\n      transformationType: \"MATRIX\",\n      strokeIds,\n      ...matrix\n    }\n  }\n  async transformMatrix(strokeIds: string[], matrix: TMatrixTransform): Promise<void>\n  {\n    this.transformStrokeDeferred = new DeferredPromise<void>()\n    if (strokeIds.length === 0) {\n      this.transformStrokeDeferred.resolve()\n      return this.transformStrokeDeferred?.promise\n    }\n    await this.send(this.buildTransformMatrixMessage(strokeIds, matrix))\n    return this.transformStrokeDeferred?.promise\n  }\n\n  protected buildEraseStrokesMessage(strokeIds: string[]): TRecognizerWebSocketMessage\n  {\n    return {\n      type: \"eraseStrokes\",\n      strokeIds\n    }\n  }\n  async eraseStrokes(strokeIds: string[]): Promise<void>\n  {\n    this.eraseStrokeDeferred = new DeferredPromise<void>()\n    if (strokeIds.length === 0) {\n      this.eraseStrokeDeferred.resolve()\n      return this.eraseStrokeDeferred?.promise\n    }\n    await this.send(this.buildEraseStrokesMessage(strokeIds))\n    return this.eraseStrokeDeferred?.promise\n  }\n\n  async recognizeGesture(stroke: IIStroke): Promise<TRecognizerWebSocketMessageContextlessGesture | undefined>\n  {\n    if (!stroke) {\n      return\n    }\n    this.contextlessGestureDeferred.set(stroke.id, new DeferredPromise<TRecognizerWebSocketMessageContextlessGesture>())\n    const pixelTomm = 25.4 / 96\n    await this.send({\n      type: \"contextlessGesture\",\n      scaleX: pixelTomm,\n      scaleY: pixelTomm,\n      stroke: stroke.formatToSend()\n    })\n    return this.contextlessGestureDeferred.get(stroke.id)!.promise\n  }\n\n  async waitForIdle(): Promise<void>\n  {\n    if (!this.waitForIdleDeferred || this.waitForIdleDeferred.isFullFilled) {\n      this.waitForIdleDeferred = new DeferredPromise<void>()\n    }\n    const message: TRecognizerWebSocketMessage = {\n      type: \"waitForIdle\",\n    }\n    await this.send(message)\n    return this.waitForIdleDeferred?.promise\n  }\n\n  protected buildUndoRedoChanges(changes: TIIHistoryBackendChanges): TRecognizerWebSocketMessage[]\n  {\n    const changesMessages: TRecognizerWebSocketMessage[] = []\n    if (changes.added?.length) {\n      changesMessages.push(this.buildAddStrokesMessage(changes.added, false))\n    }\n    if (changes.erased?.length) {\n      changesMessages.push(this.buildEraseStrokesMessage(changes.erased.map(s => s.id)))\n    }\n    if (changes.replaced?.newStrokes.length) {\n      changesMessages.push(this.buildReplaceStrokesMessage(changes.replaced.oldStrokes.map(s => s.id), changes.replaced.newStrokes))\n    }\n    if (changes.matrix?.strokes.length) {\n      changesMessages.push(this.buildTransformMatrixMessage(changes.matrix.strokes.map(s => s.id), changes.matrix.matrix))\n    }\n    if (changes.translate?.length) {\n      changes.translate.forEach(tr =>\n      {\n        changesMessages.push(this.buildTransformTranslateMessage(tr.strokes.map(s => s.id), tr.tx, tr.ty))\n      })\n    }\n    if (changes.rotate?.length) {\n      changes.rotate.forEach(tr =>\n      {\n        changesMessages.push(this.buildTransformRotateMessage(tr.strokes.map(s => s.id), tr.angle, tr.center.x, tr.center.y))\n      })\n    }\n    if (changes.scale?.length) {\n      changes.scale.forEach(tr =>\n      {\n        changesMessages.push(this.buildTransformScaleMessage(tr.strokes.map(s => s.id), tr.scaleX, tr.scaleY, tr.origin.x, tr.origin.y))\n      })\n    }\n    return changesMessages\n  }\n\n  async undo(actions: TIIHistoryBackendChanges): Promise<void>\n  {\n    const changes = this.buildUndoRedoChanges(actions)\n    if (changes.length === 0) {\n      return\n    }\n    this.undoDeferred = new DeferredPromise<void>()\n    const message: TRecognizerWebSocketMessage = {\n      type: \"undo\",\n      changes\n    }\n    await this.send(message)\n    return this.undoDeferred?.promise\n  }\n\n  async redo(actions: TIIHistoryBackendChanges): Promise<void>\n  {\n    const changes = this.buildUndoRedoChanges(actions)\n    if (changes.length === 0) {\n      return\n    }\n    this.redoDeferred = new DeferredPromise<void>()\n\n    const message: TRecognizerWebSocketMessage = {\n      type: \"redo\",\n      changes\n    }\n    await this.send(message)\n    return this.redoDeferred?.promise\n  }\n\n  async export(requestedMimeTypes?: string[]): Promise<TExport>\n  {\n    const mimeTypes: string[] = requestedMimeTypes || this.mimeTypes.slice()\n    await Promise.all(mimeTypes.map(mt => this.exportDeferredMap.get(mt)?.promise))\n    mimeTypes.forEach(mt =>\n    {\n      this.exportDeferredMap.set(mt, new DeferredPromise<TExport>())\n    })\n\n    const message: TRecognizerWebSocketMessage = {\n      type: \"export\",\n      partId: this.currentPartId,\n      mimeTypes\n    }\n    await this.send(message)\n    const exports = await Promise.all(mimeTypes.map(mt => this.exportDeferredMap.get(mt)!.promise))\n    return Object.assign({}, ...exports)\n  }\n\n  async clear(): Promise<void>\n  {\n    this.clearDeferred = new DeferredPromise<void>()\n    await this.send({\n      type: \"clear\"\n    })\n    return this.clearDeferred?.promise\n  }\n\n  async close(code: number, reason: string): Promise<void>\n  {\n    this.resetAllDeferred()\n    this.closeDeferred = new DeferredPromise<void>()\n    if (this.socket.readyState === this.socket.OPEN || this.socket.readyState === this.socket.CONNECTING) {\n      this.socket.close(code, reason)\n    }\n    else {\n      this.closeDeferred.resolve()\n    }\n    await this.closeDeferred.promise\n  }\n\n  async destroy(): Promise<void>\n  {\n    if (this.socket) {\n      await this.close(1000, \"Recognizer destroyed\")\n    }\n  }\n}\n","import { isVersionSuperiorOrEqual, mergeDeep, PartialDeep } from \"../utils\"\nimport {\n  DefaultExportConfiguration,\n  DefaultMathConfiguration,\n  DefaultRecognitionRendererConfiguration,\n  DefaultTextConfiguration,\n  TConvertionConfiguration,\n  TExportConfiguration,\n  TMathConfiguration,\n  TRecognitionRendererConfiguration,\n  TTextConfiguration\n} from \"./recognition\"\nimport { TRecognitionType } from \"./RecognitionConfiguration\"\nimport { DefaultServerWebsocketConfiguration, TServerWebsocketConfiguration } from \"./ServerConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketSSRRecognitionConfiguration = {\n  type: Omit<TRecognitionType, \"DIAGRAM\" | \"Raw Content\">\n  lang: string\n  math: TMathConfiguration\n  text: TTextConfiguration\n  renderer: TRecognitionRendererConfiguration\n  export: TExportConfiguration\n  convert?: TConvertionConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultRecognizerWebSocketSSRRecognitionConfiguration: TRecognizerWebSocketSSRRecognitionConfiguration = {\n  export: DefaultExportConfiguration,\n  math: DefaultMathConfiguration,\n  renderer: DefaultRecognitionRendererConfiguration,\n  text: DefaultTextConfiguration,\n  type: \"TEXT\",\n  lang: \"en_US\",\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketSSRConfiguration = {\n  server: TServerWebsocketConfiguration\n  recognition: TRecognizerWebSocketSSRRecognitionConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultRecognizerWebSocketSSRConfiguration: TRecognizerWebSocketSSRConfiguration =\n{\n  server: DefaultServerWebsocketConfiguration,\n  recognition: DefaultRecognizerWebSocketSSRRecognitionConfiguration\n}\n\n/**\n * @group Recognizer\n */\nexport class RecognizerWebSocketSSRConfiguration implements TRecognizerWebSocketSSRConfiguration\n{\n  recognition: TRecognizerWebSocketSSRRecognitionConfiguration\n  server: TServerWebsocketConfiguration\n\n  constructor(configuration?: PartialDeep<TRecognizerWebSocketSSRConfiguration>) {\n    this.server = mergeDeep({}, DefaultRecognizerWebSocketSSRConfiguration.server, configuration?.server)\n    this.recognition = mergeDeep({}, DefaultRecognizerWebSocketSSRConfiguration.recognition, configuration?.recognition)\n\n    if (configuration?.recognition?.text?.mimeTypes) {\n      this.recognition.text.mimeTypes = configuration.recognition.text.mimeTypes as (\"text/plain\" | \"application/vnd.myscript.jiix\")[]\n    }\n    this.recognition.text.mimeTypes = [...new Set(this.recognition.text.mimeTypes)]\n\n    if (configuration?.recognition?.math?.mimeTypes) {\n      this.recognition.math.mimeTypes = configuration.recognition.math.mimeTypes as (\"application/vnd.myscript.jiix\" | \"application/x-latex\" | \"application/mathml+xml\")[]\n    }\n    this.recognition.math.mimeTypes = [...new Set(this.recognition.math.mimeTypes)]\n\n    if (this.server.version) {\n      if (!isVersionSuperiorOrEqual(this.server.version, \"2.3.0\")) {\n        delete this.recognition.convert\n      }\n      if (!isVersionSuperiorOrEqual(this.server.version, \"3.2.0\")) {\n        delete this.recognition.export.jiix.text.lines\n      }\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { Model, TExport, TJIIXExport } from \"../model\"\nimport { Stroke } from \"../symbol\"\nimport { StyleHelper, TPenStyle, TTheme } from \"../style\"\nimport { THistoryContext } from \"../history\"\nimport { DeferredPromise, PartialDeep, computeHmac, getApiInfos, isVersionSuperiorOrEqual } from \"../utils\"\nimport\n{\n  TRecognizerWebSocketSSRMessage,\n  TRecognizerWebSocketSSRMessageContentChange,\n  TRecognizerWebSocketSSRMessageError,\n  TRecognizerWebSocketSSRMessageExport,\n  TRecognizerWebSocketSSRMessageHMACChallenge,\n  TRecognizerWebSocketSSRMessagePartChange,\n  TRecognizerWebSocketSSRMessageSVGPatch\n} from \"./RecognizerWebSocketSSRMessage\"\nimport { RecognizerError } from \"./RecognizerError\"\nimport { RecognizerEvent } from \"./RecognizerEvent\"\nimport { TRecognizerWebSocketSSRConfiguration, RecognizerWebSocketSSRConfiguration } from \"./RecognizerWebSocketSSRConfiguration\"\nimport { TConverstionState } from \"./RecognitionConfiguration\"\n\n/**\n * A websocket dialog have this sequence :\n * --------------------------- Client --------------------------------------------------- Server ----------------------------------\n * init: send newContentPackage or restoreIInkSession           ==================>\n *                                                              <==================       ack\n * answer ack:\n *  send the hmac (if enable)                                   ==================>\n *  send the configuration                                      ==================>\n *                                                              <==================       contentPackageDescription\n * answer contentPackageDescription:\n *  send newContentPart or openContentPart                      ==================>\n *                                                              <==================        partChanged\n *                                                              <==================        contentChanged\n *                                                              <==================        newPart\n *                                                              <==================        svgPatch\n *\n * setPenStyle (send the parameters)                            ==================>\n * setTheme (send the parameters)                               ==================>\n * setPenStyleClasses (send the parameters)                     ==================>\n *                                                              <==================        svgPatch\n * addStrokes (send the strokes ) ============>\n *                                                              <==================        update\n */\n\n/**\n * @group Recognizer\n */\nexport class RecognizerWebSocketSSR\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RECOGNIZER)\n\n  protected socket!: WebSocket\n  protected pingCount = 0\n  protected reconnectionCount = 0\n  protected viewSizeHeight!: number\n  protected viewSizeWidth!: number\n  protected sessionId?: string\n  // contentPartCount = 0\n  currentPartId?: string\n  protected currentErrorCode?: string | number\n\n  protected penStyle?: TPenStyle\n  protected penStyleClasses?: string\n  protected theme?: TTheme\n\n  protected connected?: DeferredPromise<void>\n  protected ackDeferred?: DeferredPromise<void>\n  protected addStrokeDeferred?: DeferredPromise<TExport>\n  protected exportDeferred?: DeferredPromise<TExport>\n  protected convertDeferred?: DeferredPromise<TExport>\n  protected importDeferred?: DeferredPromise<TExport>\n  protected resizeDeferred?: DeferredPromise<void>\n  protected undoDeferred?: DeferredPromise<TExport>\n  protected redoDeferred?: DeferredPromise<TExport>\n  protected clearDeferred?: DeferredPromise<TExport>\n  protected importPointEventsDeferred?: DeferredPromise<TExport>\n  protected waitForIdleDeferred?: DeferredPromise<void>\n\n  configuration: TRecognizerWebSocketSSRConfiguration\n  initialized: DeferredPromise<void>\n  url: string\n  event: RecognizerEvent\n\n  constructor(config?: PartialDeep<TRecognizerWebSocketSSRConfiguration>)\n  {\n    this.#logger.info(\"constructor\", { config })\n    this.configuration = new RecognizerWebSocketSSRConfiguration(config)\n    const scheme = (this.configuration.server.scheme === \"https\") ? \"wss\" : \"ws\"\n    this.url = `${ scheme }://${ this.configuration.server.host }/api/v4.0/iink/document?applicationKey=${ this.configuration.server.applicationKey }`\n    this.event = new RecognizerEvent()\n    this.initialized = new DeferredPromise<void>()\n  }\n\n  get mimeTypes(): string[]\n  {\n    switch (this.configuration.recognition.type.toLocaleLowerCase()) {\n      case \"text\":\n        return this.configuration.recognition.text.mimeTypes\n      case \"math\":\n        return this.configuration.recognition.math.mimeTypes\n      default:\n        throw new Error(`Unauthorized recognition type: \"${ this.configuration.recognition.type }\"`)\n    }\n  }\n\n  protected infinitePing(): void\n  {\n    this.pingCount++\n    if (this.configuration.server.websocket.maxPingLostCount < this.pingCount) {\n      this.socket.close(1000, \"MAXIMUM_PING_REACHED\")\n    } else if (this.socket.readyState <= 1) {\n      setTimeout(() =>\n      {\n        if (this.socket.readyState <= 1) {\n          this.socket.send(JSON.stringify({ type: \"ping\" }))\n          this.infinitePing()\n        }\n      }, this.configuration.server.websocket.pingDelay)\n    }\n  }\n\n  protected openCallback(): void\n  {\n    this.connected?.resolve()\n    const params: TRecognizerWebSocketSSRMessage = {\n      type: this.sessionId ? \"restoreIInkSession\" : \"newContentPackage\",\n      iinkSessionId: this.sessionId,\n      applicationKey: this.configuration.server.applicationKey,\n      xDpi: 96,\n      yDpi: 96,\n      viewSizeHeight: this.viewSizeHeight,\n      viewSizeWidth: this.viewSizeWidth\n    }\n    if (isVersionSuperiorOrEqual(this.configuration.server.version!, \"2.0.4\")) {\n      params[\"myscript-client-name\"] = \"iink-ts\"\n      params[\"myscript-client-version\"] = \"3.0.2\"\n    }\n    this.send(params)\n  }\n\n  protected rejectDeferredPending(error: Error): void\n  {\n    if (this.connected?.isPending) {\n      this.connected?.reject(error)\n    }\n    if (this.initialized.isPending) {\n      this.initialized.reject(error)\n    }\n    if (this.addStrokeDeferred?.isPending) {\n      this.addStrokeDeferred?.reject(error)\n    }\n    if (this.exportDeferred?.isPending) {\n      this.exportDeferred?.reject(error)\n    }\n    if (this.importPointEventsDeferred?.isPending) {\n      this.importPointEventsDeferred?.reject(error)\n    }\n    if (this.convertDeferred?.isPending) {\n      this.convertDeferred?.reject(error)\n    }\n    if (this.importDeferred?.isPending) {\n      this.importDeferred?.reject(error)\n    }\n    if (this.resizeDeferred?.isPending) {\n      this.resizeDeferred?.reject(error)\n    }\n    if (this.waitForIdleDeferred?.isPending) {\n      this.waitForIdleDeferred?.reject(error)\n    }\n    if (this.undoDeferred?.isPending) {\n      this.undoDeferred?.reject(error)\n    }\n    if (this.redoDeferred?.isPending) {\n      this.redoDeferred?.reject(error)\n    }\n    if (this.clearDeferred?.isPending) {\n      this.clearDeferred.reject(error)\n    }\n    if (this.waitForIdleDeferred?.isPending) {\n      this.waitForIdleDeferred.reject(error)\n    }\n  }\n\n  protected closeCallback(evt: CloseEvent): void\n  {\n    let message = \"\"\n    if (!this.currentErrorCode) {\n      switch (evt.code) {\n        case 1000:\n          // Normal Closure\n          break\n        case 1001:\n          message = RecognizerError.GOING_AWAY\n          break\n        case 1002:\n          message = RecognizerError.PROTOCOL_ERROR\n          break\n        case 1003:\n          message = RecognizerError.UNSUPPORTED_DATA\n          break\n        case 1006:\n          message = RecognizerError.ABNORMAL_CLOSURE\n          break\n        case 1007:\n          message = RecognizerError.INVALID_FRAME_PAYLOAD\n          break\n        case 1008:\n          message = RecognizerError.POLICY_VIOLATION\n          break\n        case 1009:\n          message = RecognizerError.MESSAGE_TOO_BIG\n          break\n        case 1011:\n          message = RecognizerError.INTERNAL_ERROR\n          break\n        case 1012:\n          message = RecognizerError.SERVICE_RESTART\n          break\n        case 1013:\n          message = RecognizerError.TRY_AGAIN\n          break\n        case 1014:\n          message = RecognizerError.BAD_GATEWAY\n          break\n        case 1015:\n          message = RecognizerError.TLS_HANDSHAKE\n          break\n        default:\n          this.#logger.warn(\"closeCallback\", \"unknow CloseEvent.code\", { evt })\n          message = RecognizerError.CANT_ESTABLISH\n          break\n      }\n    }\n\n    if (!this.currentErrorCode && evt.code !== 1000) {\n      const error = new Error(message || evt.reason)\n      this.rejectDeferredPending(error)\n      this.event.emitError(error)\n    }\n  }\n\n  protected async manageAckMessage(websocketMessage: TRecognizerWebSocketSSRMessage): Promise<void>\n  {\n    this.#logger.info(\"manageAckMessage\", { websocketMessage })\n    const hmacChallengeMessage = websocketMessage as TRecognizerWebSocketSSRMessageHMACChallenge\n    if (hmacChallengeMessage.hmacChallenge) {\n      this.send({\n        type: \"hmac\",\n        hmac: await computeHmac(hmacChallengeMessage.hmacChallenge, this.configuration.server.applicationKey, this.configuration.server.hmacKey)\n      })\n    }\n    if (hmacChallengeMessage.iinkSessionId) {\n      this.sessionId = hmacChallengeMessage.iinkSessionId\n    }\n    if (!isVersionSuperiorOrEqual(this.configuration.server.version!, \"2.3.0\")) {\n      delete this.configuration.recognition.convert\n    }\n    if (!isVersionSuperiorOrEqual(this.configuration.server.version!, \"3.2.0\")) {\n      delete this.configuration.recognition.export.jiix.text.lines\n    }\n    this.send({ ...this.configuration.recognition, type: \"configuration\" })\n    this.ackDeferred?.resolve()\n  }\n\n  protected async manageContentPackageDescriptionMessage(): Promise<void>\n  {\n    this.reconnectionCount = 0\n    await this.ackDeferred?.promise\n    this.#logger.info(\"manageContentPackageDescriptionMessage\")\n    if (this.currentPartId) {\n      this.send({ type: \"openContentPart\", id: this.currentPartId, mimeTypes: this.mimeTypes })\n    }\n    else {\n      this.send({ type: \"newContentPart\", contentType: this.configuration.recognition.type, mimeTypes: this.mimeTypes })\n    }\n  }\n\n  protected managePartChangeMessage(websocketMessage: TRecognizerWebSocketSSRMessage): void\n  {\n    this.#logger.info(\"managePartChangeMessage\", { websocketMessage })\n    const partChangeMessage = websocketMessage as TRecognizerWebSocketSSRMessagePartChange\n    this.currentPartId = partChangeMessage.partId\n    this.initialized.resolve()\n  }\n\n  protected manageExportMessage(websocketMessage: TRecognizerWebSocketSSRMessage): void\n  {\n    this.#logger.info(\"manageExportMessage\", { websocketMessage })\n    const exportMessage = websocketMessage as TRecognizerWebSocketSSRMessageExport\n    if (exportMessage.exports[\"application/vnd.myscript.jiix\"]) {\n      exportMessage.exports[\"application/vnd.myscript.jiix\"] = JSON.parse(exportMessage.exports[\"application/vnd.myscript.jiix\"].toString()) as TJIIXExport\n    }\n    this.initialized.resolve()\n    this.addStrokeDeferred?.resolve(exportMessage.exports)\n    this.exportDeferred?.resolve(exportMessage.exports)\n    this.convertDeferred?.resolve(exportMessage.exports)\n    this.importDeferred?.resolve(exportMessage.exports)\n    this.undoDeferred?.resolve(exportMessage.exports)\n    this.redoDeferred?.resolve(exportMessage.exports)\n    this.clearDeferred?.resolve(exportMessage.exports)\n    this.importPointEventsDeferred?.resolve(exportMessage.exports)\n    this.event.emitExported(exportMessage.exports)\n  }\n\n  protected async manageWaitForIdle(): Promise<void>\n  {\n    this.event.emitIdle(true)\n    this.waitForIdleDeferred?.resolve()\n  }\n\n  protected manageErrorMessage(websocketMessage: TRecognizerWebSocketSSRMessage): void\n  {\n    const err = websocketMessage as TRecognizerWebSocketSSRMessageError\n    this.currentErrorCode = err.data?.code || err.code\n    let message = err.data?.message || err.message || RecognizerError.UNKNOW\n\n    switch (this.currentErrorCode) {\n      case \"no.activity\":\n        message = RecognizerError.NO_ACTIVITY\n        break\n      case \"access.not.granted\":\n        message = RecognizerError.WRONG_CREDENTIALS\n        break\n      case \"session.too.old\":\n        message = RecognizerError.TOO_OLD\n        break\n    }\n    const error = new Error(message)\n    this.rejectDeferredPending(error)\n    this.event.emitError(error)\n  }\n\n  protected manageContentChangeMessage(websocketMessage: TRecognizerWebSocketSSRMessage): void\n  {\n    this.#logger.info(\"manageContentChangeMessage\", { websocketMessage })\n    const contentChangeMessage = websocketMessage as TRecognizerWebSocketSSRMessageContentChange\n    const context: THistoryContext = {\n      canRedo: contentChangeMessage.canRedo,\n      canUndo: contentChangeMessage.canUndo,\n      empty: contentChangeMessage.empty,\n      stackIndex: contentChangeMessage.undoStackIndex,\n      possibleUndoCount: contentChangeMessage.possibleUndoCount,\n    }\n    this.event.emitContentChanged(context)\n  }\n\n  protected manageSVGPatchMessage(websocketMessage: TRecognizerWebSocketSSRMessage): void\n  {\n    this.#logger.info(\"manageSVGPatchMessage\", { websocketMessage })\n    this.resizeDeferred?.resolve()\n    const svgPatchMessage = websocketMessage as TRecognizerWebSocketSSRMessageSVGPatch\n    this.event.emitSVGPatch(svgPatchMessage)\n  }\n\n  protected messageCallback(message: MessageEvent<string>): void\n  {\n    this.#logger.debug(\"messageCallback\", { message })\n    this.currentErrorCode = undefined\n    const websocketMessage: TRecognizerWebSocketSSRMessage = JSON.parse(message.data)\n    if (websocketMessage.type !== \"pong\") {\n      this.pingCount = 0\n      switch (websocketMessage.type) {\n        case \"ack\":\n          this.manageAckMessage(websocketMessage)\n          break\n        case \"contentPackageDescription\":\n          this.manageContentPackageDescriptionMessage()\n          break\n        case \"partChanged\":\n          this.managePartChangeMessage(websocketMessage)\n          break\n        case \"newPart\":\n          this.initialized.resolve()\n          break\n        case \"contentChanged\":\n          this.manageContentChangeMessage(websocketMessage)\n          break\n        case \"exported\":\n          this.manageExportMessage(websocketMessage)\n          break\n        case \"svgPatch\":\n          this.manageSVGPatchMessage(websocketMessage)\n          break\n        case \"error\":\n          this.manageErrorMessage(websocketMessage)\n          break\n        case \"idle\":\n          this.manageWaitForIdle()\n          break\n        default:\n          this.#logger.warn(\"messageCallback\", `Message type unknow: \"${ websocketMessage.type }\".`)\n      }\n    }\n  }\n\n  async init(height: number, width: number): Promise<void>\n  {\n    try {\n      this.event.emitStartInitialization()\n      this.#logger.info(\"init\", { height, width })\n      this.destroy()\n\n      if (!this.configuration.server.version) {\n        this.configuration.server.version = (await getApiInfos(this.configuration)).version\n      }\n      this.connected = new DeferredPromise<void>()\n      this.initialized = new DeferredPromise<void>()\n      this.ackDeferred = new DeferredPromise<void>()\n      this.viewSizeHeight = height\n      this.viewSizeWidth = width\n      this.pingCount = 0\n      this.socket = new WebSocket(this.url)\n\n      if (this.configuration.server.websocket.pingEnabled) {\n        this.infinitePing()\n      }\n\n      this.socket.addEventListener(\"open\", this.openCallback.bind(this))\n      this.socket.addEventListener(\"close\", this.closeCallback.bind(this))\n      this.socket.addEventListener(\"message\", this.messageCallback.bind(this))\n      this.event.emitEndtInitialization()\n      await this.connected.promise\n      await this.initialized.promise\n    } catch (err: unknown) {\n      this.rejectDeferredPending(err as Error)\n      return this.initialized.promise\n    }\n  }\n\n  async send(message: TRecognizerWebSocketSSRMessage): Promise<void>\n  {\n    if (!this.socket) {\n      return Promise.reject(new Error(\"Recognizer must be initilized\"))\n    }\n    await this.connected?.promise\n    if (this.socket.readyState === this.socket.OPEN) {\n      this.#logger.debug(\"send\", { message })\n      this.socket.send(JSON.stringify(message))\n      return Promise.resolve()\n    } else {\n      if (this.socket.readyState != this.socket.CONNECTING && this.configuration.server.websocket.autoReconnect) {\n        this.reconnectionCount++\n        if (this.configuration.server.websocket.maxRetryCount >= this.reconnectionCount) {\n          this.#logger.debug(\"send\", `try to reconnect number: ${ this.reconnectionCount }.`)\n          await this.init(this.viewSizeHeight, this.viewSizeWidth)\n          await this.setPenStyle(this.penStyle as TPenStyle)\n          await this.setPenStyleClasses(this.penStyleClasses as string)\n          await this.setTheme(this.theme as TTheme)\n          return this.send(message)\n        }\n        else {\n          return Promise.reject(new Error(\"Unable to send message. The maximum number of connection attempts has been reached.\"))\n        }\n      }\n    }\n  }\n\n  async addStrokes(strokes: Stroke[]): Promise<TExport>\n  {\n    this.#logger.info(\"addStrokes\", { strokes })\n    await this.initialized.promise\n    this.addStrokeDeferred = new DeferredPromise<TExport>()\n    if (strokes.length === 0) {\n      this.addStrokeDeferred.resolve({} as TExport)\n    }\n    else {\n      await this.send({\n        type: \"addStrokes\",\n        strokes: strokes.map(s => s.formatToSend())\n      })\n    }\n    return this.addStrokeDeferred?.promise\n  }\n\n  async setPenStyle(penStyle: TPenStyle): Promise<void>\n  {\n    this.#logger.info(\"setPenStyle\", { penStyle })\n    await this.initialized.promise\n    this.penStyle = penStyle\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"setPenStyle\",\n      style: StyleHelper.penStyleToCSS(penStyle)\n    }\n    return this.send(message)\n  }\n\n  async setPenStyleClasses(penStyleClasses: string): Promise<void>\n  {\n    await this.initialized.promise\n    this.penStyleClasses = penStyleClasses\n    this.#logger.info(\"setPenStyleClasses\", { penStyleClasses })\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"setPenStyleClasses\",\n      styleClasses: penStyleClasses\n    }\n    return this.send(message)\n  }\n\n  async setTheme(theme: TTheme): Promise<void>\n  {\n    this.#logger.info(\"setTheme\", { theme })\n    await this.initialized.promise\n    this.theme = theme\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"setTheme\",\n      theme: StyleHelper.themeToCSS(theme)\n    }\n    return this.send(message)\n  }\n\n  async export(model: Model, requestedMimeTypes?: string[]): Promise<Model>\n  {\n    this.#logger.info(\"export\", { model, requestedMimeTypes })\n    await this.initialized.promise\n    this.exportDeferred = new DeferredPromise<TExport>()\n    const localModel = model.clone()\n    let mimeTypes: string[] = requestedMimeTypes || []\n    if (!mimeTypes.length) {\n      switch (this.configuration.recognition.type) {\n        case \"MATH\":\n          mimeTypes = this.configuration.recognition.math.mimeTypes\n          break\n        case \"TEXT\":\n          mimeTypes = this.configuration.recognition.text.mimeTypes\n          break\n        default:\n          throw new Error(`Recognition type \"${ this.configuration.recognition.type }\" is unknown.\\n Possible types are:\\n -MATH\\n -TEXT`)\n      }\n    }\n\n    if (!mimeTypes.length) {\n      return Promise.reject(new Error(`Export failed, no mimeTypes define in recognition ${ this.configuration.recognition.type } configuration`))\n    }\n\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"export\",\n      partId: this.currentPartId,\n      mimeTypes\n    }\n    await this.send(message)\n    const exports: TExport = await this.exportDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeExport(exports)\n    this.#logger.debug(\"export\", { model: localModel })\n    return localModel\n  }\n\n  async import(model: Model, data: Blob, mimeType?: string): Promise<Model>\n  {\n    this.#logger.info(\"import\", { data, mimeType })\n    await this.initialized.promise\n    const localModel = model.clone()\n    const chunkSize = this.configuration.server.websocket.fileChunkSize\n    const importFileId = Math.random().toString(10).substring(2, 6)\n    this.importDeferred = new DeferredPromise<TExport>()\n    const readBlob = (blob: Blob): Promise<string | never> =>\n    {\n      const fileReader = new FileReader()\n      return new Promise((resolve, reject) =>\n      {\n        fileReader.onloadend = (ev) => resolve(ev.target?.result as string)\n        fileReader.onerror = () => reject()\n        fileReader.readAsText(blob)\n      })\n    }\n\n    const importFileMessage: TRecognizerWebSocketSSRMessage = {\n      type: \"importFile\",\n      importFileId,\n      mimeType\n    }\n    await this.send(importFileMessage)\n    for (let i = 0; i < data.size; i += chunkSize) {\n      const blobPart = data.slice(i, i + chunkSize, data.type)\n      const partFileString = await readBlob(blobPart)\n      const fileChuckMessage: TRecognizerWebSocketSSRMessage = {\n        type: \"fileChunk\",\n        importFileId,\n        data: partFileString,\n        lastChunk: i + chunkSize > data.size\n      }\n      await this.send(fileChuckMessage)\n    }\n    const exports = await this.importDeferred?.promise\n    this.importDeferred = undefined\n    localModel.mergeExport(exports)\n    return localModel\n  }\n\n  async resize(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"resize\", { model })\n    await this.initialized.promise\n    this.resizeDeferred = new DeferredPromise<void>()\n    const localModel = model.clone()\n    this.viewSizeHeight = localModel.height\n    this.viewSizeWidth = localModel.width\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"changeViewSize\",\n      height: this.viewSizeHeight,\n      width: this.viewSizeWidth,\n    }\n    await this.send(message)\n    await this.resizeDeferred?.promise\n    return localModel\n  }\n\n  async importPointEvents(strokes: Stroke[]): Promise<TExport>\n  {\n    this.#logger.info(\"importPointsEvents\", { strokes })\n    await this.initialized.promise\n    this.importPointEventsDeferred = new DeferredPromise<TExport>()\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"pointerEvents\",\n      events: strokes.map(s => s.formatToSend())\n    }\n    await this.send(message)\n    return this.importPointEventsDeferred?.promise\n  }\n\n  async convert(model: Model, conversionState?: TConverstionState): Promise<Model>\n  {\n    this.#logger.info(\"convert\", { model, conversionState })\n    await this.initialized.promise\n    this.convertDeferred = new DeferredPromise<TExport>()\n    const localModel = model.clone()\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"convert\",\n      conversionState\n    }\n    await this.send(message)\n    const myExportConverted: TExport = await this.convertDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeConvert(myExportConverted)\n    this.#logger.debug(\"convert\", { model: localModel })\n    return localModel\n  }\n\n  async waitForIdle(): Promise<void>\n  {\n    await this.initialized.promise\n    this.waitForIdleDeferred = new DeferredPromise<void>()\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"waitForIdle\",\n    }\n    await this.send(message)\n    return this.waitForIdleDeferred?.promise\n  }\n\n  async undo(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"undo\", { model })\n    await this.initialized.promise\n    const localModel = model.clone()\n    this.undoDeferred = new DeferredPromise<TExport>()\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"undo\",\n    }\n    await this.send(message)\n    const undoExports = await this.undoDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeExport(undoExports)\n    this.#logger.debug(\"undo\", { model: localModel })\n    this.undoDeferred = undefined\n    return localModel\n  }\n\n  async redo(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"redo\", { model })\n    await this.initialized.promise\n    const localModel = model.clone()\n    this.redoDeferred = new DeferredPromise<TExport>()\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"redo\",\n    }\n    await this.send(message)\n    const redoExports = await this.redoDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeExport(redoExports)\n    this.#logger.debug(\"redo\", { model: redoExports })\n    this.redoDeferred = undefined\n    return localModel\n  }\n\n  async clear(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"clear\", { model })\n    await this.initialized.promise\n    const localModel = model.clone()\n    localModel.modificationDate = Date.now()\n    this.clearDeferred = new DeferredPromise<TExport>()\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"clear\",\n    }\n    await this.send(message)\n    const clearExports = await this.clearDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeExport(clearExports)\n    this.clearDeferred = undefined\n    this.#logger.info(\"clear\", { model: localModel })\n    return localModel\n  }\n\n  close(code: number, reason: string): void\n  {\n    if (this.socket.readyState === this.socket.OPEN || this.socket.readyState === this.socket.CONNECTING) {\n      this.#logger.info(\"close\", { code, reason })\n      this.socket.removeEventListener(\"close\", this.closeCallback)\n      this.socket.removeEventListener(\"message\", this.messageCallback)\n      this.socket.removeEventListener(\"open\", this.openCallback)\n      this.socket.close(code, reason)\n    }\n  }\n\n  destroy(): void\n  {\n    this.#logger.info(\"destroy\")\n    this.connected = undefined\n    this.ackDeferred = undefined\n    this.addStrokeDeferred = undefined\n    this.exportDeferred = undefined\n    this.convertDeferred = undefined\n    this.importDeferred = undefined\n    this.importPointEventsDeferred = undefined\n    this.waitForIdleDeferred = undefined\n    this.resizeDeferred = undefined\n    this.undoDeferred = undefined\n    this.redoDeferred = undefined\n    this.clearDeferred = undefined\n    if (this.socket) {\n      this.socket.removeEventListener(\"close\", this.closeCallback)\n      this.socket.removeEventListener(\"message\", this.messageCallback)\n      this.socket.removeEventListener(\"open\", this.openCallback)\n      this.close(1000, \"Recognizer destroyed\")\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../../logger\"\nimport { TPoint, TCanvasShapeEllipseSymbol, TCanvasShapeLineSymbol, TCanvasShapeTableSymbol, TSymbol } from \"../../symbol\"\n\n/**\n * @group Renderer\n */\nexport class CanvasRendererShape\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RENDERER)\n\n  symbols = {\n    table: \"table\",\n    ellipse: \"ellipse\",\n    line: \"line\"\n  }\n\n  protected phi(angle: number): number\n  {\n    let returnedAngle = ((angle + Math.PI) % (Math.PI * 2)) - Math.PI\n    if (returnedAngle < -Math.PI) {\n      returnedAngle += Math.PI * 2\n    }\n    this.#logger.debug(\"phi\", { angle, returnedAngle })\n    return returnedAngle\n  }\n\n  protected drawEllipseArc(context2D: CanvasRenderingContext2D, shapeEllipse: TCanvasShapeEllipseSymbol): TPoint[]\n  {\n    this.#logger.debug(\"drawEllipseArc\", { context2D, shapeEllipse })\n    const { centerPoint, maxRadius, minRadius, orientation, startAngle, sweepAngle } = shapeEllipse\n    const angleStep = 0.02\n    const z1 = Math.cos(orientation) * maxRadius\n    const z2 = Math.cos(orientation) * minRadius\n    const z3 = Math.sin(orientation) * maxRadius\n    const z4 = Math.sin(orientation) * minRadius\n    const n = Math.floor(Math.abs(sweepAngle) / angleStep)\n    const boundariesPoints = []\n    context2D.save()\n    try {\n      context2D.beginPath()\n      for (let i = 0; i <= n; i++) {\n        const angle = startAngle + ((i / n) * sweepAngle)\n        const alpha = Math.atan2(Math.sin(angle) / minRadius, Math.cos(angle) / maxRadius)\n        const cosAlpha = Math.cos(alpha)\n        const sinAlpha = Math.sin(alpha)\n        const x = (centerPoint.x + (z1 * cosAlpha)) - (z4 * sinAlpha)\n        const y = (centerPoint.y + (z2 * sinAlpha)) + (z3 * cosAlpha)\n        if (i === 0) {\n          context2D.moveTo(x, y)\n        } else {\n          context2D.lineTo(x, y)\n        }\n        if (i === 0 || i === n) {\n          boundariesPoints.push({ x, y })\n        }\n      }\n      context2D.stroke()\n    } catch(error) {\n      this.#logger.error(\"drawEllipseArc\", { error })\n    } finally {\n      context2D.restore()\n    }\n    return boundariesPoints\n  }\n\n  protected drawLine(context2D: CanvasRenderingContext2D, p1: TPoint, p2: TPoint)\n  {\n    this.#logger.debug(\"drawLine\", { context2D, p1, p2 })\n    context2D.save()\n    try {\n      context2D.beginPath()\n      context2D.moveTo(p1.x, p1.y)\n      context2D.lineTo(p2.x, p2.y)\n      context2D.stroke()\n    } catch(error) {\n      this.#logger.error(\"drawLine\", { error })\n    } finally {\n      context2D.restore()\n    }\n  }\n\n  protected drawArrowHead(context2D: CanvasRenderingContext2D, headPoint: TPoint, angle: number, length: number)\n  {\n    this.#logger.debug(\"drawArrowHead\", { context2D, headPoint, angle, length })\n    const alpha = this.phi(angle + (Math.PI * (7 / 8)))\n    const beta = this.phi(angle - (Math.PI * (7 / 8)))\n    context2D.save()\n    try {\n      context2D.fillStyle = context2D.strokeStyle\n\n      context2D.moveTo(headPoint.x, headPoint.y)\n      context2D.beginPath()\n      context2D.lineTo(headPoint.x + (length * Math.cos(alpha)), headPoint.y + (length * Math.sin(alpha)))\n      context2D.lineTo(headPoint.x + (length * Math.cos(beta)), headPoint.y + (length * Math.sin(beta)))\n      context2D.lineTo(headPoint.x, headPoint.y)\n      context2D.fill()\n    } catch(error) {\n      this.#logger.error(\"drawArrowHead\", { error })\n    } finally {\n      context2D.restore()\n    }\n  }\n\n  protected drawShapeEllipse(context2D: CanvasRenderingContext2D, shapeEllipse: TCanvasShapeEllipseSymbol)\n  {\n    this.#logger.debug(\"drawShapeEllipse\", { context2D, shapeEllipse })\n    const points = this.drawEllipseArc(context2D, shapeEllipse)\n\n    if (shapeEllipse?.beginDecoration === \"ARROW_HEAD\") {\n      this.drawArrowHead(context2D, points[0], shapeEllipse.beginTangentAngle, 12.0)\n    }\n    if (shapeEllipse?.endDecoration === \"ARROW_HEAD\") {\n      this.drawArrowHead(context2D, points[1], shapeEllipse.endTangentAngle, 12.0)\n    }\n  }\n\n  protected drawShapeLine(context2D: CanvasRenderingContext2D, shapeLine: TCanvasShapeLineSymbol)\n  {\n    this.#logger.debug(\"drawShapeLine\", { context2D, shapeLine })\n    this.drawLine(context2D, shapeLine.firstPoint, shapeLine.lastPoint)\n    if (shapeLine.beginDecoration === \"ARROW_HEAD\") {\n      this.drawArrowHead(context2D, shapeLine.firstPoint, shapeLine.beginTangentAngle, 12.0)\n    }\n    if (shapeLine.endDecoration === \"ARROW_HEAD\") {\n      this.drawArrowHead(context2D, shapeLine.lastPoint, shapeLine.endTangentAngle, 12.0)\n    }\n  }\n\n  draw(context2D: CanvasRenderingContext2D, symbol: TSymbol)\n  {\n    this.#logger.info(\"draw\", { context2D, symbol })\n    context2D.save()\n    context2D.lineWidth = symbol.style.width as number\n    context2D.strokeStyle = symbol.style.color as string\n\n    switch (symbol.type) {\n      case this.symbols.table: {\n        const tableSymbols = symbol as TCanvasShapeTableSymbol\n        tableSymbols.lines.forEach(line => this.drawLine(context2D, line.p1, line.p2))\n        break\n      }\n      case this.symbols.ellipse: {\n        this.drawShapeEllipse(context2D, symbol as TCanvasShapeEllipseSymbol)\n        break\n      }\n      case this.symbols.line: {\n        this.drawShapeLine(context2D, symbol as TCanvasShapeLineSymbol)\n        break\n      }\n      default:\n        this.#logger.warn(\"draw\", `${ symbol.type } not implemented`)\n        break\n    }\n  }\n\n}\n","import { LoggerCategory, LoggerManager } from \"../../logger\"\nimport { Stroke, TPointer } from \"../../symbol\"\nimport { computeAngleAxeRadian, computeLinksPointers, computeMiddlePointer } from \"../../utils\"\n\n/**\n * @group Renderer\n */\nexport class CanvasRendererStroke\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RENDERER)\n\n  protected renderArc(context2d: CanvasRenderingContext2D, center: TPointer, radius: number): void\n  {\n    this.#logger.debug(\"renderArc\", { context2d, center, radius })\n    context2d.arc(center.x, center.y, radius, 0, Math.PI * 2, true)\n  }\n\n  protected renderLine(context2d: CanvasRenderingContext2D, begin: TPointer, end: TPointer, width: number): void\n  {\n    this.#logger.debug(\"renderLine\", { context2d, begin, end, width })\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, end), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(begin, end), width)\n\n    context2d.moveTo(linkPoints1[0].x, linkPoints1[0].y)\n    context2d.lineTo(linkPoints2[0].x, linkPoints2[0].y)\n    context2d.lineTo(linkPoints2[1].x, linkPoints2[1].y)\n    context2d.lineTo(linkPoints1[1].x, linkPoints1[1].y)\n  }\n\n  protected renderFinal(context2d: CanvasRenderingContext2D, begin: TPointer, end: TPointer, width: number): void\n  {\n    this.#logger.debug(\"renderFinal\", { context2d, begin, end, width })\n    const ARCSPLIT = 6\n    const angle = computeAngleAxeRadian(begin, end)\n    const linkPoints = computeLinksPointers(end, angle, width)\n    context2d.moveTo(linkPoints[0].x, linkPoints[0].y)\n    for (let i = 1; i <= ARCSPLIT; i++) {\n      const newAngle = angle - ((i * Math.PI) / ARCSPLIT)\n      context2d.lineTo(end.x - ((end.p * width) * Math.sin(newAngle)), end.y + (end.p * width * Math.cos(newAngle)))\n    }\n  }\n\n  protected renderQuadratic(context2d: CanvasRenderingContext2D, begin: TPointer, end: TPointer, ctrl: TPointer, width: number): void\n  {\n    this.#logger.debug(\"renderQuadratic\", { context2d, begin, end, ctrl, width })\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, ctrl), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(ctrl, end), width)\n    const linkPoints3 = computeLinksPointers(ctrl, computeAngleAxeRadian(begin, end), width)\n\n    context2d.moveTo(linkPoints1[0].x, linkPoints1[0].y)\n    context2d.quadraticCurveTo(linkPoints3[0].x, linkPoints3[0].y, linkPoints2[0].x, linkPoints2[0].y)\n    context2d.lineTo(linkPoints2[1].x, linkPoints2[1].y)\n    context2d.quadraticCurveTo(linkPoints3[1].x, linkPoints3[1].y, linkPoints1[1].x, linkPoints1[1].y)\n  }\n\n  draw(context2d: CanvasRenderingContext2D, stroke: Stroke): void\n  {\n    this.#logger.info(\"draw\", { context2d, stroke })\n    const NUMBER_POINTS = stroke.pointers.length\n    const NUMBER_QUADRATICS = NUMBER_POINTS - 2\n    const width = (stroke.style.width as number) > 0 ? (stroke.style.width as number) : context2d.lineWidth\n    const color = (stroke.style.color as string) ? (stroke.style.color as string) : context2d.strokeStyle\n    const firstPoint = stroke.pointers[0] as TPointer\n\n    context2d.save()\n    try {\n      context2d.beginPath()\n      if (NUMBER_POINTS < 3) {\n        this.renderArc(context2d, firstPoint, width * 0.6)\n      } else {\n        this.renderArc(context2d, firstPoint, width * firstPoint.p)\n        const secondPoint: TPointer = computeMiddlePointer(firstPoint, stroke.pointers[1])\n        this.renderLine(context2d, firstPoint, secondPoint, width)\n\n        // Possibility to try this (the start looks better when the ink is large)\n        // var first = computeMiddlePoint(stroke.pointers[0], stroke.pointers[1]);\n        // context2d.arc(first.x, first.y, width * first.p, 0, Math.PI * 2, true);\n\n        for (let i = 0; i < NUMBER_QUADRATICS; i++) {\n          const begin: TPointer = computeMiddlePointer(stroke.pointers[i], stroke.pointers[i + 1])\n          const end: TPointer = computeMiddlePointer(stroke.pointers[i + 1], stroke.pointers[i + 2])\n          const ctrl: TPointer = stroke.pointers[i + 1]\n          this.renderQuadratic(context2d, begin, end, ctrl, width)\n        }\n        const beginLine: TPointer = computeMiddlePointer(stroke.pointers[NUMBER_POINTS - 2], stroke.pointers[NUMBER_POINTS - 1])\n        const endLine: TPointer = stroke.pointers[NUMBER_POINTS - 1]\n        this.renderLine(context2d, beginLine, endLine, width)\n\n        const beginFinal: TPointer = stroke.pointers[NUMBER_POINTS - 2]\n        const endFinal: TPointer = stroke.pointers[NUMBER_POINTS - 1]\n        this.renderFinal(context2d, beginFinal, endFinal, width)\n      }\n      context2d.closePath()\n      if (color !== undefined) {\n        context2d.fillStyle = color\n        context2d.fill()\n      }\n      context2d.save()\n    }\n    catch (error) {\n      this.#logger.error(\"draw\", { error })\n    }\n    finally {\n      context2d.restore()\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../../logger\"\nimport { TSymbol, TCanvasTextSymbol, TCanvasTextUnderlineSymbol, TCanvasUnderLineSymbol, TPoint } from \"../../symbol\"\n\n/**\n * @group Renderer\n */\nexport class CanvasRendererText\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RENDERER)\n\n  symbols = {\n    char: \"char\",\n    string: \"string\",\n    textLine: \"textLine\"\n  }\n\n  protected drawUnderline(context2D: CanvasRenderingContext2D, textUnderline: TCanvasTextUnderlineSymbol, underline: TCanvasUnderLineSymbol)\n  {\n    this.#logger.debug(\"#drawUnderline\", { context2D, textUnderline, underline })\n    context2D.save()\n    try {\n      const delta = textUnderline.data.width / textUnderline.label.length\n      const p1: TPoint = {\n        x: textUnderline.data.topLeftPoint.x + (underline.data.firstCharacter * delta),\n        y: textUnderline.data.topLeftPoint.y + textUnderline.data.height\n      }\n      const p2: TPoint = {\n        x: textUnderline.data.topLeftPoint.x + (underline.data.lastCharacter * delta),\n        y: textUnderline.data.topLeftPoint.y + textUnderline.data.height\n      }\n      context2D.beginPath()\n      context2D.moveTo(p1.x, p1.y)\n      context2D.lineTo(p2.x, p2.y)\n      context2D.stroke()\n    } catch(error) {\n      this.#logger.error(\"#drawUnderline\", { error })\n    } finally {\n      context2D.restore()\n    }\n  }\n\n  protected drawText(context2D: CanvasRenderingContext2D, text: TCanvasTextSymbol)\n  {\n    this.#logger.debug(\"#drawText\", { context2D, text })\n    context2D.save()\n    try {\n      context2D.font = `${ text.data.textHeight }px serif`\n      context2D.textAlign = (text.data.justificationType === \"CENTER\") ? \"center\" : \"left\"\n      context2D.textBaseline = \"bottom\"\n      context2D.fillStyle = context2D.strokeStyle\n      context2D.fillText(text.label, text.data.topLeftPoint.x, (text.data.topLeftPoint.y + text.data.height))\n    } catch(error) {\n      this.#logger.error(\"#drawText\", { error })\n    } finally {\n      context2D.restore()\n    }\n  }\n\n  protected drawTextLine(context2D: CanvasRenderingContext2D, textUnderline: TCanvasTextUnderlineSymbol)\n  {\n    this.#logger.debug(\"#drawTextLine\", { context2D, textUnderline })\n    this.drawText(context2D, textUnderline)\n    textUnderline.underlineList.forEach((underline) =>\n    {\n      this.drawUnderline(context2D, textUnderline, underline)\n    })\n  }\n\n  draw(context2D: CanvasRenderingContext2D, symbol: TSymbol)\n  {\n    this.#logger.info(\"draw\", { context2D, symbol })\n    context2D.lineWidth = (symbol.style.width as number)\n    context2D.strokeStyle = (symbol.style.color as string)\n    switch (symbol.type) {\n      case this.symbols.char:\n      case this.symbols.string:\n        this.drawText(context2D, symbol as TCanvasTextSymbol)\n        break\n      case this.symbols.textLine:\n        this.drawTextLine(context2D, symbol as TCanvasTextUnderlineSymbol)\n        break\n      default:\n        this.#logger.warn(\"draw\", `${symbol.type} not implemented`)\n        break\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../../logger\"\nimport { Model } from \"../../model\"\nimport { Stroke, TSymbol } from \"../../symbol\"\nimport { TRendererConfiguration } from \"../RendererConfiguration\"\nimport { CanvasRendererShape } from \"./CanvasRendererShape\"\nimport { CanvasRendererStroke } from \"./CanvasRendererStroke\"\nimport { CanvasRendererText } from \"./CanvasRendererText\"\n\n/**\n * @group Renderer\n */\nexport class CanvasRenderer\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RENDERER)\n  configuration: Omit<TRendererConfiguration, \"guides\">\n  strokeRenderer: CanvasRendererStroke\n  shapeRenderer: CanvasRendererShape\n  textRenderer: CanvasRendererText\n  context!: {\n    parent: HTMLElement\n    renderingCanvas: HTMLCanvasElement\n    renderingCanvasContext: CanvasRenderingContext2D\n    capturingCanvas: HTMLCanvasElement\n    capturingCanvasContext: CanvasRenderingContext2D\n  }\n\n  constructor(config: Omit<TRendererConfiguration, \"guides\">)\n  {\n    this.#logger.info(\"constructor\", { config })\n    this.configuration = config\n    this.strokeRenderer = new CanvasRendererStroke()\n    this.shapeRenderer = new CanvasRendererShape()\n    this.textRenderer = new CanvasRendererText()\n  }\n\n  protected createCanvas(type: string): HTMLCanvasElement\n  {\n    this.#logger.debug(\"createCanvas\", { type })\n    const canvas: HTMLCanvasElement = document.createElement(\"canvas\")\n    canvas.id = type\n    canvas.classList.add(type)\n    canvas.classList.add(\"ms-canvas\")\n    return canvas\n  }\n\n  protected resizeContent(): void\n  {\n    const pixelRatio: number = window.devicePixelRatio\n    const elements: HTMLCanvasElement[] = [this.context.renderingCanvas, this.context.capturingCanvas]\n    elements.forEach((canvas) =>\n    {\n      const domElement = canvas.parentNode as HTMLElement\n      const width = Math.max(this.configuration.minWidth, domElement.clientWidth)\n      const height = Math.max(this.configuration.minHeight, domElement.clientHeight)\n      canvas.width = width * pixelRatio\n      canvas.height = height * pixelRatio\n      canvas.getContext(\"2d\")?.scale(pixelRatio, pixelRatio)\n      canvas.style.width = `${ width }px`\n      canvas.style.height = `${ height }px`\n    })\n  }\n\n  protected drawSymbol(context2D: CanvasRenderingContext2D, symbol: TSymbol)\n  {\n    this.#logger.debug(\"drawSymbol\", { symbol })\n    if (symbol.type === \"stroke\") {\n      const stroke = symbol as Stroke\n      if (stroke.pointerType !== \"eraser\") {\n        this.strokeRenderer.draw(context2D, stroke)\n      }\n    } else if (Object.keys(this.textRenderer.symbols).includes(symbol.type)) {\n      this.textRenderer.draw(context2D, symbol)\n    } else if (Object.keys(this.shapeRenderer.symbols).includes(symbol.type)) {\n      this.shapeRenderer.draw(context2D, symbol)\n    } else {\n      this.#logger.warn(\"drawSymbol\", `symbol type unknow: ${symbol.type}`)\n    }\n  }\n\n  init(element: HTMLElement, guide?: { x?: number, y?: number } ): void\n  {\n    this.#logger.info(\"init\", { element })\n    const renderingCanvas: HTMLCanvasElement = this.createCanvas(\"ms-rendering-canvas\")\n    renderingCanvas.setAttribute(\"data-layer\", \"MODEL\")\n    if (guide) {\n      renderingCanvas.style.backgroundSize = `${guide.x || 1}px ${guide.y || 1}px`\n    }\n    element.appendChild(renderingCanvas)\n\n    const capturingCanvas: HTMLCanvasElement = this.createCanvas(\"ms-capture-canvas\")\n    capturingCanvas.setAttribute(\"data-layer\", \"CAPTURE\")\n    element.appendChild(capturingCanvas)\n\n    this.context = {\n      parent: element,\n      renderingCanvas,\n      renderingCanvasContext: renderingCanvas.getContext(\"2d\") as CanvasRenderingContext2D,\n      capturingCanvas,\n      capturingCanvasContext: capturingCanvas.getContext(\"2d\") as CanvasRenderingContext2D\n    }\n\n    this.resizeContent()\n  }\n\n  drawModel(model: Model): void\n  {\n    this.#logger.info(\"drawModel\", { model })\n    this.context.renderingCanvasContext?.clearRect(0, 0, this.context.renderingCanvas.width, this.context.renderingCanvas.height)\n    model.symbols.forEach(symbol => this.drawSymbol(this.context.renderingCanvasContext, symbol))\n    this.context.capturingCanvasContext.clearRect(0, 0, this.context.capturingCanvas.width, this.context.capturingCanvas.height)\n  }\n\n  drawPendingStroke(stroke: Stroke | undefined): void\n  {\n    this.#logger.info(\"drawPendingStroke\", { stroke })\n    this.context.capturingCanvasContext.clearRect(0, 0, this.context.capturingCanvas.width, this.context.capturingCanvas.height)\n    if (stroke && stroke?.pointerType !== \"eraser\") {\n      this.strokeRenderer.draw(this.context.capturingCanvasContext, stroke)\n    }\n  }\n\n  resize(model: Model): void\n  {\n    this.#logger.info(\"resize\", { model })\n    this.resizeContent()\n    this.drawModel(model)\n  }\n\n  destroy(): void\n  {\n    this.#logger.info(\"destroy\")\n    if (this.context.parent) {\n      this.context.parent.innerHTML = \"\"\n    }\n  }\n}\n","\n/**\n * @group Renderer\n */\nexport const SVGRendererConst =\n{\n  arrowHeadStartMarker: \"arrow-head-start\",\n  arrowHeadEndMaker: \"arrow-head-end\",\n  selectionFilterId: \"selection-filter\",\n  removalFilterId: \"removal-filter\",\n  crossMarker: \"cross-marker\",\n  noSelection: \"pointer-events: none; -webkit-touch-callout: none; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;\",\n}","import { TBox, TPoint } from \"../../symbol\"\n\nconst XMLNS = \"http://www.w3.org/2000/svg\"\n/**\n * @group Renderer\n */\nexport class SVGBuilder\n{\n  static createLayer(boundingBox: TBox, attrs: { [key: string]: string } = {}): SVGSVGElement\n  {\n    const svgEl = document.createElementNS(XMLNS, \"svg\")\n    svgEl.setAttribute(\"width\", `${ boundingBox.width }px`)\n    svgEl.setAttribute(\"height\", `${ boundingBox.height }px`)\n    svgEl.setAttribute(\"viewBox\", `${boundingBox.x}, ${boundingBox.y}, ${boundingBox. width }, ${ boundingBox.height }`)\n    Object.keys(attrs).forEach(k =>\n    {\n      svgEl.setAttribute(k, attrs[k])\n    })\n    return svgEl\n  }\n\n  static createFilter(id: string, attrs: { [key: string]: string } = {}): SVGFilterElement\n  {\n    const filter = document.createElementNS(XMLNS, \"filter\")\n    filter.id = id\n    Object.keys(attrs).forEach(k =>\n    {\n      filter.setAttribute(k, attrs[k])\n    })\n    return filter\n  }\n\n  static createDefs(): SVGDefsElement\n  {\n    return document.createElementNS(XMLNS, \"defs\")\n  }\n\n  static createMarker(id: string, attrs: { [key: string]: string } = {}): SVGMarkerElement\n  {\n    const marker = document.createElementNS(XMLNS, \"marker\")\n    marker.setAttribute(\"id\", id)\n    Object.keys(attrs).forEach(k =>\n    {\n      marker.setAttribute(k, attrs[k])\n    })\n    return marker\n  }\n\n  static createComponentTransfert(): SVGFEComponentTransferElement\n  {\n    return document.createElementNS(XMLNS, \"feComponentTransfer\")\n  }\n\n  static createDropShadow({ dx = 0, dy = 0, deviation = 0, color = \"#3e68ff\", opacity = 1 }): SVGFEDropShadowElement\n  {\n    const shadow = document.createElementNS(XMLNS, \"feDropShadow\")\n    shadow.setAttribute(\"dx\", dx.toString())\n    shadow.setAttribute(\"dy\", dy.toString())\n    shadow.setAttribute(\"stdDeviation\", deviation.toString())\n    shadow.setAttribute(\"flood-color\", color)\n    shadow.setAttribute(\"flood-opacity\", opacity.toString())\n    return shadow\n  }\n\n  static createTransfertFunctionTable(type: \"feFuncA\" | \"feFuncB\" | \"feFuncG\" | \"feFuncR\", values: string): SVGFEFuncAElement\n  {\n    const feFunc = document.createElementNS(XMLNS, type)\n    feFunc.setAttribute(\"type\", \"table\")\n    feFunc.setAttribute(\"tableValues\", values)\n    return feFunc\n  }\n\n  static createGroup(attrs: { [key: string]: string } = {}): SVGGElement\n  {\n    const groupEl = document.createElementNS(XMLNS, \"g\")\n    Object.keys(attrs).forEach(k =>\n    {\n      groupEl.setAttribute(k, attrs[k])\n    })\n    return groupEl\n  }\n\n  static createLine(p1: TPoint, p2: TPoint, attrs: { [key: string]: string } = {}): SVGLineElement\n  {\n    const lineEl = document.createElementNS(XMLNS, \"line\")\n    lineEl.setAttribute(\"x1\", p1.x.toString())\n    lineEl.setAttribute(\"y1\", p1.y.toString())\n    lineEl.setAttribute(\"x2\", p2.x.toString())\n    lineEl.setAttribute(\"y2\", p2.y.toString())\n    Object.keys(attrs).forEach(k =>\n    {\n      lineEl.setAttribute(k, attrs[k])\n    })\n    return lineEl\n  }\n\n  static createCircle(p: TPoint, r: number, attrs: { [key: string]: string } = {}): SVGCircleElement\n  {\n    const circleEl = document.createElementNS(XMLNS, \"circle\")\n    circleEl.setAttribute(\"cx\", p.x.toString())\n    circleEl.setAttribute(\"cy\", p.y.toString())\n    circleEl.setAttribute(\"r\", r.toString())\n    Object.keys(attrs).forEach(k =>\n    {\n      circleEl.setAttribute(k, attrs[k])\n    })\n    return circleEl\n  }\n\n  static createPath(attrs: { [key: string]: string } = {}): SVGPathElement\n  {\n    const pathEl = document.createElementNS(XMLNS, \"path\")\n    Object.keys(attrs).forEach(k =>\n    {\n      pathEl.setAttribute(k, attrs[k])\n    })\n    return pathEl\n  }\n\n  static createPolygon(points: number[], attrs: { [key: string]: string } = {}): SVGPolylineElement\n  {\n    const polygonEl = document.createElementNS(XMLNS, \"polygon\")\n    polygonEl.setAttribute(\"points\", points.join(\",\"))\n    Object.keys(attrs).forEach(k =>\n    {\n      polygonEl.setAttribute(k, attrs[k])\n    })\n    return polygonEl\n  }\n\n  static createRect(box: TBox, attrs: { [key: string]: string } = {}): SVGRectElement\n  {\n    const rectEl = document.createElementNS(XMLNS, \"rect\")\n    rectEl.setAttribute(\"x\", box.x.toString())\n    rectEl.setAttribute(\"y\", box.y.toString())\n    rectEl.setAttribute(\"width\", box.width.toString())\n    rectEl.setAttribute(\"height\", box.height.toString())\n    Object.keys(attrs).forEach(k =>\n    {\n      rectEl.setAttribute(k, attrs[k])\n    })\n    return rectEl\n  }\n\n  static createTSpan(text: string, attrs: { [key: string]: string } = {}): SVGTSpanElement\n  {\n    const tSpanEl = document.createElementNS(XMLNS, \"tspan\")\n    tSpanEl.textContent = text\n    Object.keys(attrs).forEach(k =>\n    {\n      tSpanEl.setAttribute(k, attrs[k])\n    })\n    return tSpanEl\n  }\n\n  static createForeignObject(box: TBox, node: HTMLElement, attrs: { [key: string]: string } = {}): SVGForeignObjectElement\n  {\n    const objEl = document.createElementNS(XMLNS, \"foreignObject\")\n    objEl.setAttribute(\"x\", box.x.toString())\n    objEl.setAttribute(\"y\", box.y.toString())\n    objEl.setAttribute(\"width\", box.width.toString())\n    objEl.setAttribute(\"height\", box.height.toString())\n    Object.keys(attrs).forEach(k =>\n    {\n      objEl.setAttribute(k, attrs[k])\n    })\n    objEl.appendChild(node)\n    return objEl\n  }\n\n  static createText(p: TPoint, text: string, attrs: { [key: string]: string } = {}): SVGTextElement\n  {\n    const textEl = document.createElementNS(XMLNS, \"text\")\n    textEl.textContent = text\n    textEl.setAttribute(\"x\", p.x.toString())\n    textEl.setAttribute(\"y\", p.y.toString())\n    Object.keys(attrs).forEach(k =>\n    {\n      textEl.setAttribute(k, attrs[k])\n    })\n    return textEl\n  }\n}\n","import { EdgeDecoration, EdgeKind, IIEdgeArc, IIEdgeLine, IIEdgePolyLine, TIIEdge } from \"../../symbol\"\nimport { DefaultStyle } from \"../../style\"\nimport { SVGRendererConst } from \"./SVGRendererConst\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class SVGRendererEdgeUtil\n{\n  static getLinePath(line: IIEdgeLine): string\n  {\n    return `M ${ line.start.x } ${ line.start.y } L ${ line.end.x } ${ line.end.y }`\n  }\n\n  static getPolyLinePath(line: IIEdgePolyLine): string\n  {\n    return `M ${ line.vertices[0].x } ${ line.vertices[0].y } ${ line.vertices.map(p => `L ${ p.x } ${ p.y }`).join(\" \") }`\n  }\n\n  static getArcPath(arc: IIEdgeArc): string\n  {\n    return `M ${ arc.vertices[0].x } ${ arc.vertices[0].y } Q ${ arc.vertices.map(p => `${ p.x } ${ p.y }`).join(\" \") }`\n  }\n\n  static getSVGPath(edge: TIIEdge): string\n  {\n    switch (edge.kind) {\n      case EdgeKind.Line:\n        return SVGRendererEdgeUtil.getLinePath(edge)\n      case EdgeKind.PolyEdge:\n        return SVGRendererEdgeUtil.getPolyLinePath(edge)\n      case EdgeKind.Arc:\n        return SVGRendererEdgeUtil.getArcPath(edge)\n      default:\n        throw new Error(`Can't getSVGPath for edge cause kind is unknow: \"${ JSON.stringify(edge) }\"`)\n    }\n  }\n\n  static getSVGElement(edge: TIIEdge): SVGGraphicsElement\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": edge.id,\n      \"type\": edge.type,\n      \"kind\": edge.kind,\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n    }\n    if (edge.selected) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.selectionFilterId })`\n    }\n    if (edge.deleting) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.removalFilterId })`\n    }\n    const group = SVGBuilder.createGroup(attrs)\n\n    const pathAttrs: { [key: string]: string } = {\n      \"fill\": \"transparent\",\n      \"stroke\": edge.style.color || DefaultStyle.color!,\n      \"stroke-width\": (edge.style.width || DefaultStyle.width).toString(),\n      \"d\": SVGRendererEdgeUtil.getSVGPath(edge),\n    }\n    if (edge.style.opacity) {\n      pathAttrs[\"opacity\"] = edge.style.opacity.toString()\n    }\n\n    if (edge.startDecoration === EdgeDecoration.Arrow) {\n      pathAttrs[\"marker-start\"] = `url(#${ SVGRendererConst.arrowHeadStartMarker })`\n    }\n    if (edge.endDecoration === EdgeDecoration.Arrow) {\n      pathAttrs[\"marker-end\"] = `url(#${ SVGRendererConst.arrowHeadEndMaker })`\n    }\n    group.appendChild(SVGBuilder.createPath(pathAttrs))\n    return group\n  }\n\n\n}","import { IIEraser, TPointer } from \"../../symbol\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class SVGRendererEraserUtil\n{\n  static getSVGPath(eraser: IIEraser): string\n  {\n    if (eraser.pointers.length < 1) return \"\"\n\n    const firstPoint = eraser.pointers.at(0) as TPointer\n\n    const startPath = `M ${ firstPoint.x } ${ firstPoint.y }`\n\n    if (eraser.pointers.length === 1) {\n      const strokeWith = eraser.style.width || 4\n      return `${startPath} L ${ firstPoint.x  + strokeWith / 2 } ${ firstPoint.y }`\n    }\n\n    const middlePoints = eraser.pointers.slice(1)\n\n    return middlePoints.reduce((acc, point) => {\n      return `${ acc } L ${ point.x } ${ point.y }`\n    }, startPath)\n  }\n\n  static getSVGElement(eraser: IIEraser): SVGPathElement\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": eraser.id,\n      \"type\": \"eraser\",\n      \"stroke-width\": \"12\",\n      \"stroke\": \"grey\",\n      \"opacity\": \"0.2\",\n      \"shadowBlur\": \"5\",\n      \"stroke-linecap\": \"round\",\n      \"fill\": \"transparent\",\n      \"d\": SVGRendererEraserUtil.getSVGPath(eraser)\n    }\n    return SVGBuilder.createPath(attrs)\n  }\n\n}","import { DecoratorKind, IIDecorator, RecognizedKind, SymbolType, TBox, TIISymbol } from \"../../symbol\"\nimport { DefaultStyle } from \"../../style\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class SVGRendererDecoratorUtil\n{\n  static getSVGElement(decorator: IIDecorator, symbol: TIISymbol): SVGGeometryElement | undefined\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": decorator.id,\n      \"type\": \"decorator\",\n      \"kind\": decorator.kind,\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n    }\n    if (decorator.style.opacity) {\n      attrs[\"opacity\"] = decorator.style.opacity.toString()\n    }\n    if (symbol.deleting) {\n      attrs[\"opacity\"] = ((decorator.style.opacity || 1) * 0.5).toString()\n    }\n\n    let element: SVGGeometryElement | undefined\n\n    switch (decorator.kind) {\n      case DecoratorKind.Highlight: {\n        attrs[\"opacity\"] = symbol.deleting ? \"0.25\" : \"0.5\"\n        attrs[\"stroke\"] = \"transparent\"\n        attrs[\"fill\"] = decorator.style.color || DefaultStyle.color!\n        const boundingBox: TBox = {\n          x: symbol.bounds.x - +(symbol.style.width || DefaultStyle.width),\n          y: symbol.bounds.y - +(symbol.style.width || DefaultStyle.width),\n          height: symbol.bounds.height + +(symbol.style.width || DefaultStyle.width) * 2,\n          width: symbol.bounds.width + +(symbol.style.width || DefaultStyle.width) * 2,\n        }\n        element = SVGBuilder.createRect(boundingBox, attrs)\n        break\n      }\n      case DecoratorKind.Surround: {\n        attrs[\"fill\"] = \"transparent\"\n        attrs[\"stroke\"] = decorator.style.color || DefaultStyle.color!\n        attrs[\"stroke-width\"] = (decorator.style.width || DefaultStyle.width).toString()\n        const boundingBox: TBox = {\n          x: symbol.bounds.x - +(symbol.style.width || DefaultStyle.width),\n          y: symbol.bounds.y - +(symbol.style.width || DefaultStyle.width),\n          height: symbol.bounds.height + +(symbol.style.width || DefaultStyle.width) * 2,\n          width: symbol.bounds.width + +(symbol.style.width || DefaultStyle.width) * 2,\n        }\n        element = SVGBuilder.createRect(boundingBox, attrs)\n        break\n      }\n      case DecoratorKind.Strikethrough: {\n        attrs[\"fill\"] = \"transparent\"\n        attrs[\"stroke\"] = decorator.style.color || DefaultStyle.color!\n        attrs[\"stroke-width\"] = (decorator.style.width || DefaultStyle.width).toString()\n        const p1 = {\n          x: symbol.bounds.xMin,\n          y: symbol.bounds.yMid\n        }\n        const p2 = {\n          x: symbol.bounds.xMax,\n          y: symbol.bounds.yMid\n        }\n        if (symbol.type === SymbolType.Recognized && symbol.kind === RecognizedKind.Text) {\n          p1.y = symbol.baseline - symbol.xHeight / 2\n          p2.y = symbol.baseline - symbol.xHeight / 2\n        }\n        element = SVGBuilder.createLine(p1, p2, attrs)\n        break\n      }\n      case DecoratorKind.Underline: {\n        attrs[\"fill\"] = \"transparent\"\n        attrs[\"stroke\"] = decorator.style.color || DefaultStyle.color!\n        attrs[\"stroke-width\"] = (decorator.style.width || DefaultStyle.width).toString()\n        const p1 = {\n          x: symbol.bounds.xMin,\n          y: symbol.bounds.yMax + +(symbol.style.width || DefaultStyle.width)\n        }\n        const p2 = {\n          x: symbol.bounds.xMax,\n          y: symbol.bounds.yMax + +(symbol.style.width || DefaultStyle.width)\n        }\n        if (symbol.type === SymbolType.Recognized && symbol.kind === RecognizedKind.Text) {\n          p1.y = symbol.baseline + symbol.xHeight / 2\n          p2.y = symbol.baseline + symbol.xHeight / 2\n        }\n        element = SVGBuilder.createLine(p1, p2, attrs)\n        break\n      }\n    }\n\n    return element\n  }\n}","import { IIShapeCircle, IIShapeEllipse, IIShapePolygon, ShapeKind, TIIShape } from \"../../symbol\"\nimport { DefaultStyle } from \"../../style\"\nimport { convertRadianToDegree } from \"../../utils\"\nimport { SVGRendererConst } from \"./SVGRendererConst\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class SVGRendererShapeUtil\n{\n  static getPolygonePath(polygon: IIShapePolygon): string\n  {\n    return `M ${polygon.points[0].x} ${polygon.points[0].y} ${polygon.points.slice(1).map(p => `L ${p.x} ${p.y}`).join(\" \")} Z`\n  }\n\n  static getCirclePath(circle: IIShapeCircle): string\n  {\n    return `M ${circle.center.x - circle.radius} ${circle.center.y} a ${circle.radius} ${circle.radius} 0 1 1 ${circle.radius * 2} 0 a ${circle.radius} ${circle.radius} 0 1 1 -${circle.radius * 2} 0 Z`\n  }\n\n  static getEllipsePath(ellipse: IIShapeEllipse): string\n  {\n    return `M ${ellipse.center.x - ellipse.radiusX} ${ellipse.center.y} a ${ellipse.radiusX} ${ellipse.radiusY} 0 1 1 ${ellipse.radiusX * 2} 0 a ${ellipse.radiusX} ${ellipse.radiusY} 0 1 1 -${ellipse.radiusX * 2} 0 Z`\n  }\n\n  static getSVGPath(shape: TIIShape): string\n  {\n    switch(shape.kind) {\n      case ShapeKind.Polygon:\n        return SVGRendererShapeUtil.getPolygonePath(shape as IIShapePolygon)\n      case ShapeKind.Circle:\n        return SVGRendererShapeUtil.getCirclePath(shape as IIShapeCircle)\n      case ShapeKind.Ellipse:\n        return SVGRendererShapeUtil.getEllipsePath(shape as IIShapeEllipse)\n      default:\n        throw new Error(`Can't getSVGPath for shape cause kind is unknow: \"${ JSON.stringify(shape) }\"`)\n    }\n  }\n\n  static getSVGElement(shape: TIIShape): SVGGraphicsElement\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": shape.id,\n      \"type\": shape.type,\n      \"kind\": shape.kind,\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n    }\n    if (shape.selected) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.selectionFilterId })`\n    }\n    if (shape.deleting) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.removalFilterId })`\n    }\n\n    const group = SVGBuilder.createGroup(attrs)\n\n    const pathAttrs: { [key: string]: string } = {\n      \"fill\": shape.style.fill || \"transparent\",\n      \"stroke\": shape.style.color || DefaultStyle.color!,\n      \"stroke-width\": (shape.style.width || DefaultStyle.width).toString(),\n      \"d\": SVGRendererShapeUtil.getSVGPath(shape),\n    }\n    if (shape.style.opacity) {\n      pathAttrs[\"opacity\"] = shape.style.opacity.toString()\n    }\n    if (shape.kind === ShapeKind.Ellipse) {\n      pathAttrs.transform = `rotate(${ convertRadianToDegree(shape.orientation) }, ${shape.center.x}, ${shape.center.y})`\n    }\n\n    group.appendChild(SVGBuilder.createPath(pathAttrs))\n\n    return group\n  }\n}","import { DecoratorKind, IIStroke, TPointer } from \"../../symbol\"\nimport { DefaultStyle } from \"../../style\"\nimport { computeAngleAxeRadian, computeLinksPointers, computeMiddlePointer } from \"../../utils\"\nimport { SVGRendererDecoratorUtil } from \"./SVGRendererDecoratorUtil\"\nimport { SVGRendererConst } from \"./SVGRendererConst\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class SVGRendererStrokeUtil\n{\n\n  protected static getArcPath(center: TPointer, radius: number): string\n  {\n    const svgPath = [\n      `M ${ center.x } ${ center.y }`,\n      `m ${ -radius } 0`,\n      `a ${ radius } ${ radius } 0 1 0 ${ radius * 2 } 0`,\n      `a ${ radius } ${ radius } 0 1 0 ${ -(radius * 2) } 0`\n    ].join(\" \")\n    return svgPath\n  }\n\n  protected static getLinePath(begin: TPointer, end: TPointer, width: number): string\n  {\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, end), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(begin, end), width)\n    const svgPath = [\n      `M ${ linkPoints1[0].x } ${ linkPoints1[0].y }`,\n      `L ${ linkPoints2[0].x } ${ linkPoints2[0].y }`,\n      `L ${ linkPoints2[1].x } ${ linkPoints2[1].y }`,\n      `L ${ linkPoints1[1].x } ${ linkPoints1[1].y }`\n    ].join(\" \")\n    return svgPath\n  }\n\n  protected static getFinalPath(begin: TPointer, end: TPointer, width: number): string\n  {\n    const ARCSPLIT = 6\n    const angle = computeAngleAxeRadian(begin, end)\n    const linkPoints = computeLinksPointers(end, angle, width)\n    const parts = [`M ${ linkPoints[0].x } ${ linkPoints[0].y }`]\n    for (let i = 1; i <= ARCSPLIT; i++) {\n      const newAngle = angle - (i * (Math.PI / ARCSPLIT))\n      const x = +(end.x - (end.p * width * Math.sin(newAngle))).toFixed(3)\n      const y = +(end.y + (end.p * width * Math.cos(newAngle))).toFixed(3)\n      parts.push(`L ${ x } ${ y }`)\n    }\n    const svgPath = parts.join(\" \")\n    return svgPath\n  }\n\n  protected static getQuadraticPath(begin: TPointer, end: TPointer, central: TPointer, width: number): string\n  {\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, central), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(central, end), width)\n    const linkPoints3 = computeLinksPointers(central, computeAngleAxeRadian(begin, end), width)\n    const svgPath = [\n      `M ${ linkPoints1[0].x } ${ linkPoints1[0].y }`,\n      `Q ${ linkPoints3[0].x } ${ linkPoints3[0].y } ${ linkPoints2[0].x } ${ linkPoints2[0].y }`,\n      `L ${ linkPoints2[1].x } ${ linkPoints2[1].y }`,\n      `Q ${ linkPoints3[1].x } ${ linkPoints3[1].y } ${ linkPoints1[1].x } ${ linkPoints1[1].y }`\n    ].join(\" \")\n    return svgPath\n  }\n\n  static getSVGPath(stroke: IIStroke): string\n  {\n    const STROKE_LENGTH = stroke.pointers.length\n    if (!STROKE_LENGTH) return \"\"\n    const STROKE_WIDTH = (stroke.style.width as number)\n    const NB_QUADRATICS = STROKE_LENGTH - 2\n    const firstPoint = stroke.pointers[0]\n\n    const parts = []\n    if (STROKE_LENGTH < 3) {\n      parts.push(this.getArcPath(firstPoint, STROKE_WIDTH * 0.6))\n    } else {\n      parts.push(this.getArcPath(firstPoint, STROKE_WIDTH * firstPoint.p))\n      parts.push(this.getLinePath(firstPoint, computeMiddlePointer(firstPoint, stroke.pointers[1]), STROKE_WIDTH))\n\n      for (let i = 0; i < NB_QUADRATICS; i++) {\n        const begin = computeMiddlePointer(stroke.pointers[i], stroke.pointers[i + 1])\n        const end = computeMiddlePointer(stroke.pointers[i + 1], stroke.pointers[i + 2])\n        const central = stroke.pointers[i + 1]\n        parts.push(this.getQuadraticPath(begin, end, central, STROKE_WIDTH)\n        )\n      }\n      const beforeLastPoint = stroke.pointers[STROKE_LENGTH - 2]\n      const lastPoint = stroke.pointers[STROKE_LENGTH - 1]\n      parts.push(this.getLinePath(computeMiddlePointer(beforeLastPoint, lastPoint), lastPoint, STROKE_WIDTH))\n      parts.push(this.getFinalPath(beforeLastPoint, lastPoint, STROKE_WIDTH))\n    }\n    return parts.join(\" \")\n  }\n\n  static getSVGElement(stroke: IIStroke): SVGGraphicsElement\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": stroke.id,\n      \"type\": \"stroke\",\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n    }\n    if (stroke.selected) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.selectionFilterId })`\n    }\n    if (stroke.deleting) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.removalFilterId })`\n    }\n\n    const strokeGroup = SVGBuilder.createGroup(attrs)\n\n    const strokeAttrs: { [key: string]: string } = {\n      \"fill\": stroke.style.color || DefaultStyle.color!,\n      \"stroke-width\": stroke.style.width.toString(),\n      \"d\": SVGRendererStrokeUtil.getSVGPath(stroke)\n    }\n    if (stroke.style.opacity) {\n      strokeAttrs.opacity = stroke.style.opacity.toString()\n    }\n    strokeGroup.append(SVGBuilder.createPath(strokeAttrs))\n\n    stroke.decorators.forEach(d =>\n    {\n      const deco = SVGRendererDecoratorUtil.getSVGElement(d, stroke)\n      if (deco) {\n        if (d.kind === DecoratorKind.Highlight) {\n          strokeGroup.prepend(deco)\n        }\n        else {\n          strokeGroup.append(deco)\n        }\n      }\n    })\n\n    return strokeGroup\n  }\n\n}","import { DecoratorKind, IIText } from \"../../symbol\"\nimport { SVGRendererDecoratorUtil } from \"./SVGRendererDecoratorUtil\"\nimport { SVGRendererConst } from \"./SVGRendererConst\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class SVGRendererTextUtil\n{\n  static getSVGElement(text: IIText): SVGGraphicsElement\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": text.id,\n      \"type\": text.type,\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      \"style\": SVGRendererConst.noSelection,\n    }\n    if (text.style.opacity) {\n      attrs.opacity = text.style.opacity.toString()\n    }\n    if (text.rotation) {\n      attrs.transform = `rotate(${ text.rotation.degree }, ${ text.rotation.center.x }, ${ text.rotation.center.y })`\n    }\n    if (text.selected) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.selectionFilterId })`\n    }\n    if (text.deleting) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.removalFilterId })`\n    }\n\n    const textGroup = SVGBuilder.createGroup(attrs)\n\n    const textElement = SVGBuilder.createText(text.point, \"\")\n\n    text.chars.forEach(c =>\n    {\n      const attrs: { [key: string]: string } = {\n        id: c.id,\n        fill: c.color,\n        \"font-size\": `${ c.fontSize }px`,\n        \"font-weight\": c.fontWeight.toString(),\n      }\n      textElement.appendChild(SVGBuilder.createTSpan(c.label, attrs))\n    })\n    textGroup.append(textElement)\n\n    text.decorators.forEach(d =>\n    {\n      const deco = SVGRendererDecoratorUtil.getSVGElement(d, text)\n      if (deco) {\n        if (d.kind === DecoratorKind.Highlight) {\n          textGroup.prepend(deco)\n        }\n        else {\n          textGroup.append(deco)\n        }\n      }\n    })\n\n    return textGroup\n  }\n}","import { DecoratorKind, RecognizedKind, TIIRecognized } from \"../../symbol\"\nimport { DefaultStyle } from \"../../style\"\nimport { SVGRendererDecoratorUtil } from \"./SVGRendererDecoratorUtil\"\nimport { SVGRendererStrokeUtil } from \"./SVGRendererStrokeUtil\"\nimport { SVGRendererConst } from \"./SVGRendererConst\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class SVGRendererRecognizedUtil\n{\n  static getSVGElement(recognizedSymbol: TIIRecognized): SVGGraphicsElement\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": recognizedSymbol.id,\n      \"type\": recognizedSymbol.type,\n      \"kind\": recognizedSymbol.kind,\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      \"fill\": recognizedSymbol.style.color || DefaultStyle.color,\n      \"stroke-width\": (recognizedSymbol.style.width || DefaultStyle.width).toString(),\n    }\n    if (recognizedSymbol.style.opacity) {\n      attrs[\"opacity\"] = recognizedSymbol.style.opacity.toString()\n    }\n    if (recognizedSymbol.selected) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.selectionFilterId })`\n    }\n    if (recognizedSymbol.deleting) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.removalFilterId })`\n    }\n\n    const groupEl = SVGBuilder.createGroup(attrs)\n\n    recognizedSymbol.strokes.forEach(s =>\n    {\n      groupEl.append(SVGRendererStrokeUtil.getSVGElement(s))\n    })\n\n    if (recognizedSymbol.kind === RecognizedKind.Text) {\n      recognizedSymbol.decorators.forEach(d =>\n      {\n        const deco = SVGRendererDecoratorUtil.getSVGElement(d, recognizedSymbol)\n        if (deco) {\n          if (d.kind === DecoratorKind.Highlight) {\n            groupEl.prepend(deco)\n          }\n          else {\n            groupEl.append(deco)\n          }\n        }\n      })\n    }\n\n    return groupEl\n  }\n\n}","import { DecoratorKind, IIEraser, IISymbolGroup, SymbolType, TIISymbol } from \"../../symbol\"\nimport { DefaultStyle } from \"../../style\"\nimport { SVGRendererDecoratorUtil } from \"./SVGRendererDecoratorUtil\"\nimport { SVGRendererEdgeUtil } from \"./SVGRendererEdgeUtil\"\nimport { SVGRendererShapeUtil } from \"./SVGRendererShapeUtil\"\nimport { SVGRendererStrokeUtil } from \"./SVGRendererStrokeUtil\"\nimport { SVGRendererConst } from \"./SVGRendererConst\"\nimport { SVGBuilder } from \"./SVGBuilder\"\nimport { SVGRendererTextUtil } from \"./SVGRendererTextUtil\"\nimport { SVGRendererRecognizedUtil } from \"./SVGRendererRecognizedUtil\"\n\n/**\n * @group Renderer\n */\nexport class SVGRendererGroupUtil\n{\n\n  static getChildElement(symbol: TIISymbol | IIEraser): SVGGraphicsElement | undefined\n  {\n    let element: SVGGraphicsElement | undefined\n    switch (symbol.type) {\n      case SymbolType.Stroke:\n        element = SVGRendererStrokeUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Shape:\n        element = SVGRendererShapeUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Edge:\n        element = SVGRendererEdgeUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Text:\n        element = SVGRendererTextUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Group:\n        element = SVGRendererGroupUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Recognized:\n        element = SVGRendererRecognizedUtil.getSVGElement(symbol)\n        break\n    }\n    return element\n  }\n\n  static getSVGElement(symbolGroup: IISymbolGroup): SVGGraphicsElement\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": symbolGroup.id,\n      \"type\": \"group\",\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      \"fill\": symbolGroup.style.color || DefaultStyle.color!,\n      \"stroke-width\": (symbolGroup.style.width || DefaultStyle.width).toString(),\n    }\n    if (symbolGroup.style.opacity) {\n      attrs[\"opacity\"] = symbolGroup.style.opacity.toString()\n    }\n    if (symbolGroup.selected) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.selectionFilterId })`\n    }\n    if (symbolGroup.deleting) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.removalFilterId })`\n    }\n\n    const groupEl = SVGBuilder.createGroup(attrs)\n\n    symbolGroup.children.forEach(sym =>\n    {\n      groupEl.append(SVGRendererGroupUtil.getChildElement(sym)!)\n    })\n\n    symbolGroup.decorators.forEach(d =>\n    {\n      const deco = SVGRendererDecoratorUtil.getSVGElement(d, symbolGroup)\n      if (deco) {\n        if (d.kind === DecoratorKind.Highlight) {\n          groupEl.prepend(deco)\n        }\n        else {\n          groupEl.append(deco)\n        }\n      }\n    })\n\n    return groupEl\n  }\n\n}","import { SvgElementRole } from \"../../Constants\"\nimport { getClosestPoints } from \"../../utils\"\nimport { LoggerCategory, LoggerManager } from \"../../logger\"\nimport { TIISymbol, TPoint, TBox, Box, IIEraser, SymbolType } from \"../../symbol\"\nimport { TIIRendererConfiguration } from \"../RendererConfiguration\"\nimport { SVGRendererConst } from \"./SVGRendererConst\"\nimport { SVGRendererEdgeUtil } from \"./SVGRendererEdgeUtil\"\nimport { SVGRendererEraserUtil } from \"./SVGRendererEraserUtil\"\nimport { SVGRendererGroupUtil } from \"./SVGRendererGroupUtil\"\nimport { SVGRendererShapeUtil } from \"./SVGRendererShapeUtil\"\nimport { SVGRendererStrokeUtil } from \"./SVGRendererStrokeUtil\"\nimport { SVGRendererTextUtil } from \"./SVGRendererTextUtil\"\nimport { SVGRendererRecognizedUtil } from \"./SVGRendererRecognizedUtil\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class SVGRenderer {\n  #logger = LoggerManager.getLogger(LoggerCategory.RENDERER)\n  groupGuidesId = \"guides-wrapper\"\n\n  configuration: TIIRendererConfiguration\n  parent!: HTMLElement\n  layer!: SVGSVGElement\n  definitionGroup!: SVGGElement\n\n  verticalGuides: number[] = []\n  horizontalGuides: number[] = []\n\n  constructor(configuration: TIIRendererConfiguration) {\n    this.#logger.info(\"constructor\", { configuration })\n    this.configuration = configuration\n  }\n\n  protected initLayer(): void {\n    const width = Math.max(this.configuration.minWidth, this.parent.clientWidth)\n    const height = Math.max(this.configuration.minHeight, this.parent.clientHeight)\n    this.layer = SVGBuilder.createLayer({ x: 0, y: 0, width, height })\n    this.layer.style.setProperty(\"height\", \"auto\")\n    this.layer.style.setProperty(\"width\", \"auto\")\n    this.layer.appendChild(this.createSVGTools())\n    this.parent.style.setProperty(\"overflow\", \"auto\")\n    this.parent.appendChild(this.layer)\n  }\n\n  protected createDefs(): SVGDefsElement {\n    const defs = SVGBuilder.createDefs()\n\n    const SIZE = 5\n    const REFX = SIZE - 1, REFY = SIZE / 2\n    const arrowHeadMarkerAttrs = {\n      style: SVGRendererConst.noSelection,\n      fill: \"context-stroke\",\n      markerWidth: SIZE.toString(),\n      markerHeight: SIZE.toString(),\n      refX: REFX.toString(),\n      refY: REFY.toString(),\n    }\n\n    const arrowHeadStart = SVGBuilder.createMarker(SVGRendererConst.arrowHeadStartMarker, { ...arrowHeadMarkerAttrs, orient: \"auto-start-reverse\" })\n    arrowHeadStart.appendChild(SVGBuilder.createPolygon([0, 0, SIZE, REFY, 0, SIZE], arrowHeadMarkerAttrs))\n    defs.appendChild(arrowHeadStart)\n\n    const arrowHeadEnd = SVGBuilder.createMarker(SVGRendererConst.arrowHeadEndMaker, { ...arrowHeadMarkerAttrs, orient: \"auto\" })\n    arrowHeadEnd.appendChild(SVGBuilder.createPolygon([0, 0, SIZE, REFY, 0, SIZE], arrowHeadMarkerAttrs))\n    defs.appendChild(arrowHeadEnd)\n\n    const crossMarkerAttrs = {\n      style: SVGRendererConst.noSelection,\n      markerWidth: \"5\",\n      markerHeight: \"5\",\n      refX: \"0\",\n      refY: \"0\",\n      viewBox: \"-5 -5 10 10\"\n    }\n    const cross = SVGBuilder.createMarker(SVGRendererConst.crossMarker, crossMarkerAttrs)\n    cross.appendChild(SVGBuilder.createPath({ d: \"M -4,-4 L 4,4 M -4,4 L 4,-4\", stroke: \"white\", \"stroke-width\": \"3\" }))\n    cross.appendChild(SVGBuilder.createPath({ d: \"M -4,-4 L 4,4 M -4,4 L 4,-4\", stroke: \"context-stroke\", \"stroke-width\": \"2\" }))\n    defs.appendChild(cross)\n\n    return defs\n  }\n\n  protected createFilters(): SVGGElement {\n    const filtersGroup = SVGBuilder.createGroup({ id: \"definition-group\" })\n    const removalFilter = SVGBuilder.createFilter(SVGRendererConst.removalFilterId, { filterUnits: \"userSpaceOnUse\" })\n    const bfeComponentTransfer = SVGBuilder.createComponentTransfert()\n    const bfeFuncA = SVGBuilder.createTransfertFunctionTable(\"feFuncA\", \"0 0.25\")\n    bfeComponentTransfer.appendChild(bfeFuncA)\n    removalFilter.appendChild(bfeComponentTransfer)\n    filtersGroup.appendChild(removalFilter)\n\n    const selectionFilter = SVGBuilder.createFilter(SVGRendererConst.selectionFilterId, { filterUnits: \"userSpaceOnUse\" })\n    selectionFilter.appendChild(SVGBuilder.createDropShadow({ dx: -1, dy: -1, deviation: 1 }))\n    filtersGroup.appendChild(selectionFilter)\n\n    return filtersGroup\n  }\n\n  protected drawGuides(): void {\n    this.verticalGuides = []\n    this.horizontalGuides = []\n    const height = Number(this.layer.getAttribute(\"height\")?.replace(\"px\", \"\"))\n    const width = Number(this.layer.getAttribute(\"width\")?.replace(\"px\", \"\"))\n    const offSet = this.configuration.guides.gap\n    const subOffSet = this.configuration.guides.gap / 5\n    const attrs = {\n      id: this.groupGuidesId,\n      stroke: \"grey\",\n      opacity: \"0.5\",\n      style: SVGRendererConst.noSelection,\n      role: SvgElementRole.Guide\n    }\n    const guidesGroup = SVGBuilder.createGroup(attrs)\n    switch (this.configuration.guides.type) {\n      case \"line\":\n        for (let y = offSet; y < height; y += offSet) {\n          const begin: TPoint = { x: offSet, y }\n          const end: TPoint = { x: width - offSet, y }\n          this.horizontalGuides.push(y)\n          const svgLine = SVGBuilder.createLine(begin, end, { \"stroke-width\": \"1\", style: SVGRendererConst.noSelection })\n          guidesGroup.appendChild(svgLine)\n        }\n        break\n      case \"grid\":\n        for (let y = 0; y < height; y += offSet) {\n          const begin: TPoint = { x: 0, y }\n          const end: TPoint = { x: width, y }\n          const svgLine = SVGBuilder.createLine(begin, end, { \"stroke-width\": \"1\", style: SVGRendererConst.noSelection })\n          guidesGroup.appendChild(svgLine)\n          this.horizontalGuides.push(y)\n          for (let subY = y + subOffSet; subY < y + offSet; subY += subOffSet) {\n            this.horizontalGuides.push(subY)\n            const svgLine = SVGBuilder.createLine({ x: 0, y: subY }, { x: width, y: subY }, { \"stroke-width\": \"0.25\", style: SVGRendererConst.noSelection })\n            guidesGroup.appendChild(svgLine)\n          }\n        }\n        for (let x = 0; x < width; x += offSet) {\n          const begin: TPoint = { x, y: 0 }\n          const end: TPoint = { x, y: height }\n          const svgLine = SVGBuilder.createLine(begin, end, { \"stroke-width\": \"1\", style: SVGRendererConst.noSelection })\n          guidesGroup.appendChild(svgLine)\n          this.verticalGuides.push(x)\n          for (let subX = x + subOffSet; subX < x + offSet; subX += subOffSet) {\n            this.verticalGuides.push(subX)\n            const svgLine = SVGBuilder.createLine({ x: subX, y: 0 }, { x: subX, y: height }, { \"stroke-width\": \"0.25\", style: SVGRendererConst.noSelection })\n            guidesGroup.appendChild(svgLine)\n          }\n        }\n        break\n      case \"point\":\n        for (let x = offSet; x < width; x += offSet) {\n          this.verticalGuides.push(x)\n          for (let y = offSet; y < height; y += offSet) {\n            this.horizontalGuides.push(y)\n            const svgPoint = SVGBuilder.createCircle({ x, y }, 1)\n            guidesGroup.appendChild(svgPoint)\n          }\n        }\n        break\n      default:\n        this.#logger.error(\"drawGuides\", `Guide type unknown: ${this.configuration.guides.type}`)\n        break\n    }\n    this.horizontalGuides = [...new Set(this.horizontalGuides)]\n    this.verticalGuides = [...new Set(this.verticalGuides)]\n    this.definitionGroup.appendChild(guidesGroup)\n  }\n\n  protected removeGuides(): void {\n    this.verticalGuides = []\n    this.horizontalGuides = []\n    this.layer.querySelector(`#${this.groupGuidesId}`)?.remove()\n  }\n\n  protected createSVGTools(): SVGGElement {\n    this.definitionGroup = SVGBuilder.createGroup({ id: \"definition-group\" })\n    this.definitionGroup.appendChild(this.createDefs())\n    this.definitionGroup.appendChild(this.createFilters())\n    if (this.configuration.guides.enable) {\n      this.drawGuides()\n    }\n    return this.definitionGroup\n  }\n\n  init(element: HTMLElement): void {\n    this.#logger.info(\"init\", { element })\n    this.parent = element\n    this.parent.oncontextmenu = () => false\n    this.initLayer()\n  }\n\n  getAttribute(id: string, name: string): string | undefined | null {\n    const element = this.layer.querySelector(`#${id}`) as HTMLElement | null\n    return element?.getAttribute(name)\n  }\n\n  setAttribute(id: string, name: string, value: string): void {\n    const element = this.layer.querySelector(`#${id}`) as HTMLElement | null\n    element?.setAttribute(name, value)\n  }\n\n  buildElementFromSymbol(symbol: TIISymbol | IIEraser): SVGGraphicsElement | undefined {\n    let element: SVGGraphicsElement | undefined\n    switch (symbol.type) {\n      case SymbolType.Stroke:\n        element = SVGRendererStrokeUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Eraser:\n        element = SVGRendererEraserUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Shape:\n        element = SVGRendererShapeUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Edge:\n        element = SVGRendererEdgeUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Text:\n        element = SVGRendererTextUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Group:\n        element = SVGRendererGroupUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Recognized:\n        element = SVGRendererRecognizedUtil.getSVGElement(symbol)\n        break\n      default:\n        this.#logger.error(\"buildElementFromSymbol\", `symbol unknow: \"${JSON.stringify(symbol)}\"`)\n    }\n    return element\n  }\n\n  prependElement(el: Element): void {\n    this.layer.prepend(el)\n  }\n\n  changeOrderSymbol(symbolToMove: TIISymbol, position: \"first\" | \"last\" | \"forward\" | \"backward\"): void {\n    const moveEl = this.layer.querySelector(`#${symbolToMove.id}`)\n    if (!moveEl) return\n    switch (position) {\n      case \"first\":\n        this.definitionGroup.insertAdjacentElement(\"afterend\", moveEl)\n        break\n      case \"last\":\n        this.layer.insertAdjacentElement(\"beforeend\", moveEl)\n        break\n      case \"forward\":\n        moveEl.nextElementSibling?.insertAdjacentElement(\"afterend\", moveEl)\n        break\n      case \"backward\":\n        if (moveEl.previousElementSibling !== this.definitionGroup) {\n          moveEl.previousElementSibling?.insertAdjacentElement(\"beforebegin\", moveEl)\n        }\n        break\n    }\n  }\n\n  appendElement(el: Element): void {\n    this.layer.appendChild(el)\n  }\n\n  removeElement(id: string): void {\n    this.#logger.debug(\"Element\", { id })\n    const oldStroke = this.layer.querySelector(`#${id}`)\n    if (oldStroke) {\n      oldStroke.remove()\n    }\n  }\n\n  drawSymbol(symbol: TIISymbol | IIEraser): SVGGraphicsElement | undefined {\n    this.#logger.debug(\"drawSymbol\", { symbol })\n    const oldNode = this.layer.querySelector(`#${symbol?.id}`)\n    const svgEl = this.buildElementFromSymbol(symbol)\n\n    if (svgEl) {\n      if (oldNode) {\n        oldNode.replaceWith(svgEl)\n      }\n      else {\n        this.layer.appendChild(svgEl)\n      }\n    }\n    return svgEl\n  }\n\n  replaceSymbol(id: string, symbols: TIISymbol[]): SVGGraphicsElement[] | undefined {\n    this.#logger.debug(\"drawSymbol\", { symbols })\n    const oldNode = this.layer.querySelector(`#${id}`)\n    const elements = symbols.map(s => this.buildElementFromSymbol(s)).filter(x => !!x) as SVGGraphicsElement[]\n\n    if (elements.length) {\n      if (oldNode) {\n        elements.forEach(e => oldNode.insertAdjacentElement(\"beforebegin\", e))\n        oldNode.remove()\n      }\n      else {\n        elements.forEach(e => this.layer.appendChild(e))\n      }\n    }\n    return elements\n  }\n\n  removeSymbol(id: string): void {\n    this.#logger.debug(\"removeSymbol\", { id })\n    this.removeElement(id)\n  }\n\n  drawCircle(point: TPoint, radius: number, attrs: { [key: string]: string } = {}): void {\n    this.#logger.info(\"drawCircle\", { point, radius, attrs })\n    this.layer.appendChild(SVGBuilder.createCircle(point, radius, attrs))\n  }\n\n  drawRect(box: TBox, attrs: { [key: string]: string } = {}): void {\n    this.#logger.info(\"drawRect\", { box, attrs })\n    this.layer.appendChild(SVGBuilder.createRect(box, attrs))\n  }\n\n  drawLine(p1: TPoint, p2: TPoint, attrs: { [key: string]: string } = {}): void {\n    this.#logger.info(\"drawLine\", { p1, p2, attrs })\n    this.layer.appendChild(SVGBuilder.createLine(p1, p2, attrs))\n  }\n\n  drawConnectionBetweenBox(id: string, box1: TBox, box2: TBox, position: \"corners\" | \"sides\", attrs?: { [key: string]: string }): void {\n    let points1: TPoint[] = new Box(box1).corners\n    let points2: TPoint[] = new Box(box2).corners\n    if (position === \"sides\") {\n      points1 = new Box(box1).side\n      points2 = new Box(box2).side\n    }\n    const { p1, p2 } = getClosestPoints(points1, points2)\n    const attrsLine = {\n      id,\n      fill: \"transparent\",\n      style: SVGRendererConst.noSelection,\n      ...attrs\n    }\n    this.drawLine(p1, p2, attrsLine)\n  }\n\n  resize(height: number, width: number): void {\n    this.#logger.info(\"resize\", { height, width })\n    this.layer.setAttribute(\"width\", `${width}px`)\n    this.layer.setAttribute(\"height\", `${height}px`)\n    this.layer.setAttribute(\"viewBox\", `0, 0, ${width}, ${height}`)\n    this.removeGuides()\n    if (this.configuration.guides.enable) {\n      this.drawGuides()\n    }\n  }\n\n  getElementById(id: string): SVGGraphicsElement | null {\n    return this.layer.querySelector(`#${id}`) as SVGGraphicsElement | null\n  }\n\n  getElements({ tagName, attrs }: { tagName?: string, attrs?: { [key: string]: string } }): NodeListOf<Element> {\n    this.#logger.info(\"getElements\", { tagName, attrs })\n    let query = tagName || \"*\"\n    if (attrs) {\n      Object.keys(attrs).forEach(k => {\n        query += `[${k}=${attrs[k]}]`\n      })\n    }\n    return this.layer.querySelectorAll(query)\n  }\n\n  clearElements({ tagName, attrs }: { tagName?: string, attrs?: { [key: string]: string } }): void {\n    this.#logger.info(\"clearElements\", { tagName, attrs })\n    this.getElements({ tagName, attrs })\n      .forEach(e => e.remove())\n  }\n\n  clear(): void {\n    this.#logger.info(\"clear\")\n    if (this.layer) {\n      while (this.layer.firstChild) {\n        this.layer.firstChild.remove()\n      }\n      this.layer.appendChild(this.createSVGTools())\n    }\n  }\n\n  destroy(): void {\n    if (this.layer) {\n      this.layer.remove()\n    }\n  }\n}","import { TPointer, TStroke } from \"../../symbol\"\nimport { computeAngleAxeRadian, computeLinksPointers, computeMiddlePointer } from \"../../utils\"\n\n/**\n * @group Renderer\n */\nexport class SVGStroker\n{\n\n  protected getArcPath(center: TPointer, radius: number): string\n  {\n    const svgPath = [\n      `M ${ center.x },${ center.y }`,\n      `m ${ -radius },0`,\n      `a ${ radius },${ radius } 0 1 0 ${ radius * 2 },0`,\n      `a ${ radius },${ radius } 0 1 0 ${ -(radius * 2) },0`\n    ].join(\" \")\n    return svgPath\n  }\n\n  protected getLinePath(begin: TPointer, end: TPointer, width: number): string\n  {\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, end), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(begin, end), width)\n    const svgPath = [\n      `M ${ linkPoints1[0].x },${ linkPoints1[0].y }`,\n      `L ${ linkPoints2[0].x },${ linkPoints2[0].y }`,\n      `L ${ linkPoints2[1].x },${ linkPoints2[1].y }`,\n      `L ${ linkPoints1[1].x },${ linkPoints1[1].y }`\n    ].join(\" \")\n    return svgPath\n  }\n\n  protected getFinalPath(begin: TPointer, end: TPointer, width: number): string\n  {\n    const ARCSPLIT = 6\n    const angle = computeAngleAxeRadian(begin, end)\n    const linkPoints = computeLinksPointers(end, angle, width)\n    const parts = [`M ${ linkPoints[0].x },${ linkPoints[0].y }`]\n    for (let i = 1; i <= ARCSPLIT; i++) {\n      const newAngle = angle - (i * (Math.PI / ARCSPLIT))\n      parts.push(`L ${ end.x - (end.p * width * Math.sin(newAngle)) },${ end.y + (end.p * width * Math.cos(newAngle)) }`)\n    }\n    const svgPath = parts.join(\" \")\n    return svgPath\n  }\n\n  protected getQuadraticPath(begin: TPointer, end: TPointer, central: TPointer, width: number): string\n  {\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, central), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(central, end), width)\n    const linkPoints3 = computeLinksPointers(central, computeAngleAxeRadian(begin, end), width)\n    const svgPath = [\n      `M ${ linkPoints1[0].x },${ linkPoints1[0].y }`,\n      `Q ${ linkPoints3[0].x },${ linkPoints3[0].y } ${ linkPoints2[0].x },${ linkPoints2[0].y }`,\n      `L ${ linkPoints2[1].x },${ linkPoints2[1].y }`,\n      `Q ${ linkPoints3[1].x },${ linkPoints3[1].y } ${ linkPoints1[1].x },${ linkPoints1[1].y }`\n    ].join(\" \")\n    return svgPath\n  }\n\n  protected buildSVGPath(stroke: TStroke): string\n  {\n    const STROKE_LENGTH = stroke.pointers.length\n    const STROKE_WIDTH = (stroke.style.width as number)\n    const NB_QUADRATICS = STROKE_LENGTH - 2\n    const firstPoint = stroke.pointers[0]\n\n    const parts = []\n    if (STROKE_LENGTH < 3) {\n      parts.push(this.getArcPath(firstPoint, STROKE_WIDTH * 0.6))\n    } else {\n      parts.push(this.getArcPath(firstPoint, STROKE_WIDTH * firstPoint.p))\n      parts.push(this.getLinePath(firstPoint, computeMiddlePointer(firstPoint, stroke.pointers[1]), STROKE_WIDTH))\n\n      for (let i = 0; i < NB_QUADRATICS; i++) {\n        const begin = computeMiddlePointer(stroke.pointers[i], stroke.pointers[i + 1])\n        const end = computeMiddlePointer(stroke.pointers[i + 1], stroke.pointers[i + 2])\n        const central = stroke.pointers[i + 1]\n        parts.push(this.getQuadraticPath(begin, end, central, STROKE_WIDTH)\n        )\n      }\n      const beforeLastPoint = stroke.pointers[STROKE_LENGTH - 2]\n      const lastPoint = stroke.pointers[STROKE_LENGTH - 1]\n      parts.push(this.getLinePath(computeMiddlePointer(beforeLastPoint, lastPoint), lastPoint, STROKE_WIDTH))\n      parts.push(this.getFinalPath(beforeLastPoint, lastPoint, STROKE_WIDTH))\n    }\n    return parts.join(\" \")\n  }\n\n  drawStroke(svgElement: SVGElement, stroke: TStroke, attrs?: { name: string, value: string }[]): void\n  {\n    const svgPathElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\")\n    svgPathElement.classList.add(\"pending-stroke\")\n    svgPathElement.setAttribute(\"id\", stroke.id)\n    svgPathElement.setAttribute(\"type\", stroke.pointerType)\n    attrs?.forEach(a =>\n    {\n      svgPathElement.setAttribute(a.name, a.value)\n    })\n    const svgPath = this.buildSVGPath(stroke)\n    svgPathElement.setAttribute(\"d\", `${ svgPath }Z`)\n    svgElement.appendChild(svgPathElement)\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../../logger\"\nimport { Model } from \"../../model\"\nimport { TStroke } from \"../../symbol\"\nimport { TRendererConfiguration } from \"../RendererConfiguration\"\nimport { TUpdatePatch, TUpdatePatchAppendChild, TUpdatePatchInsertBefore, TUpdatePatchRemoveAttribut, TUpdatePatchRemoveChild, TUpdatePatchRemoveElement, TUpdatePatchReplaceAll, TUpdatePatchReplaceELement, TUpdatePatchSetAttribut } from \"../../recognizer\"\nimport { SVGStroker } from \"./SVGStroker\"\n\n/**\n * @group Renderer\n */\nexport class InteractiveInkSSRSVGRenderer\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RENDERER)\n\n  config: TRendererConfiguration\n  stroker: SVGStroker\n  context!: {\n    parent: HTMLElement\n  }\n\n  constructor(config: TRendererConfiguration)\n  {\n    this.#logger.info(\"constructor\", { config })\n    this.config = config\n    this.stroker = new SVGStroker()\n  }\n\n  init(element: HTMLElement): void\n  {\n    this.#logger.info(\"init\", { element })\n    element.style.fontSize = \"10px\"\n    this.context = {\n      parent: element\n    }\n  }\n\n  protected drawStroke(svgElement: SVGElement, stroke: TStroke)\n  {\n    let style: string\n    if (stroke.pointerType === \"eraser\") {\n      stroke.style.width = 12\n      style = \"fill:grey;stroke:transparent;shadowBlur:5;opacity:0.2;\"\n    } else {\n      style = `fill:${ stroke.style.color };stroke:transparent;`\n    }\n    this.stroker.drawStroke(svgElement, stroke, [{ name: \"style\", value: style }])\n  }\n\n  protected replaceAll(layerName: string, update: TUpdatePatchReplaceAll): void\n  {\n    const oldLayer = this.context.parent.querySelector(`svg[data-layer=\"${ layerName }\"]`) as SVGElement | null\n    oldLayer?.remove()\n    this.context.parent.insertAdjacentHTML(\"beforeend\", update.svg)\n    const layer = this.context.parent.querySelector(`svg[data-layer=\"${ layerName }\"]`) as SVGElement\n    if (layerName === \"MODEL\") {\n      const pendingStrokesGroup = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\")\n      pendingStrokesGroup.id = \"pendingStrokes\"\n      layer.appendChild(pendingStrokesGroup)\n    }\n  }\n\n  protected replaceElement(update: TUpdatePatchReplaceELement): void\n  {\n    const elementToRemove = this.context.parent.querySelector(`#${ update.id }`) as HTMLElement | null\n    if (elementToRemove) {\n      const parent = elementToRemove.parentNode as HTMLElement | null | undefined\n      elementToRemove?.remove()\n      parent?.insertAdjacentHTML(\"beforeend\", update.svg)\n    }\n  }\n\n  protected appendChild(layerName: string, update: TUpdatePatchAppendChild): void\n  {\n    const parentSelector = update.parentId ? `#${ update.parentId }` : `svg[data-layer=\"${ layerName }\"]`\n    const parent = this.context.parent.querySelector(parentSelector) as HTMLElement\n    parent?.insertAdjacentHTML(\"beforeend\", update.svg)\n  }\n\n  protected removeChild(update: TUpdatePatchRemoveChild): void\n  {\n    this.context.parent.querySelector(`#${ update.parentId } > *:nth-child(${ update.index + 1 })`)?.remove()\n  }\n\n  protected removeElement(update: TUpdatePatchRemoveElement): void\n  {\n    const elementToRemove = this.context.parent.querySelector(`#${ update.id }`)\n    if (elementToRemove) {\n      if (update.id.includes(\"s\") || update.id.includes(\"MODEL\")) {\n        elementToRemove.remove()\n      } else {\n        elementToRemove.setAttribute(\"class\", \"removed-stroke\")\n        setTimeout(() =>\n        {\n          elementToRemove?.remove()\n        }, 100)\n      }\n    }\n  }\n\n  protected insertBefore(update: TUpdatePatchInsertBefore): void\n  {\n    const parent = this.context.parent.querySelector(`#${ update.refId }`) as HTMLElement | null\n    parent?.insertAdjacentHTML(\"beforebegin\", update.svg)\n  }\n\n  protected setAttribute(update: TUpdatePatchSetAttribut): void\n  {\n    const selector = update.id ? `#${ update.id }` : \"svg\"\n    const element = this.context.parent.querySelector(selector) as HTMLElement | null\n    element?.setAttribute(update.name, update.value)\n  }\n\n  protected removeAttribute(update: TUpdatePatchRemoveAttribut): void\n  {\n    const selector = update.id ? `#${ update.id }` : \"svg\"\n    const element = this.context.parent.querySelector(selector) as HTMLElement | null\n    element?.removeAttribute(update.name)\n  }\n\n  updateLayer(layerName: string, update: TUpdatePatch): void\n  {\n    this.#logger.info(\"updateLayer\", { layerName, update })\n    switch (update.type) {\n      case \"REPLACE_ALL\":\n        this.replaceAll(layerName, update as TUpdatePatchReplaceAll)\n        break\n      case \"REPLACE_ELEMENT\":\n        this.replaceElement(update as TUpdatePatchReplaceELement)\n        break\n      case \"APPEND_CHILD\":\n        this.appendChild(layerName, update as TUpdatePatchAppendChild)\n        break\n      case \"REMOVE_ELEMENT\":\n        this.removeElement(update as TUpdatePatchRemoveElement)\n        break\n      case \"REMOVE_CHILD\":\n        this.removeChild(update as TUpdatePatchRemoveChild)\n        break\n      case \"INSERT_BEFORE\":\n        this.insertBefore(update as TUpdatePatchInsertBefore)\n        break\n      case \"SET_ATTRIBUTE\":\n        this.setAttribute(update as TUpdatePatchSetAttribut)\n        break\n      case \"REMOVE_ATTRIBUTE\":\n        this.removeAttribute(update as TUpdatePatchRemoveAttribut)\n        break\n      default:\n        this.#logger.warn(\"updateLayer\", `update.type unknow ${update.type}`)\n        break\n    }\n  }\n\n  updatesLayer(layerName: string, updates: TUpdatePatch[]): void\n  {\n    this.#logger.info(\"updatesLayer\", { layerName, updates })\n    updates.forEach(u => this.updateLayer(layerName, u))\n    this.clearPendingStroke()\n  }\n\n  clearPendingStroke(): void\n  {\n    this.#logger.info(\"clearPendingStroke\")\n    const pendingStrokeGroup = this.context.parent.querySelector(\"#pendingStrokes\") as SVGElement\n    if (pendingStrokeGroup) {\n      pendingStrokeGroup.innerHTML = \"\"\n    }\n  }\n\n  drawPendingStroke(stroke: TStroke): void\n  {\n    this.#logger.info(\"drawPendingStroke\", { stroke })\n    if (stroke) {\n      const pendingStrokeGroup = this.context.parent.querySelector(\"#pendingStrokes\") as SVGElement\n      if (pendingStrokeGroup) {\n        const oldStroke = pendingStrokeGroup.querySelector(`#${ stroke?.id }`)\n        if (oldStroke) {\n          oldStroke.remove()\n        }\n        this.drawStroke(pendingStrokeGroup, stroke)\n      }\n    }\n  }\n\n  clearErasingStrokes(): void\n  {\n    const erasingStrokeList = this.context.parent.querySelectorAll(\"[type=eraser]\") as NodeListOf<SVGElement>\n    erasingStrokeList.forEach(erasingStroke => {\n      erasingStroke.remove()\n    })\n  }\n\n  resize(model: Model): void\n  {\n    this.#logger.info(\"resize\", { model })\n    const rect = this.context.parent.getBoundingClientRect()\n    const svgList = this.context.parent.querySelectorAll(\"svg\")\n    const width = Math.max(rect.width, model.width)\n    const height = Math.max(rect.height, model.height)\n    svgList.forEach(svg =>\n    {\n      svg.setAttribute(\"viewBox\", `0 0 ${ width }, ${ height }`)\n      svg.setAttribute(\"width\", `${ width }px`)\n      svg.setAttribute(\"height\", `${ height }px`)\n    })\n  }\n\n  destroy(): void\n  {\n    this.#logger.info(\"destroy\", { context: this.context })\n    if (this.context?.parent) {\n      this.context.parent.querySelectorAll(\"svg\").forEach(n => n.remove())\n    }\n  }\n}","\n/**\n * @group Renderer\n */\nexport type TGuidesConfiguration = {\n  enable: boolean,\n  gap: number\n}\n\n/**\n * @group Renderer\n * @source\n */\nexport const DefaultGuidesConfiguration: TGuidesConfiguration = {\n  enable: true,\n  gap: 50,\n}\n\n/**\n * @group Renderer\n */\nexport type TRendererConfiguration = {\n  minHeight: number\n  minWidth: number\n  guides: TGuidesConfiguration\n}\n\n/**\n * @group Renderer\n * @source\n */\nexport const DefaultRendererConfiguration: TRendererConfiguration = {\n  guides: DefaultGuidesConfiguration,\n  minHeight: 100,\n  minWidth: 100,\n}\n\n/**\n * @group Renderer\n */\nexport type TIIRendererConfiguration = TRendererConfiguration & {\n  guides: TGuidesConfiguration & {\n    type: \"line\" | \"grid\" | \"point\"\n  },\n}\n\n/**\n * @group Renderer\n * @source\n */\nexport const DefaultIIRendererConfiguration: TIIRendererConfiguration = {\n  guides: {\n    enable: true,\n    gap: 50,\n    type: \"point\"\n  },\n  minHeight: 100,\n  minWidth: 100,\n}\n","\n/**\n * @group Grabber\n */\nexport type TListenerConfiguration = {\n  capture: boolean\n  passive: boolean\n}\n\n/**\n * @group Grabber\n * @source\n */\nexport const DefaultListenerConfiguration: TListenerConfiguration = {\n  capture: false,\n  passive: true\n}\n\n/**\n * @group Grabber\n */\nexport type TGrabberConfiguration = {\n  listenerOptions: TListenerConfiguration\n  xyFloatPrecision: number\n  timestampFloatPrecision: number\n  delayLongTouch: number\n}\n\n/**\n * @group Grabber\n * @source\n */\nexport const DefaultGrabberConfiguration: TGrabberConfiguration = {\n  listenerOptions: DefaultListenerConfiguration,\n  xyFloatPrecision: 0,\n  timestampFloatPrecision: 0,\n  delayLongTouch: 500\n}\n","import { TGrabberConfiguration } from \"./GrabberConfiguration\"\nimport { LoggerCategory, LoggerLevel, LoggerManager } from \"../logger\"\nimport { TPointer } from \"../symbol\"\n\nexport type PointerInfo = {\n  clientX: number,\n  clientY: number,\n  isPrimary: boolean,\n  type: string,\n  pointerType: string,\n  target: HTMLElement,\n  pointer: TPointer,\n  button: number,\n  buttons: number\n}\n\n/**\n * @group Grabber\n */\nexport class PointerEventGrabber\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.GRABBER)\n\n  protected configuration: TGrabberConfiguration\n  protected layerCapture!: HTMLElement\n  protected capturing: boolean = false\n  protected pointerType?: string\n  protected prevent = (e: Event) => e.preventDefault()\n\n  onPointerDown?: (info: PointerInfo) => void\n  onPointerMove?: (info: PointerInfo) => void\n  onPointerUp?: (info: PointerInfo) => void\n  onContextMenu?: (info: PointerInfo) => void\n\n  constructor(configuration: TGrabberConfiguration)\n  {\n    this.#logger.info(\"constructor\", { configuration })\n    this.configuration = configuration\n  }\n\n  protected roundFloat(oneFloat: number, requestedFloatPrecision: number): number\n  {\n    if (requestedFloatPrecision >= 0) {\n      const floatPrecision: number = Math.pow(10, requestedFloatPrecision)\n      return Math.round(oneFloat / floatPrecision) * floatPrecision\n    }\n    this.#logger.debug(\"roundFloat\", { oneFloat, requestedFloatPrecision })\n    return oneFloat\n  }\n\n  protected extractPointer(event: MouseEvent | TouchEvent): TPointer\n  {\n    let clientX: number, clientY: number\n    if (\"changedTouches\" in event) {\n      ({ clientX, clientY } = event.changedTouches[0])\n    } else {\n      ({ clientX, clientY } = event)\n    }\n    const rect: DOMRect = this.layerCapture.getBoundingClientRect()\n    const pointer = {\n      x: this.roundFloat(clientX - rect.left - this.layerCapture.clientLeft + this.layerCapture.scrollLeft, this.configuration.xyFloatPrecision),\n      y: this.roundFloat(clientY - rect.top - this.layerCapture.clientTop + this.layerCapture.scrollTop, this.configuration.xyFloatPrecision),\n      t: this.roundFloat(Date.now(), this.configuration.timestampFloatPrecision),\n      p: (event as PointerEvent).pressure,\n    }\n    this.#logger.debug(\"extractPointer\", { event, pointer })\n    return pointer\n  }\n\n  protected getPointerInfos(evt: PointerEvent): PointerInfo\n  {\n    return {\n      clientX: evt.clientX,\n      clientY: evt.clientY,\n      isPrimary: evt.isPrimary,\n      type: evt.type,\n      target: evt.target as HTMLElement,\n      pointerType: evt.pointerType,\n      pointer: this.extractPointer(evt),\n      button: evt.button,\n      buttons: evt.buttons\n    }\n  }\n\n  protected pointerDownHandler = (evt: PointerEvent) =>\n  {\n    const pointerInfo = this.getPointerInfos(evt)\n    this.#logger.debug(\"pointerDownHandler\", pointerInfo)\n\n    // exit if not a left click or multi-touch\n    if (pointerInfo.button !== 0 || evt.buttons !== 1) {\n      return\n    }\n    this.capturing = true\n    this.pointerType = evt.pointerType\n\n    if (this.#logger.level === LoggerLevel.INFO) {\n      this.#logger.info(\"pointerDownHandler\", pointerInfo)\n    }\n\n    if (this.onPointerDown) {\n      this.onPointerDown(pointerInfo)\n    }\n  }\n\n  protected pointerMoveHandler = (evt: PointerEvent) =>\n  {\n    const pointerInfo = this.getPointerInfos(evt)\n    this.#logger.debug(\"pointerMoveHandler\", pointerInfo)\n    if (this.capturing && this.pointerType === evt.pointerType) {\n      if (this.#logger.level === LoggerLevel.INFO) {\n        this.#logger.info(\"pointerMoveHandler\", pointerInfo)\n      }\n      if (this.onPointerMove) {\n        this.onPointerMove(pointerInfo)\n      }\n    }\n  }\n\n  protected pointerUpHandler = (evt: PointerEvent) =>\n  {\n    const pointerInfo = this.getPointerInfos(evt)\n    this.#logger.debug(\"pointerUpHandler\", pointerInfo)\n    if (this.capturing && this.pointerType === evt.pointerType) {\n      if (this.#logger.level === LoggerLevel.INFO) {\n        this.#logger.info(\"pointerUpHandler\", pointerInfo)\n      }\n      this.pointerType = undefined\n      this.capturing = false\n      if (this.onPointerUp) {\n        this.onPointerUp(pointerInfo)\n      }\n    }\n  }\n\n  protected pointerOutHandler = (evt: PointerEvent) =>\n  {\n    const pointerInfo = this.getPointerInfos(evt)\n    this.#logger.debug(\"pointerOutHandler\", pointerInfo)\n    if (this.capturing && this.pointerType === evt.pointerType && !this.layerCapture.contains(evt.target as HTMLElement)) {\n      if (this.#logger.level === LoggerLevel.INFO) {\n        this.#logger.info(\"pointerOutHandler\", pointerInfo)\n      }\n      this.pointerType = undefined\n      this.capturing = false\n      if (this.onPointerUp) {\n        this.onPointerUp(pointerInfo)\n      }\n    }\n  }\n\n  protected contextMenuHandler = (evt: MouseEvent) =>\n  {\n    const pointerInfo = this.getPointerInfos(evt as PointerEvent)\n    this.#logger.debug(\"contextMenuHandler\", pointerInfo)\n    if (evt.target && this.onContextMenu){\n      if (this.#logger.level === LoggerLevel.INFO) {\n        this.#logger.info(\"contextMenuHandler\", pointerInfo)\n      }\n      this.onContextMenu(pointerInfo)\n    }\n  }\n\n  stopPointerEvent(): void\n  {\n    this.capturing = false\n    this.pointerType = undefined\n  }\n\n  attach(layerCapture: HTMLElement)\n  {\n    this.#logger.info(\"attach\", { domElement: layerCapture })\n    if (this.layerCapture) {\n      this.detach()\n    }\n    this.layerCapture = layerCapture\n    // The touch-action CSS property prevents the input from continuing.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/pointercancel_event\n    this.layerCapture.style.setProperty(\"touch-action\", \"none\")\n    this.layerCapture.addEventListener(\"pointerdown\", this.pointerDownHandler, this.configuration.listenerOptions)\n    this.layerCapture.addEventListener(\"pointermove\", this.pointerMoveHandler, this.configuration.listenerOptions)\n    this.layerCapture.addEventListener(\"pointerup\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.layerCapture.addEventListener(\"pointercancel\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.layerCapture.addEventListener(\"pointerleave\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.layerCapture.addEventListener(\"pointerout\", this.pointerOutHandler, this.configuration.listenerOptions)\n    this.layerCapture.addEventListener(\"contextmenu\", this.contextMenuHandler)\n  }\n\n  detach()\n  {\n    this.#logger.info(\"detach\")\n    this.layerCapture?.style.removeProperty(\"touch-action\")\n    this.layerCapture?.removeEventListener(\"pointerdown\", this.pointerDownHandler, this.configuration.listenerOptions)\n    this.layerCapture?.removeEventListener(\"pointermove\", this.pointerMoveHandler, this.configuration.listenerOptions)\n    this.layerCapture?.removeEventListener(\"pointerup\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.layerCapture?.removeEventListener(\"pointerleave\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.layerCapture?.removeEventListener(\"pointercancel\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.layerCapture?.removeEventListener(\"pointerout\", this.pointerOutHandler, this.configuration.listenerOptions)\n    this.layerCapture?.removeEventListener(\"contextmenu\", this.contextMenuHandler)\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport\n{\n  TIISymbol,\n  TPointer,\n} from \"../symbol\"\nimport { SVGRenderer } from \"../renderer\"\nimport { TStyle } from \"../style\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { PointerEventGrabber, PointerInfo } from \"../grabber\"\nimport { InkEditor } from \"../editor\"\n\n\n/**\n * @group Manager\n */\nexport abstract class AbstractWriterManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.WRITE)\n  grabber: PointerEventGrabber\n  editor: InteractiveInkEditor | InkEditor\n  currentSymbol?: TIISymbol\n\n  detectGesture: boolean = true\n\n  constructor(editor: InteractiveInkEditor | InkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n    this.grabber = new PointerEventGrabber(editor.configuration.grabber)\n  }\n\n  get renderer(): SVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  attach(layer: HTMLElement): void\n  {\n    this.grabber.attach(layer)\n    this.grabber.onPointerDown = this.start.bind(this)\n    this.grabber.onPointerMove = this.continue.bind(this)\n    this.grabber.onPointerUp = this.end.bind(this)\n  }\n\n  detach(): void\n  {\n    this.grabber.detach()\n  }\n\n  protected abstract createCurrentSymbol(pointer: TPointer, style: TStyle, pointerType: string): TIISymbol\n  protected abstract updateCurrentSymbol(pointer: TPointer): TIISymbol\n\n  start(info: PointerInfo): void\n  {\n    this.#logger.info(\"startWriting\", { info })\n    const localPointer = info.pointer\n    this.currentSymbol = this.createCurrentSymbol(localPointer, this.editor.penStyle, info.pointerType)\n    this.renderer.drawSymbol(this.currentSymbol!)\n  }\n\n  continue(info: PointerInfo): void\n  {\n    this.#logger.info(\"continueWriting\", { info })\n    const localPointer = info.pointer\n    this.currentSymbol = this.updateCurrentSymbol(localPointer)\n    this.renderer.drawSymbol(this.currentSymbol!)\n  }\n\n  abstract end(info: PointerInfo): Promise<void>\n}\n","import { InteractiveInkEditor } from \"../editor\"\nimport { LoggerManager, LoggerCategory } from \"../logger\"\nimport\n{\n  IIModel,\n  TJIIXChar,\n  TJIIXEdgeArc,\n  TJIIXEdgeElement,\n  JIIXEdgeKind,\n  TJIIXEdgeLine,\n  TJIIXEdgePolyEdge,\n  TJIIXExport,\n  TJIIXNodeCircle,\n  TJIIXNodeElement,\n  TJIIXNodeEllipse,\n  JIIXNodeKind,\n  TJIIXNodeParrallelogram,\n  TJIIXNodePolygon,\n  TJIIXNodeRectangle,\n  TJIIXNodeRhombus,\n  TJIIXNodeTriangle,\n  TJIIXTextElement,\n  TJIIXWord\n} from \"../model\"\nimport\n{\n  Box,\n  DecoratorKind,\n  IIDecorator,\n  IIEdgeArc,\n  IIEdgeLine,\n  IIEdgePolyLine,\n  IIShapeCircle,\n  IIShapeEllipse,\n  IIShapePolygon,\n  IIStroke,\n  IIText,\n  SymbolType,\n  TIIEdge,\n  TIIShape,\n  TIISymbol,\n  TIISymbolChar,\n  TPoint\n} from \"../symbol\"\nimport { RecognizedKind } from \"../symbol\"\nimport { computeAngleAxeRadian, computeAverage, convertBoundingBoxMillimeterToPixel, convertMillimeterToPixel, createUUID } from \"../utils\"\n\n/**\n * @group Manager\n */\nexport class IIConversionManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.CONVERTER)\n  editor: InteractiveInkEditor\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get configuration(): { size: number | \"auto\", weight: \"bold\" | \"normal\" | \"auto\" } {\n    return this.editor.configuration.fontStyle\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get rowHeight(): number\n  {\n    return this.editor.configuration.rendering.guides.gap\n  }\n\n  protected computeFontSize(chars: TJIIXChar[]): number\n  {\n    if (chars.some(c => c[\"bounding-box\"])) {\n      const height = convertMillimeterToPixel(computeAverage(chars.map(c => c[\"bounding-box\"]?.height || 1)))\n      return Math.round(Math.round(height * this.rowHeight) / this.rowHeight / 2) * 2\n    }\n    return Math.round(this.rowHeight / 2)\n  }\n\n  buildChar(char: TJIIXChar, strokes: IIStroke[], fontSize: number): TIISymbolChar\n  {\n    const points = char.grid.map(p => ({\n      x: convertMillimeterToPixel(p.x),\n      y: convertMillimeterToPixel(p.y),\n    }))\n    let fontWeight = this.configuration.weight\n    if (fontWeight === \"auto\") {\n      fontWeight = (strokes[0].style.width || 1) > 2 ? \"bold\" : \"normal\"\n    }\n\n    const color = strokes[0].style.color || \"black\"\n    return {\n      id: `text-char-${ createUUID() }`,\n      label: char.label,\n      color,\n      fontSize,\n      fontWeight,\n      bounds: Box.createFromPoints(points)\n    }\n  }\n\n  buildText(word: TJIIXWord, chars: TJIIXChar[], strokes: IIStroke[], size: number | \"auto\"): IIText\n  {\n    const boundingBox = Box.createFromBoxes([convertBoundingBoxMillimeterToPixel(word[\"bounding-box\"])])\n    const charSymbols: TIISymbolChar[] = []\n    const charFontSize = size === \"auto\" ? this.computeFontSize(chars) : size\n\n    chars.forEach(char =>\n    {\n      const charStrokes = strokes.filter(s => char.items?.some(i => i[\"full-id\"] === s.id)) as IIStroke[]\n      if (charStrokes.length) {\n        charSymbols.push(this.buildChar(char, charStrokes, charFontSize))\n      }\n    })\n    const point: TPoint = {\n      x: boundingBox.xMin,\n      y: boundingBox.yMax\n    }\n    const text = new IIText(charSymbols, point, boundingBox, strokes[0].style)\n    const decorators = strokes.flatMap(s => s.decorators)\n    strokes.forEach(s =>\n    {\n      const sym = this.model.getRootSymbol(s.id)\n      if ((sym?.type === SymbolType.Recognized && sym.kind === RecognizedKind.Text) || sym?.type === SymbolType.Group) {\n        const hightlight = sym.decorators.find(d => d.kind === DecoratorKind.Highlight)\n        if (hightlight) decorators.push(hightlight)\n        const strikethrough = sym.decorators.find(d => d.kind === DecoratorKind.Strikethrough)\n        if (strikethrough) decorators.push(strikethrough)\n        const surround = sym.decorators.find(d => d.kind === DecoratorKind.Surround)\n        if (surround) decorators.push(surround)\n        const underline = sym.decorators.find(d => d.kind === DecoratorKind.Underline)\n        if (underline) decorators.push(underline)\n      }\n    })\n    if (decorators.length) {\n      const hightlight = decorators.find(d => d.kind === DecoratorKind.Highlight)\n      if (hightlight) {\n        text.decorators.push(new IIDecorator(DecoratorKind.Highlight, hightlight.style))\n      }\n      const strikethrough = decorators.find(d => d.kind === DecoratorKind.Strikethrough)\n      if (strikethrough) {\n        text.decorators.push(new IIDecorator(DecoratorKind.Strikethrough, strikethrough.style))\n      }\n      const surround = decorators.find(d => d.kind === DecoratorKind.Surround)\n      if (surround) {\n        text.decorators.push(new IIDecorator(DecoratorKind.Surround, surround.style))\n      }\n      const underline = decorators.find(d => d.kind === DecoratorKind.Underline)\n      if (underline) {\n        text.decorators.push(new IIDecorator(DecoratorKind.Underline, underline.style))\n      }\n    }\n\n    return text\n  }\n\n  convertText(text: TJIIXTextElement, strokes: IIStroke[], onlyText: boolean): { symbol: IIText, strokes: IIStroke[] }[] | undefined\n  {\n    if (!text.lines) {\n      throw new Error(\"You need to active configuration.recognition.export.jiix.text.lines = true\")\n    }\n    if (!text.words) {\n      throw new Error(\"You need to active configuration.recognition.export.jiix.text.words = true\")\n    }\n    if (!text.chars) {\n      throw new Error(\"You need to active configuration.recognition.export.jiix.text.chars = true\")\n    }\n    if (!text.chars.some(c => c.items)) {\n      throw new Error(\"You need to active configuration.recognition.export.jiix.strokes = true\")\n    }\n\n    const jiixWords = text.words as TJIIXWord[]\n    const jiixChars = text.chars as TJIIXChar[]\n\n    const result: { symbol: IIText, strokes: IIStroke[] }[] = []\n\n\n    let textFontSize = this.configuration.size\n    if (onlyText && textFontSize === \"auto\") {\n      textFontSize = Math.round(this.computeFontSize(jiixChars.filter(c => c.items?.length)) / 2) * 2\n    }\n    else if (this.configuration.size !== \"auto\") {\n      textFontSize = this.configuration.size * this.rowHeight\n    }\n\n    let isNewLine = false\n    let currentY = convertMillimeterToPixel(text.lines[0][\"baseline-y\"])\n    const leftX = convertMillimeterToPixel(text[\"bounding-box\"]?.x || 0)\n    let currentX = convertMillimeterToPixel(jiixWords[0][\"bounding-box\"]?.x || 0)\n    jiixWords.forEach(word =>\n    {\n      if (word.label === \" \") {\n        currentX += this.editor.texter.getSpaceWidth(result.at(-1)?.symbol.chars[0].fontSize|| (this.rowHeight / 2))\n        return\n      }\n      const wordStrokes = strokes.filter(s => word.items?.some(i => i[\"full-id\"] === s.id)) as IIStroke[]\n      if (wordStrokes.length) {\n        const chars = jiixChars.slice(word[\"first-char\"] as number, (word[\"last-char\"] || 0) + 1)\n        const wordSymbol = this.buildText(word, chars, wordStrokes, textFontSize)\n\n        if (onlyText) {\n          if (isNewLine) {\n            isNewLine = false\n            const nbRow = Math.round((wordSymbol.point.y - currentY) / this.rowHeight) || 1\n            currentY += nbRow * this.rowHeight\n            if (Math.abs(wordSymbol.point.x - leftX) < this.rowHeight) {\n              currentX = leftX\n            }\n            else {\n              currentX = wordSymbol.point.x\n            }\n          }\n          wordSymbol.point.x = currentX\n          wordSymbol.point.y = this.model.roundToLineGuide(currentY)\n        }\n\n        this.editor.texter.setBounds(wordSymbol)\n        currentX += wordSymbol.bounds.width\n        result.push({\n          symbol: wordSymbol,\n          strokes: wordStrokes\n        })\n      }\n      isNewLine = word.label === \"\\n\"\n    })\n\n    return result\n  }\n\n  buildCircle(circle: TJIIXNodeCircle, strokes: IIStroke[]): IIShapeCircle\n  {\n    const center: TPoint = {\n      x: convertMillimeterToPixel(circle.cx),\n      y: convertMillimeterToPixel(circle.cy)\n    }\n    return new IIShapeCircle(center, convertMillimeterToPixel(circle.r), strokes[0]?.style)\n  }\n\n  buildEllipse(ellipse: TJIIXNodeEllipse, strokes: IIStroke[]): IIShapeEllipse\n  {\n    const center: TPoint = {\n      x: convertMillimeterToPixel(ellipse.cx),\n      y: convertMillimeterToPixel(ellipse.cy),\n    }\n    return new IIShapeEllipse(center, convertMillimeterToPixel(ellipse.rx), convertMillimeterToPixel(ellipse.ry), ellipse.orientation, strokes[0]?.style)\n  }\n\n  buildRectangle(rectangle: TJIIXNodeRectangle, strokes: IIStroke[]): IIShapePolygon\n  {\n    const height = convertMillimeterToPixel(rectangle.height)\n    const width = convertMillimeterToPixel(rectangle.width)\n    const x = convertMillimeterToPixel(rectangle.x)\n    const y = convertMillimeterToPixel(rectangle.y)\n    const points: TPoint[] = [\n      { x, y },\n      { x: x + width, y },\n      { x: x + width, y: y + height },\n      { x, y: y + height }\n    ]\n    return new IIShapePolygon(points, strokes[0]?.style)\n  }\n\n  buildPolygon(polygon: TJIIXNodePolygon, strokes: IIStroke[]): IIShapePolygon\n  {\n    const points: TPoint[] = []\n    for (let i = 0; i < polygon.points.length; i += 2) {\n      points.push({\n        x: convertMillimeterToPixel(polygon.points[i]),\n        y: convertMillimeterToPixel(polygon.points[i + 1])\n      })\n    }\n\n    return new IIShapePolygon(points, strokes[0]?.style)\n  }\n\n  buildRhombus(polygon: TJIIXNodeRhombus, strokes: IIStroke[]): IIShapePolygon\n  {\n    const points: TPoint[] = []\n    for (let i = 0; i < polygon.points.length; i += 2) {\n      points.push({\n        x: convertMillimeterToPixel(polygon.points[i]),\n        y: convertMillimeterToPixel(polygon.points[i + 1])\n      })\n    }\n\n    return new IIShapePolygon(points, strokes[0]?.style)\n  }\n\n  buildTriangle(polygon: TJIIXNodeTriangle, strokes: IIStroke[]): IIShapePolygon\n  {\n    const points: TPoint[] = []\n    for (let i = 0; i < polygon.points.length; i += 2) {\n      points.push({\n        x: convertMillimeterToPixel(polygon.points[i]),\n        y: convertMillimeterToPixel(polygon.points[i + 1])\n      })\n    }\n\n    return new IIShapePolygon(points, strokes[0]?.style)\n  }\n\n  buildParallelogram(polygon: TJIIXNodeParrallelogram, strokes: IIStroke[]): IIShapePolygon\n  {\n    const points: TPoint[] = []\n    for (let i = 0; i < polygon.points.length; i += 2) {\n      points.push({\n        x: convertMillimeterToPixel(polygon.points[i]),\n        y: convertMillimeterToPixel(polygon.points[i + 1])\n      })\n    }\n\n    return new IIShapePolygon(points, strokes[0]?.style)\n  }\n\n  convertNode(node: TJIIXNodeElement, strokes: IIStroke[]): { symbol: TIIShape, strokes: IIStroke[] } | undefined\n  {\n    const associatedStroke = strokes.filter(s => node.items?.some(i => i[\"full-id\"] === s.id))\n    if (!associatedStroke.length) return\n\n    const uniqStrokes = associatedStroke.filter((a, i) => associatedStroke.findIndex((s) => a.id === s.id) === i)\n\n    let shape: TIIShape\n    switch (node.kind) {\n      case JIIXNodeKind.Circle:\n        shape = this.buildCircle(node, uniqStrokes)\n        break\n      case JIIXNodeKind.Ellipse:\n        shape = this.buildEllipse(node, uniqStrokes)\n        break\n      case JIIXNodeKind.Rectangle:\n        shape = this.buildRectangle(node, uniqStrokes)\n        break\n      case JIIXNodeKind.Triangle:\n        shape = this.buildTriangle(node, uniqStrokes)\n        break\n      case JIIXNodeKind.Parallelogram:\n        shape = this.buildParallelogram(node, uniqStrokes)\n        break\n      case JIIXNodeKind.Polygon:\n        shape = this.buildPolygon(node, uniqStrokes)\n        break\n      case JIIXNodeKind.Rhombus:\n        shape = this.buildRhombus(node, uniqStrokes)\n        break\n      default:\n        this.#logger.warn(\"convertNode\", `Conversion of Node with kind equal to ${ JSON.stringify(node) } is unknow`)\n        return\n    }\n    return { symbol: shape, strokes: uniqStrokes }\n  }\n\n  buildLine(line: TJIIXEdgeLine, strokes: IIStroke[]): IIEdgeLine\n  {\n    const point1: TPoint = { x: convertMillimeterToPixel(line.x1), y: convertMillimeterToPixel(line.y1) }\n    const point2: TPoint = { x: convertMillimeterToPixel(line.x2), y: convertMillimeterToPixel(line.y2) }\n    const angle = computeAngleAxeRadian(point1, point2)\n\n    if (Math.abs(angle % Math.PI) < 0.1) {\n      // to adjust the line with the horizontal\n      point1.y = +((point1.y + point2.y) / 2).toFixed(3)\n      point2.y = point1.y\n    }\n    else if (Math.abs(angle % (Math.PI / 2)) < 0.1) {\n      // to adjust the line with the vertical\n      point1.x = +((point1.x + point2.x) / 2).toFixed(3)\n      point2.x = point1.x\n    }\n    return new IIEdgeLine(point1, point2, line.p1Decoration, line.p2Decoration, strokes[0]?.style)\n  }\n\n  buildPolyEdge(polyline: TJIIXEdgePolyEdge, strokes: IIStroke[]): IIEdgePolyLine\n  {\n    const start: TPoint = { x: convertMillimeterToPixel(polyline.edges[0].x1), y: convertMillimeterToPixel(polyline.edges[0].y1) }\n    const points = polyline.edges.map(e => ({ x: convertMillimeterToPixel(e.x2), y: convertMillimeterToPixel(e.y2) }))\n    points.unshift(start)\n    for (let index = 0; index < points.length - 1; index++) {\n      const p1 = points[index]\n      const p2 = points[index + 1]\n      const angle = computeAngleAxeRadian(p1, p2)\n      if (Math.abs(angle % Math.PI) < 0.1) {\n        p1.y = +((p1.y + p2.y) / 2).toFixed(3)\n        p2.y = p1.y\n      }\n      else if (Math.abs(angle % (Math.PI / 2)) < 0.1) {\n        p1.x = +((p1.x + p2.x) / 2).toFixed(3)\n        p2.x = p1.x\n      }\n    }\n\n    return new IIEdgePolyLine(points, polyline.edges[0].p1Decoration, polyline.edges.at(-1)!.p2Decoration, strokes[0]?.style)\n  }\n\n  buildArc(arc: TJIIXEdgeArc, strokes: IIStroke[]): IIEdgeArc\n  {\n    const center: TPoint = { x: convertMillimeterToPixel(arc.cx), y: convertMillimeterToPixel(arc.cy) }\n    const radiusX = convertMillimeterToPixel(arc.rx)\n    const radiusY = convertMillimeterToPixel(arc.ry)\n    return new IIEdgeArc(center, arc.startAngle, arc.sweepAngle, radiusX, radiusY, arc.phi, arc.startDecoration, arc.endDecoration, strokes[0]?.style)\n  }\n\n  convertEdge(edge: TJIIXEdgeElement, strokes: IIStroke[]): { symbol: TIIEdge, strokes: IIStroke[] } | undefined\n  {\n    switch (edge.kind) {\n      case JIIXEdgeKind.Line: {\n        const associatedStroke = strokes.filter(s => edge.items?.some(i => i[\"full-id\"] === s.id))\n        if (!associatedStroke.length) return\n        const uniqStrokes = associatedStroke.filter((a, i) => associatedStroke.findIndex((s) => a.id === s.id) === i)\n        const oiEdge = this.buildLine(edge, uniqStrokes)\n        return {\n          symbol: oiEdge,\n          strokes: uniqStrokes\n        }\n      }\n      case JIIXEdgeKind.Arc: {\n        const associatedStroke = strokes.filter(s => edge.items?.some(i => i[\"full-id\"] === s.id))\n        if (!associatedStroke.length) return\n        const uniqStrokes = associatedStroke.filter((a, i) => associatedStroke.findIndex((s) => a.id === s.id) === i)\n        const oiEdge = this.buildArc(edge, uniqStrokes)\n        return {\n          symbol: oiEdge,\n          strokes: uniqStrokes\n        }\n      }\n      case JIIXEdgeKind.PolyEdge: {\n        const associatedStroke = strokes.filter(s => edge.edges.flatMap(e => e.items)?.some(i => i![\"full-id\"] === s.id))\n        if (!associatedStroke.length) return\n        const uniqStrokes = associatedStroke.filter((a, i) => associatedStroke.findIndex((s) => a.id === s.id) === i)\n        const oiEdge = this.buildPolyEdge(edge, uniqStrokes)\n        return {\n          symbol: oiEdge,\n          strokes: uniqStrokes\n        }\n      }\n      default:\n        this.#logger.error(\"convertEdge\", `Conversion of Edge with kind equal to ${ JSON.stringify(edge) } is unknow`)\n        return\n    }\n  }\n\n  async apply(symbols: TIISymbol[] = []): Promise<void>\n  {\n    this.#logger.info(\"convert\")\n    if (!this.model.exports?.[\"application/vnd.myscript.jiix\"]) {\n      await this.editor.export([\"application/vnd.myscript.jiix\"])\n    }\n    this.editor.selector.removeSelectedGroup()\n    const jiix = this.model.exports?.[\"application/vnd.myscript.jiix\"] as TJIIXExport\n    if (jiix?.elements?.length) {\n      const strokesToConvert = this.editor.extractStrokesFromSymbols(symbols.length ? symbols : this.model.symbols)\n\n      const onlyText = !jiix.elements?.some(e => e.type !== \"Text\")\n      const conversionResults: { symbol: TIISymbol, strokes: IIStroke[] }[] = []\n      jiix.elements.forEach(el =>\n      {\n        switch (el.type) {\n          case \"Text\": {\n            const conversion = this.convertText(el, strokesToConvert, onlyText)\n            if (conversion) {\n              conversionResults.push(...conversion)\n            }\n            break\n          }\n          case \"Node\": {\n            const conversion = this.convertNode(el, strokesToConvert)\n            if (conversion) {\n              conversionResults.push(conversion)\n            }\n            break\n          }\n          case \"Edge\": {\n            const conversion = this.convertEdge(el, strokesToConvert)\n            if (conversion) {\n              conversionResults.push(conversion)\n            }\n            break\n          }\n          default: {\n            this.#logger.warn(\"buildConversions\", `Unknow jiix element type: ${ el.type }`)\n          }\n        }\n      })\n\n      this.editor.addSymbols(conversionResults.map(cs => cs.symbol), false)\n      this.editor.removeSymbols(conversionResults.flatMap(cs => cs.strokes.map(s => s.id)), false)\n      this.editor.history.push(this.model, { added: conversionResults.map(c => c.symbol), erased: conversionResults.flatMap(cs => cs.strokes) })\n    }\n  }\n}\n","import { ResizeDirection, SvgElementRole } from \"../Constants\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport\n{\n  Box,\n  EdgeKind,\n  IIStroke,\n  IISymbolGroup,\n  IIText,\n  ShapeKind,\n  SymbolType,\n  TIIEdge,\n  TIIShape,\n  TIISymbol,\n  TPoint,\n  TIIRecognized,\n  RecognizedKind\n} from \"../symbol\"\n\n/**\n * @group Manager\n */\nexport class IIResizeManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.TRANSFORMER)\n  editor: InteractiveInkEditor\n\n  interactElementsGroup?: SVGElement\n  direction!: ResizeDirection\n  boundingBox!: Box\n  transformOrigin!: TPoint\n  keepRatio = false\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  protected applyToStroke(stroke: IIStroke, origin: TPoint, scaleX: number, scaleY: number): IIStroke\n  {\n    this.#logger.debug(\"applyToStroke\", { stroke, origin, scaleX, scaleY })\n    stroke.pointers.forEach(p =>\n    {\n      p.x = +(origin.x + scaleX * (p.x - origin.x)).toFixed(3)\n      p.y = +(origin.y + scaleY * (p.y - origin.y)).toFixed(3)\n    })\n    return stroke\n  }\n\n  protected applyToShape(shape: TIIShape, origin: TPoint, scaleX: number, scaleY: number): TIIShape\n  {\n    this.#logger.debug(\"applyToShape\", { shape, origin, scaleX, scaleY })\n    switch (shape.kind) {\n      case ShapeKind.Ellipse: {\n        const cosPhi = Math.cos(shape.orientation)\n        const sinPhi = Math.sin(shape.orientation)\n        shape.center.x = +(shape.center.x + ((scaleX - 1) * cosPhi + (scaleY - 1) * sinPhi) * (shape.center.x - origin.x)).toFixed(3)\n        shape.center.y = +(shape.center.y + ((scaleX - 1) * -sinPhi + (scaleY - 1) * cosPhi) * (shape.center.y - origin.y)).toFixed(3)\n        shape.radiusX = +(Math.abs(shape.radiusX * (scaleX * cosPhi - scaleY * sinPhi))).toFixed(3)\n        shape.radiusY = +(Math.abs(shape.radiusY * (scaleX * sinPhi + scaleY * cosPhi))).toFixed(3)\n        return shape\n      }\n      case ShapeKind.Circle: {\n        shape.radius = +(shape.radius * (scaleX + scaleY) / 2).toFixed(3)\n        shape.center.x = +(origin.x + scaleX * (shape.center.x - origin.x)).toFixed(3)\n        shape.center.y = +(origin.y + scaleY * (shape.center.y - origin.y)).toFixed(3)\n        return shape\n      }\n      case ShapeKind.Polygon: {\n        shape.points.forEach(p =>\n        {\n          p.x = +(origin.x + scaleX * (p.x - origin.x)).toFixed(3)\n          p.y = +(origin.y + scaleY * (p.y - origin.y)).toFixed(3)\n        })\n        return shape\n      }\n      default:\n        throw new Error(`Can't apply resize on shape, kind unknow: ${ JSON.stringify(shape) }`)\n    }\n  }\n\n  protected applyToEdge(edge: TIIEdge, origin: TPoint, scaleX: number, scaleY: number): TIIEdge\n  {\n    this.#logger.debug(\"applyToEdge\", { edge, origin, scaleX, scaleY })\n    switch (edge.kind) {\n      case EdgeKind.Arc: {\n        const cosPhi = Math.cos(edge.phi)\n        const sinPhi = Math.sin(edge.phi)\n        edge.center.x = +(edge.center.x + ((scaleX - 1) * cosPhi + (scaleY - 1) * sinPhi) * (edge.center.x - origin.x)).toFixed(3)\n        edge.center.y = +(edge.center.y + ((scaleX - 1) * -sinPhi + (scaleY - 1) * cosPhi) * (edge.center.y - origin.y)).toFixed(3)\n        edge.radiusX = +(edge.radiusX * Math.abs(scaleX * cosPhi + scaleY * sinPhi)).toFixed(3)\n        edge.radiusY = +(edge.radiusY * Math.abs(scaleX * sinPhi + scaleY * cosPhi)).toFixed(3)\n\n        if (scaleX < 0) {\n          edge.startAngle = +(Math.PI - edge.startAngle).toFixed(3)\n          edge.sweepAngle *= -1\n        }\n        else if (scaleY < 0) {\n          edge.sweepAngle *= -1\n        }\n        return edge\n      }\n      case EdgeKind.Line: {\n        edge.start.x = +(origin.x + scaleX * (edge.start.x - origin.x)).toFixed(3)\n        edge.start.y = +(origin.y + scaleY * (edge.start.y - origin.y)).toFixed(3)\n        edge.end.x = +(origin.x + scaleX * (edge.end.x - origin.x)).toFixed(3)\n        edge.end.y = +(origin.y + scaleY * (edge.end.y - origin.y)).toFixed(3)\n        return edge\n      }\n      case EdgeKind.PolyEdge: {\n        edge.points.forEach(p =>\n        {\n          p.x = +(origin.x + scaleX * (p.x - origin.x)).toFixed(3)\n          p.y = +(origin.y + scaleY * (p.y - origin.y)).toFixed(3)\n          return p\n        })\n        return edge\n      }\n      default:\n        throw new Error(`Can't apply resize on edge, kind unknow: ${ JSON.stringify(edge) }`)\n    }\n  }\n\n  protected applyOnText(text: IIText, origin: TPoint, scaleX: number, scaleY: number): IIText\n  {\n    text.point.x = +(origin.x + scaleX * (text.point.x - origin.x)).toFixed(3)\n    text.point.y = +(origin.y + scaleY * (text.point.y - origin.y)).toFixed(3)\n\n    text.chars.forEach(c =>\n    {\n      c.fontSize = +(c.fontSize * (scaleX + scaleY) / 2).toFixed(3)\n    })\n    return this.editor.texter.updateBounds(text)\n  }\n\n  protected applyOnGroup(group: IISymbolGroup, origin: TPoint, scaleX: number, scaleY: number): IISymbolGroup\n  {\n    group.children.forEach(s => this.applyToSymbol(s, origin, scaleX, scaleY))\n    return group\n  }\n\n  protected applyOnRecognizedSymbol(recognizedSymbol: TIIRecognized, origin: TPoint, scaleX: number, scaleY: number): TIIRecognized\n  {\n    recognizedSymbol.strokes.forEach(s => this.applyToStroke(s, origin, scaleX, scaleY))\n    if (recognizedSymbol.kind === RecognizedKind.Text) {\n      recognizedSymbol.xHeight *= scaleY\n    }\n    return recognizedSymbol\n  }\n\n  applyToSymbol(symbol: TIISymbol, origin: TPoint, scaleX: number, scaleY: number): TIISymbol\n  {\n    this.#logger.info(\"applyToSymbol\", { symbol, scaleX, scaleY })\n    switch (symbol.type) {\n      case SymbolType.Stroke:\n        return this.applyToStroke(symbol, origin, scaleX, scaleY)\n      case SymbolType.Shape:\n        return this.applyToShape(symbol, origin, scaleX, scaleY)\n      case SymbolType.Edge:\n        return this.applyToEdge(symbol, origin, scaleX, scaleY)\n      case SymbolType.Text:\n        return this.applyOnText(symbol, origin, scaleX, scaleY)\n      case SymbolType.Group:\n        return this.applyOnGroup(symbol, origin, scaleX, scaleY)\n      case SymbolType.Recognized:\n        return this.applyOnRecognizedSymbol(symbol, origin, scaleX, scaleY)\n      default:\n        throw new Error(`Can't apply resize on symbol, type unknow: ${ JSON.stringify(symbol) }`)\n    }\n  }\n\n  setTransformOrigin(id: string, originX: number, originY: number): void\n  {\n    this.editor.renderer.setAttribute(id, \"transform-origin\", `${ originX }px ${ originY }px`)\n  }\n\n  scaleElement(id: string, sx: number, sy: number): void\n  {\n    this.#logger.info(\"scaleElement\", { id, sx, sy })\n    this.editor.renderer.setAttribute(id, \"transform\", `scale(${ sx },${ sy })`)\n  }\n\n  start(target: Element, origin: TPoint): void\n  {\n    this.#logger.info(\"start\", { target })\n    this.interactElementsGroup = (target.closest(`[role=${ SvgElementRole.InteractElementsGroup }]`) as unknown) as SVGGElement\n    this.direction = target.getAttribute(\"resize-direction\") as ResizeDirection\n\n    this.keepRatio = this.model.symbolsSelected.some(s => s.type === SymbolType.Text || (s.type === SymbolType.Shape && (s as TIIShape).kind === ShapeKind.Circle))\n\n    this.transformOrigin = origin\n    this.boundingBox = Box.createFromPoints(this.model.symbolsSelected.flatMap(s => s.vertices))\n    this.setTransformOrigin(this.interactElementsGroup!.id, this.transformOrigin.x, this.transformOrigin.y)\n    this.model.symbolsSelected.forEach(s =>\n    {\n      this.setTransformOrigin(s.id, this.transformOrigin.x, this.transformOrigin.y)\n    })\n  }\n\n  continue(point: TPoint): { scaleX: number, scaleY: number }\n  {\n    this.#logger.info(\"continue\", { point })\n    if (!this.interactElementsGroup) {\n      throw new Error(\"Can't resize, you must call start before\")\n    }\n    const localPoint = point\n    const horizontalResize = [\n      ResizeDirection.East,\n      ResizeDirection.NorthEast,\n      ResizeDirection.SouthEast,\n      ResizeDirection.West,\n      ResizeDirection.NorthWest,\n      ResizeDirection.SouthWest\n    ].includes(this.direction)\n    const verticalResize = [\n      ResizeDirection.North,\n      ResizeDirection.NorthEast,\n      ResizeDirection.NorthWest,\n      ResizeDirection.South,\n      ResizeDirection.SouthEast,\n      ResizeDirection.SouthWest\n    ].includes(this.direction)\n    const { x, y } = this.editor.snaps.snapResize(point, horizontalResize, verticalResize)\n    localPoint.x = x\n    localPoint.y = y\n\n    let deltaX = 0, deltaY = 0\n    if ([ResizeDirection.East, ResizeDirection.NorthEast, ResizeDirection.SouthEast].includes(this.direction)) {\n      deltaX = localPoint.x - this.boundingBox.xMax\n    }\n    else if ([ResizeDirection.West, ResizeDirection.NorthWest, ResizeDirection.SouthWest].includes(this.direction)) {\n      deltaX = this.boundingBox.xMin - localPoint.x\n    }\n\n    if ([ResizeDirection.North, ResizeDirection.NorthEast, ResizeDirection.NorthWest].includes(this.direction)) {\n      deltaY = this.boundingBox.yMin - localPoint.y\n    }\n    else if ([ResizeDirection.South, ResizeDirection.SouthEast, ResizeDirection.SouthWest].includes(this.direction)) {\n      deltaY = localPoint.y - this.boundingBox.yMax\n    }\n\n    let scaleX = this.boundingBox.width ? 1 + (deltaX / this.boundingBox.width) : 1\n    let scaleY = this.boundingBox.height ? 1 + (deltaY / this.boundingBox.height) : 1\n\n    if (this.keepRatio) {\n      if ([ResizeDirection.North, ResizeDirection.South].includes(this.direction)) {\n        scaleX = scaleY\n      }\n      else if ([ResizeDirection.East, ResizeDirection.West].includes(this.direction)) {\n        scaleY = scaleX\n      }\n      else {\n        scaleX = Math.max(scaleX, scaleY)\n        scaleY = scaleX\n      }\n    }\n    this.scaleElement(this.interactElementsGroup.id, scaleX, scaleY)\n    this.model.symbolsSelected.forEach(s =>\n    {\n      this.scaleElement(s.id, scaleX, scaleY)\n    })\n    return {\n      scaleX,\n      scaleY\n    }\n  }\n\n  async end(point: TPoint): Promise<void>\n  {\n    this.#logger.info(\"end\", { point })\n    const { scaleX, scaleY } = this.continue(point)\n    this.editor.snaps.clearSnapToElementLines()\n    const oldSymbols = this.model.symbolsSelected.map(s => s.clone())\n    this.model.symbolsSelected.forEach(s =>\n    {\n      this.applyToSymbol(s, this.transformOrigin, scaleX, scaleY)\n      this.editor.renderer.drawSymbol(s)\n      this.model.updateSymbol(s)\n    })\n\n    const strokesFromSymbols = this.editor.extractStrokesFromSymbols(this.model.symbolsSelected)\n    this.editor.recognizer.transformScale(strokesFromSymbols.map(s => s.id), scaleX, scaleY, this.transformOrigin.x, this.transformOrigin.y)\n    this.editor.history.push(this.model, { scale: [{ symbols: oldSymbols, origin: {...this.transformOrigin}, scaleX, scaleY }] })\n\n    this.interactElementsGroup = undefined\n    this.editor.svgDebugger.apply()\n  }\n}\n","import { SvgElementRole } from \"../Constants\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport\n{\n  Box,\n  EdgeKind,\n  IIStroke,\n  IISymbolGroup,\n  IIText,\n  TIIRecognized,\n  ShapeKind,\n  SymbolType,\n  TIIEdge,\n  TIIShape,\n  TIISymbol,\n  TPoint\n} from \"../symbol\"\nimport { computeAngleRadian, convertDegreeToRadian, convertRadianToDegree, computeRotatedPoint } from \"../utils\"\n\n/**\n * @group Manager\n */\nexport class IIRotationManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.TRANSFORMER)\n  editor: InteractiveInkEditor\n  interactElementsGroup?: SVGElement\n  center!: TPoint\n  origin!: TPoint\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  protected applyToStroke(stroke: IIStroke, center: TPoint, angleRad: number): IIStroke\n  {\n    stroke.pointers.forEach(p =>\n    {\n      const { x, y } = computeRotatedPoint(p, center, angleRad)\n      p.x = x\n      p.y = y\n    })\n    return stroke\n  }\n\n  protected applyToShape(shape: TIIShape, center: TPoint, angleRad: number): TIIShape\n  {\n    switch (shape.kind) {\n      case ShapeKind.Ellipse: {\n        shape.center = computeRotatedPoint(shape.center, center, angleRad)\n        shape.orientation = (shape.orientation + angleRad) % (2 * Math.PI)\n        return shape\n      }\n      case ShapeKind.Circle: {\n        shape.center = computeRotatedPoint(shape.center, center, angleRad)\n        return shape\n      }\n      case ShapeKind.Polygon: {\n        shape.points.forEach(p =>\n        {\n          const { x, y } = computeRotatedPoint(p, center, angleRad)\n          p.x = x\n          p.y = y\n        })\n        return shape\n      }\n      default:\n        throw new Error(`Can't apply rotate on shape, kind unknow: ${ JSON.stringify(shape) }`)\n    }\n  }\n\n  protected applyToEdge(edge: TIIEdge, center: TPoint, angleRad: number): TIIEdge\n  {\n    switch (edge.kind) {\n      case EdgeKind.Arc: {\n        edge.phi = (edge.phi - angleRad) % (2 * Math.PI)\n        edge.center = computeRotatedPoint(edge.center, center, angleRad)\n        return edge\n      }\n      case EdgeKind.Line: {\n        edge.start = computeRotatedPoint(edge.start, center, angleRad)\n        edge.end = computeRotatedPoint(edge.end, center, angleRad)\n        return edge\n      }\n      case EdgeKind.PolyEdge: {\n        edge.points = edge.points.map(p => computeRotatedPoint(p, center, angleRad))\n        return edge\n      }\n      default:\n        throw new Error(`Can't apply rotate on edge, kind unknow: ${ JSON.stringify(edge) }`)\n    }\n    return edge\n  }\n\n  protected applyOnText(text: IIText, center: TPoint, angleRad: number): IIText\n  {\n    text.rotation = {\n      degree: convertRadianToDegree(angleRad) + (text.rotation?.degree || 0),\n      center: center\n    }\n    return this.editor.texter.updateBounds(text)\n  }\n\n  protected applyOnGroup(group: IISymbolGroup, center: TPoint, angleRad: number): IISymbolGroup\n  {\n    group.children.forEach(s => this.applyToSymbol(s, center, angleRad))\n    return group\n  }\n\n  protected applyOnRecognizedSymbol(strokeText: TIIRecognized, center: TPoint, angleRad: number): TIIRecognized\n  {\n    strokeText.strokes.forEach(s => this.applyToStroke(s, center, angleRad))\n    return strokeText\n  }\n\n  applyToSymbol(symbol: TIISymbol, center: TPoint, angleRad: number): TIISymbol\n  {\n    switch (symbol.type) {\n      case SymbolType.Stroke:\n        return this.applyToStroke(symbol, center, angleRad)\n      case SymbolType.Shape:\n        return this.applyToShape(symbol, center, angleRad)\n      case SymbolType.Edge:\n        return this.applyToEdge(symbol, center, angleRad)\n      case SymbolType.Text:\n        return this.applyOnText(symbol, center, angleRad)\n      case SymbolType.Group:\n        return this.applyOnGroup(symbol, center, angleRad)\n      case SymbolType.Recognized:\n        return this.applyOnRecognizedSymbol(symbol, center, angleRad)\n      default:\n        throw new Error(`Can't apply rotate on symbol, type unknow: ${ JSON.stringify(symbol) }`)\n    }\n  }\n\n  setTransformOrigin(id: string, originX: number, originY: number): void\n  {\n    this.editor.renderer.setAttribute(id, \"transform-origin\", `${ originX }px ${ originY }px`)\n  }\n\n  rotateElement(id: string, degree: number): void\n  {\n    this.#logger.info(\"rotateElement\", { id, degree })\n    this.editor.renderer.setAttribute(id, \"transform\", `rotate(${ degree })`)\n  }\n\n  start(target: Element, origin: TPoint): void\n  {\n    this.#logger.info(\"start\", { target })\n    this.interactElementsGroup = (target.closest(`[role=${ SvgElementRole.InteractElementsGroup }]`) as unknown) as SVGGElement\n    const boundingBox = Box.createFromPoints(this.model.symbolsSelected.flatMap(s => s.vertices))\n\n    this.center = {\n      x: boundingBox.xMin + boundingBox.width / 2,\n      y: boundingBox.yMid\n    }\n    this.origin = origin\n    this.setTransformOrigin(this.interactElementsGroup.id, this.center.x, this.center.y)\n    this.model.symbolsSelected.forEach(s =>\n    {\n      this.setTransformOrigin(s.id, this.center.x, this.center.y)\n    })\n  }\n\n  continue(point: TPoint): number\n  {\n    this.#logger.info(\"continue\", { point })\n    if (!this.interactElementsGroup) {\n      throw new Error(\"Can't rotate, you must call start before\")\n    }\n    let angleDegree = Math.round(convertRadianToDegree(computeAngleRadian(this.origin, this.center, point)))\n\n    angleDegree = this.editor.snaps.snapRotation(angleDegree)\n\n    if (point.x - this.center.x < 0) {\n      angleDegree = 360 - angleDegree\n    }\n\n    this.rotateElement(this.interactElementsGroup.id, angleDegree)\n    this.model.symbolsSelected.forEach(s =>\n    {\n      this.rotateElement(s.id, angleDegree)\n    })\n    return angleDegree\n  }\n\n  async end(point: TPoint): Promise<void>\n  {\n    this.#logger.info(\"end\", { point })\n    const angleDegree = this.continue(point)\n    const angleRad = convertDegreeToRadian(angleDegree) % (2 * Math.PI)\n    const oldSymbols = this.model.symbolsSelected.map(s => s.clone())\n    this.model.symbolsSelected.forEach(s =>\n    {\n      this.applyToSymbol(s, this.center, angleRad)\n      this.editor.renderer.drawSymbol(s)\n      this.model.updateSymbol(s)\n    })\n    const strokesFromSymbols = this.editor.extractStrokesFromSymbols(this.model.symbolsSelected)\n    this.editor.recognizer.transformRotate(strokesFromSymbols.map(s => s.id), angleRad, this.center.x, this.center.y)\n    this.editor.history.push(this.model, { rotate: [{ symbols: oldSymbols, angle: angleRad, center: {...this.center}, }] })\n\n    this.interactElementsGroup = undefined\n    this.editor.svgDebugger.apply()\n  }\n}\n","import { ResizeDirection, SELECTION_MARGIN, SvgElementRole } from \"../Constants\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport { Box, IIText, SymbolType, TBox, TIIEdge, TIISymbol, TPoint } from \"../symbol\"\nimport { SVGRenderer, SVGBuilder } from \"../renderer\"\nimport { IIResizeManager } from \"./IIResizeManager\"\nimport { IIRotationManager } from \"./IIRotationManager\"\nimport { IITranslateManager } from \"./IITranslateManager\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { PointerEventGrabber, PointerInfo } from \"../grabber\"\n\n/**\n * @group Manager\n */\nexport class IISelectionManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.SELECTION)\n  grabber: PointerEventGrabber\n  editor: InteractiveInkEditor\n\n  #selectingId = \"selecting-rect\"\n  startSelectionPoint?: TPoint\n  endSelectionPoint?: TPoint\n  selectedGroup?: SVGGElement\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n    this.grabber = new PointerEventGrabber(editor.configuration.grabber)\n    this.grabber.onPointerDown = this.start.bind(this)\n    this.grabber.onPointerMove = this.continue.bind(this)\n    this.grabber.onPointerUp = this.end.bind(this)\n    this.grabber.onContextMenu = this.onContextMenu.bind(this)\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get renderer(): SVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  get rotator(): IIRotationManager\n  {\n    return this.editor.rotator\n  }\n\n  get translator(): IITranslateManager\n  {\n    return this.editor.translator\n  }\n\n  get resizer(): IIResizeManager\n  {\n    return this.editor.resizer\n  }\n\n  get selectionBox(): Box | undefined\n  {\n    if (this.startSelectionPoint && this.endSelectionPoint) {\n      return Box.createFromPoints([this.startSelectionPoint, this.endSelectionPoint])\n    }\n    return\n  }\n\n  attach(layer: HTMLElement): void\n  {\n    this.removeSelectedGroup()\n    this.grabber.attach(layer)\n  }\n\n  detach(): void\n  {\n    this.removeSelectedGroup()\n    this.grabber.detach()\n  }\n\n  drawSelectingRect(box: TBox): void\n  {\n    this.clearSelectingRect()\n    const attrs = {\n      id: this.#selectingId,\n      fill: \"transparent\",\n      stroke: \"grey\",\n      opacity: \"0.25\",\n    }\n    this.renderer.appendElement(SVGBuilder.createRect(box, attrs))\n  }\n\n  clearSelectingRect(): void\n  {\n    this.renderer.clearElements({ attrs: { id: this.#selectingId } })\n  }\n\n  protected getPoint(ev: PointerEvent): TPoint\n  {\n    const { clientLeft, scrollLeft, clientTop, scrollTop } = this.renderer.parent\n    const rect: DOMRect = this.renderer.parent.getBoundingClientRect()\n    return {\n      x: ev.clientX - rect.left - clientLeft + scrollLeft,\n      y: ev.clientY - rect.top - clientTop + scrollTop,\n    }\n  }\n\n  protected createTranslateRect(box: TBox): SVGRectElement\n  {\n    const attrs = {\n      role: SvgElementRole.Translate,\n      style: \"cursor:move\",\n      fill: \"transparent\",\n      stroke: \"transparent\",\n    }\n    const boxWithMarge: TBox = {\n      height: box.height,\n      width: box.width,\n      x: box.x,\n      y: box.y\n    }\n    const translateEl = SVGBuilder.createRect(boxWithMarge, attrs)\n    const handler = (ev: PointerEvent) =>\n    {\n      ev.preventDefault()\n      ev.stopPropagation()\n      this.translator.continue(this.getPoint(ev))\n    }\n    const endHandler = (ev: PointerEvent) =>\n    {\n      ev.preventDefault()\n      ev.stopPropagation()\n      this.translator.end(this.getPoint(ev))\n      this.renderer.layer.removeEventListener(\"pointermove\", handler)\n      this.renderer.layer.removeEventListener(\"pointercancel\", endHandler)\n      this.renderer.layer.removeEventListener(\"pointerleave\", endHandler)\n      this.renderer.layer.removeEventListener(\"pointerup\", endHandler)\n      this.renderer.layer.style.cursor = \"\"\n      this.resetSelectedGroup(this.model.symbolsSelected)\n    }\n\n    translateEl.addEventListener(\"pointerdown\", (ev) =>\n    {\n      if (ev.button !== 0 || ev.buttons !== 1) {\n        return\n      }\n      ev.preventDefault()\n      ev.stopPropagation()\n      this.hideInteractElements()\n      this.translator.start(ev.target as Element, this.getPoint(ev))\n      this.renderer.layer.addEventListener(\"pointermove\", handler)\n      this.renderer.layer.addEventListener(\"pointercancel\", endHandler)\n      this.renderer.layer.addEventListener(\"pointerleave\", endHandler)\n      this.renderer.layer.addEventListener(\"pointerup\", endHandler)\n\n      this.renderer.layer.style.cursor = \"move\"\n    })\n    return translateEl\n  }\n\n  protected createRotateGroup(box: TBox): SVGGElement\n  {\n    const group = SVGBuilder.createGroup({\n      role: SvgElementRole.Rotate,\n      \"vector-effect\": \"non-scaling-size\",\n      \"style\": \"cursor:pointer;\",\n      \"opacity\": \"1\",\n    })\n    const radius = 8\n    const center: TPoint = {\n      x: (box.x + box.width / 2),\n      y: box.y - 4 * SELECTION_MARGIN\n    }\n    const attrs1 = {\n      role: SvgElementRole.Rotate,\n      \"stroke-width\": \"2\",\n      \"stroke\": \"black\",\n      fill: \"white\",\n    }\n    group.appendChild(SVGBuilder.createCircle(center, radius, attrs1))\n\n    const attrs2 = {\n      role: SvgElementRole.Rotate,\n      fill: \"black\",\n    }\n\n    group.appendChild(SVGBuilder.createCircle(center, radius / 2, attrs2))\n    const attrs3 = {\n      role: SvgElementRole.Rotate,\n      stroke: \"black\",\n      \"stroke-width\": \"2\"\n    }\n    group.appendChild(SVGBuilder.createLine({ x: center.x, y: center.y + radius }, { x: center.x, y: box.y - SELECTION_MARGIN }, attrs3))\n\n    const handler = (ev: PointerEvent) =>\n    {\n      ev.preventDefault()\n      ev.stopPropagation()\n      this.rotator.continue(this.getPoint(ev))\n    }\n    const endHandler = (ev: PointerEvent) =>\n    {\n      ev.preventDefault()\n      ev.stopPropagation()\n      this.rotator.end(this.getPoint(ev))\n      this.renderer.layer.removeEventListener(\"pointermove\", handler)\n      this.renderer.layer.removeEventListener(\"pointercancel\", endHandler)\n      this.renderer.layer.removeEventListener(\"pointerleave\", endHandler)\n      this.renderer.layer.removeEventListener(\"pointerup\", endHandler)\n      this.resetSelectedGroup(this.model.symbolsSelected)\n    }\n\n    group.addEventListener(\"pointerdown\", (ev) =>\n    {\n      if (ev.button !== 0 || ev.buttons !== 1) {\n        return\n      }\n      ev.preventDefault()\n      ev.stopPropagation()\n      this.hideInteractElements()\n      this.rotator.start(ev.target as Element, this.getPoint(ev))\n      this.renderer.layer.addEventListener(\"pointermove\", handler)\n      this.renderer.layer.addEventListener(\"pointercancel\", endHandler)\n      this.renderer.layer.addEventListener(\"pointerleave\", endHandler)\n      this.renderer.layer.addEventListener(\"pointerup\", endHandler)\n    })\n    return group\n  }\n\n  protected createResizeGroup(box: TBox): SVGGElement\n  {\n    const group = SVGBuilder.createGroup({\n      role: SvgElementRole.Resize,\n      \"vector-effect\": \"non-scaling-size\",\n      \"stroke-width\": \"4\",\n      \"stroke\": \"#3e68ff\",\n    })\n    const P_NW: TPoint = { x: box.x - SELECTION_MARGIN, y: box.y - SELECTION_MARGIN }\n    const P_NE: TPoint = { x: box.x + box.width + SELECTION_MARGIN, y: box.y - SELECTION_MARGIN }\n    const P_SE: TPoint = { x: box.x + box.width + SELECTION_MARGIN, y: box.y + box.height + SELECTION_MARGIN }\n    const P_SW: TPoint = { x: box.x - SELECTION_MARGIN, y: box.y + box.height + SELECTION_MARGIN }\n\n    const bindEl = (el: SVGElement, transformOrigin: TPoint, cursor: string) =>\n    {\n      const handler = (ev: PointerEvent) =>\n      {\n        ev.preventDefault()\n        ev.stopPropagation()\n        this.resizer.continue(this.getPoint(ev))\n      }\n      const endHandler = (ev: PointerEvent) =>\n      {\n        ev.preventDefault()\n        ev.stopPropagation()\n        this.resizer.end(this.getPoint(ev))\n        this.renderer.layer.removeEventListener(\"pointermove\", handler)\n        this.renderer.layer.removeEventListener(\"pointercancel\", endHandler)\n        this.renderer.layer.removeEventListener(\"pointerleave\", endHandler)\n        this.renderer.layer.removeEventListener(\"pointerup\", endHandler)\n\n        this.renderer.layer.style.cursor = \"\"\n        this.resetSelectedGroup(this.model.symbolsSelected)\n      }\n\n      el.addEventListener(\"pointerdown\", (ev) =>\n      {\n        if (ev.button !== 0 || ev.buttons !== 1) {\n          return\n        }\n        ev.preventDefault()\n        ev.stopPropagation()\n        this.hideInteractElements()\n        this.renderer.layer.style.cursor = cursor\n        this.resizer.start(ev.target as Element, transformOrigin)\n        this.renderer.layer.addEventListener(\"pointermove\", handler)\n        this.renderer.layer.addEventListener(\"pointercancel\", endHandler)\n        this.renderer.layer.addEventListener(\"pointerleave\", endHandler)\n        this.renderer.layer.addEventListener(\"pointerup\", endHandler)\n      })\n    }\n\n    const sideResizeDefs = [\n      { direction: ResizeDirection.North, p1: P_NW, p2: P_NE, transformOrigin: { x: box.x + box.width / 2, y: box.y + box.height } },\n      { direction: ResizeDirection.East, p1: P_NE, p2: P_SE, transformOrigin: { x: box.x, y: box.y + box.height / 2 } },\n      { direction: ResizeDirection.South, p1: P_SW, p2: P_SE, transformOrigin: { x: box.x + box.width / 2, y: box.y } },\n      { direction: ResizeDirection.West, p1: P_NW, p2: P_SW, transformOrigin: { x: box.x + box.width, y: box.y + box.height / 2 } },\n    ]\n    sideResizeDefs.forEach(def =>\n    {\n      const attrs = {\n        role: SvgElementRole.Resize,\n        \"resize-direction\": def.direction,\n        \"transform-origin\": JSON.stringify(def.transformOrigin),\n        style: `cursor:${ def.direction };`\n      }\n      const lineResize = SVGBuilder.createLine(def.p1, def.p2, attrs)\n      bindEl(lineResize, def.transformOrigin, def.direction)\n      group.appendChild(lineResize)\n    })\n    const cornerResizeDefs = [\n      { direction: ResizeDirection.NorthWest, p: P_NW, transformOrigin: { x: box.x + box.width, y: box.y + box.height } },\n      { direction: ResizeDirection.NorthEast, p: P_NE, transformOrigin: { x: box.x, y: box.y + box.height } },\n      { direction: ResizeDirection.SouthEast, p: P_SE, transformOrigin: { x: box.x, y: box.y } },\n      { direction: ResizeDirection.SouthWest, p: P_SW, transformOrigin: { x: box.x + box.width, y: box.y } },\n    ]\n    cornerResizeDefs.forEach(def =>\n    {\n      const attrs = {\n        \"stroke-width\": \"4\",\n        role: SvgElementRole.Resize,\n        \"resize-direction\": def.direction,\n        \"transform-origin\": JSON.stringify(def.transformOrigin),\n        transform: \"scale(1, 1)\",\n        fill: \"white\",\n        style: `cursor:${ def.direction };`\n      }\n      const cornerResize = SVGBuilder.createCircle(def.p, 5, attrs)\n      bindEl(cornerResize, def.transformOrigin, def.direction)\n      group.appendChild(cornerResize)\n    })\n    return group\n  }\n\n  protected createInteractElementsGroup(symbols: TIISymbol[]): SVGGElement | undefined\n  {\n    this.#logger.info(\"createInteractElementsGroup\", { symbols })\n\n    if (!symbols.length) return\n\n    const symbolElementMap = symbols.map(s =>\n    {\n      return {\n        symbol: s,\n        element: this.renderer.getElementById(s.id),\n      }\n    })\n\n    const box1 = Box.createFromBoxes(symbols.map(s =>\n    {\n      return {\n        x: s.bounds.x - (s.style.width || 1),\n        y: s.bounds.y - (s.style.width || 1),\n        height: s.bounds.height + (s.style.width || 1) * 2,\n        width: s.bounds.width + (s.style.width || 1) * 2,\n      }\n    }))\n\n    const box2 = Box.createFromPoints(symbols.flatMap(s => s.vertices))\n    const box = Box.createFromBoxes([box1, box2])\n\n    const attrs = {\n      id: `selected-${ Date.now() }`,\n      role: SvgElementRole.InteractElementsGroup,\n    }\n    const surroundGroup = SVGBuilder.createGroup(attrs)\n    surroundGroup.appendChild(this.createTranslateRect(box))\n    surroundGroup.appendChild(this.createResizeGroup(box))\n    surroundGroup.appendChild(this.createRotateGroup(box))\n    const SURROUND_ATTRS = {\n      style: \"pointer-events: none\",\n      fill: \"transparent\",\n      stroke: \"#3e68ff\",\n      \"stroke-width\": \"1\",\n      \"stroke-dasharray\": \"4\",\n      \"vector-effect\": \"non-scaling-size\",\n      transform: \"rotate(0, 0, 0)\"\n    }\n    symbolElementMap.forEach(s =>\n    {\n      if (s.element) {\n        const bounds: TBox = {\n          x: s.symbol.bounds.x - (s.symbol.style.width || 1),\n          y: s.symbol.bounds.y - (s.symbol.style.width || 1),\n          height: s.symbol.bounds.height + (s.symbol.style.width || 1) * 2,\n          width: s.symbol.bounds.width + (s.symbol.style.width || 1) * 2,\n        }\n        if (s.symbol.type === SymbolType.Text) {\n          const t = s.symbol as IIText\n          SURROUND_ATTRS.transform = `rotate(${ t.rotation?.degree || 0 }, ${ t.rotation?.center.x || 0 }, ${ t.rotation?.center.y || 0 })`\n        }\n        else {\n          SURROUND_ATTRS.transform = \"rotate(0, 0, 0)\"\n        }\n        surroundGroup.prepend(SVGBuilder.createRect(bounds, SURROUND_ATTRS))\n      }\n    })\n    return surroundGroup\n  }\n\n  protected createEdgeResizeGroup(edge: TIIEdge): SVGGElement\n  {\n    const group = SVGBuilder.createGroup({\n      role: SvgElementRole.Resize,\n      \"vector-effect\": \"non-scaling-size\",\n      \"stroke-width\": \"4\",\n      \"stroke\": \"#3e68ff\",\n    })\n\n    const radius = 5\n    const attrs = {\n      role: SvgElementRole.Resize,\n      \"stroke-width\": \"4\",\n      \"stroke\": \"#3e68ff\",\n      fill: \"white\",\n      style: `cursor:grab;`\n    }\n    const bindEl = (el: SVGCircleElement, pointIndex: number) =>\n    {\n      const handler = (ev: PointerEvent) =>\n      {\n        ev.preventDefault()\n        ev.stopPropagation()\n        const point = this.getPoint(ev)\n        const { x, y } = this.editor.snaps.snapResize(point)\n        edge.vertices[pointIndex].x = x\n        edge.vertices[pointIndex].y = y\n        this.model.updateSymbol(edge)\n        this.renderer.drawSymbol(edge)\n      }\n      const endHandler = (ev: PointerEvent) =>\n      {\n        ev.preventDefault()\n        ev.stopPropagation()\n        const point = this.getPoint(ev)\n        const { x, y } = this.editor.snaps.snapResize(point)\n        edge.vertices[pointIndex].x = x\n        edge.vertices[pointIndex].y = y\n        this.renderer.layer.style.cursor = \"\"\n        this.editor.updateSymbol(edge)\n        this.renderer.layer.removeEventListener(\"pointermove\", handler)\n        this.renderer.layer.removeEventListener(\"pointercancel\", endHandler)\n        this.renderer.layer.removeEventListener(\"pointerleave\", endHandler)\n        this.renderer.layer.removeEventListener(\"pointerup\", endHandler)\n        this.editor.snaps.clearSnapToElementLines()\n        this.resetSelectedGroup(this.model.symbolsSelected)\n      }\n\n      el.addEventListener(\"pointerdown\", (ev) =>\n      {\n        if (ev.button !== 0 || ev.buttons !== 1) {\n          return\n        }\n        this.renderer.layer.style.cursor = \"grabbing\"\n        this.hideInteractElements()\n        ev.preventDefault()\n        ev.stopPropagation()\n        this.renderer.layer.addEventListener(\"pointermove\", handler)\n        this.renderer.layer.addEventListener(\"pointercancel\", endHandler)\n        this.renderer.layer.addEventListener(\"pointerleave\", endHandler)\n        this.renderer.layer.addEventListener(\"pointerup\", endHandler)\n      })\n    }\n    edge.vertices.forEach((p, i) =>\n    {\n      const pointEl = SVGBuilder.createCircle(p, radius, attrs)\n      bindEl(pointEl, i)\n      group.appendChild(pointEl)\n    })\n\n    return group\n  }\n\n  protected createInteractEdgeGroup(edge: TIIEdge): SVGGElement | undefined\n  {\n    this.#logger.info(\"createInteractEdgeGroup\", { edge })\n    const attrs = {\n      id: `selected-${ Date.now() }`,\n      role: SvgElementRole.InteractElementsGroup,\n    }\n    const surroundGroup = SVGBuilder.createGroup(attrs)\n    surroundGroup.appendChild(this.createTranslateRect(edge.bounds))\n    surroundGroup.appendChild(this.createEdgeResizeGroup(edge.clone()))\n    return surroundGroup\n  }\n\n  drawSelectedGroup(symbols: TIISymbol[]): void\n  {\n    if (!symbols.length) return\n    if (symbols.length === 1 && symbols[0].type === SymbolType.Edge) {\n      this.selectedGroup = this.createInteractEdgeGroup(symbols[0] as TIIEdge)\n    }\n    else {\n      this.selectedGroup = this.createInteractElementsGroup(symbols)\n    }\n    if (this.selectedGroup) {\n      this.renderer.layer.appendChild(this.selectedGroup)\n      const groupBox = this.selectedGroup.getBBox()\n      this.editor.menu.context.position.x = groupBox.x + groupBox.width / 2 - this.renderer.parent.clientLeft\n      this.editor.menu.context.position.y = groupBox.y + groupBox.height - this.renderer.parent.clientTop\n      this.editor.menu.context.show()\n    }\n    this.editor.menu.update()\n  }\n\n  resetSelectedGroup(symbols: TIISymbol[]): void\n  {\n    this.#logger.info(\"resetSelectedGroup\", { symbols })\n    this.removeSelectedGroup()\n    this.drawSelectedGroup(symbols)\n  }\n\n  removeSelectedGroup(): void\n  {\n    this.#logger.info(\"removeSelectedGroup\")\n    this.editor.menu.context.hide()\n    this.selectedGroup?.remove()\n    this.selectedGroup = undefined\n  }\n\n  hideInteractElements(): void\n  {\n    this.editor.menu.context.hide()\n    const query = `[role=${ SvgElementRole.Resize }],[role=${ SvgElementRole.Rotate }],[role=${ SvgElementRole.Translate }]`\n    this.selectedGroup?.querySelectorAll(query)\n      .forEach(el =>\n      {\n        el.setAttribute(\"visibility\", \"hidden\")\n      })\n  }\n\n  start(info: PointerInfo): void\n  {\n    this.removeSelectedGroup()\n    this.startSelectionPoint = info.pointer\n    this.endSelectionPoint = info.pointer\n    this.drawSelectingRect(this.selectionBox!)\n  }\n\n  continue(info: PointerInfo): TIISymbol[]\n  {\n    if (!this.startSelectionPoint) {\n      throw new Error(\"You need to call startSelectionByBox before\")\n    }\n    this.endSelectionPoint = info.pointer\n    const updatedSymbols: TIISymbol[] = []\n    this.model.symbols.forEach(s =>\n    {\n      if (s.selected !== s.overlaps(this.selectionBox!)) {\n        s.selected = s.overlaps(this.selectionBox!)\n        updatedSymbols.push(s)\n        this.renderer.drawSymbol(s)\n      }\n    })\n    this.drawSelectingRect(this.selectionBox!)\n    return updatedSymbols\n  }\n\n  end(info: PointerInfo): TIISymbol[]\n  {\n    const updatedSymbols = this.continue(info)\n    this.startSelectionPoint = undefined\n    this.endSelectionPoint = undefined\n    this.clearSelectingRect()\n    this.drawSelectedGroup(this.model.symbolsSelected)\n    this.editor.event.emitSelected(this.model.symbolsSelected)\n    this.editor.menu.style.update()\n    return updatedSymbols\n  }\n\n  protected async onContextMenu(info: PointerInfo): Promise<void>\n  {\n    let found = false\n    let currentEl = info.target as HTMLElement | null\n    const symbolTypesAllowed = [SymbolType.Edge.toString(), SymbolType.Shape.toString(), SymbolType.Stroke.toString(), SymbolType.Text.toString()]\n    while (currentEl && currentEl.tagName !== \"svg\" && !found) {\n      if (symbolTypesAllowed.includes(currentEl.getAttribute(\"type\") as string)) {\n        found = true\n      }\n      else {\n        currentEl = currentEl.parentElement\n      }\n    }\n    this.editor.unselectAll()\n    if (currentEl?.id) {\n      this.model.selectSymbol(currentEl.id)\n      this.renderer.drawSymbol(this.model.symbolsSelected[0])\n      this.drawSelectedGroup(this.model.symbolsSelected)\n      this.editor.updateLayerUI()\n    }\n    else {\n      this.editor.menu.context.position.x = info.pointer.x + this.renderer.parent.clientLeft\n      this.editor.menu.context.position.y = info.pointer.y + this.renderer.parent.clientTop\n      this.editor.menu.context.show()\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport { Box, IIText, SymbolType, TIISymbol, TIISymbolChar } from \"../symbol\"\nimport { SVGRenderer } from \"../renderer\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\n\n/**\n * @group Manager\n */\nexport class IITextManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.CONVERTER)\n  editor: InteractiveInkEditor\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get renderer(): SVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  get rowHeight(): number\n  {\n    return this.editor.configuration.rendering.guides.gap\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  protected drawSymbolHidden(text: IIText): SVGGElement\n  {\n    const clone = text.clone()\n    clone.id = \"text-to-measure\"\n    clone.chars.forEach(c => c.id += \"-to-measure\")\n    clone.decorators = []\n    this.renderer.layer.querySelector(`#${ clone.id }`)?.remove()\n    const el = this.renderer.buildElementFromSymbol(clone)!\n    el.setAttribute(\"visibility\", \"hidden\")\n    this.renderer.prependElement(el)\n    return el\n  }\n\n  setCharsBounds(text: IIText, textGroupEl: SVGGElement): IIText\n  {\n    const textEl = textGroupEl.querySelector(\"text\")\n    if (textEl) {\n      for (let i = 0; i < textEl.getNumberOfChars(); i++) {\n        const char = text.chars.at(i)\n        if (char) {\n          const ext = textEl.getExtentOfChar(i)\n          char.bounds = new Box(ext)\n        }\n      }\n    }\n    return text\n  }\n\n  setBounds(text: IIText): void\n  {\n    const element = this.drawSymbolHidden(text)\n    text.bounds = this.getElementBoundingBox(element)\n    this.setCharsBounds(text, element)\n  }\n\n  getElementBoundingBox(textElement: SVGElement): Box\n  {\n    return new Box(textElement.querySelector(\"text\")!.getBBox({ stroke: true, markers: true, clipped: true, fill: true }))\n  }\n\n  getBoundingBox(text: IIText): Box\n  {\n    const element = this.drawSymbolHidden(text)\n    return this.getElementBoundingBox(element)\n  }\n\n  getSpaceWidth(fontSize: number): number\n  {\n    const boundingBox = new Box({ height: 0, width: 0, x: 0, y: 0 })\n    const charSymbol: TIISymbolChar = {\n      id: `text-char-space`,\n      label: \"-\",\n      color: \"\",\n      fontSize,\n      fontWeight: \"normal\",\n      bounds: boundingBox\n    }\n    return this.getBoundingBox(new IIText([charSymbol], { x: 0, y: 0 }, boundingBox))?.width as number\n  }\n\n  updateBounds(textSymbol: IIText): IIText\n  {\n    this.setBounds(textSymbol)\n    this.model.updateSymbol(textSymbol)\n    return textSymbol\n  }\n\n  moveTextAfter(text: IIText, tx: number): TIISymbol[] | undefined\n  {\n    const row = this.model.getSymbolsByRowOrdered().find(r => r.rowIndex === this.model.getSymbolRowIndex(text))\n    if (row) {\n      const textsAfter = row.symbols.filter(s => s.type === SymbolType.Text && s.bounds.xMid > text.bounds.xMid) as IIText[]\n      textsAfter.forEach(symbol => {\n        symbol.point.x += tx\n        this.updateBounds(symbol)\n        this.model.updateSymbol(symbol)\n        this.renderer.drawSymbol(symbol)\n      })\n      return textsAfter\n    }\n    return\n  }\n}\n","import { SvgElementRole } from \"../Constants\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport\n{\n  EdgeKind,\n  IIStroke,\n  IIText,\n  IISymbolGroup,\n  ShapeKind,\n  SymbolType,\n  TIIEdge,\n  TIIShape,\n  TIISymbol,\n  TPoint,\n  TIIRecognized,\n  RecognizedKind\n} from \"../symbol\"\n\n/**\n * @group Manager\n */\nexport class IITranslateManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.TRANSFORMER)\n  editor: InteractiveInkEditor\n  interactElementsGroup?: SVGElement\n  transformOrigin!: TPoint\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  protected applyToStroke(stroke: IIStroke, tx: number, ty: number): IIStroke\n  {\n    stroke.pointers.forEach(p =>\n    {\n      p.x += tx\n      p.y += ty\n    })\n    return stroke\n  }\n\n  protected applyToShape(shape: TIIShape, tx: number, ty: number): TIIShape\n  {\n    switch (shape.kind) {\n      case ShapeKind.Ellipse:\n      case ShapeKind.Circle: {\n        shape.center.x += tx\n        shape.center.y += ty\n        return shape\n      }\n      case ShapeKind.Polygon: {\n        shape.points.forEach(p =>\n        {\n          p.x += tx\n          p.y += ty\n        })\n        return shape\n      }\n      default:\n        throw new Error(`Can't apply translate on shape, kind unknow: ${ JSON.stringify(shape) }`)\n    }\n  }\n\n  protected applyToEdge(edge: TIIEdge, tx: number, ty: number): TIIEdge\n  {\n    switch (edge.kind) {\n      case EdgeKind.Arc: {\n        edge.center.x += tx\n        edge.center.y += ty\n        return edge\n      }\n      case EdgeKind.Line: {\n        edge.start.x += tx\n        edge.start.y += ty\n        edge.end.x += tx\n        edge.end.y += ty\n        return edge\n      }\n      case EdgeKind.PolyEdge: {\n        edge.points.forEach(p =>\n        {\n          p.x += tx\n          p.y += ty\n        })\n        return edge\n      }\n    }\n\n    return edge\n  }\n\n  protected applyOnText(text: IIText, tx: number, ty: number): IIText\n  {\n    if (text.rotation) {\n      text.rotation.center = { x: text.rotation.center.x + tx, y: text.rotation.center.y + ty }\n    }\n    text.point.x += tx\n    text.point.y += ty\n    return this.editor.texter.updateBounds(text)\n  }\n\n  protected applyOnGroup(group: IISymbolGroup, tx: number, ty: number): IISymbolGroup\n  {\n    group.children.forEach(s => this.applyToSymbol(s, tx, ty))\n    return group\n  }\n\n  protected applyOnRecognizedSymbol(recognizedSymbol: TIIRecognized, tx: number, ty: number): TIIRecognized\n  {\n    recognizedSymbol.strokes.forEach(s => this.applyToStroke(s, tx, ty))\n    if (recognizedSymbol.kind === RecognizedKind.Text) {\n      recognizedSymbol.baseline += ty\n    }\n    return recognizedSymbol\n  }\n\n  applyToSymbol(symbol: TIISymbol, tx: number, ty: number): TIISymbol\n  {\n    this.#logger.info(\"applyToSymbol\", { symbol, tx, ty })\n    switch (symbol.type) {\n      case SymbolType.Stroke:\n        return this.applyToStroke(symbol, tx, ty)\n      case SymbolType.Shape:\n        return this.applyToShape(symbol, tx, ty)\n      case SymbolType.Edge:\n        return this.applyToEdge(symbol, tx, ty)\n      case SymbolType.Text:\n        return this.applyOnText(symbol, tx, ty)\n      case SymbolType.Group:\n        return this.applyOnGroup(symbol, tx, ty)\n      case SymbolType.Recognized:\n        return this.applyOnRecognizedSymbol(symbol, tx, ty)\n      default:\n        throw new Error(`Can't apply translate on symbol, type unknow: ${ JSON.stringify(symbol) }`)\n    }\n  }\n\n  translate(symbols: TIISymbol[], tx: number, ty: number, addToHistory = true): Promise<void>\n  {\n    this.#logger.info(\"translate\", { symbols, tx, ty })\n    symbols.forEach(s =>\n    {\n      this.applyToSymbol(s, tx, ty)\n      this.model.updateSymbol(s)\n      this.editor.renderer.drawSymbol(s)\n    })\n    if (addToHistory) {\n      this.editor.history.push(this.model, { translate: [{ symbols: this.model.symbolsSelected, tx, ty }] })\n    }\n    const strokes = this.editor.extractStrokesFromSymbols(symbols)\n    return this.editor.recognizer.transformTranslate(strokes.map(s => s.id), tx, ty)\n  }\n\n  translateElement(id: string, tx: number, ty: number): void\n  {\n    this.#logger.info(\"translateElement\", { id, tx, ty })\n    this.editor.renderer.setAttribute(id, \"transform\", `translate(${ tx },${ ty })`)\n  }\n\n  start(target: Element, origin: TPoint): void\n  {\n    this.#logger.info(\"start\", { origin })\n    this.interactElementsGroup = (target.closest(`[role=${ SvgElementRole.InteractElementsGroup }]`) as unknown) as SVGGElement\n    this.transformOrigin = origin\n  }\n\n  continue(point: TPoint): { tx: number, ty: number }\n  {\n    this.#logger.info(\"continue\", { point })\n    if (!this.interactElementsGroup) {\n      throw new Error(\"Can't translate, you must call start before\")\n    }\n\n    let tx = point.x - this.transformOrigin.x\n    let ty = point.y - this.transformOrigin.y\n\n    const nudge = this.editor.snaps.snapTranslate(tx, ty)\n    tx = nudge.x\n    ty = nudge.y\n\n    this.translateElement(this.interactElementsGroup.id as string, tx, ty)\n    this.model.symbolsSelected.forEach(s =>\n    {\n      this.translateElement(s.id as string, tx, ty)\n    })\n    return {\n      tx,\n      ty\n    }\n  }\n\n  async end(point: TPoint): Promise<void>\n  {\n    this.#logger.info(\"end\", { point })\n    const { tx, ty } = this.continue(point)\n    this.editor.snaps.clearSnapToElementLines()\n    this.translate(this.model.symbolsSelected, tx, ty)\n\n    this.interactElementsGroup = undefined\n    this.editor.svgDebugger.apply()\n  }\n\n}\n","import { SELECTION_MARGIN, EditorWriteTool } from \"../Constants\"\nimport { TGesture } from \"../gesture\"\nimport { IIModel } from \"../model\"\nimport\n{\n  EdgeDecoration,\n  EdgeKind,\n  IIEdgeLine,\n  IIShapePolygon,\n  IIShapeCircle,\n  IIShapeEllipse,\n  IIStroke,\n  SymbolType,\n  TIIEdge,\n  TIISymbol,\n  TPoint,\n  TPointer\n} from \"../symbol\"\nimport { RecognizerWebSocket } from \"../recognizer\"\nimport { SVGRenderer } from \"../renderer\"\nimport { TStyle } from \"../style\"\nimport { IIHistoryManager } from \"../history\"\nimport { IIGestureManager } from \"../gesture/IIGestureManager\"\nimport { IISnapManager } from \"../snap/IISnapManager\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { PointerInfo } from \"../grabber\"\nimport { AbstractWriterManager } from \"./AbstractWriterManager\"\n\n\n/**\n * @group Manager\n */\nexport class IIWriterManager extends AbstractWriterManager\n{\n  #tool: EditorWriteTool = EditorWriteTool.Pencil\n  detectGesture: boolean = true\n  editor: InteractiveInkEditor\n  currentSymbolOrigin?: TPoint\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    super(editor)\n    this.editor = editor\n  }\n\n  get tool(): EditorWriteTool\n  {\n    return this.#tool\n  }\n  set tool(wt: EditorWriteTool)\n  {\n    this.#tool = wt\n    if (wt !== EditorWriteTool.Pencil) {\n      this.editor.layers.root.classList.add(\"shape\")\n    }\n    else {\n      this.editor.layers.root.classList.remove(\"shape\")\n    }\n    this.editor.unselectAll()\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get renderer(): SVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  get history(): IIHistoryManager\n  {\n    return this.editor.history\n  }\n\n  get gestureManager(): IIGestureManager\n  {\n    return this.editor.gesture\n  }\n\n  get snaps(): IISnapManager\n  {\n    return this.editor.snaps\n  }\n\n  get recognizer(): RecognizerWebSocket\n  {\n    return this.editor.recognizer\n  }\n\n  attach(layer: HTMLElement): void\n  {\n    this.grabber.attach(layer)\n    this.grabber.onPointerDown = this.start.bind(this)\n    this.grabber.onPointerMove = this.continue.bind(this)\n    this.grabber.onPointerUp = this.end.bind(this)\n  }\n\n  detach(): void\n  {\n    this.grabber.detach()\n  }\n\n  protected needContextLessGesture(stroke: IIStroke): boolean\n  {\n    const strokeBoundsWithMargin = this.editor.getSymbolsBounds([stroke], 2 * SELECTION_MARGIN)\n    return this.detectGesture && this.model.symbols.some(s =>\n    {\n      switch (s.type) {\n        case SymbolType.Recognized:\n        case SymbolType.Stroke:\n          return false\n        case SymbolType.Group:\n          if (s.containsOnlyStroke()) {\n            return false\n          }\n          else {\n            return s.bounds.overlaps(strokeBoundsWithMargin)\n          }\n        default:\n          return s.bounds.overlaps(strokeBoundsWithMargin)\n      }\n    })\n  }\n\n  protected createCurrentSymbol(pointer: TPointer, style: TStyle, pointerType: string): TIISymbol\n  {\n    switch (this.tool) {\n      case EditorWriteTool.Pencil:\n        this.model.currentSymbol = new IIStroke(style, pointerType)\n        break\n      case EditorWriteTool.Rectangle:\n        this.model.currentSymbol = IIShapePolygon.createRectangleBetweenPoints(pointer, pointer, style)\n        break\n      case EditorWriteTool.Triangle:\n        this.model.currentSymbol = IIShapePolygon.createTriangleBetweenPoints(pointer, pointer, style)\n        break\n      case EditorWriteTool.Parallelogram:\n        this.model.currentSymbol = IIShapePolygon.createParallelogramBetweenPoints(pointer, pointer, style)\n        break\n      case EditorWriteTool.Rhombus:\n        this.model.currentSymbol = IIShapePolygon.createRhombusBetweenPoints(pointer, pointer, style)\n        break\n      case EditorWriteTool.Circle:\n        this.model.currentSymbol = IIShapeCircle.createBetweenPoints(pointer, pointer, style)\n        break\n      case EditorWriteTool.Ellipse:\n        this.model.currentSymbol = IIShapeEllipse.createBetweenPoints(pointer, pointer, style)\n        break\n      case EditorWriteTool.Line:\n      case EditorWriteTool.Arrow:\n      case EditorWriteTool.DoubleArrow: {\n        let startDecoration, endDecoration\n        if (this.tool === EditorWriteTool.Arrow) {\n          endDecoration = EdgeDecoration.Arrow\n        }\n        else if (this.tool === EditorWriteTool.DoubleArrow) {\n          startDecoration = EdgeDecoration.Arrow\n          endDecoration = EdgeDecoration.Arrow\n        }\n        this.model.currentSymbol = new IIEdgeLine(pointer, pointer, startDecoration, endDecoration, style)\n        break\n      }\n      default:\n        throw new Error(`Can't create symbol, tool is unknow: \"${ this.tool }\"`)\n    }\n    return this.updateCurrentSymbol(pointer)\n  }\n\n  protected updateCurrentSymbolShape(pointer: TPointer): void\n  {\n    switch (this.tool) {\n      case EditorWriteTool.Rectangle:\n        IIShapePolygon.updateRectangleBetweenPoints(this.model.currentSymbol as IIShapePolygon, this.currentSymbolOrigin!, pointer)\n        break\n      case EditorWriteTool.Triangle:\n        IIShapePolygon.updateTriangleBetweenPoints(this.model.currentSymbol as IIShapePolygon, this.currentSymbolOrigin!, pointer)\n        break\n      case EditorWriteTool.Parallelogram:\n        IIShapePolygon.updateParallelogramBetweenPoints(this.model.currentSymbol as IIShapePolygon, this.currentSymbolOrigin!, pointer)\n        break\n      case EditorWriteTool.Rhombus:\n        IIShapePolygon.updateRhombusBetweenPoints(this.model.currentSymbol as IIShapePolygon, this.currentSymbolOrigin!, pointer)\n        break\n      case EditorWriteTool.Circle:\n        IIShapeCircle.updateBetweenPoints(this.model.currentSymbol as IIShapeCircle, this.currentSymbolOrigin!, pointer)\n        break\n      case EditorWriteTool.Ellipse:\n        IIShapeEllipse.updateBetweenPoints(this.model.currentSymbol as IIShapeEllipse, this.currentSymbolOrigin!, pointer)\n        break\n    }\n  }\n\n  protected updateCurrentSymbolEdge(pointer: TPointer): void\n  {\n    const edge = this.model.currentSymbol as TIIEdge\n    switch (edge.kind) {\n      case EdgeKind.Line:\n        edge.end = pointer\n        break\n    }\n  }\n\n  protected updateCurrentSymbol(pointer: TPointer): TIISymbol\n  {\n    if (!this.model.currentSymbol) {\n      throw new Error(\"Can't update current symbol because currentSymbol is undefined\")\n    }\n\n    switch (this.model.currentSymbol.type) {\n      case SymbolType.Stroke:\n        this.model.currentSymbol!.addPointer(pointer)\n        break\n      case SymbolType.Shape:\n        this.updateCurrentSymbolShape(pointer)\n        break\n      case SymbolType.Edge:\n        this.updateCurrentSymbolEdge(pointer)\n        break\n    }\n    return this.model.currentSymbol\n  }\n\n  start(info: PointerInfo): void\n  {\n    const localPointer = info.pointer\n    if (this.tool !== EditorWriteTool.Pencil) {\n      const { x, y } = this.snaps.snapResize(localPointer)\n      localPointer.x = x\n      localPointer.y = y\n    }\n    this.currentSymbolOrigin = localPointer\n    this.createCurrentSymbol(localPointer, this.editor.penStyle, info.pointerType)\n    this.renderer.drawSymbol(this.model.currentSymbol!)\n  }\n\n  continue(info: PointerInfo): void\n  {\n    const localPointer = info.pointer\n    if (this.tool !== EditorWriteTool.Pencil) {\n      const { x, y } = this.snaps.snapResize(localPointer)\n      localPointer.x = x\n      localPointer.y = y\n    }\n    this.updateCurrentSymbol(localPointer)\n    this.renderer.drawSymbol(this.model.currentSymbol!)\n  }\n\n  protected async interactWithBackend(stroke: IIStroke): Promise<void>\n  {\n    const localStroke = stroke.clone()\n    let gestureFromContextLess: TGesture | undefined\n    if (this.needContextLessGesture(stroke)) {\n      gestureFromContextLess = await this.gestureManager.getGestureFromContextLess(localStroke)\n    }\n    if (gestureFromContextLess) {\n      this.history.pop()\n      this.recognizer.addStrokes([localStroke], this.detectGesture)\n      await this.gestureManager.apply(localStroke, gestureFromContextLess)\n    }\n    else {\n      const gesture = await this.recognizer.addStrokes([localStroke], this.detectGesture)\n      if (gesture) {\n        this.history.pop()\n        await this.gestureManager.apply(localStroke, gesture)\n      }\n    }\n  }\n\n  async end(info: PointerInfo): Promise<void>\n  {\n    const localPointer = info.pointer\n    if (this.tool !== EditorWriteTool.Pencil) {\n      const { x, y } = this.snaps.snapResize(localPointer)\n      localPointer.x = x\n      localPointer.y = y\n    }\n    const localSymbol = this.updateCurrentSymbol(localPointer)\n    this.model.currentSymbol = undefined\n    this.currentSymbolOrigin = undefined\n    this.snaps.clearSnapToElementLines()\n\n    this.renderer.drawSymbol(localSymbol!)\n    this.model.addSymbol(localSymbol)\n    this.history.push(this.model, { added: [localSymbol] })\n\n    if (localSymbol.type === SymbolType.Stroke) {\n      await this.interactWithBackend(localSymbol)\n    }\n  }\n}\n","import { LoggerManager, LoggerCategory } from \"../logger\"\nimport { IIModel, JIIXEdgeKind } from \"../model\"\nimport { Box, IIText, SymbolType, TBox, TIISymbol } from \"../symbol\"\nimport { SVGRenderer, SVGRendererConst, SVGBuilder } from \"../renderer\"\nimport { convertBoundingBoxMillimeterToPixel, createUUID } from \"../utils\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\n\n/**\n * @group Manager\n */\nexport class IIDebugSVGManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.SVGDEBUG)\n  #snapPointsVisibility = false\n  #verticesVisibility = false\n  #boundingBoxVisibility = false\n  #recognitionBoxVisibility = false\n  #recognitionItemBoxVisibility = false\n\n  editor: InteractiveInkEditor\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get renderer(): SVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  get snapPointsVisibility(): boolean\n  {\n    return this.#snapPointsVisibility\n  }\n  set snapPointsVisibility(show: boolean)\n  {\n    this.#snapPointsVisibility = show\n    this.debugSnapPoints()\n  }\n\n  get verticesVisibility(): boolean\n  {\n    return this.#verticesVisibility\n  }\n  set verticesVisibility(show: boolean)\n  {\n    this.#verticesVisibility = show\n    this.debugVertices()\n  }\n\n  get boundingBoxVisibility(): boolean\n  {\n    return this.#boundingBoxVisibility\n  }\n  set boundingBoxVisibility(show: boolean)\n  {\n    this.#boundingBoxVisibility = show\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    this.#boundingBoxVisibility ? this.showBoundingBox() : this.hideBoundingBox()\n  }\n\n  get recognitionBoxVisibility(): boolean\n  {\n    return this.#recognitionBoxVisibility\n  }\n  set recognitionBoxVisibility(show: boolean)\n  {\n    this.#recognitionBoxVisibility = show\n    this.debugRecognitionBox()\n  }\n\n  get recognitionItemBoxVisibility(): boolean\n  {\n    return this.#recognitionItemBoxVisibility\n  }\n  set recognitionItemBoxVisibility(show: boolean)\n  {\n    this.#recognitionItemBoxVisibility = show\n    this.debugRecognitionItemBox()\n  }\n\n  protected showSnapPoints(): void\n  {\n    this.#logger.info(\"showSnapPoints\")\n    if (this.model.currentSymbol) {\n      this.model.currentSymbol.snapPoints.forEach(p => this.renderer.drawCircle(p, 2, { fill: \"blue\", \"debug\": \"snap-points\" }))\n    }\n    this.model.symbols.forEach(s => s.snapPoints.forEach(p => this.renderer.drawCircle(p, 2, { fill: \"blue\", \"debug\": \"snap-points\" })))\n  }\n  protected hideSnapPoints(): void\n  {\n    this.#logger.info(\"hideSnapPoints\")\n    this.renderer.clearElements({ attrs: { \"debug\": \"snap-points\" } })\n  }\n  debugSnapPoints(): void\n  {\n    this.hideSnapPoints()\n    if (this.snapPointsVisibility) {\n      this.showSnapPoints()\n    }\n  }\n\n  protected showVertices(): void\n  {\n    this.#logger.info(\"showVertices\")\n    if (this.model.currentSymbol) {\n      this.model.currentSymbol.vertices.forEach(p => this.renderer.drawCircle(p, 2, { fill: \"red\", \"debug\": \"vertices\" }))\n    }\n    this.model.symbols.forEach(s => s.vertices.forEach(p => this.renderer.drawCircle(p, 2, { fill: \"red\", \"debug\": \"vertices\" })))\n  }\n  protected hideVertices(): void\n  {\n    this.#logger.info(\"hideVertices\")\n    this.renderer.clearElements({ attrs: { \"debug\": \"vertices\" } })\n  }\n  debugVertices(): void\n  {\n    this.hideVertices()\n    if (this.verticesVisibility) {\n      this.showVertices()\n    }\n  }\n\n  protected drawBoundingBox(symbols: TIISymbol[]): void\n  {\n    const symbolAttrs = {\n      style: \"pointer-events: none\",\n      fill: \"transparent\",\n      stroke: \"red\",\n      \"stroke-width\": \"1\",\n      \"stroke-dasharray\": \"5 5\",\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"debug\": \"bounding-box\"\n    }\n    const charAttrs = {\n      style: \"pointer-events: none\",\n      fill: \"transparent\",\n      stroke: \"orange\",\n      \"stroke-width\": \"1\",\n      \"stroke-dasharray\": \"0 5 0\",\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"debug\": \"bounding-box\"\n    }\n    symbols.forEach(s =>\n    {\n      const symEl = this.renderer.getElementById(s.id)\n      if (symEl) {\n        if (s.type === SymbolType.Text) {\n          const text = s as IIText\n          let transform: string = \"\"\n          if (text.rotation) {\n            transform = `rotate(${ text.rotation.degree }, ${ text.rotation.center.x }, ${ text.rotation.center.y })`\n          }\n          text.chars.forEach(c =>\n          {\n            const ca = {\n              ...charAttrs,\n              char: c.label,\n              transform\n            }\n            symEl.insertAdjacentElement(\"beforebegin\", SVGBuilder.createRect(c.bounds, ca))\n          })\n          const sa = {\n            ...symbolAttrs,\n            symbol: s.id,\n            transform\n          }\n          symEl.insertAdjacentElement(\"beforebegin\", SVGBuilder.createRect(s.bounds, sa))\n        }\n        else {\n          const sa = {\n            ...symbolAttrs,\n            symbol: s.id,\n          }\n          symEl.insertAdjacentElement(\"beforebegin\", SVGBuilder.createRect(s.bounds, sa))\n        }\n      }\n    })\n  }\n  protected showBoundingBox(): void\n  {\n    this.#logger.info(\"showBoundingBox\")\n    if (this.model.currentSymbol) {\n      this.drawBoundingBox([this.model.currentSymbol])\n    }\n    this.drawBoundingBox(this.model.symbols)\n  }\n  protected hideBoundingBox(): void\n  {\n    this.#logger.info(\"hideBoundingBox\")\n    this.renderer.clearElements({ attrs: { \"debug\": \"bounding-box\" } })\n  }\n  debugBoundingBox(): void\n  {\n    this.hideBoundingBox()\n    if (this.boundingBoxVisibility) {\n      this.showBoundingBox()\n    }\n  }\n\n  protected drawRecognitionBox(box: TBox, infos?: string[]): void\n  {\n    const COLOR = \"green\"\n    const TEXT_HEIGHT = 20\n    const recognitionGroup = SVGBuilder.createGroup({ \"debug\": \"recognition-box\" })\n\n    const rect = SVGBuilder.createRect(box, { fill: \"transparent\", stroke: COLOR, style: SVGRendererConst.noSelection })\n    recognitionGroup.appendChild(rect)\n\n    const infosGroup = SVGBuilder.createGroup({ id: `infos-group-${ createUUID() }` })\n    const infoX = box.x + box.width\n    let infoY = box.y + TEXT_HEIGHT / 2\n    infos?.forEach(w =>\n    {\n      infosGroup.appendChild(SVGBuilder.createText({ x: infoX, y: infoY }, w, { stroke: COLOR, style: SVGRendererConst.noSelection }))\n      infoY += TEXT_HEIGHT\n    })\n    recognitionGroup.appendChild(infosGroup)\n    this.renderer.layer.appendChild(recognitionGroup)\n\n    const infosGroupBox = infosGroup.getBBox()\n    const rectBox = {\n      width: infosGroupBox.width + 10,\n      height: infosGroupBox.height + 10,\n      x: infosGroupBox.x - 5,\n      y: infosGroupBox.y - 5,\n    }\n    const rectTranslate = SVGBuilder.createRect(rectBox, { fill: \"white\", style: \"cursor:move\", stroke: COLOR })\n    infosGroup.prepend(rectTranslate)\n\n    const translateEl = (e: PointerEvent) =>\n    {\n      e.preventDefault()\n      e.stopPropagation()\n      const originX = Number(this.renderer.getAttribute(infosGroup.id, \"originX\"))\n      const originY = Number(this.renderer.getAttribute(infosGroup.id, \"originY\"))\n      const tx = e.clientX - originX\n      const ty = e.clientY - originY\n      this.renderer.setAttribute(infosGroup.id, \"transform\", `translate(${ tx },${ ty })`)\n      const newRectBox = {\n        width: rectBox.width,\n        height: rectBox.height,\n        x: rectBox.x + tx,\n        y: rectBox.y + ty,\n      }\n      this.renderer.removeSymbol(`connection-${ infosGroup.id }`)\n      this.renderer.drawConnectionBetweenBox(`connection-${ infosGroup.id }`, box, newRectBox, \"corners\", { stroke: COLOR, debug: \"recognition-box-link\" })\n    }\n\n    rectTranslate.addEventListener(\"pointerdown\", e =>\n    {\n      e.preventDefault()\n      e.stopPropagation()\n      if (!this.renderer.getAttribute(infosGroup.id, \"originX\")) {\n        this.renderer.setAttribute(infosGroup.id, \"originX\", e.clientX.toString())\n        this.renderer.setAttribute(infosGroup.id, \"originY\", e.clientY.toString())\n      }\n      this.renderer.layer.addEventListener(\"pointermove\", translateEl)\n      this.renderer.layer.addEventListener(\"pointerup\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n      this.renderer.layer.addEventListener(\"pointerleave\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n      this.renderer.layer.addEventListener(\"pointercancel\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n    })\n  }\n\n  protected async showRecognitionBox(): Promise<void>\n  {\n    this.#logger.info(\"showRecognitionBox\")\n    await this.editor.export([\"application/vnd.myscript.jiix\"])\n    const jiix = this.model.exports?.[\"application/vnd.myscript.jiix\"]\n    this.#logger.debug(\"showRecognitionBox\", { jiix })\n    if (jiix) {\n      if (!jiix[\"bounding-box\"]) {\n        this.#logger.warn(\"drawRecognitionBox\", \"You must to enabled configuration.recognition.exports[\\\"bounding-box\\\"]\")\n        return\n      }\n      jiix.elements?.forEach(el =>\n      {\n        switch (el.type) {\n          case \"Node\": {\n            if (el[\"bounding-box\"]) {\n              const box = convertBoundingBoxMillimeterToPixel(el[\"bounding-box\"])\n              const hideProperties = [\"bounding-box\", \"items\", \"id\"]\n              const infos = Object.keys(el).filter(k => !hideProperties.includes(k)).map(k => `${ k }: ${ JSON.stringify(el[k as keyof typeof el]) }`)\n              this.drawRecognitionBox(box, infos)\n            }\n            break\n          }\n          case \"Text\": {\n            el.words?.forEach(w =>\n            {\n              if (w?.[\"bounding-box\"]) {\n                const box = convertBoundingBoxMillimeterToPixel(w[\"bounding-box\"])\n                this.drawRecognitionBox(box, [`type: ${ el.type }`, `candidates: ${ JSON.stringify(w.candidates || []) }`])\n              }\n            })\n            break\n          }\n          case \"Edge\": {\n            if (el.kind === JIIXEdgeKind.PolyEdge) {\n              const infos = [\n                `type: ${ el.type }`,\n                `kind: ${ el.kind }`,\n              ]\n              el.edges.forEach((e, i) =>\n              {\n                let inf = `edge-${ i }: [{ x1: ${ e.x1 }, y2: ${ e.y1 } },{ x2: ${ e.x2 }, y2: ${ e.y2 } }]`\n                if (e.p1Decoration) {\n                  inf += `, p1Decoration: ${ e.p1Decoration }`\n                }\n                if (e.p2Decoration) {\n                  inf += `, p2Decoration: ${ e.p2Decoration }`\n                }\n                infos.push(inf)\n              })\n              const box = convertBoundingBoxMillimeterToPixel(Box.createFromBoxes(el.edges.map(e => e[\"bounding-box\"] as TBox)))\n              this.drawRecognitionBox(box, infos)\n            }\n            else if (el[\"bounding-box\"]) {\n              const box = convertBoundingBoxMillimeterToPixel(el[\"bounding-box\"])\n              const hideProperties = [\"bounding-box\", \"items\", \"id\", \"ports\", \"connected\"]\n              const infos = Object.keys(el).filter(k => !hideProperties.includes(k)).map(k => `${ k }: ${ JSON.stringify(el[k as keyof typeof el]) }`)\n              this.drawRecognitionBox(box, infos)\n            }\n            break\n          }\n          default: {\n            this.#logger.warn(\"drawRecognitionBox\", `Unknow jiix element type: ${ el.type }`)\n            break\n          }\n        }\n      })\n    }\n  }\n  protected clearRecognitionBox(): void\n  {\n    this.#logger.info(\"clearRecognitionBox\")\n    this.renderer.clearElements({ attrs: { \"debug\": \"recognition-box\" } })\n    this.renderer.clearElements({ attrs: { \"debug\": \"recognition-box-link\" } })\n  }\n  async debugRecognitionBox(): Promise<void>\n  {\n    this.clearRecognitionBox()\n    if (this.#recognitionBoxVisibility) {\n      this.showRecognitionBox()\n    }\n  }\n\n  protected drawRecognitionItemBox(box: TBox, label?: string, chars?: string[]): void\n  {\n    const COLOR = \"blue\"\n    const CHAR_SIZE = 14\n\n    const recognitionItemGroup = SVGBuilder.createGroup({ \"debug\": \"recognition-item-box\" })\n    const rect = SVGBuilder.createRect(box, { fill: \"transparent\", stroke: COLOR, style: SVGRendererConst.noSelection })\n    recognitionItemGroup.appendChild(rect)\n\n    const charX = box.x\n    let charY = box.y - CHAR_SIZE\n\n    const charsGroup = SVGBuilder.createGroup({ id: `chars-group-${ createUUID() }` })\n    if (label) {\n      charsGroup.appendChild(SVGBuilder.createText({ x: charX, y: charY }, `label: ${ label }`, { fill: COLOR, \"font-size\": CHAR_SIZE.toString(), style: SVGRendererConst.noSelection }))\n    }\n    if (chars?.length) {\n      charY += CHAR_SIZE\n      charsGroup.appendChild(SVGBuilder.createText({ x: charX, y: charY }, `[${ chars.join(\", \") }]`, { fill: COLOR, \"font-size\": CHAR_SIZE.toString(), style: SVGRendererConst.noSelection }))\n    }\n\n    recognitionItemGroup.appendChild(charsGroup)\n    this.renderer.layer.appendChild(recognitionItemGroup)\n\n    const charsGroupBox = charsGroup.getBBox()\n    const rectBox = {\n      width: charsGroupBox.width + 10,\n      height: charsGroupBox.height + 10,\n      x: charsGroupBox.x - 5,\n      y: charsGroupBox.y - 5,\n    }\n    const rectTranslate = SVGBuilder.createRect(rectBox, { fill: \"white\", style: \"cursor:move\", stroke: COLOR })\n    charsGroup.prepend(rectTranslate)\n\n    const translateEl = (e: PointerEvent) =>\n    {\n      e.preventDefault()\n      e.stopPropagation()\n      const originX = Number(this.renderer.getAttribute(charsGroup.id, \"originX\"))\n      const originY = Number(this.renderer.getAttribute(charsGroup.id, \"originY\"))\n      const tx = e.clientX - originX\n      const ty = e.clientY - originY\n      this.renderer.setAttribute(charsGroup.id, \"transform\", `translate(${ tx },${ ty })`)\n      const newRectBox = {\n        width: rectBox.width,\n        height: rectBox.height,\n        x: rectBox.x + tx,\n        y: rectBox.y + ty,\n      }\n      this.renderer.removeSymbol(`connection-${ charsGroup.id }`)\n      this.renderer.drawConnectionBetweenBox(`connection-${ charsGroup.id }`, box, newRectBox, \"corners\", { stroke: COLOR, debug: \"recognition-item-box-link\" })\n    }\n\n    rectTranslate.addEventListener(\"pointerdown\", e =>\n    {\n      e.preventDefault()\n      e.stopPropagation()\n      if (!this.renderer.getAttribute(charsGroup.id, \"originX\")) {\n        this.renderer.setAttribute(charsGroup.id, \"originX\", e.clientX.toString())\n        this.renderer.setAttribute(charsGroup.id, \"originY\", e.clientY.toString())\n      }\n      this.renderer.layer.addEventListener(\"pointermove\", translateEl)\n    })\n    this.renderer.layer.addEventListener(\"pointerup\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n    this.renderer.layer.addEventListener(\"pointerleave\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n    this.renderer.layer.addEventListener(\"pointercancel\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n\n  }\n  protected async showRecognitionItemBox(): Promise<void>\n  {\n    this.#logger.info(\"showRecognitionBoxItem\")\n    await this.editor.export([\"application/vnd.myscript.jiix\"])\n    const jiix = this.model.exports?.[\"application/vnd.myscript.jiix\"]\n    this.#logger.debug(\"showRecognitionBoxItem\", { jiix })\n    if (jiix) {\n      jiix.elements?.forEach(el =>\n      {\n        switch (el.type) {\n          case \"Text\": {\n            el.chars?.forEach(c =>\n            {\n              if (c?.[\"bounding-box\"]) {\n                const box = convertBoundingBoxMillimeterToPixel(c[\"bounding-box\"])\n                this.drawRecognitionItemBox(box, c.label, c.candidates)\n              }\n            })\n            break\n          }\n          case \"Node\": {\n            if (el?.[\"bounding-box\"]) {\n              const box = convertBoundingBoxMillimeterToPixel(el[\"bounding-box\"])\n              this.drawRecognitionItemBox(box, el.kind)\n            }\n            break\n          }\n          case \"Edge\": {\n            if (el.kind === JIIXEdgeKind.PolyEdge) {\n              el.edges.forEach(e =>\n              {\n                const box = convertBoundingBoxMillimeterToPixel(e[\"bounding-box\"])\n                this.drawRecognitionItemBox(box, e.kind)\n              })\n            }\n            else if (el[\"bounding-box\"]) {\n              const box = convertBoundingBoxMillimeterToPixel(el[\"bounding-box\"])\n              this.drawRecognitionItemBox(box, el.kind)\n            }\n            break\n          }\n          default:\n            this.#logger.warn(\"drawRecognitionBoxItem\", `Unknow jiix element type: ${ el.type }`)\n            break\n        }\n      })\n    }\n  }\n  protected clearRecognitionItemBox(): void\n  {\n    this.#logger.info(\"clearRecognitionBoxItem\")\n    this.renderer.clearElements({ attrs: { \"debug\": \"recognition-item-box\" } })\n    this.renderer.clearElements({ attrs: { \"debug\": \"recognition-item-box-link\" } })\n  }\n  async debugRecognitionItemBox(): Promise<void>\n  {\n    this.clearRecognitionItemBox()\n    if (this.#recognitionItemBoxVisibility) {\n      this.showRecognitionItemBox()\n    }\n  }\n\n  apply(): void\n  {\n    this.debugBoundingBox()\n    this.debugVertices()\n    this.debugSnapPoints()\n    this.debugRecognitionBox()\n    this.debugRecognitionItemBox()\n  }\n}\n","import { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { PointerEventGrabber, PointerInfo } from \"../grabber\"\nimport { SVGRenderer } from \"../renderer\"\n\n/**\n * @group Manager\n */\nexport class IIMoveManager\n{\n  grabber: PointerEventGrabber\n  editor: InteractiveInkEditor\n\n  origin?: {\n    left: number,\n    top: number,\n    x: number,\n    y: number\n  }\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.editor = editor\n    this.grabber = new PointerEventGrabber(editor.configuration.grabber)\n  }\n\n  get renderer(): SVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  attach(layer: HTMLElement): void\n  {\n    this.grabber.attach(layer)\n    this.grabber.onPointerDown = this.start.bind(this)\n    this.grabber.onPointerMove = this.continue.bind(this)\n    this.grabber.onPointerUp = this.end.bind(this)\n  }\n\n  detach(): void\n  {\n    this.grabber.detach()\n  }\n\n  start(info: PointerInfo): void\n  {\n    this.origin = {\n      left: this.renderer.parent.scrollLeft,\n      top: this.renderer.parent.scrollTop,\n      x: info.clientX,\n      y: info.clientY,\n    }\n  }\n\n  continue(info: PointerInfo): void\n  {\n    if (!this.origin) {\n      throw new Error(\"Can't move cause origin is undefined\")\n    }\n    const dx = info.clientX - this.origin.x\n    const dy = info.clientY - this.origin.y\n\n    this.renderer.parent.scrollTop = this.origin.top - dy\n    this.renderer.parent.scrollLeft = this.origin.left - dx\n  }\n\n  end(info: PointerInfo): void\n  {\n    this.continue(info)\n    this.origin = undefined\n  }\n}\n","import { LoggerManager, LoggerCategory } from \"../logger\"\nimport { IModel } from \"../model\"\nimport { Box, IIStroke, IIText, SymbolType, TBox, TIISymbol } from \"../symbol\"\nimport { SVGRenderer, SVGRendererConst, SVGBuilder } from \"../renderer\"\nimport { createUUID } from \"../utils\"\nimport { InkEditor } from \"../editor\"\n\n/**\n * @group Manager\n */\nexport class IDebugSVGManager {\n  #logger = LoggerManager.getLogger(LoggerCategory.SVGDEBUG)\n  #recognitionBoxVisibility = false\n  #recognitionBoxItemsVisibility = false\n\n  editor: InkEditor\n\n  constructor(editor: InkEditor) {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get model(): IModel {\n    return this.editor.model\n  }\n\n  get renderer(): SVGRenderer {\n    return this.editor.renderer\n  }\n\n  get recognitionBoxVisibility(): boolean {\n    return this.#recognitionBoxVisibility\n  }\n\n  set recognitionBoxVisibility(show: boolean) {\n    this.#recognitionBoxVisibility = show\n    this.debugRecognitionBox()\n  }\n\n  get recognitionBoxItemsVisibility(): boolean {\n    return this.#recognitionBoxItemsVisibility\n  }\n\n  set recognitionBoxItemsVisibility(show: boolean) {\n    this.#recognitionBoxItemsVisibility = show\n    this.debugRecognitionBoxItems()\n  }\n\n  protected drawBoundingBox(symbols: TIISymbol[]): void {\n    const symbolAttrs = {\n      style: \"pointer-events: none\",\n      fill: \"transparent\",\n      stroke: \"red\",\n      \"stroke-width\": \"1\",\n      \"stroke-dasharray\": \"5 5\",\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"debug\": \"bounding-box\"\n    }\n    const charAttrs = {\n      style: \"pointer-events: none\",\n      fill: \"transparent\",\n      stroke: \"orange\",\n      \"stroke-width\": \"1\",\n      \"stroke-dasharray\": \"0 5 0\",\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"debug\": \"bounding-box\"\n    }\n    symbols.forEach(s => {\n      const symEl = this.renderer.getElementById(s.id)\n      if (symEl) {\n        if (s.type === SymbolType.Text) {\n          const text = s as IIText\n          let transform: string = \"\"\n          if (text.rotation) {\n            transform = `rotate(${text.rotation.degree}, ${text.rotation.center.x}, ${text.rotation.center.y})`\n          }\n          text.chars.forEach(c => {\n            const ca = {\n              ...charAttrs,\n              char: c.label,\n              transform\n            }\n            symEl.insertAdjacentElement(\"beforebegin\", SVGBuilder.createRect(c.bounds, ca))\n          })\n          const sa = {\n            ...symbolAttrs,\n            symbol: s.id,\n            transform\n          }\n          symEl.insertAdjacentElement(\"beforebegin\", SVGBuilder.createRect(s.bounds, sa))\n        }\n        else {\n          const sa = {\n            ...symbolAttrs,\n            symbol: s.id,\n          }\n          symEl.insertAdjacentElement(\"beforebegin\", SVGBuilder.createRect(s.bounds, sa))\n        }\n      }\n    })\n  }\n\n  protected drawRecognitionBox(box: TBox, infos: string[], color: string , debugAttr: string): void {\n    const TEXT_HEIGHT = 20\n    const recognitionGroup = SVGBuilder.createGroup({ \"debug\": debugAttr, \"opacity\": debugAttr === \"recognition-box-items\" ? \"0.8\" : \"1\" })\n    const rectAttr = {\n      fill: \"transparent\",\n      stroke: color,\n      style: SVGRendererConst.noSelection,\n      \"stroke-dasharray\": debugAttr === \"recognition-box-items\" ? \"1 5 10\" : \"\" ,\n    }\n    const rect = SVGBuilder.createRect(box, rectAttr)\n    recognitionGroup.appendChild(rect)\n\n    const infosGroup = SVGBuilder.createGroup({ id: `infos-group-${createUUID()}` })\n    const infoX = box.x + box.width\n    let infoY = box.y + TEXT_HEIGHT / 2\n    infos?.forEach(w => {\n      infosGroup.appendChild(SVGBuilder.createText({ x: infoX, y: infoY }, w, { stroke: color, style: SVGRendererConst.noSelection }))\n      infoY += TEXT_HEIGHT\n    })\n    recognitionGroup.appendChild(infosGroup)\n    this.renderer.layer.appendChild(recognitionGroup)\n\n    const infosGroupBox = infosGroup.getBBox()\n    const rectBox = {\n      width: infosGroupBox.width + 10,\n      height: infosGroupBox.height + 10,\n      x: infosGroupBox.x - 5,\n      y: infosGroupBox.y - 5,\n    }\n\n    const rectTranslate = SVGBuilder.createRect(rectBox, { ...rectAttr, fill: \"white\", style: \"cursor:move\" })\n    infosGroup.prepend(rectTranslate)\n\n    const translateEl = (e: PointerEvent) => {\n      e.preventDefault()\n      e.stopPropagation()\n      const originX = Number(this.renderer.getAttribute(infosGroup.id, \"originX\"))\n      const originY = Number(this.renderer.getAttribute(infosGroup.id, \"originY\"))\n      const tx = e.clientX - originX\n      const ty = e.clientY - originY\n      this.renderer.setAttribute(infosGroup.id, \"transform\", `translate(${tx},${ty})`)\n      const newRectBox = {\n        width: rectBox.width,\n        height: rectBox.height,\n        x: rectBox.x + tx,\n        y: rectBox.y + ty,\n      }\n      this.renderer.removeSymbol(`connection-${infosGroup.id}`)\n      this.renderer.drawConnectionBetweenBox(`connection-${infosGroup.id}`, box, newRectBox, \"sides\", { stroke: color, debug: debugAttr })\n    }\n\n    rectTranslate.addEventListener(\"pointerdown\", e => {\n      e.preventDefault()\n      e.stopPropagation()\n      if (!this.renderer.getAttribute(infosGroup.id, \"originX\")) {\n        this.renderer.setAttribute(infosGroup.id, \"originX\", e.clientX.toString())\n        this.renderer.setAttribute(infosGroup.id, \"originY\", e.clientY.toString())\n      }\n      this.renderer.layer.addEventListener(\"pointermove\", translateEl)\n      this.renderer.layer.addEventListener(\"pointerup\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n      this.renderer.layer.addEventListener(\"pointerleave\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n      this.renderer.layer.addEventListener(\"pointercancel\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n    })\n  }\n\n  protected buildInfos(obj: object, currentPath = \"\"): string[] {\n    const infos: string[] = []\n    Object.keys(obj).forEach((key) => {\n      const value = obj[key as keyof typeof obj]\n      const localPath = currentPath ? `${currentPath}.${key}` : key\n      switch (typeof value) {\n        case \"object\":\n          infos.push(...this.buildInfos(value, localPath))\n          break\n        default:\n          infos.push(`${localPath}: ${JSON.stringify(value)}`)\n          break\n      }\n    })\n    return infos\n  }\n\n  protected async showRecognitionBox(): Promise<void> {\n    this.#logger.info(\"showRecognitionBox\")\n    let jiix = this.model.exports?.[\"application/vnd.myscript.jiix\"]\n    if (!jiix) {\n      const exports = await this.editor.recognizer.send(this.model.strokes, [\"application/vnd.myscript.jiix\"])\n      jiix = exports[\"application/vnd.myscript.jiix\"]!\n    }\n    this.#logger.debug(\"showRecognitionBox\", { jiix })\n    if (jiix) {\n      jiix.elements?.forEach(el => {\n        switch (el.type) {\n          case \"Drawing\":\n          case \"Shape\": {\n            const associatedStrokes: IIStroke[] = []\n            el.range?.forEach(r => {\n              associatedStrokes.push(...this.model.strokes.slice(r.from.stroke, r.to.stroke + 1))\n            })\n            const box = Box.createFromBoxes(associatedStrokes.map(s => s.bounds))\n            let infos: string[] = [`type: ${el.type}`]\n            infos.push(...this.buildInfos(el))\n            const hideProperties = [\"bounding-box\", \"primitives\", \"range\", \"candidates\"]\n            infos = infos.filter(i => !hideProperties.some(h => i.indexOf(h) > -1))\n            const color = el.type === \"Shape\" ? \"orange\" : \"green\"\n            this.drawRecognitionBox(box, infos, color, \"recognition-box\")\n            break\n          }\n          case \"Text\": {\n            const associatedStrokes: IIStroke[] = []\n            el.range?.forEach(r => {\n              associatedStrokes.push(...this.model.strokes.slice(r.from.stroke, r.to.stroke + 1))\n            })\n            const box = Box.createFromBoxes(associatedStrokes.map(s => s.bounds))\n            this.drawRecognitionBox(box, [`type: ${el.type}`, `label: ${JSON.stringify(el.label || [])}`], \"blue\", \"recognition-box\")\n            break\n          }\n          case \"Math\": {\n            const associatedStrokes: IIStroke[] = []\n            el.range?.forEach(r => {\n              associatedStrokes.push(...this.model.strokes.slice(r.from.stroke, r.to.stroke + 1))\n            })\n            const box = Box.createFromBoxes(associatedStrokes.map(s => s.bounds))\n            let infos: string[] = [`type: ${el.type}`]\n            infos.push(...this.buildInfos(el))\n            const hideProperties = [\"bounding-box\", \"primitives\", \"range\", \"candidates\"]\n            infos = infos.filter(i => !hideProperties.some(h => i.indexOf(h) > -1))\n            this.drawRecognitionBox(box, infos, \"red\", \"recognition-box\")\n            break\n          }\n          default: {\n            this.#logger.warn(\"drawRecognitionBox\", `Unknow jiix element type: ${el.type}`)\n            break\n          }\n        }\n      })\n    }\n  }\n\n  protected async showRecognitionBoxItems(): Promise<void> {\n    this.#logger.info(\"showRecognitionBoxItems\")\n    let jiix = this.model.exports?.[\"application/vnd.myscript.jiix\"]\n    if (!jiix) {\n      const exports = await this.editor.recognizer.send(this.model.strokes, [\"application/vnd.myscript.jiix\"])\n      jiix = exports[\"application/vnd.myscript.jiix\"]!\n    }\n    this.#logger.debug(\"showRecognitionBoxItems\", { jiix })\n    if (jiix) {\n      jiix.elements?.forEach(el => {\n        switch (el.type) {\n          case \"Shape\": {\n            el.elements.forEach(e => {\n              const associatedStrokes: IIStroke[] = []\n              e.range?.forEach(r => {\n                associatedStrokes.push(...this.model.strokes.slice(r.from.stroke, r.to.stroke + 1))\n              })\n              const box = Box.createFromBoxes(associatedStrokes.map(s => s.bounds))\n              let infos: string[] = [`type: ${el.type}`]\n              infos.push(...this.buildInfos(e))\n              const hideProperties = [\"bounding-box\", \"primitives\", \"range\", \"candidates\"]\n              infos = infos.filter(i => !hideProperties.some(h => i.indexOf(h) > -1))\n              this.drawRecognitionBox(box, infos, \"#ce922a\", \"recognition-box-items\")\n            })\n            break\n          }\n          case \"Math\":\n          case \"Text\": {\n            el.lines?.forEach(e => {\n              e.spans?.forEach(s => {\n                const associatedStrokes: IIStroke[] = []\n                s.range.forEach(r => {\n                  associatedStrokes.push(...this.model.strokes.slice(r.from.stroke, r.to.stroke + 1))\n                })\n                const color = s.type === \"Math\" ? \"#ff6565\" : \"#099df7\"\n                const box = Box.createFromBoxes(associatedStrokes.map(s => s.bounds))\n                this.drawRecognitionBox(box, [`type: ${s.type}`, `label: ${JSON.stringify(s.label || [])}`], color, \"recognition-box-items\")\n              })\n            })\n            break\n          }\n\n          default: {\n            this.#logger.warn(\"drawRecognitionBox\", `Unknow jiix element type: ${el.type}`)\n            break\n          }\n        }\n      })\n    }\n  }\n\n  protected clearRecognitionBox(): void {\n    this.#logger.info(\"clearRecognitionBox\")\n    this.renderer.clearElements({ attrs: { \"debug\": \"recognition-box\" } })\n  }\n\n  protected clearRecognitionBoxItems(): void {\n    this.#logger.info(\"clearRecognitionBoxItems\")\n    this.renderer.clearElements({ attrs: { \"debug\": \"recognition-box-items\" } })\n  }\n\n  async debugRecognitionBox(): Promise<void> {\n    this.clearRecognitionBox()\n    if (this.#recognitionBoxVisibility) {\n      this.showRecognitionBox()\n    }\n  }\n\n  async debugRecognitionBoxItems(): Promise<void> {\n    this.clearRecognitionBoxItems()\n    if (this.#recognitionBoxItemsVisibility) {\n      this.showRecognitionBoxItems()\n    }\n  }\n\n  apply(): void {\n    this.debugRecognitionBox()\n    this.debugRecognitionBoxItems()\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIEraser, TSegment } from \"../symbol\"\nimport { SVGRenderer } from \"../renderer\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { PointerEventGrabber, PointerInfo } from \"../grabber\"\nimport { InkEditor } from \"../editor\"\n\n/**\n * @group Manager\n */\nexport class EraseManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.WRITE)\n  grabber: PointerEventGrabber\n  editor: InteractiveInkEditor | InkEditor\n\n  currentEraser?: IIEraser\n\n  constructor(editor: InteractiveInkEditor | InkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n    this.grabber = new PointerEventGrabber(editor.configuration.grabber)\n  }\n\n  get renderer(): SVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  attach(layer: HTMLElement): void\n  {\n    this.grabber.attach(layer)\n    this.grabber.onPointerDown = this.start.bind(this)\n    this.grabber.onPointerMove = this.continue.bind(this)\n    this.grabber.onPointerUp = this.end.bind(this)\n  }\n\n  detach(): void\n  {\n    this.grabber.detach()\n  }\n\n  start(info: PointerInfo): void\n  {\n    this.#logger.info(\"startErase\", { info })\n    this.currentEraser = new IIEraser()\n    this.currentEraser.pointers.push(info.pointer)\n    this.renderer.drawSymbol(this.currentEraser!)\n  }\n\n  continue(info: PointerInfo): void\n  {\n    this.#logger.info(\"continueErase\", { info })\n    if (!this.currentEraser) {\n      throw new Error(\"Can't update current eraser because currentEraser is undefined\")\n    }\n    this.currentEraser.pointers.push(info.pointer)\n    this.renderer.drawSymbol(this.currentEraser)\n    const lastSeg: TSegment = {\n      p1: this.currentEraser.pointers.at(-1)!,\n      p2: this.currentEraser.pointers.at(-2)!\n    }\n    if (this.editor instanceof InteractiveInkEditor) {\n      this.editor.model.symbols.forEach(s =>\n      {\n        if (s.isIntersected(lastSeg)) {\n          s.deleting = true\n          this.renderer.drawSymbol(s)\n        }\n      })\n    }\n    else {\n      this.editor.model.strokes.forEach(s =>\n      {\n        if (s.isIntersected(lastSeg)) {\n          s.deleting = true\n          this.renderer.drawSymbol(s)\n        }\n      })\n    }\n  }\n\n  async end(info: PointerInfo): Promise<void>\n  {\n    this.#logger.info(\"finishErasing\", { info })\n    this.continue(info)\n\n    this.renderer.removeSymbol(this.currentEraser!.id)\n    if (this.editor instanceof InteractiveInkEditor) {\n      this.editor.removeSymbols(this.editor.model.symbolsToDelete.map(s => s.id))\n    }\n    else {\n      this.editor.removeStrokes(this.editor.model.strokesToDelete.map(s => s.id))\n    }\n    this.currentEraser = undefined\n  }\n}\n","/**\n * @group History\n */\nexport type THistoryContext = {\n  canUndo: boolean\n  canRedo: boolean\n  empty: boolean\n  stackIndex: number\n  possibleUndoCount: number\n}\n\n/**\n * @group History\n */\nexport const getInitialHistoryContext = (): THistoryContext => {\n  return {\n    stackIndex: 0,\n    possibleUndoCount: 0,\n    canRedo: false,\n    canUndo: false,\n    empty: true,\n  }\n}\n","import { EditorEvent } from \"../editor/EditorEvent\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { Model } from \"../model\"\nimport { THistoryConfiguration } from \"./HistoryConfiguration\"\nimport { THistoryContext, getInitialHistoryContext } from \"./HistoryContext\"\n\n/**\n * @group History\n */\nexport class HistoryManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.HISTORY)\n\n  configuration: THistoryConfiguration\n  event: EditorEvent\n  context: THistoryContext\n  stack: Model[]\n\n  constructor(configuration: THistoryConfiguration, event: EditorEvent)\n  {\n    this.#logger.info(\"constructor\", { configuration })\n    this.configuration = configuration\n    this.event = event\n    this.context = getInitialHistoryContext()\n    this.stack = []\n  }\n\n  private updateContext(): void\n  {\n    this.context.canRedo = this.stack.length - 1 > this.context.stackIndex\n    this.context.canUndo = this.context.stackIndex > 0\n    this.context.empty = this.stack[this.context.stackIndex].symbols.length === 0\n  }\n\n  push(model: Model): void\n  {\n    this.#logger.info(\"push\", { model })\n    if (this.context.stackIndex + 1 < this.stack.length) {\n      this.stack.splice(this.context.stackIndex + 1)\n    }\n\n    this.stack.push(model.clone())\n    this.context.stackIndex = this.stack.length - 1\n\n    if (this.stack.length > this.configuration.maxStackSize) {\n      this.stack.shift()\n      this.context.stackIndex--\n    }\n\n    this.updateContext()\n    this.event.emitChanged(this.context)\n  }\n\n  updateStack(model: Model): void\n  {\n    this.#logger.info(\"updateStack\", { model })\n    const index = this.stack.findIndex(m => m.modificationDate === model.modificationDate)\n    if (index > -1) {\n      this.stack.splice(index, 1, model.clone())\n    }\n    this.updateContext()\n    this.event.emitChanged(this.context)\n  }\n\n  undo(): Model\n  {\n    this.#logger.info(\"undo\")\n    if (this.context.canUndo) {\n      this.context.stackIndex--\n      this.updateContext()\n      this.event.emitChanged(this.context)\n    }\n    const previousModel = this.stack[this.context.stackIndex].clone()\n    this.#logger.debug(\"undo\", previousModel)\n    return previousModel\n  }\n\n  redo(): Model\n  {\n    this.#logger.info(\"redo\")\n    if (this.context.canRedo) {\n      this.context.stackIndex++\n      this.updateContext()\n      this.event.emitChanged(this.context)\n    }\n    const nextModel = this.stack[this.context.stackIndex].clone()\n    this.#logger.debug(\"redo\", nextModel)\n    return nextModel\n  }\n}\n","import { EditorEvent } from \"../editor/EditorEvent\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport { IIDecorator, IIStroke, TIISymbol, TPoint } from \"../symbol\"\nimport { TStyle } from \"../style\"\nimport { MatrixTransform, TMatrixTransform } from \"../transform\"\nimport { THistoryContext, getInitialHistoryContext } from \"./HistoryContext\"\nimport { PartialDeep } from \"../utils\"\nimport { THistoryConfiguration } from \"./HistoryConfiguration\"\n\n/**\n * @group History\n */\nexport type TIIHistoryChanges = {\n  added?: TIISymbol[]\n  updated?: TIISymbol[]\n  erased?: TIISymbol[]\n  replaced?: { oldSymbols: TIISymbol[], newSymbols: TIISymbol[] }\n  matrix?: { symbols: TIISymbol[], matrix: TMatrixTransform }\n  translate?: { symbols: TIISymbol[], tx: number, ty: number }[]\n  scale?: { symbols: TIISymbol[], scaleX: number, scaleY: number, origin: TPoint }[]\n  rotate?: { symbols: TIISymbol[], angle: number, center: TPoint }[]\n  style?: { symbols: TIISymbol[], style?: PartialDeep<TStyle>, fontSize?: number }\n  order?: { symbols: TIISymbol[], position: \"first\" | \"last\" | \"forward\" | \"backward\" }\n  decorator?: { symbol: TIISymbol, decorator: IIDecorator, added: boolean }[]\n  group?: { symbols: TIISymbol[] }\n  ungroup?: { group: TIISymbol }\n}\n\n/**\n * @group History\n * @remarks used to send messages to the backend on undo or redo\n */\nexport type TIIHistoryBackendChanges = {\n  added?: IIStroke[]\n  erased?: IIStroke[]\n  replaced?: { oldStrokes: IIStroke[], newStrokes: IIStroke[] }\n  matrix?: { strokes: IIStroke[], matrix: TMatrixTransform },\n  translate?: { strokes: IIStroke[], tx: number, ty: number }[]\n  scale?: { strokes: IIStroke[], scaleX: number, scaleY: number, origin: TPoint }[]\n  rotate?: { strokes: IIStroke[], angle: number, center: TPoint }[]\n}\n\n/**\n * @group History\n */\nexport type TIIHistoryStackItem = {\n  changes: TIIHistoryChanges\n  model: IIModel\n}\n\n/**\n * @group History\n */\nexport class IIHistoryManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.HISTORY)\n\n  configuration: THistoryConfiguration\n  event: EditorEvent\n  context: THistoryContext\n  stack: TIIHistoryStackItem[]\n\n  constructor(configuration: THistoryConfiguration, event: EditorEvent)\n  {\n    this.#logger.info(\"constructor\", { configuration })\n    this.configuration = configuration\n    this.event = event\n    this.context = getInitialHistoryContext()\n    this.stack = []\n  }\n\n  private updateContext(): void\n  {\n    this.context.canRedo = this.stack.length - 1 > this.context.stackIndex\n    this.context.canUndo = this.context.stackIndex > 0\n    this.context.empty = this.stack[this.context.stackIndex].model.symbols.length === 0\n  }\n\n  isChangesEmpty(changes: TIIHistoryChanges): boolean\n  {\n    return !(\n      changes.added?.length ||\n      changes.updated?.length ||\n      changes.erased?.length ||\n      changes.replaced?.oldSymbols.length ||\n      changes.matrix?.symbols.length ||\n      changes.translate?.length ||\n      changes.rotate?.length ||\n      changes.scale?.length ||\n      changes.style?.symbols?.length ||\n      changes.order?.symbols?.length ||\n      changes.decorator?.length ||\n      changes.group?.symbols.length ||\n      changes.ungroup?.group\n    )\n  }\n\n  init(model: IIModel): void\n  {\n    this.stack.push({ model: model.clone(), changes: {} })\n    this.event.emitChanged(this.context)\n  }\n\n  push(model: IIModel, changes: TIIHistoryChanges): void\n  {\n    this.#logger.info(\"push\", { model, changes })\n    if (this.isChangesEmpty(changes)) return\n\n    if (this.context.stackIndex + 1 < this.stack.length) {\n      this.stack.splice(this.context.stackIndex + 1)\n    }\n\n    this.stack.push({ model: model.clone(), changes })\n    this.context.stackIndex = this.stack.length - 1\n\n    if (this.stack.length > this.configuration.maxStackSize) {\n      this.stack.shift()\n      this.context.stackIndex--\n    }\n\n    this.updateContext()\n    this.event.emitChanged(this.context)\n  }\n\n  update(model: IIModel): void\n  {\n    this.#logger.info(\"pop\")\n    const stackIdx = this.stack.findIndex(s => s.model.modificationDate === model.modificationDate)\n    if (stackIdx > -1) {\n      this.stack[stackIdx].model = model\n      this.updateContext()\n    }\n  }\n\n  pop(): void\n  {\n    this.#logger.info(\"pop\")\n    this.stack.pop()\n    this.context.stackIndex = this.stack.length - 1\n    this.updateContext()\n  }\n\n  protected reverseChanges(changes: TIIHistoryChanges): TIIHistoryChanges\n  {\n    const reversedChanges: TIIHistoryChanges = {}\n    if (changes.added) {\n      reversedChanges.erased = changes.added\n    }\n    if (changes.erased) {\n      reversedChanges.added = changes.erased\n    }\n    if (changes.replaced) {\n      reversedChanges.replaced = {\n        newSymbols: changes.replaced.oldSymbols,\n        oldSymbols: changes.replaced.newSymbols\n      }\n    }\n    if (changes.matrix) {\n      reversedChanges.matrix = {\n        symbols: changes.matrix.symbols,\n        matrix: new MatrixTransform(changes.matrix.matrix.xx, changes.matrix.matrix.yx, changes.matrix.matrix.xy, changes.matrix.matrix.yy, changes.matrix.matrix.tx, changes.matrix.matrix.ty).invert()\n      }\n    }\n    if (changes.translate?.length) {\n      reversedChanges.translate = changes.translate.map(tr =>\n      {\n        return {\n          symbols: tr.symbols,\n          tx: -tr.tx,\n          ty: -tr.ty,\n        }\n      })\n    }\n    if (changes.rotate?.length) {\n      reversedChanges.rotate = changes.rotate.map(tr =>\n      {\n        return {\n          symbols: tr.symbols,\n          angle: 2 * Math.PI - tr.angle,\n          center: tr.center\n        }\n      })\n    }\n    if (changes.scale?.length) {\n      reversedChanges.scale = changes.scale.map(tr =>\n      {\n        return {\n          symbols: tr.symbols,\n          origin: tr.origin,\n          scaleX: 1 / tr.scaleX,\n          scaleY: 1 / tr.scaleY\n        }\n      })\n    }\n\n    return reversedChanges\n  }\n\n  undo(): TIIHistoryStackItem\n  {\n    this.#logger.info(\"undo\")\n    const currentStackItem = this.stack[this.context.stackIndex]\n    if (this.context.canUndo) {\n      this.context.stackIndex--\n      this.updateContext()\n      this.event.emitChanged(this.context)\n    }\n    const previousStackItem = this.stack[this.context.stackIndex]\n    this.#logger.debug(\"undo\", previousStackItem)\n    return {\n      model: previousStackItem.model,\n      changes: this.reverseChanges(currentStackItem.changes)\n    }\n  }\n\n  redo(): TIIHistoryStackItem\n  {\n    this.#logger.info(\"redo\")\n    if (this.context.canRedo) {\n      this.context.stackIndex++\n      this.updateContext()\n      this.event.emitChanged(this.context)\n    }\n    const nextStackItem = this.stack[this.context.stackIndex]\n    this.#logger.debug(\"redo\", nextStackItem)\n    return nextStackItem\n  }\n\n  clear(): void\n  {\n    this.context = getInitialHistoryContext()\n    this.stack = []\n  }\n}","import { EditorEvent } from \"../editor/EditorEvent\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IModel } from \"../model\"\nimport { IIStroke, TIISymbol } from \"../symbol\"\nimport { THistoryContext, getInitialHistoryContext } from \"./HistoryContext\"\nimport { THistoryConfiguration } from \"./HistoryConfiguration\"\n\n/**\n * @group History\n */\nexport type TIHistoryChanges = {\n  added?: TIISymbol[]\n  removed?: TIISymbol[]\n}\n\n/**\n * @group History\n * @remarks used to send messages to the backend on undo or redo\n */\nexport type TIHistoryBackendChanges = {\n  added?: IIStroke[]\n  removed?: IIStroke[]\n}\n\n/**\n * @group History\n */\nexport type TIHistoryStackItem = {\n  changes: TIHistoryChanges\n  model: IModel\n}\n\n/**\n * @group History\n */\nexport class IHistoryManager {\n  #logger = LoggerManager.getLogger(LoggerCategory.HISTORY)\n\n  configuration: THistoryConfiguration\n  event: EditorEvent\n  context: THistoryContext\n  stack: TIHistoryStackItem[]\n\n  constructor(configuration: THistoryConfiguration, event: EditorEvent) {\n    this.#logger.info(\"constructor\", { configuration })\n    this.configuration = configuration\n    this.event = event\n    this.context = getInitialHistoryContext()\n    this.stack = []\n  }\n\n  private updateContext(): void {\n    this.context.canRedo = this.stack.length - 1 > this.context.stackIndex\n    this.context.canUndo = this.context.stackIndex > 0\n    this.context.empty = this.stack[this.context.stackIndex].model.strokes.length === 0\n  }\n\n  updateModelStack(model: IModel): void {\n    this.#logger.info(\"updateModelStack\", { model })\n    const stackIdx = this.stack.findIndex(s => s.model.modificationDate === model.modificationDate)\n    if (stackIdx > -1) {\n      this.stack[stackIdx].model = model.clone()\n      this.updateContext()\n    }\n    this.updateContext()\n    this.event.emitChanged(this.context)\n  }\n\n  isChangesEmpty(changes: TIHistoryChanges): boolean {\n    return !(\n      changes.added?.length ||\n      changes.removed?.length\n    )\n  }\n\n  init(model: IModel): void {\n    this.stack.push({ model: model.clone(), changes: {} })\n    this.event.emitChanged(this.context)\n  }\n\n  push(model: IModel, changes: TIHistoryChanges): void {\n    this.#logger.info(\"push\", { model, changes })\n    if (this.isChangesEmpty(changes)) return\n\n    if (this.context.stackIndex + 1 < this.stack.length) {\n      this.stack.splice(this.context.stackIndex + 1)\n    }\n\n    this.stack.push({ model: model.clone(), changes })\n    this.context.stackIndex = this.stack.length - 1\n\n    if (this.stack.length > this.configuration.maxStackSize) {\n      this.stack.shift()\n      this.context.stackIndex--\n    }\n\n    this.updateContext()\n    this.event.emitChanged(this.context)\n  }\n\n  pop(): void {\n    this.#logger.info(\"pop\")\n    this.stack.pop()\n    this.context.stackIndex = this.stack.length - 1\n    this.updateContext()\n  }\n\n  protected reverseChanges(changes: TIHistoryChanges): TIHistoryChanges {\n    const reversedChanges: TIHistoryChanges = {}\n    if (changes.added) {\n      reversedChanges.removed = changes.added\n    }\n    if (changes.removed) {\n      reversedChanges.added = changes.removed\n    }\n    return reversedChanges\n  }\n\n  undo(): TIHistoryStackItem {\n    this.#logger.info(\"undo\")\n    const currentStackItem = this.stack[this.context.stackIndex]\n    if (this.context.canUndo) {\n      this.context.stackIndex--\n      this.updateContext()\n      this.event.emitChanged(this.context)\n    }\n    const previousStackItem = this.stack[this.context.stackIndex]\n    this.#logger.debug(\"undo\", previousStackItem)\n    return {\n      model: previousStackItem.model,\n      changes: this.reverseChanges(currentStackItem.changes)\n    }\n  }\n\n  redo(): TIHistoryStackItem {\n    this.#logger.info(\"redo\")\n    if (this.context.canRedo) {\n      this.context.stackIndex++\n      this.updateContext()\n      this.event.emitChanged(this.context)\n    }\n    const nextStackItem = this.stack[this.context.stackIndex]\n    this.#logger.debug(\"redo\", nextStackItem)\n    return nextStackItem\n  }\n\n  clear(): void {\n    this.context = getInitialHistoryContext()\n    this.stack = []\n  }\n}\n","\n/**\n * @group History\n */\nexport type THistoryConfiguration = {\n  maxStackSize: number\n}\n\n/**\n * @group History\n * @source\n */\nexport const DefaultHistoryConfiguration: THistoryConfiguration = {\n  maxStackSize: 100\n}\n","import ArrowDown from \"../assets/svg/nav-arrow-down.svg\"\n\n/**\n * @group Menu\n */\nexport type TMenuItem = {\n  id: string,\n  label: string,\n  type: \"button\" | \"checkbox\" | \"select\" | \"list\" | \"colors\"\n  disabled?: boolean\n}\n\n/**\n * @group Menu\n */\nexport type TMenuItemButton = TMenuItem & {\n  type: \"button\"\n  icon?: string\n  callback: () => void\n}\n\n/**\n * @group Menu\n */\nexport type TMenuItemButtonList = TMenuItem & {\n  type: \"list\"\n  initValue: string,\n  values: { label: string, value: string }[]\n  callback: (value: string) => void\n}\n\n/**\n * @group Menu\n */\nexport type TMenuItemColorList = TMenuItem & {\n  type: \"colors\"\n  initValue: string,\n  values: string[]\n  fill: boolean\n  callback: (value: string) => void\n}\n\n/**\n * @group Menu\n */\nexport type TMenuItemBoolean = TMenuItem & {\n  type: \"checkbox\",\n  initValue: boolean | \"indeterminate\",\n  callback: (value: boolean) => void\n}\n\n/**\n * @group Menu\n */\nexport type TMenuItemSelect = TMenuItem & {\n  type: \"select\",\n  initValue: string,\n  values: { label: string, value: string }[]\n  callback: (value: string) => void\n}\n\n/**\n * @group Menu\n */\nexport abstract class IIMenu\n{\n  thicknessList = [\n    { label: \"S\", value: 1 },\n    { label: \"M\", value: 2 },\n    { label: \"L\", value: 4 },\n    { label: \"XL\", value: 8 },\n  ]\n\n  fontSizeList = [\n    { label: \"Auto\", value: \"auto\" },\n    { label: \"S\", value: 0.5 },\n    { label: \"M\", value: 0.75 },\n    { label: \"L\", value: 1 },\n  ]\n\n  fontWeightList = [\n    { label: \"Auto\", value: \"auto\" },\n    { label: \"Normal\", value: \"normal\" },\n    { label: \"Bold\", value: \"bold\" },\n  ]\n\n  colors = [\n    \"#000000\", \"#808080\", \"#ffffff\", \"transparent\",\n    \"#ff0000\", \"#ff6400\", \"#ffc800\", \"#ffff00\",\n    \"#0000ff\", \"#0064ff\", \"#00c8ff\", \"#00ffff\",\n    \"#008000\", \"#00af00\", \"#00e100\", \"#00ff00\"\n  ]\n\n  protected createWrapCollapsible(el: Node, title: string): HTMLDivElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.classList.add(\"collapsible-wrapper\")\n    const head = document.createElement(\"div\")\n    head.classList.add(\"collapsible-header\")\n    head.textContent = title\n    const btn = document.createElement(\"span\")\n    btn.classList.add(\"collapsible-header-icon\")\n    btn.innerHTML = ArrowDown\n    head.appendChild(btn)\n    head.style.setProperty(\"pointer\", \"cursor\")\n    const content = document.createElement(\"div\")\n    content.classList.add(\"collapsible-content\")\n    head.addEventListener(\"pointerup\", () => wrapper.classList.toggle(\"active\"))\n    wrapper.appendChild(head)\n    content.appendChild(el)\n    wrapper.appendChild(content)\n    return wrapper\n  }\n\n  protected createMenuItemBoolean(item: TMenuItemBoolean): HTMLDivElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.classList.add(\"ms-menu-item\", item.type)\n    const labelEl = document.createElement(\"span\")\n    labelEl.textContent = item.label\n    wrapper.appendChild(labelEl)\n    const checkbox = document.createElement(\"input\")\n    checkbox.id = item.id\n    checkbox.setAttribute(\"type\", \"checkbox\")\n    if (item.disabled) {\n      checkbox.disabled = true\n    }\n    if (item.initValue === \"indeterminate\") {\n      checkbox.indeterminate = true\n    } else {\n      checkbox.checked = item.initValue\n    }\n    checkbox.addEventListener(\"change\", (e) => item.callback((e.target as HTMLInputElement).checked))\n    wrapper.appendChild(checkbox)\n    return wrapper\n  }\n\n  protected createMenuItemSelect(item: TMenuItemSelect): HTMLDivElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.classList.add(\"ms-menu-item\", item.type)\n    const labelEl = document.createElement(\"span\")\n    labelEl.textContent = item.label\n    wrapper.appendChild(labelEl)\n    const select = document.createElement(\"select\")\n    select.id = item.id\n    if (item.disabled) {\n      select.disabled = true\n    }\n    item.values.forEach(v =>\n    {\n      const selected = v.value === item.initValue\n      const opt = new Option(v.label, v.value.toString(), selected, selected)\n      select.appendChild(opt)\n    })\n    select.addEventListener(\"change\", (e) => item.callback((e.target as HTMLInputElement).value))\n    wrapper.appendChild(select)\n    return wrapper\n  }\n\n  protected createMenuItemButton(item: TMenuItemButton): HTMLElement\n  {\n    const btn = document.createElement(\"button\")\n    btn.classList.add(\"ms-menu-item\", \"ms-menu-button\")\n    btn.innerHTML = item.icon || item.label\n    btn.addEventListener(\"pointerup\", item.callback)\n    return btn\n  }\n\n  protected createMenuItemButtonList(item: TMenuItemButtonList): HTMLElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.classList.add(\"ms-menu-item\", item.type)\n    wrapper.id = item.id\n    const labelEl = document.createElement(\"span\")\n    labelEl.textContent = item.label\n    wrapper.appendChild(labelEl)\n    item.values.forEach((v) =>\n    {\n      const btn = document.createElement(\"button\")\n      if (item.disabled) {\n        btn.disabled = true\n      }\n      btn.id = `${item.id}-${ v.value }-btn`\n      if (item.initValue === v.value) {\n        btn.classList.add(\"active\")\n      }\n      btn.textContent = v.label\n      btn.addEventListener(\"pointerup\", () =>\n      {\n        item.callback(v.value)\n        wrapper.querySelectorAll(\"*\").forEach(e => e.classList.remove(\"active\"))\n        btn.classList.add(\"active\")\n      })\n      wrapper.appendChild(btn)\n    })\n    return wrapper\n  }\n\n  protected createMenuItemColorList(item: TMenuItemColorList): HTMLDivElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.classList.add(\"ms-menu-item\", item.type)\n    wrapper.id = item.id\n    const labelEl = document.createElement(\"span\")\n    labelEl.textContent = item.label\n    wrapper.appendChild(labelEl)\n    wrapper.appendChild(this.createColorList(item))\n    return wrapper\n  }\n\n  protected createColorList(item: TMenuItemColorList): HTMLDivElement\n  {\n    const list = document.createElement(\"div\")\n    list.id = `${ item.id }-list`\n    list.classList.add(\"ms-menu-row\", \"color-list\")\n    item.values.forEach((color) =>\n    {\n      const btn = document.createElement(\"button\")\n      if (item.disabled) {\n        btn.disabled = true\n      }\n      btn.id = `${ item.id }-${ color.replace(\"#\", \"\") }-btn`\n      btn.classList.add(\"ms-menu-button\", \"square\")\n      const colorEl = document.createElement(\"div\")\n      colorEl.classList.add(\"color\")\n      if (item.fill) {\n        colorEl.style.setProperty(\"background-color\", color)\n        colorEl.style.setProperty(\"border\", \"1px solid lightgrey\")\n      } else {\n        colorEl.style.setProperty(\"background-color\", \"transparent\")\n        colorEl.style.setProperty(\"border\", `3px solid ${ color }`)\n      }\n      if (color === \"#ffffff\") {\n        colorEl.style.setProperty(\"border\", \"1px solid black\")\n      }\n      if (color === \"transparent\") {\n        colorEl.style.setProperty(\"background-image\", \"linear-gradient(45deg, #AAA 10%, transparent 20%, #AAA 30%, transparent 40%, #AAA 50%, transparent 60%, #AAA 70%, transparent 80%, #AAA 90%, transparent 100%)\")\n      }\n      if (item.initValue === color) {\n        btn.classList.add(\"active\")\n      }\n      btn.appendChild(colorEl)\n      btn.addEventListener(\"pointerup\", (e) =>\n      {\n        e.preventDefault()\n        e.stopPropagation()\n        item.callback(color)\n        list.querySelectorAll(\"*\").forEach(e => e.classList.remove(\"active\"))\n        btn.classList.add(\"active\")\n      })\n      list!.appendChild(btn)\n    })\n    return list\n  }\n\n  protected createMenuItem(item: TMenuItem): HTMLElement\n  {\n    switch (item.type) {\n      case \"checkbox\":\n        return this.createMenuItemBoolean(item as TMenuItemBoolean)\n      case \"select\":\n        return this.createMenuItemSelect(item as TMenuItemSelect)\n      case \"list\":\n        return this.createMenuItemButtonList(item as TMenuItemButtonList)\n      case \"colors\":\n        return this.createMenuItemColorList(item as TMenuItemColorList)\n      case \"button\":\n      default:\n        return this.createMenuItemButton(item as TMenuItemButton)\n    }\n  }\n\n  abstract render(domElement: HTMLElement): void\n\n  abstract update(): void\n\n  abstract show(): void\n\n  abstract hide(): void\n\n  abstract destroy(): void\n}\n","\n/**\n * @group Gesture\n * @summary List all authorized gestures\n */\nexport type TGestureType = \"UNDERLINE\" | \"SCRATCH\" | \"JOIN\" | \"INSERT\" | \"STRIKETHROUGH\" | \"SURROUND\"\n\n/**\n * @group Gesture\n * @remarks\n *  when gestureType = \"INSERT\", subStrokes represent the two parts\n *  when gestureType = \"SCRATCH\", subStrokes represent the part to substract at the stroke corresponding fullStrokeId\n */\nexport type TGesture = {\n  gestureType: TGestureType\n  gestureStrokeId: string\n  strokeIds: string[]\n  strokeBeforeIds: string[]\n  strokeAfterIds: string[]\n  subStrokes?: { fullStrokeId: string, x: number[], y: number[] }[]\n}\n\n/**\n * @group Gesture\n * @summary\n * List all action allowed on surround detected\n * @remarks\n * only usable in the case of offscreen\n */\nexport enum SurroundAction\n{\n  Select = \"select\",\n  Surround = \"surround\",\n  Highlight = \"highlight\"\n}\n\n/**\n * @group Gesture\n * @summary\n * List all action allowed on strikeThrough detected\n * @remarks\n * only usable in the case of offscreen\n */\nexport enum StrikeThroughAction\n{\n  Erase = \"erase\",\n  Draw = \"draw\"\n}\n\n/**\n * @group Gesture\n * @summary\n * List all action allowed on split detected\n * @remarks\n * only usable in the case of offscreen\n */\nexport enum InsertAction\n{\n  /**\n   * @remarks Add line break on gesture place\n   */\n  LineBreak = \"line-break\",\n  /**\n   * @remarks Insert place in gesture place\n   */\n  Insert = \"insert\"\n}\n","import { InsertAction, StrikeThroughAction, SurroundAction } from \"./Gesture\"\n\n/**\n * @group Gesture\n * @source\n */\nexport type TGestureConfiguration = {\n  surround: SurroundAction\n  strikeThrough: StrikeThroughAction\n  insert: InsertAction\n}\n\n/**\n * @group Gesture\n * @source\n */\nexport const DefaultGestureConfiguration: TGestureConfiguration = {\n  surround: SurroundAction.Select,\n  strikeThrough: StrikeThroughAction.Draw,\n  insert: InsertAction.LineBreak\n}\n","import { EditorTool } from \"../Constants\"\nimport { LoggerManager, LoggerCategory } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport\n{\n  IIDecorator,\n  IIStroke,\n  SymbolType,\n  IIText,\n  DecoratorKind,\n  IISymbolGroup,\n  TIISymbol,\n  Box,\n  TPoint,\n  IIRecognizedText,\n  RecognizedKind,\n} from \"../symbol\"\nimport { RecognizerWebSocket } from \"../recognizer\"\nimport { SVGRenderer } from \"../renderer\"\nimport { IIHistoryManager, TIIHistoryChanges } from \"../history\"\nimport { computeAverage, isBetween, PartialDeep } from \"../utils\"\nimport { IITranslateManager } from \"../manager/IITranslateManager\"\nimport { IITextManager } from \"../manager/IITextManager\"\nimport { InteractiveInkEditor } from \"../editor\"\nimport { InsertAction, StrikeThroughAction, SurroundAction, TGesture } from \"./Gesture\"\nimport { DefaultGestureConfiguration, TGestureConfiguration } from \"./GestureConfiguration\"\n\n/**\n * @group Gesture\n */\nexport class IIGestureManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.GESTURE)\n\n  insertAction: InsertAction = InsertAction.LineBreak\n  surroundAction: SurroundAction = SurroundAction.Select\n  strikeThroughAction: StrikeThroughAction = StrikeThroughAction.Draw\n  editor: InteractiveInkEditor\n\n  constructor(editor: InteractiveInkEditor, gestureAction?: PartialDeep<TGestureConfiguration>)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n    this.surroundAction = gestureAction?.surround || DefaultGestureConfiguration.surround\n    this.strikeThroughAction = gestureAction?.strikeThrough || DefaultGestureConfiguration.strikeThrough\n    this.insertAction = gestureAction?.insert || DefaultGestureConfiguration.insert\n  }\n\n  get renderer(): SVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  get recognizer(): RecognizerWebSocket\n  {\n    return this.editor.recognizer\n  }\n\n  get translator(): IITranslateManager\n  {\n    return this.editor.translator\n  }\n\n  get texter(): IITextManager\n  {\n    return this.editor.texter\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get history(): IIHistoryManager\n  {\n    return this.editor.history\n  }\n\n  get rowHeight(): number\n  {\n    return this.editor.configuration.rendering.guides.gap\n  }\n\n  get strokeSpaceWidth(): number\n  {\n    return this.editor.configuration.rendering.guides.gap * 2\n  }\n\n  async applySurroundGesture(gestureStroke: IIStroke, gesture: TGesture): Promise<void>\n  {\n    this.#logger.info(\"applySurroundGesture\", { gestureStroke, gesture })\n    const changes: TIIHistoryChanges = {}\n    const ids = this.model.symbols.filter(s => gestureStroke.bounds.contains(s.bounds)).map(s => s.id)\n    switch (this.surroundAction) {\n      case SurroundAction.Select: {\n        if (ids.length) {\n          this.editor.tool = EditorTool.Select\n          this.editor.select(ids)\n        }\n        break\n      }\n      case SurroundAction.Highlight: {\n        const symbolIds: string[] = []\n        changes.decorator = []\n        ids.forEach(id =>\n        {\n          const sym = this.model.getRootSymbol(id)\n          if (sym && [SymbolType.Group, SymbolType.Stroke, SymbolType.Text, SymbolType.Recognized].includes(sym.type) && !symbolIds.includes(sym.id)) {\n            const symWithDec = sym as (IIText | IIStroke | IISymbolGroup | IIRecognizedText)\n            const highlight = new IIDecorator(DecoratorKind.Highlight, this.editor.penStyle)\n            const index = symWithDec.decorators.findIndex(d => d.kind === DecoratorKind.Highlight)\n            const added = index === -1\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            added ? symWithDec.decorators.push(highlight) : symWithDec.decorators.splice(index, 1)\n            this.model.updateSymbol(symWithDec)\n            this.renderer.drawSymbol(symWithDec)\n            symbolIds.push(symWithDec.id)\n            changes.decorator!.push({ symbol: symWithDec, decorator: highlight, added })\n          }\n        })\n        if (changes.decorator.length) {\n          this.history.push(this.model, changes)\n        }\n        break\n      }\n      case SurroundAction.Surround: {\n        const symbolIds: string[] = []\n        changes.decorator = []\n        ids.forEach(id =>\n        {\n          const sym = this.model.getRootSymbol(id)\n          if (sym && [SymbolType.Group, SymbolType.Stroke, SymbolType.Text, SymbolType.Recognized].includes(sym.type) && !symbolIds.includes(sym.id)) {\n            const symWithDec = sym as (IIText | IIStroke | IISymbolGroup | IIRecognizedText)\n            const surround = new IIDecorator(DecoratorKind.Surround, this.editor.penStyle)\n            const index = symWithDec.decorators.findIndex(d => d.kind === DecoratorKind.Surround)\n            const added = index === -1\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            added ? symWithDec.decorators.push(surround) : symWithDec.decorators.splice(index, 1)\n            this.model.updateSymbol(symWithDec)\n            this.renderer.drawSymbol(symWithDec)\n            changes.decorator!.push({ symbol: symWithDec, decorator: surround, added })\n            symbolIds.push(symWithDec.id)\n          }\n        })\n        this.history.push(this.model, changes)\n        break\n      }\n      default:\n        this.#logger.error(\"applySurroundGesture\", `Unknow surroundAction: ${ this.surroundAction }, values allowed are: ${ SurroundAction.Highlight }, ${ SurroundAction.Select }, ${ SurroundAction.Surround }`)\n        break\n    }\n    return\n  }\n\n  protected computeScratchOnStrokes(gesture: TGesture, stroke: IIStroke): IIStroke[]\n  {\n    const newStrokes: IIStroke[] = []\n    const partPointersToRemove = gesture.subStrokes?.find(ss => ss.fullStrokeId === stroke.id)\n    if (partPointersToRemove) {\n      const strokePartToErase = new IIStroke()\n      partPointersToRemove.x.forEach((x, i) => strokePartToErase.addPointer({ x, y: partPointersToRemove.y[i], p: 1, t: 1 }))\n      const subStrokes = IIStroke.substract(stroke, strokePartToErase)\n      if (subStrokes.before && subStrokes.before.pointers.length > 1) newStrokes.push(subStrokes.before)\n      if (subStrokes.after && subStrokes.after.pointers.length > 1) newStrokes.push(subStrokes.after)\n    }\n    return newStrokes\n  }\n\n  protected computeScratchOnText(gestureStroke: IIStroke, textSymbol: IIText): IIText | undefined\n  {\n    const charsToRemove = textSymbol.getCharsOverlaps(gestureStroke.pointers)\n    if (textSymbol.chars.length == charsToRemove.length) {\n      return\n    }\n    else {\n      charsToRemove.forEach(c =>\n      {\n        const cIndex = textSymbol.chars.findIndex(c1 => c1.id === c.id)\n        textSymbol.chars.splice(cIndex, 1)\n      })\n      this.texter.updateBounds(textSymbol)\n      return textSymbol\n    }\n  }\n\n  protected computeScratchOnSymbol(gestureStroke: IIStroke, gesture: TGesture, symbol: TIISymbol): { erased?: boolean, replaced?: TIISymbol[] }\n  {\n    switch (symbol.type) {\n      case SymbolType.Stroke: {\n        const strokesScratchedResult = this.computeScratchOnStrokes(gesture, symbol)\n        if (strokesScratchedResult.length) {\n          return {\n            replaced: strokesScratchedResult\n          }\n        }\n        else {\n          return { erased: true }\n        }\n      }\n      case SymbolType.Recognized: {\n        if (symbol.kind === RecognizedKind.Text) {\n          const childrenNotTouch = symbol.strokes.filter(s => !gestureStroke.bounds.overlaps(s.bounds))\n          const childrenTouch = symbol.strokes.filter(s => gestureStroke.bounds.overlaps(s.bounds))\n          const results = childrenTouch.map(s =>\n          {\n            return {\n              symbol: s,\n              result: this.computeScratchOnStrokes(gesture, s)\n            }\n          })\n          if (childrenNotTouch.length === 0 && results.every(r => r.result.length === 0)) {\n            return { erased: true }\n          }\n          else {\n            const strokesToConserve: IIStroke[] = childrenNotTouch.concat(...results.flatMap(r => r.result))\n            const strokeText = new IIRecognizedText(strokesToConserve, { baseline: symbol.baseline, xHeight: symbol.xHeight }, symbol.style)\n            strokeText.decorators = symbol.decorators\n            return {\n              replaced: [strokeText]\n            }\n          }\n        }\n        return {}\n      }\n      case SymbolType.Group: {\n        const childrenNotTouch = symbol.children.filter(s => !gestureStroke.bounds.overlaps(s.bounds))\n        const childrenTouch = symbol.children.filter(s => gestureStroke.bounds.overlaps(s.bounds))\n        const results = childrenTouch.map(s =>\n        {\n          return {\n            symbol: s,\n            result: this.computeScratchOnSymbol(gestureStroke, gesture, s)\n          }\n        })\n        if (childrenNotTouch.length === 0 && results.every(r => r.result.erased)) {\n          return { erased: true }\n        }\n        else {\n          const symbolsGroup: TIISymbol[] = childrenNotTouch\n          results.forEach(r =>\n          {\n            if (r.result.replaced) {\n              symbolsGroup.push(...r.result.replaced)\n            }\n          })\n          const newGroup = new IISymbolGroup(symbolsGroup, symbol.style)\n          newGroup.decorators = symbol.decorators\n          return {\n            replaced: [newGroup]\n          }\n        }\n      }\n      case SymbolType.Text: {\n        const textScratchedResult = this.computeScratchOnText(gestureStroke, symbol)\n        if (textScratchedResult) {\n          return {\n            replaced: [textScratchedResult]\n          }\n        }\n        else {\n          return {\n            erased: true\n          }\n        }\n      }\n      case SymbolType.Shape:\n      case SymbolType.Edge: {\n        return {\n          erased: true\n        }\n      }\n    }\n  }\n\n  async applyScratch(gestureStroke: IIStroke, gesture: TGesture): Promise<void>\n  {\n    this.#logger.debug(\"applyScratchGesture\", { gestureStroke, gesture })\n    if (!gesture.strokeIds.length) {\n      this.#logger.warn(\"applyScratchGesture\", \"Unable to apply underline because there are no strokes\")\n      return\n    }\n    const symbolsToUpdate: TIISymbol[] = []\n    const symbolsToErase: TIISymbol[] = []\n    const symbolsToReplace: { oldSymbols: TIISymbol[], newSymbols: TIISymbol[] } = { oldSymbols: [], newSymbols: [] }\n\n    gesture.strokeIds.forEach(id =>\n    {\n      const sym = this.model.getRootSymbol(id)\n      if (sym && !symbolsToErase.some(s => s.id === sym.id) && !symbolsToReplace.oldSymbols.some(s => s.id === sym.id)) {\n        const result = this.computeScratchOnSymbol(gestureStroke, gesture, sym)\n        if (result.erased) symbolsToErase.push(sym)\n        else if (result.replaced) {\n          symbolsToReplace.newSymbols.push(...result.replaced)\n          symbolsToReplace.oldSymbols.push(sym)\n        }\n      }\n    })\n\n    const promises: Promise<void | TIISymbol[]>[] = []\n    const changes: TIIHistoryChanges = {}\n    if (symbolsToUpdate.length) {\n      promises.push(this.editor.updateSymbols(symbolsToUpdate, false))\n      changes.updated = symbolsToUpdate\n    }\n\n    if (symbolsToErase.length) {\n      promises.push(this.editor.removeSymbols(symbolsToErase.map(s => s.id), false))\n      changes.erased = symbolsToErase\n    }\n\n    if (symbolsToReplace.newSymbols.length) {\n      changes.replaced = symbolsToReplace\n      promises.push(this.editor.replaceSymbols(symbolsToReplace.oldSymbols, symbolsToReplace.newSymbols, false))\n    }\n\n    this.history.push(this.model, changes)\n    await Promise.all(promises)\n  }\n\n  async applyJoinGesture(gestureStroke: IIStroke, gesture: TGesture): Promise<void>\n  {\n    this.#logger.debug(\"applyJoinGesture\", { gestureStroke, gesture })\n\n    const symbolsAbove = this.model.symbols.filter(s => this.model.isSymbolAbove(gestureStroke, s))\n    const symbolsRow = this.model.symbols.filter(s => gestureStroke.id !== s.id && this.model.isSymbolInRow(gestureStroke, s))\n\n    const symbolsBeforeGestureInRow = symbolsRow.filter(s => s.bounds.xMax <= gestureStroke.bounds.xMid)\n    const symbolsOnGestureInRow = symbolsRow.filter(s => s.bounds.xMax > gestureStroke.bounds.xMid && s.bounds.xMin <= gestureStroke.bounds.xMid)\n    const symbolsAfterGestureInRow = symbolsRow.filter(s => s.bounds.xMin > gestureStroke.bounds.xMid)\n    const symbolsBelow = this.model.symbols.filter(s => this.model.isSymbolBelow(gestureStroke, s))\n\n    const changes: TIIHistoryChanges = {}\n    const translate: { symbols: TIISymbol[], tx: number, ty: number }[] = []\n    if (symbolsOnGestureInRow.length) {\n      const symbolToJoin = symbolsOnGestureInRow[0]\n      if (symbolToJoin?.type === SymbolType.Group) {\n        const children = symbolToJoin.children.map(c => c.clone())\n        const childBefore = children.filter(c => c.bounds.xMid <= gestureStroke.bounds.xMid)\n        const childAfter = children.filter(c => c.bounds.xMid > gestureStroke.bounds.xMid)\n        if (childBefore.length && childAfter.length) {\n          const tx = Math.max(...childBefore.map(c => c.bounds.xMax)) - Math.min(...childAfter.map(c => c.bounds.xMin))\n          childAfter.forEach(c => this.translator.applyToSymbol(c, tx, 0))\n          const newGroup = new IISymbolGroup(children, symbolToJoin.style)\n          newGroup.decorators = symbolToJoin.decorators.map(d => d.clone())\n          changes.replaced = {\n            oldSymbols: [symbolToJoin],\n            newSymbols: [newGroup]\n          }\n          if (symbolsAfterGestureInRow.length) {\n            translate.push({ symbols: symbolsAfterGestureInRow, tx, ty: 0 })\n          }\n        }\n        else if (symbolsAfterGestureInRow.length) {\n          const tx = symbolToJoin.bounds.xMax - Math.min(...symbolsAfterGestureInRow.map(s => s.bounds.xMin))\n          translate.push({ symbols: symbolsAfterGestureInRow, tx, ty: 0 })\n        }\n      }\n      else if (symbolToJoin?.type === SymbolType.Recognized) {\n        const strokeText = symbolToJoin.clone()\n        const childBefore = strokeText.strokes.filter(c => c.bounds.xMid <= gestureStroke.bounds.xMid)\n        const childAfter = strokeText.strokes.filter(c => c.bounds.xMid > gestureStroke.bounds.xMid)\n        if (childBefore.length && childAfter.length) {\n          const tx = Math.max(...childBefore.map(c => c.bounds.xMax)) - Math.min(...childAfter.map(c => c.bounds.xMin))\n          childAfter.forEach(c => this.translator.applyToSymbol(c, tx, 0))\n          changes.replaced = {\n            oldSymbols: [symbolToJoin],\n            newSymbols: [strokeText]\n          }\n          if (symbolsAfterGestureInRow.length) {\n            translate.push({ symbols: symbolsAfterGestureInRow, tx, ty: 0 })\n          }\n        }\n        else if (symbolsAfterGestureInRow.length) {\n          const tx = symbolToJoin.bounds.xMax - Math.min(...symbolsAfterGestureInRow.map(s => s.bounds.xMin))\n          translate.push({ symbols: symbolsAfterGestureInRow, tx, ty: 0 })\n        }\n      }\n    }\n    else if (symbolsBeforeGestureInRow.length && symbolsAfterGestureInRow.length) {\n      const lastSymbBefore = this.model.getLastSymbol(symbolsBeforeGestureInRow)!\n      const firstSymbolAfter = this.model.getFirstSymbol(symbolsAfterGestureInRow)!\n\n      const lastXBefore = Math.max(...symbolsBeforeGestureInRow.map(s => s.bounds.xMax))\n      const firstXAfter = Math.min(...symbolsAfterGestureInRow.map(s => s.bounds.xMin))\n      const translateX = lastXBefore - firstXAfter\n\n      const lastSymbBeforeClone = lastSymbBefore.clone()\n      const firstSymbolAfterClone = firstSymbolAfter.clone()\n      this.translator.applyToSymbol(firstSymbolAfterClone, translateX, 0)\n      const symbolsToGroup = lastSymbBefore.type === SymbolType.Group ? (lastSymbBeforeClone as IISymbolGroup).children : [lastSymbBeforeClone]\n      symbolsToGroup.push(...(firstSymbolAfterClone.type === SymbolType.Group ? (firstSymbolAfterClone as IISymbolGroup).children : [firstSymbolAfterClone]))\n\n      if (symbolsToGroup.every(s => s.type === SymbolType.Text)) {\n        const texts = symbolsToGroup as IIText[]\n        const text = new IIText(texts.flatMap(s => s.chars), texts[0].point, Box.createFromBoxes(texts.map(t => t.bounds)))\n        this.texter.setBounds(text)\n        changes.replaced = {\n          oldSymbols: [lastSymbBefore, firstSymbolAfter],\n          newSymbols: [text]\n        }\n      }\n      else if (symbolsToGroup.every(s => s.type === SymbolType.Recognized)) {\n        const strokeTexts = symbolsToGroup as IIRecognizedText[]\n        const strokeText = new IIRecognizedText(strokeTexts.flatMap(s => s.strokes), strokeTexts[0], strokeTexts[0].style)\n        changes.replaced = {\n          oldSymbols: [lastSymbBefore, firstSymbolAfter],\n          newSymbols: [strokeText]\n        }\n      }\n      else {\n        const group = new IISymbolGroup(symbolsToGroup, lastSymbBefore.style)\n        if ([SymbolType.Group, SymbolType.Stroke, SymbolType.Text, SymbolType.Recognized].includes(lastSymbBefore.type)) {\n          (lastSymbBefore as IIStroke).decorators.forEach(d =>\n          {\n            group.decorators.push(new IIDecorator(d.kind, d.style))\n          })\n        }\n        if ([SymbolType.Group, SymbolType.Stroke, SymbolType.Text, SymbolType.Recognized].includes(firstSymbolAfter.type)) {\n          (firstSymbolAfter as IIStroke).decorators.forEach(d =>\n          {\n            if (!group.decorators.some(d1 => d1.kind == d.kind)) {\n              group.decorators.push(new IIDecorator(d.kind, d.style))\n            }\n          })\n        }\n\n        changes.replaced = {\n          oldSymbols: [lastSymbBefore, firstSymbolAfter],\n          newSymbols: [group]\n        }\n      }\n\n      const rest = symbolsAfterGestureInRow.filter(s => s.id !== firstSymbolAfter.id)\n      if (rest.length) {\n        translate.push({ symbols: rest, tx: translateX, ty: 0 })\n      }\n    }\n    else if (symbolsBeforeGestureInRow.length) {\n      const lastSymbolBeforeGesture = this.model.getLastSymbol(symbolsBeforeGestureInRow)!\n      const firstSymbolAfterGesture = this.model.getFirstSymbol(symbolsBelow)\n      if (firstSymbolAfterGesture) {\n        if (this.model.roundToLineGuide(lastSymbolBeforeGesture.bounds.yMid) >= this.model.roundToLineGuide(firstSymbolAfterGesture.bounds.yMid - this.rowHeight)) {\n          const symbolInNextRow = symbolsBelow.filter(s => this.model.isSymbolInRow(firstSymbolAfterGesture, s))\n          if (symbolInNextRow.length) {\n            const translateX = lastSymbolBeforeGesture.bounds.xMax + this.strokeSpaceWidth - firstSymbolAfterGesture.bounds.xMin\n            translate.push({ symbols: symbolInNextRow, tx: translateX, ty: -this.rowHeight })\n          }\n          const symbolsAfterNextRow = symbolsBelow.filter(s => this.model.isSymbolBelow(firstSymbolAfterGesture, s))\n          if (symbolsAfterNextRow.length) {\n            translate.push({ symbols: symbolsAfterNextRow, tx: 0, ty: -this.rowHeight })\n          }\n        }\n      }\n      else {\n        translate.push({ symbols: symbolsBelow, tx: 0, ty: -this.rowHeight })\n      }\n    }\n    else if (symbolsAfterGestureInRow.length) {\n      const firstSymbolAfterGesture = this.model.getFirstSymbol(symbolsAfterGestureInRow)!\n      const lastSymbolAbove = this.model.getLastSymbol(symbolsAbove)\n      if (lastSymbolAbove) {\n        if (this.model.roundToLineGuide(lastSymbolAbove.bounds.yMid) >= this.model.roundToLineGuide(firstSymbolAfterGesture.bounds.yMid - this.rowHeight)) {\n          const translateX = lastSymbolAbove.bounds.xMax + this.strokeSpaceWidth - firstSymbolAfterGesture.bounds.xMin\n          translate.push({ symbols: symbolsAfterGestureInRow, tx: translateX, ty: -this.rowHeight })\n        }\n        else {\n          translate.push({ symbols: symbolsAfterGestureInRow, tx: 0, ty: -this.rowHeight })\n        }\n\n        if (symbolsBelow.length) {\n          translate.push({ symbols: symbolsBelow, tx: 0, ty: -this.rowHeight })\n        }\n      }\n      else {\n        translate.push({ symbols: symbolsAfterGestureInRow.concat(...symbolsBelow), tx: 0, ty: -this.rowHeight })\n      }\n\n    }\n    if (changes.replaced?.oldSymbols.length) {\n      this.editor.replaceSymbols(changes.replaced.oldSymbols, changes.replaced.newSymbols, false)\n    }\n    if (translate.length) {\n      changes.translate = translate\n      Promise.all(translate.map(tr => this.translator.translate(tr.symbols, tr.tx, tr.ty, false)))\n    }\n    this.history.push(this.model, changes)\n  }\n\n  protected createStrokesFromGestureSubStroke(strokeOrigin: IIStroke, subStrokes: { x: number[], y: number[] }[]): IIStroke[]\n  {\n    const strokes: IIStroke[] = []\n    if (subStrokes[0]) {\n      const subStroke = new IIStroke(strokeOrigin.style)\n      subStrokes![0].x.forEach((x, i) =>\n      {\n        subStroke.pointers.push({\n          x,\n          y: subStrokes![0].y[i],\n          p: strokeOrigin.pointers.at(i)?.p || 1,\n          t: strokeOrigin.pointers.at(i)?.t || Math.max(...subStroke.pointers.map(p => p.t + 20))\n        })\n      })\n      strokes.push(subStroke)\n    }\n    if (subStrokes[1]) {\n      const subStroke = new IIStroke(strokeOrigin.style)\n      subStrokes[1].x.forEach((x, i) =>\n      {\n        subStroke.pointers.push({\n          x,\n          y: subStrokes![1].y[i],\n          p: strokeOrigin.pointers.at(subStroke.pointers.length + i)?.p || 1,\n          t: strokeOrigin.pointers.at(subStroke.pointers.length + i)?.t || Math.max(...subStroke.pointers.map(p => p.t + 20))\n        })\n      })\n      strokes.push(subStroke)\n    }\n    return strokes\n  }\n\n  protected computeSplitStroke(strokeOrigin: IIStroke, subStrokes: { x: number[], y: number[] }[]): { before?: IIStroke, after?: IIStroke }\n  {\n    let after: IIStroke | undefined\n    const newStrokes = this.createStrokesFromGestureSubStroke(strokeOrigin, subStrokes)\n\n    if (newStrokes[1]) {\n      after = newStrokes[1]\n      this.translator.applyToSymbol(after, this.strokeSpaceWidth, 0)\n    }\n    return {\n      before: newStrokes[0],\n      after\n    }\n  }\n\n  protected computeSplitStrokeInGroup(gestureStroke: IIStroke, group: IISymbolGroup, subStrokes: { fullStrokeId: string, x: number[], y: number[] }[]): IISymbolGroup[]\n  {\n    const newGroups: IISymbolGroup[] = []\n    const symbolsBefore: TIISymbol[] = []\n    const symbolsAfter: TIISymbol[] = []\n\n    const strokeIdToSplit = subStrokes[0].fullStrokeId\n\n    group.children.forEach(gs =>\n    {\n      if (gs.id === strokeIdToSplit) {\n        const subStroke = this.computeSplitStroke(gs as IIStroke, subStrokes)\n        if (subStroke.before) {\n          symbolsBefore.push(subStroke.before)\n        }\n        if (subStroke.after) {\n          symbolsAfter.push(subStroke.after)\n        }\n      }\n      else if (gs.bounds.xMid < gestureStroke.bounds.xMid) {\n        symbolsBefore.push(gs)\n      }\n      else if (gs.bounds.xMid > gestureStroke.bounds.xMid) {\n        this.translator.applyToSymbol(gs, this.strokeSpaceWidth, 0)\n        symbolsAfter.push(gs)\n      }\n    })\n\n    if (symbolsBefore.length) {\n      newGroups.push(new IISymbolGroup(symbolsBefore, group.style))\n    }\n    if (symbolsAfter.length) {\n      newGroups.push(new IISymbolGroup(symbolsAfter, group.style))\n    }\n    return newGroups\n  }\n\n  protected computeChangesOnSplitStroke(gestureStroke: IIStroke, strokeIdToSplit: string, subStrokes: { fullStrokeId: string, x: number[], y: number[] }[]): TIIHistoryChanges\n  {\n    const translate: { symbols: TIISymbol[], tx: number, ty: number }[] = []\n    const replaced: { oldSymbols: TIISymbol[], newSymbols: TIISymbol[] } = { oldSymbols: [], newSymbols: [] }\n\n    const symbolsAfterGestureInRow = this.model.symbols.filter(s => gestureStroke.id !== s.id && this.model.isSymbolInRow(gestureStroke, s) && gestureStroke.bounds.xMid < s.bounds.xMin)\n\n    const symbolToSplit = this.model.getRootSymbol(strokeIdToSplit)\n    if (symbolToSplit?.type === SymbolType.Group) {\n      const newGroups = this.computeSplitStrokeInGroup(gestureStroke, symbolToSplit, subStrokes)\n      replaced.newSymbols.push(...newGroups)\n      replaced.oldSymbols.push(symbolToSplit)\n    }\n    else if (symbolToSplit?.type === SymbolType.Stroke) {\n      const newStrokes = this.computeSplitStroke(symbolToSplit, subStrokes)\n      if (newStrokes.before) {\n        replaced.newSymbols.push(newStrokes.before)\n      }\n      if (newStrokes.after) {\n        replaced.newSymbols.push(newStrokes.after)\n      }\n      replaced.oldSymbols.push(symbolToSplit)\n    }\n    else if (symbolToSplit?.type === SymbolType.Recognized) {\n      const strokesToSplit = symbolToSplit.strokes.find(s => s.id === strokeIdToSplit)!\n      const strokesBefore = symbolToSplit.strokes.filter(s => s.id !== strokeIdToSplit && s.bounds.xMid < gestureStroke.bounds.xMid)\n      const strokesAfter = symbolToSplit.strokes.filter(s => s.id !== strokeIdToSplit && s.bounds.xMid > gestureStroke.bounds.xMid)\n      const newStrokes = this.computeSplitStroke(strokesToSplit, subStrokes)\n      if (newStrokes.before) {\n        replaced.newSymbols.push(...strokesBefore, newStrokes.before)\n      }\n      if (newStrokes.after) {\n        replaced.newSymbols.push(newStrokes.after, ...strokesAfter)\n      }\n      replaced.oldSymbols.push(symbolToSplit)\n    }\n    if (symbolsAfterGestureInRow.length) {\n      translate.push({ symbols: symbolsAfterGestureInRow, tx: this.strokeSpaceWidth, ty: 0 })\n    }\n\n    return {\n      translate,\n      replaced\n    }\n  }\n\n  protected computeChangesOnSplitGroup(gestureStroke: IIStroke, groupToSplit: IISymbolGroup): TIIHistoryChanges\n  {\n    const translate: { symbols: TIISymbol[], tx: number, ty: number }[] = []\n    const replaced: { oldSymbols: TIISymbol[], newSymbols: TIISymbol[] } = { oldSymbols: [], newSymbols: [] }\n\n    const symbolsAfterGestureInRow = this.model.symbols.filter(s => gestureStroke.id !== s.id && this.model.isSymbolInRow(gestureStroke, s) && gestureStroke.bounds.xMid < s.bounds.xMin)\n\n    const groupSymbolsBefore = groupToSplit.children.filter(s => s.bounds.xMid <= gestureStroke.bounds.xMid)\n    const groupsSymbolsAfter = groupToSplit.children.filter(s => s.bounds.xMid > gestureStroke.bounds.xMid)\n\n    replaced.oldSymbols.push(groupToSplit)\n    if (groupSymbolsBefore.length) {\n      const groupBefore = new IISymbolGroup(groupSymbolsBefore.map(s => s.clone()), groupToSplit.style)\n      groupBefore.decorators = groupToSplit.decorators.map(d => new IIDecorator(d.kind, d.style))\n      replaced.newSymbols.push(groupBefore)\n    }\n    if (groupsSymbolsAfter.length) {\n      const grouAfter = new IISymbolGroup(groupsSymbolsAfter.map(s => s.clone()), groupToSplit.style)\n      grouAfter.decorators = groupToSplit.decorators.map(d => new IIDecorator(d.kind, d.style))\n      this.translator.applyToSymbol(grouAfter, this.strokeSpaceWidth, 0)\n      replaced.newSymbols.push(grouAfter)\n    }\n    if (symbolsAfterGestureInRow?.length) {\n      translate.push({ symbols: symbolsAfterGestureInRow.filter(s => s.id !== groupToSplit.id), tx: this.strokeSpaceWidth, ty: 0 })\n    }\n\n    return {\n      translate,\n      replaced\n    }\n  }\n\n  protected computeChangesOnSplitStrokeText(gestureStroke: IIStroke, strokeTextToSplit: IIRecognizedText): TIIHistoryChanges\n  {\n    const translate: { symbols: TIISymbol[], tx: number, ty: number }[] = []\n    const replaced: { oldSymbols: TIISymbol[], newSymbols: TIISymbol[] } = { oldSymbols: [], newSymbols: [] }\n\n    const symbolsAfterGestureInRow = this.model.symbols.filter(s => gestureStroke.id !== s.id && this.model.isSymbolInRow(gestureStroke, s) && gestureStroke.bounds.xMid < s.bounds.xMin)\n\n    const strokesBefore = strokeTextToSplit.strokes.filter(s => s.bounds.xMid <= gestureStroke.bounds.xMid)\n    const strokesAfter = strokeTextToSplit.strokes.filter(s => s.bounds.xMid > gestureStroke.bounds.xMid)\n\n    replaced.oldSymbols.push(strokeTextToSplit)\n    if (strokesBefore.length) {\n      const strokeTextBefore = new IIRecognizedText(strokesBefore.map(s => s.clone()), strokeTextToSplit, strokeTextToSplit.style)\n      strokeTextBefore.decorators = strokeTextToSplit.decorators.map(d => new IIDecorator(d.kind, d.style))\n      replaced.newSymbols.push(strokeTextBefore)\n    }\n    if (strokesAfter.length) {\n      const strokeTextAfter = new IIRecognizedText(strokesAfter.map(s => s.clone()), strokeTextToSplit, strokeTextToSplit.style)\n      strokeTextAfter.decorators = strokeTextToSplit.decorators.map(d => new IIDecorator(d.kind, d.style))\n      this.translator.applyToSymbol(strokeTextAfter, this.strokeSpaceWidth, 0)\n      replaced.newSymbols.push(strokeTextAfter)\n    }\n    if (symbolsAfterGestureInRow?.length) {\n      translate.push({ symbols: symbolsAfterGestureInRow.filter(s => s.id !== strokeTextToSplit.id), tx: this.strokeSpaceWidth, ty: 0 })\n    }\n\n    return {\n      translate,\n      replaced\n    }\n  }\n\n  protected computeChangesOnSplitText(gestureStroke: IIStroke, textToSplit: IIText): TIIHistoryChanges\n  {\n    const translate: { symbols: TIISymbol[], tx: number, ty: number }[] = []\n    const replaced: { oldSymbols: TIISymbol[], newSymbols: TIISymbol[] } = { oldSymbols: [], newSymbols: [] }\n\n    const symbolsAfterGestureInRow = this.model.symbols.filter(s => gestureStroke.id !== s.id && this.model.isSymbolInRow(gestureStroke, s) && gestureStroke.bounds.xMid < s.bounds.xMin)\n\n    const charsBefore = textToSplit.chars.filter(c => c.bounds.x + c.bounds.width / 2 <= gestureStroke.bounds.xMid)\n    const charsAfter = textToSplit.chars.filter(c => c.bounds.x + c.bounds.width / 2 > gestureStroke.bounds.xMid)\n    const newTexts: IIText[] = []\n    if (charsBefore.length && charsAfter.length) {\n      const textBefore = new IIText(charsBefore, textToSplit.point, Box.createFromBoxes(charsBefore.map(c => c.bounds)))\n      this.texter.setBounds(textBefore)\n      newTexts.push(textBefore)\n      const pointAfter: TPoint = {\n        x: textBefore.point.x + textBefore.bounds.width + this.texter.getSpaceWidth(computeAverage(textBefore.chars.map(c => c.fontSize))),\n        y: textBefore.point.y\n      }\n      const textAfter = new IIText(charsAfter, pointAfter, Box.createFromBoxes(charsAfter.map(c => c.bounds)))\n      this.texter.setBounds(textAfter)\n      newTexts.push(textAfter)\n      replaced.newSymbols = newTexts\n      replaced.oldSymbols = [textToSplit]\n    }\n    if (symbolsAfterGestureInRow?.length) {\n      translate.push({ symbols: symbolsAfterGestureInRow.filter(s => s.id !== gestureStroke.id), tx: this.strokeSpaceWidth, ty: 0 })\n    }\n\n    return {\n      translate,\n      replaced\n    }\n  }\n\n  async applyInsertGesture(gestureStroke: IIStroke, gesture: TGesture): Promise<void>\n  {\n    this.#logger.debug(\"applyInsertGesture\", { gestureStroke, gesture })\n\n    const symbolsRow = this.model.symbols.filter(s => gestureStroke.id !== s.id && this.model.isSymbolInRow(gestureStroke, s))\n    const textToSplit = symbolsRow.find(s => s.type === SymbolType.Text && isBetween(gestureStroke.bounds.xMid, s.bounds.xMin, s.bounds.xMax)) as IIText | undefined\n    const groupToSplit = symbolsRow.find(s => s.type === SymbolType.Group && isBetween(gestureStroke.bounds.xMid, s.bounds.xMin, s.bounds.xMax)) as IISymbolGroup | undefined\n    const strokeTextToSplit = symbolsRow.find(s => s.type === SymbolType.Recognized && isBetween(gestureStroke.bounds.xMid, s.bounds.xMin, s.bounds.xMax)) as IIRecognizedText | undefined\n\n    const symbolsBeforeGestureInRow = symbolsRow.filter(s => gestureStroke.bounds.xMid > s.bounds.xMax)\n    const symbolsAfterGestureInRow = symbolsRow.filter(s => gestureStroke.bounds.xMid < s.bounds.xMin)\n\n    const symbolsBelow = this.model.symbols.filter(s => this.model.isSymbolBelow(gestureStroke, s))\n\n\n    let changes: TIIHistoryChanges | undefined\n    if (gesture.strokeIds.length && gesture.subStrokes?.length) {\n      changes = this.computeChangesOnSplitStroke(gestureStroke, gesture.strokeIds[0], gesture.subStrokes)\n    }\n    else if (groupToSplit) {\n      changes = this.computeChangesOnSplitGroup(gestureStroke, groupToSplit)\n    }\n    else if (textToSplit) {\n      changes = this.computeChangesOnSplitText(gestureStroke, textToSplit)\n    }\n    else if (strokeTextToSplit) {\n      changes = this.computeChangesOnSplitStrokeText(gestureStroke, strokeTextToSplit)\n    }\n    else if (symbolsAfterGestureInRow.length) {\n      const translate: { symbols: TIISymbol[], tx: number, ty: number }[] = []\n      let translateX = 0\n      if (symbolsBeforeGestureInRow.length) {\n        translateX = Math.min(...symbolsBeforeGestureInRow.map(s => s.bounds.xMin)) - Math.min(...symbolsAfterGestureInRow.map(s => s.bounds.xMin))\n      }\n\n      switch (this.insertAction) {\n        case InsertAction.LineBreak:\n          translate.push({ symbols: symbolsAfterGestureInRow, tx: translateX, ty: this.rowHeight })\n          if (symbolsBelow.length) {\n            translate.push({ symbols: symbolsBelow, tx: 0, ty: this.rowHeight })\n          }\n          break\n        case InsertAction.Insert:\n          translate.push({ symbols: symbolsAfterGestureInRow, tx: this.strokeSpaceWidth * 2, ty: 0 })\n          break\n      }\n      changes = { translate }\n    }\n    else if (symbolsBeforeGestureInRow.length && symbolsBelow.length && this.insertAction === InsertAction.LineBreak) {\n      changes = { translate: [{ symbols: symbolsBelow, tx: 0, ty: this.rowHeight }] }\n    }\n\n    if (changes) {\n      const promises: Promise<void>[] = []\n      if (changes.translate?.length) {\n        promises.push(...changes.translate.map(tr => this.translator.translate(tr.symbols, tr.tx, tr.ty, false)))\n      }\n      if (changes.replaced?.newSymbols.length) {\n        promises.push(this.editor.replaceSymbols(changes.replaced.oldSymbols, changes.replaced.newSymbols, false))\n      }\n      this.history.push(this.model, changes)\n      await Promise.all(promises)\n    }\n  }\n\n  async applyUnderlineGesture(gestureStroke: IIStroke, gesture: TGesture): Promise<void>\n  {\n    this.#logger.debug(\"applyUnderlineGesture\", { gestureStroke, gesture })\n    if (!gesture.strokeIds.length) {\n      this.#logger.warn(\"applyUnderlineGesture\", \"Unable to apply underline because there are no strokes\")\n      return\n    }\n\n    const changes: TIIHistoryChanges = { decorator: [] }\n    const symbolIds: string[] = []\n    gesture.strokeIds.forEach(id =>\n    {\n      const sym = this.model.getRootSymbol(id)\n      if (sym && [SymbolType.Group, SymbolType.Stroke, SymbolType.Text, SymbolType.Recognized].includes(sym.type) && !symbolIds.includes(sym.id)) {\n        const symWithDec = sym as (IIText | IIStroke | IISymbolGroup | IIRecognizedText)\n        const underline = new IIDecorator(DecoratorKind.Underline, this.editor.penStyle)\n        const index = symWithDec.decorators.findIndex(d => d.kind === DecoratorKind.Underline)\n        const added = index === -1\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        added ? symWithDec.decorators.push(underline) : symWithDec.decorators.splice(index, 1)\n        this.model.updateSymbol(symWithDec)\n        this.renderer.drawSymbol(symWithDec)\n        changes.decorator?.push({ symbol: symWithDec, decorator: underline, added })\n        symbolIds.push(symWithDec.id)\n      }\n    })\n    if (changes.decorator?.length) {\n      this.history.push(this.model, changes)\n    }\n  }\n\n  async applyStrikeThroughGesture(gestureStroke: IIStroke, gesture: TGesture): Promise<void | TIISymbol[]>\n  {\n    this.#logger.debug(\"applyStrikeThroughGesture\", { gestureStroke, gesture })\n    if (!gesture.strokeIds.length) {\n      this.#logger.warn(\"applyStrikeThroughGesture\", \"Unable to apply strikethrough because there are no strokes\")\n      return\n    }\n    switch (this.strikeThroughAction) {\n      case StrikeThroughAction.Draw: {\n        const changes: TIIHistoryChanges = { decorator: [] }\n        const symbolIds: string[] = []\n        gesture.strokeIds.forEach(id =>\n        {\n          const symbol = this.model.getRootSymbol(id)\n          if (symbol && [SymbolType.Group, SymbolType.Stroke, SymbolType.Text, SymbolType.Recognized].includes(symbol.type) && !symbolIds.includes(symbol.id)) {\n            const symWithDec = symbol as (IIText | IIStroke | IISymbolGroup | IIRecognizedText)\n            const strikethrough = new IIDecorator(DecoratorKind.Strikethrough, this.editor.penStyle)\n            const index = symWithDec.decorators.findIndex(d => d.kind === DecoratorKind.Strikethrough)\n            const added = index === -1\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            added ? symWithDec.decorators.push(strikethrough) : symWithDec.decorators.splice(index, 1)\n            this.model.updateSymbol(symWithDec)\n            this.renderer.drawSymbol(symWithDec)\n            changes.decorator?.push({ symbol: symWithDec, decorator: strikethrough, added })\n            symbolIds.push(symWithDec.id)\n          }\n        })\n        if (changes.decorator?.length) {\n          this.history.push(this.model, changes)\n        }\n        break\n      }\n      case StrikeThroughAction.Erase: {\n        return this.editor.removeSymbols(gesture.strokeIds)\n      }\n      default:\n        this.#logger.warn(\"#applyStrikeThroughGesture\", `Unknow OnStrikeThrough: ${ this.strikeThroughAction }, values allowed are: ${ StrikeThroughAction.Draw }, ${ StrikeThroughAction.Erase }`)\n        break\n    }\n  }\n\n  async apply(gestureStroke: IIStroke, gesture: TGesture): Promise<void>\n  {\n    this.#logger.info(\"apply\", { gestureStroke, gesture })\n    this.editor.updateSymbolsStyle([gestureStroke.id], { opacity: (gestureStroke.style.opacity || 1) / 2 }, false)\n    await this.editor.removeSymbol(gestureStroke.id, false)\n    await this.editor.synchronizeStrokesWithJIIX()\n    switch (gesture.gestureType) {\n      case \"UNDERLINE\":\n        await this.applyUnderlineGesture(gestureStroke, gesture)\n        break\n      case \"SCRATCH\":\n        await this.applyScratch(gestureStroke, gesture)\n        break\n      case \"JOIN\":\n        await this.applyJoinGesture(gestureStroke, gesture)\n        break\n      case \"INSERT\":\n        await this.applyInsertGesture(gestureStroke, gesture)\n        break\n      case \"STRIKETHROUGH\":\n        await this.applyStrikeThroughGesture(gestureStroke, gesture)\n        break\n      case \"SURROUND\":\n        await this.applySurroundGesture(gestureStroke, gesture)\n        break\n      default:\n        this.#logger.warn(\"apply\", `Gesture unknow: ${ gesture.gestureType }`)\n        break\n    }\n    this.editor.event.emitGestured({ gestureType: gesture.gestureType, stroke: gestureStroke })\n    this.editor.svgDebugger.apply()\n    return Promise.resolve()\n  }\n\n  async getGestureFromContextLess(gestureStroke: IIStroke): Promise<TGesture | undefined>\n  {\n    const gesture = await this.recognizer.recognizeGesture(gestureStroke)\n    if (!gesture) return\n    switch (gesture.gestureType) {\n      case \"surround\": {\n        const hasSymbolsToSurrond = this.model.symbols.some(s =>\n        {\n          if (s.id !== gestureStroke.id && gestureStroke.bounds.contains(s.bounds)) {\n            return this.surroundAction === SurroundAction.Select || [SymbolType.Group, SymbolType.Stroke, SymbolType.Text].includes(s.type)\n          }\n          return false\n        })\n        if (hasSymbolsToSurrond) {\n          return {\n            gestureType: \"SURROUND\",\n            gestureStrokeId: gestureStroke.id,\n            strokeAfterIds: [],\n            strokeBeforeIds: [],\n            strokeIds: [],\n          }\n        }\n        return\n      }\n      case \"left-right\":\n      case \"right-left\": {\n        const symbolsToUnderline = this.model.symbols.filter(s =>\n        {\n          return s.id !== gestureStroke.id && [SymbolType.Text, SymbolType.Stroke, SymbolType.Group].includes(s.type) &&\n            isBetween(s.bounds.xMid, gestureStroke.bounds.xMin, gestureStroke.bounds.xMax) &&\n            isBetween(gestureStroke.bounds.yMid, s.bounds.y + s.bounds.height * 3 / 4, s.bounds.y + s.bounds.height * 5 / 4)\n        })\n        if (symbolsToUnderline.length) {\n          return {\n            gestureType: \"UNDERLINE\",\n            gestureStrokeId: gestureStroke.id,\n            strokeAfterIds: [],\n            strokeBeforeIds: [],\n            strokeIds: symbolsToUnderline.map(s => s.id),\n          }\n        }\n        const symbolsToStrikeThrough = this.model.symbols.filter(s =>\n        {\n          return s.id !== gestureStroke.id && [SymbolType.Text, SymbolType.Stroke, SymbolType.Group].includes(s.type) &&\n            isBetween(s.bounds.xMid, gestureStroke.bounds.xMin, gestureStroke.bounds.xMax) &&\n            isBetween(gestureStroke.bounds.yMid, s.bounds.y + s.bounds.height / 4, s.bounds.y + s.bounds.height * 3 / 4)\n        })\n        if (symbolsToStrikeThrough.length) {\n          return {\n            gestureType: \"STRIKETHROUGH\",\n            gestureStrokeId: gestureStroke.id,\n            strokeAfterIds: [],\n            strokeBeforeIds: [],\n            strokeIds: symbolsToStrikeThrough.map(s => s.id),\n          }\n        }\n        return\n      }\n      case \"scratch\": {\n        const symbolsToErase = this.model.symbols.filter(s =>\n        {\n          return s.id !== gestureStroke.id &&\n            (\n              gestureStroke.bounds.overlaps(s.bounds) && [SymbolType.Stroke, SymbolType.Text, SymbolType.Group].includes(s.type) ||\n              gestureStroke.bounds.contains(s.bounds) && [SymbolType.Shape, SymbolType.Edge].includes(s.type)\n            )\n        })\n\n        if (symbolsToErase.length) {\n          return {\n            gestureType: \"SCRATCH\",\n            gestureStrokeId: gestureStroke.id,\n            strokeAfterIds: [],\n            strokeBeforeIds: [],\n            strokeIds: symbolsToErase.map(s => s.id),\n          }\n        }\n        return\n      }\n      case \"bottom-top\": {\n        const hasSymbolsInRow = this.model.symbols.some(s =>\n          s.id !== gestureStroke.id &&\n          [SymbolType.Text, SymbolType.Stroke, SymbolType.Group].includes(s.type) &&\n          isBetween(s.bounds.yMid, gestureStroke.bounds.yMin, gestureStroke.bounds.yMax)\n        )\n        if (hasSymbolsInRow) {\n          return {\n            gestureType: \"JOIN\",\n            gestureStrokeId: gestureStroke.id,\n            strokeAfterIds: [],\n            strokeBeforeIds: [],\n            strokeIds: [],\n          }\n        }\n        return\n      }\n      case \"top-bottom\": {\n        const hasSymbolsInRow = this.model.symbols.some(s =>\n          s.id !== gestureStroke.id &&\n          [SymbolType.Text, SymbolType.Stroke, SymbolType.Group].includes(s.type) &&\n          isBetween(s.bounds.yMid, gestureStroke.bounds.yMin, gestureStroke.bounds.yMax)\n        )\n        if (hasSymbolsInRow) {\n          return {\n            gestureType: \"INSERT\",\n            gestureStrokeId: gestureStroke.id,\n            strokeAfterIds: [],\n            strokeBeforeIds: [],\n            strokeIds: [],\n          }\n        }\n        return\n      }\n      case \"none\":\n      default:\n        return\n    }\n  }\n}\n","/**\n * @group Menu\n */\nexport type TSubMenuParam =\n{\n  trigger: HTMLElement,\n  menuTitle?: string,\n  subMenu: HTMLElement,\n  position: \"top\" | \"left\" | \"right\" | \"right-top\" | \"bottom\" | \"bottom-left\" | \"bottom-right\"\n}\n\n/**\n * @group Menu\n */\nexport class IIMenuSub {\n  element: HTMLDivElement\n  content: HTMLElement\n\n  constructor(param : TSubMenuParam) {\n    this.element = document.createElement(\"div\")\n    this.element.classList.add(\"sub-menu\")\n    this.element.appendChild(param.trigger)\n    this.content = document.createElement(\"div\")\n    if(param.menuTitle) {\n      const menuTitleElement = document.createElement(\"h3\")\n      menuTitleElement.classList.add(\"ms-menu-title\")\n      menuTitleElement.textContent = param.menuTitle\n      this.content.appendChild(menuTitleElement)\n    }\n    this.content.classList.add(\"sub-menu-content\", param.position)\n    this.content.appendChild(param.subMenu)\n    this.element.appendChild(this.content)\n\n    param.trigger.addEventListener(\"pointerdown\", () => this.toggle())\n    document.addEventListener(\"pointerdown\", (e) => {\n      if (!this.element.contains(e.target as HTMLElement)) {\n        this.close()\n      }\n    })\n  }\n\n  open(): void {\n    this.content.classList.add(\"open\")\n  }\n\n  close(): void {\n    this.content.classList.remove(\"open\")\n  }\n\n  toggle(): void {\n    this.content.classList.toggle(\"open\")\n  }\n\n  unwrap(): void {\n    this.content.classList.remove(\"sub-menu-content\")\n    this.element.insertAdjacentElement(\"beforebegin\", this.content)\n    this.element.style.display = \"none\"\n  }\n\n  wrap(): void {\n    this.content.classList.add(\"sub-menu-content\")\n    this.element.appendChild(this.content)\n    this.element.style.display = \"block\"\n  }\n\n}\n","import menuIcon from \"../assets/svg/menu.svg\"\nimport languageIcon from \"../assets/svg/language.svg\"\nimport trashIcon from \"../assets/svg/trash.svg\"\nimport undoIcon from \"../assets/svg/undo.svg\"\nimport redoIcon from \"../assets/svg/redo.svg\"\nimport translateIcon from \"../assets/svg/translate.svg\"\nimport gestureIcon from \"../assets/svg/spock-hand-gesture.svg\"\nimport guideIcon from \"../assets/svg/orthogonal-view.svg\"\nimport snapIcon from \"../assets/svg/arrow-to-dot.svg\"\nimport debugIcon from \"../assets/svg/wolf.svg\"\nimport downloadIcon from \"../assets/svg/download.svg\"\nimport uploadIcon from \"../assets/svg/upload.svg\"\nimport { EditorTool, EditorWriteTool } from \"../Constants\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport { IIMenu, TMenuItemBoolean, TMenuItemButton, TMenuItemButtonList, TMenuItemSelect } from \"./IIMenu\"\nimport { TIISymbol } from \"../symbol\"\nimport { InsertAction, StrikeThroughAction, SurroundAction } from \"../gesture\"\nimport { IIMenuSub, TSubMenuParam } from \"./IIMenuSub\"\nimport { getAvailableLanguageList, PartialDeep } from \"../utils\"\nimport { InteractiveInkEditor } from \"../editor\"\n\n/**\n * @group Menu\n */\nexport class IIMenuAction extends IIMenu\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.MENU)\n\n  editor: InteractiveInkEditor\n  id: string\n  wrapper?: HTMLElement\n  menuLanguage!: IIMenuSub\n  menuClear?: HTMLButtonElement\n  menuUndo?: HTMLButtonElement\n  menuRedo?: HTMLButtonElement\n  menuConvert?: HTMLButtonElement\n\n  guideGaps = [\n    { label: \"S\", value: \"25\" },\n    { label: \"M\", value: \"50\" },\n    { label: \"L\", value: \"100\" },\n    { label: \"XL\", value: \"150\" },\n  ]\n\n  constructor(editor: InteractiveInkEditor, id = \"ms-menu-action\")\n  {\n    super()\n    this.id = id\n    this.editor = editor\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get isMobile(): boolean\n  {\n    return this.editor.renderer.parent.clientWidth < 700\n  }\n\n  protected createMenuClear(): HTMLElement\n  {\n    this.menuClear = document.createElement(\"button\")\n    this.menuClear.id = `${ this.id }-clear`\n    this.menuClear.classList.add(\"ms-menu-button\", \"square\")\n    this.menuClear.innerHTML = trashIcon\n    this.menuClear.addEventListener(\"pointerup\", () =>\n    {\n      this.#logger.info(`${ this.id }.clear`)\n      this.editor.clear()\n    })\n    return this.menuClear\n  }\n\n  protected createMenuLanguage(): HTMLElement\n  {\n    const triggerBtn = document.createElement(\"button\")\n    triggerBtn.id = `${ this.id }-language-trigger`\n    triggerBtn.classList.add(\"ms-menu-button\", \"square\")\n    triggerBtn.innerHTML = languageIcon\n\n    const select = document.createElement(\"select\")\n    select.classList.add(\"select-language\")\n    select.id = `${ this.id }-language`\n    getAvailableLanguageList(this.editor.configuration)\n      .then(json =>\n      {\n        const languages = json.result as { [key: string]: string }\n        Object.keys(languages).forEach(key =>\n        {\n          const selected = key === this.editor.configuration.recognition.lang\n          const opt = new Option(languages[key], key, selected, selected)\n          select.appendChild(opt)\n        })\n      })\n    select.addEventListener(\"change\", (e) =>\n    {\n      this.#logger.info(`${ this.id }.selectLanguage`)\n      const value = (e.target as HTMLInputElement).value\n      this.editor.changeLanguage(value)\n    })\n    const params: TSubMenuParam = {\n      trigger: triggerBtn,\n      subMenu: select,\n      position: \"bottom-right\"\n    }\n    this.menuLanguage = new IIMenuSub(params)\n    return this.menuLanguage.element\n  }\n\n  protected createMenuUndo(): HTMLElement\n  {\n    this.menuUndo = document.createElement(\"button\")\n    this.menuUndo.id = `${ this.id }-undo`\n    this.menuUndo.classList.add(\"ms-menu-button\", \"square\")\n    this.menuUndo.innerHTML = undoIcon\n    this.menuUndo.addEventListener(\"pointerup\", async () =>\n    {\n      this.#logger.info(`${ this.id }.undo`)\n      await this.editor.undo()\n    })\n    return this.menuUndo\n  }\n\n  protected createMenuRedo(): HTMLElement\n  {\n    this.menuRedo = document.createElement(\"button\")\n    this.menuRedo.id = `${ this.id }-redo`\n    this.menuRedo.classList.add(\"ms-menu-button\", \"square\")\n    this.menuRedo.innerHTML = redoIcon\n    this.menuRedo.addEventListener(\"pointerup\", async () =>\n    {\n      this.#logger.info(`${ this.id }.redo`)\n      await this.editor.redo()\n    })\n    return this.menuRedo\n  }\n\n  protected createMenuConvert(): HTMLElement\n  {\n    this.menuConvert = document.createElement(\"button\")\n    this.menuConvert.id = `${ this.id }-convert`\n    this.menuConvert.classList.add(\"ms-menu-button\", \"square\")\n    this.menuConvert.innerHTML = translateIcon\n    this.menuConvert.addEventListener(\"pointerup\", () =>\n    {\n      this.#logger.info(`${ this.id }.convert`)\n      this.editor.convert()\n    })\n    return this.menuConvert\n  }\n\n  protected createMenuGesture(): HTMLDivElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-gesture`\n    trigger.classList.add(\"ms-menu-button\", \"square\")\n    trigger.innerHTML = gestureIcon\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n\n    const surroundActionValues: { label: string, value: string }[] = []\n    for (const key in SurroundAction) {\n      const value = SurroundAction[key as keyof typeof SurroundAction]\n      surroundActionValues.push({ label: key, value })\n    }\n    const strikeThroughActionValues: { label: string, value: string }[] = []\n    for (const key in StrikeThroughAction) {\n      const value = StrikeThroughAction[key as keyof typeof StrikeThroughAction]\n      strikeThroughActionValues.push({ label: key, value })\n    }\n    const splitActionValues: { label: string, value: string }[] = []\n    for (const key in InsertAction) {\n      const value = InsertAction[key as keyof typeof InsertAction]\n      splitActionValues.push({ label: key, value })\n    }\n    const menuItems: (TMenuItemBoolean | TMenuItemSelect)[] = [\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-gesture-detect`,\n        label: \"Detect gesture\",\n        initValue: this.editor.writer.detectGesture,\n        callback: (value) =>\n        {\n          this.#logger.info(`${ this.id }.gesture-detect`, { value })\n          this.editor.writer.detectGesture = value\n          this.editor.tool = EditorTool.Write\n          this.editor.writer.tool = EditorWriteTool.Pencil\n        }\n      },\n      {\n        type: \"select\",\n        id: `${ this.id }-gesture-surround`,\n        label: \"On surround\",\n        values: surroundActionValues,\n        initValue: this.editor.gesture.surroundAction,\n        callback: (value) =>\n        {\n          this.#logger.info(`${ this.id }.gesture-surround`, { value })\n          this.editor.gesture.surroundAction = value as SurroundAction\n          this.editor.tool = EditorTool.Write\n          this.editor.writer.tool = EditorWriteTool.Pencil\n        }\n      },\n      {\n        type: \"select\",\n        id: `${ this.id }-gesture-strikethrough`,\n        label: \"On strikethrough\",\n        values: strikeThroughActionValues,\n        initValue: this.editor.gesture.strikeThroughAction,\n        callback: (value) =>\n        {\n          this.#logger.info(`${ this.id }.gesture-strikethrough`, { value })\n          this.editor.gesture.strikeThroughAction = value as StrikeThroughAction\n          this.editor.tool = EditorTool.Write\n          this.editor.writer.tool = EditorWriteTool.Pencil\n        }\n      },\n      {\n        type: \"select\",\n        id: `${ this.id }-gesture-insert`,\n        label: \"On insert\",\n        values: splitActionValues,\n        initValue: this.editor.gesture.insertAction,\n        callback: (value) =>\n        {\n          this.#logger.info(`${ this.id }.gesture-InsertAction`, { value })\n          this.editor.gesture.insertAction = value as InsertAction\n          this.editor.tool = EditorTool.Write\n          this.editor.writer.tool = EditorWriteTool.Pencil\n        }\n      },\n    ]\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      menuTitle: \"Gesture\",\n      subMenu: subMenuWrapper,\n      position: \"right-top\"\n    }\n    return new IIMenuSub(params).element\n  }\n\n  protected createMenuGuide(): HTMLDivElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-guide`\n    trigger.classList.add(\"ms-menu-button\", \"square\")\n    trigger.innerHTML = guideIcon\n\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n\n    const menuItems: (TMenuItemBoolean | TMenuItemSelect | TMenuItemButtonList)[] = [\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-guide-enable`,\n        label: \"Show guide\",\n        initValue: this.editor.configuration.rendering.guides.enable,\n        callback: (value) =>\n        {\n          this.#logger.info(`${ this.id }.guide-enable`, { value })\n          this.editor.configuration.rendering.guides.enable = value as boolean\n          this.editor.renderingConfiguration = this.editor.configuration.rendering\n        }\n      },\n      {\n        type: \"select\",\n        id: `${ this.id }-guide-type`,\n        label: \"Guide style\",\n        values: [\n          { label: \"Line\", value: \"line\" },\n          { label: \"Grid\", value: \"grid\" },\n          { label: \"Point\", value: \"point\" },\n        ],\n        initValue: this.editor.configuration.rendering.guides.type,\n        callback: (value) =>\n        {\n          this.#logger.info(`${ this.id }.guide-type`, { value })\n          this.editor.configuration.rendering.guides.type = value as (\"line\" | \"grid\" | \"point\")\n          this.editor.renderingConfiguration = this.editor.configuration.rendering\n        }\n      },\n      {\n        type: \"list\",\n        id: `${ this.id }-guide-size`,\n        label: \"Guide style\",\n        values: this.guideGaps,\n        initValue: this.editor.configuration.rendering.guides.gap.toString(),\n        callback: (value) =>\n        {\n          this.#logger.info(`${ this.id }.guide-size`, { value })\n          this.editor.configuration.rendering.guides.gap = +value\n          this.editor.renderingConfiguration = this.editor.configuration.rendering\n        }\n      },\n    ]\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      menuTitle: \"Guide\",\n      subMenu: subMenuWrapper,\n      position: \"right-top\"\n    }\n    return new IIMenuSub(params).element\n  }\n\n  protected createMenuSnap(): HTMLDivElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-snap`\n    trigger.classList.add(\"ms-menu-button\", \"square\")\n    trigger.innerHTML = snapIcon\n\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n\n    const menuItems: (TMenuItemBoolean | TMenuItemSelect)[] = [\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-snap-to-guide`,\n        label: \"Snap to guide\",\n        initValue: this.editor.snaps.configuration.guide,\n        callback: (value) => this.editor.snaps.configuration.guide = value\n      },\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-snap-to-element`,\n        label: \"Snap to element\",\n        initValue: this.editor.snaps.configuration.symbol,\n        callback: (value) => this.editor.snaps.configuration.symbol = value\n      },\n      {\n        type: \"select\",\n        id: `${ this.id }-snap-angle`,\n        label: \"Snap angle\",\n        values: [\n          { label: \"None\", value: \"0\" },\n          { label: \"10°\", value: \"10\" },\n          { label: \"30°\", value: \"30\" },\n          { label: \"45°\", value: \"45\" },\n          { label: \"90°\", value: \"90\" },\n          { label: \"180°\", value: \"180\" },\n        ],\n        initValue: this.editor.snaps.configuration.angle.toString(),\n        callback: (angle) => this.editor.snaps.configuration.angle = +angle\n      },\n    ]\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      menuTitle: \"Snap\",\n      subMenu: subMenuWrapper,\n      position: \"right-top\"\n    }\n    return new IIMenuSub(params).element\n  }\n\n  protected createMenuDebug(): HTMLDivElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-debug`\n    trigger.classList.add(\"ms-menu-button\", \"square\")\n    trigger.innerHTML = debugIcon\n\n    const menuItems: TMenuItemBoolean[] = [\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-debug-bounding-box`,\n        label: \"Show bounding box\",\n        initValue: this.editor.svgDebugger.boundingBoxVisibility,\n        callback: (debug) => this.editor.svgDebugger.boundingBoxVisibility = debug\n      },\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-debug-recognition-box`,\n        label: \"Show recognition box\",\n        initValue: this.editor.svgDebugger.recognitionBoxVisibility,\n        callback: (debug) => this.editor.svgDebugger.recognitionBoxVisibility = debug\n      },\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-debug-bounding-item-box`,\n        label: \"Show recognition item box\",\n        initValue: this.editor.svgDebugger.recognitionItemBoxVisibility,\n        callback: (debug) => this.editor.svgDebugger.recognitionItemBoxVisibility = debug\n      },\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-debug-snap-points`,\n        label: \"Show snap points\",\n        initValue: this.editor.svgDebugger.snapPointsVisibility,\n        callback: (debug) => this.editor.svgDebugger.snapPointsVisibility = debug\n      },\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-debug-vertices`,\n        label: \"Show vertices\",\n        initValue: this.editor.svgDebugger.verticesVisibility,\n        callback: (debug) => this.editor.svgDebugger.verticesVisibility = debug\n      },\n    ]\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      menuTitle: \"Debug\",\n      subMenu: subMenuWrapper,\n      position: \"right-top\"\n    }\n    return new IIMenuSub(params).element\n  }\n\n  protected createMenuExport(): HTMLElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-export`\n    trigger.classList.add(\"ms-menu-button\", \"square\")\n    trigger.innerHTML = downloadIcon\n\n    const menuItems: TMenuItemButton[] = [\n      {\n        type: \"button\",\n        id: `${ this.id }-export-json`,\n        label: \"json\",\n        callback: () =>\n        {\n          this.editor.downloadAsJson()\n        }\n      },\n      {\n        type: \"button\",\n        id: `${ this.id }-export-svg`,\n        label: \"svg\",\n        callback: () =>\n        {\n          this.editor.downloadAsSVG()\n        }\n      },\n      {\n        type: \"button\",\n        id: `${ this.id }-export-png`,\n        label: \"png\",\n        callback: () =>\n        {\n          this.editor.downloadAsPNG()\n        }\n      },\n    ]\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      menuTitle: \"Export\",\n      subMenu: subMenuWrapper,\n      position: \"right-top\"\n    }\n    return new IIMenuSub(params).element\n  }\n\n  protected async readFileAsText(file: File): Promise<string>\n  {\n    return new Promise((resolve, reject) =>\n    {\n      const reader = new FileReader()\n      reader.onerror = reject;\n      reader.onload = () => {\n        resolve(reader.result as string)\n      }\n      if (file) {\n        reader.readAsText(file)\n      }\n    })\n  }\n\n  protected createMenuImport(): HTMLElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-import`\n    trigger.classList.add(\"ms-menu-button\", \"square\")\n    trigger.innerHTML = uploadIcon\n\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n\n    const importInput = document.createElement(\"input\")\n    importInput.type = \"file\"\n    importInput.accept = \".json\"\n    importInput.multiple = false\n    importInput.addEventListener(\"change\", () => {\n      importBtn.disabled = !importInput.files?.length\n    })\n\n    subMenuWrapper.appendChild(importInput)\n    const importBtn = document.createElement(\"button\")\n    importBtn.classList.add(\"ms-menu-button\")\n    importBtn.innerText = \"Import\"\n    importBtn.disabled = true\n    subMenuWrapper.appendChild(importBtn)\n    importBtn.addEventListener(\"pointerup\", async (e) =>\n    {\n      e.preventDefault()\n      e.stopPropagation()\n      if (importInput.files?.length) {\n        const fileString = await this.readFileAsText(importInput.files[0])\n        const symbols = JSON.parse(fileString) as PartialDeep<TIISymbol>[]\n        await this.editor.createSymbols(symbols)\n        importInput.value = \"\"\n        importBtn.disabled = true\n      }\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      menuTitle: \"Import\",\n      subMenu: subMenuWrapper,\n      position: \"right-top\"\n    }\n    return new IIMenuSub(params).element\n  }\n\n  protected unselectAll(): void\n  {\n    this.wrapper?.querySelectorAll(\"*\").forEach(e => e.classList.remove(\"active\"))\n  }\n\n  protected closeAllSubMenu(): void\n  {\n    this.wrapper?.querySelectorAll(\".open\").forEach(e => e.classList.remove(\"open\"))\n  }\n\n  render(layer: HTMLElement): void\n  {\n    if (this.editor.configuration.menu.action.enable) {\n      const menuTrigger = document.createElement(\"button\")\n      menuTrigger.id = this.id\n      menuTrigger.classList.add(\"ms-menu-button\", \"square\")\n      menuTrigger.innerHTML = menuIcon\n\n      const subMenuWrapper = document.createElement(\"div\")\n      subMenuWrapper.classList.add(\"ms-menu-colmun\")\n      subMenuWrapper.appendChild(this.createMenuGesture())\n      subMenuWrapper.appendChild(this.createMenuGuide())\n      subMenuWrapper.appendChild(this.createMenuSnap())\n      subMenuWrapper.appendChild(this.createMenuDebug())\n      subMenuWrapper.appendChild(this.createMenuImport())\n      subMenuWrapper.appendChild(this.createMenuExport())\n\n      this.wrapper = document.createElement(\"div\")\n      this.wrapper.classList.add(\"ms-menu\", \"ms-menu-top-left\", \"ms-menu-row\")\n      this.wrapper.appendChild(new IIMenuSub({ trigger: menuTrigger, subMenu: subMenuWrapper, position: \"bottom\" }).element)\n      this.wrapper.appendChild(this.createMenuLanguage())\n      this.wrapper.appendChild(this.createMenuClear())\n      this.wrapper.appendChild(this.createMenuUndo())\n      this.wrapper.appendChild(this.createMenuRedo())\n      this.wrapper.appendChild(this.createMenuConvert())\n\n      layer.appendChild(this.wrapper)\n      this.update()\n      this.show()\n    }\n  }\n\n  update(): void\n  {\n    if (this.menuLanguage) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      this.isMobile ? this.menuLanguage.wrap() : this.menuLanguage.unwrap()\n    }\n    if (this.menuClear) {\n      this.menuClear.disabled = this.editor.history.context.empty\n    }\n    if (this.menuUndo) {\n      this.menuUndo.disabled = !this.editor.history.context.canUndo\n    }\n    if (this.menuRedo) {\n      this.menuRedo.disabled = !this.editor.history.context.canRedo\n    }\n    if (this.menuConvert) {\n      this.menuConvert.disabled = !this.editor.extractStrokesFromSymbols(this.model.symbols).length\n    }\n  }\n\n  show(): void\n  {\n    if (this.wrapper) {\n      this.wrapper.style.visibility = \"visible\"\n    }\n  }\n\n  hide(): void\n  {\n    if (this.wrapper) {\n      this.wrapper.style.visibility = \"hidden\"\n    }\n  }\n\n  destroy(): void\n  {\n    if (this.wrapper) {\n      while (this.wrapper.lastChild) {\n        this.wrapper.removeChild(this.wrapper.lastChild)\n      }\n      this.wrapper.remove()\n      this.wrapper = undefined\n      this.menuClear = undefined\n      this.menuUndo = undefined\n      this.menuRedo = undefined\n      this.menuConvert = undefined\n    }\n  }\n}\n","import pencilIcon from \"../assets/svg/edit-pencil.svg\"\nimport cursorIcon from \"../assets/svg/frame-select.svg\"\nimport eraseIcon from \"../assets/svg/erase.svg\"\nimport handIcon from \"../assets/svg/drag-hand-gesture.svg\"\nimport rectangleIcon from \"../assets/svg/rectangle.svg\"\nimport rhombusIcon from \"../assets/svg/rhombus.svg\"\nimport circleIcon from \"../assets/svg/circle.svg\"\nimport ellipseIcon from \"../assets/svg/ellipse.svg\"\nimport triangleIcon from \"../assets/svg/triangle.svg\"\nimport lineIcon from \"../assets/svg/linear.svg\"\nimport arrowIcon from \"../assets/svg/linear-arrow.svg\"\nimport doubleArrowIcon from \"../assets/svg/linear-double-arrow.svg\"\nimport { EditorTool, EditorWriteTool } from \"../Constants\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIMenu } from \"./IIMenu\"\nimport { IIMenuSub } from \"./IIMenuSub\"\nimport { TSubMenuParam } from \"./IIMenuSub\"\nimport { InteractiveInkEditor } from \"../editor\"\n\n/**\n * @group Menu\n */\nexport class IIMenuTool extends IIMenu\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.MENU)\n\n  editor: InteractiveInkEditor\n  id: string\n  wrapper?: HTMLDivElement\n  writeBtn?: HTMLButtonElement\n  menuSelect?: HTMLButtonElement\n  menuMove?: HTMLButtonElement\n  menuErase?: HTMLButtonElement\n  menuShape?: HTMLButtonElement\n  subMenuShape?: {\n    rectangle: HTMLButtonElement,\n    circle: HTMLButtonElement,\n    triangle: HTMLButtonElement,\n    ellipse: HTMLButtonElement\n    rhombus: HTMLButtonElement\n  }\n  menuEdge?: HTMLButtonElement\n  subMenuEdge?: {\n    line: HTMLButtonElement,\n    arrow: HTMLButtonElement,\n    doubleArrow: HTMLButtonElement,\n  }\n\n  constructor(editor: InteractiveInkEditor, id = \"ms-menu-tool\")\n  {\n    super()\n    this.id = id\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  protected createMenuWrite(): HTMLElement\n  {\n    this.writeBtn = document.createElement(\"button\")\n    this.writeBtn.id = `${this.id}-write-pencil`\n    this.writeBtn.classList.add(\"ms-menu-button\", \"square\")\n    this.writeBtn.innerHTML = pencilIcon\n    this.writeBtn.addEventListener(\"pointerup\", () =>\n    {\n      this.unselectAll()\n      this.writeBtn!.classList.add(\"active\")\n      this.editor.tool = EditorTool.Write\n      this.editor.writer.tool = EditorWriteTool.Pencil\n    })\n    return this.writeBtn\n  }\n\n  protected createMenuMove(): HTMLElement\n  {\n    this.menuMove = document.createElement(\"button\")\n    this.menuMove.id = `${this.id}-move`\n    this.menuMove.classList.add(\"ms-menu-button\", \"square\")\n    this.menuMove.innerHTML = handIcon\n    this.menuMove.addEventListener(\"pointerup\", () =>\n    {\n      this.unselectAll()\n      this.menuMove!.classList.add(\"active\")\n      this.editor.tool = EditorTool.Move\n    })\n    return this.menuMove\n  }\n\n  protected createMenuSelect(): HTMLElement\n  {\n    this.menuSelect = document.createElement(\"button\")\n    this.menuSelect.id = `${this.id}-select`\n    this.menuSelect.classList.add(\"ms-menu-button\", \"square\")\n    this.menuSelect.innerHTML = cursorIcon\n    this.menuSelect.addEventListener(\"pointerup\", () =>\n    {\n      this.unselectAll()\n      this.menuSelect!.classList.add(\"active\")\n      this.editor.tool = EditorTool.Select\n    })\n    return this.menuSelect\n  }\n\n  protected createMenuErase(): HTMLElement\n  {\n    this.menuErase = document.createElement(\"button\")\n    this.menuErase.id = `${this.id}-erase`\n    this.menuErase.classList.add(\"ms-menu-button\", \"square\")\n    this.menuErase.innerHTML = eraseIcon\n    this.menuErase.addEventListener(\"pointerup\", () =>\n    {\n      this.unselectAll()\n      this.menuErase!.classList.add(\"active\")\n      this.editor.tool = EditorTool.Erase\n    })\n    return this.menuErase\n  }\n\n  protected createShapeSubMenu(icon: string, tool: EditorWriteTool): HTMLButtonElement\n  {\n    const subMenuShape = document.createElement(\"button\")\n    subMenuShape.id = `${this.id}-write-shape-${tool}`\n    subMenuShape.classList.add(\"ms-menu-button\", \"square\")\n    subMenuShape.innerHTML = icon\n    subMenuShape.addEventListener(\"pointerup\", () =>\n    {\n      this.unselectAll()\n      this.editor.tool = EditorTool.Write\n      this.editor.writer.tool = tool\n      subMenuShape.classList.add(\"active\")\n      this.menuShape!.innerHTML = icon\n      this.menuShape!.classList.add(\"active\")\n      const subMenuContent = this.menuShape!.nextSibling\n      if (subMenuContent) {\n        (subMenuContent as HTMLElement).classList.remove(\"open\")\n      }\n    })\n    return subMenuShape\n  }\n\n  protected createMenuShape(): HTMLElement\n  {\n    this.menuShape = document.createElement(\"button\")\n    this.menuShape.id = `${this.id}-write-shape`\n    this.menuShape.classList.add(\"ms-menu-button\", \"square\")\n    this.menuShape.innerHTML = rectangleIcon\n    this.subMenuShape = {\n      circle: this.createShapeSubMenu(circleIcon, EditorWriteTool.Circle),\n      rectangle: this.createShapeSubMenu(rectangleIcon, EditorWriteTool.Rectangle),\n      triangle: this.createShapeSubMenu(triangleIcon, EditorWriteTool.Triangle),\n      ellipse: this.createShapeSubMenu(ellipseIcon, EditorWriteTool.Ellipse),\n      rhombus: this.createShapeSubMenu(rhombusIcon, EditorWriteTool.Rhombus),\n    }\n    const subMenuContent = document.createElement(\"div\")\n    subMenuContent.id = `${this.id}-write-shape-list`\n    subMenuContent.classList.add(\"ms-menu-row\", \"sub-menu-content-shape\")\n    subMenuContent.appendChild(this.subMenuShape.rectangle)\n    subMenuContent.appendChild(this.subMenuShape.circle)\n    subMenuContent.appendChild(this.subMenuShape.ellipse)\n    subMenuContent.appendChild(this.subMenuShape.triangle)\n    subMenuContent.appendChild(this.subMenuShape.rhombus)\n\n    const params: TSubMenuParam = {\n      trigger: this.menuShape,\n      subMenu: subMenuContent,\n      position: \"top\"\n    }\n\n    return new IIMenuSub(params).element\n  }\n\n  protected createEdgeSubMenu(square: string, tool: EditorWriteTool): HTMLButtonElement\n  {\n    const subMenuEdge = document.createElement(\"button\")\n    subMenuEdge.id = `${this.id}-write-edge-${tool}`\n    subMenuEdge.classList.add(\"ms-menu-button\", \"square\")\n    subMenuEdge.innerHTML = square\n    subMenuEdge.addEventListener(\"pointerup\", () =>\n    {\n      this.unselectAll()\n      this.editor.tool = EditorTool.Write\n      this.editor.writer.tool = tool\n      subMenuEdge.classList.add(\"active\")\n      this.menuEdge!.innerHTML = square\n      this.menuEdge!.classList.add(\"active\")\n      const subMenuContent = this.menuEdge!.nextSibling\n      if (subMenuContent) {\n        (subMenuContent as HTMLElement).classList.remove(\"open\")\n      }\n    })\n    return subMenuEdge\n  }\n\n  protected createMenuEdge(): HTMLElement\n  {\n    this.menuEdge = document.createElement(\"button\")\n    this.menuEdge.id = `${this.id}-write-edge`\n    this.menuEdge.classList.add(\"ms-menu-button\", \"square\")\n    this.menuEdge.innerHTML = lineIcon\n    this.subMenuEdge = {\n      line: this.createEdgeSubMenu(lineIcon, EditorWriteTool.Line),\n      arrow: this.createEdgeSubMenu(arrowIcon, EditorWriteTool.Arrow),\n      doubleArrow: this.createEdgeSubMenu(doubleArrowIcon, EditorWriteTool.DoubleArrow),\n    }\n    const subMenuContent = document.createElement(\"div\")\n    subMenuContent.id = `${this.id}-write-edge-list`\n    subMenuContent.classList.add(\"ms-menu-row\", \"sub-menu-content-edge\")\n    subMenuContent.appendChild(this.subMenuEdge.line)\n    subMenuContent.appendChild(this.subMenuEdge.arrow)\n    subMenuContent.appendChild(this.subMenuEdge.doubleArrow)\n\n    const params: TSubMenuParam = {\n      trigger: this.menuEdge,\n      subMenu: subMenuContent,\n      position: \"top\"\n    }\n\n    return new IIMenuSub(params).element\n  }\n\n  protected unselectAll(): void\n  {\n    this.wrapper?.querySelectorAll(\"*\").forEach(e => e.classList.remove(\"active\"))\n  }\n\n  update(): void\n  {\n    this.unselectAll()\n    switch (this.editor.tool) {\n      case EditorTool.Erase:\n        this.menuErase?.classList.add(\"active\")\n        break;\n      case EditorTool.Move:\n        this.menuMove?.classList.add(\"active\")\n        break;\n      case EditorTool.Select:\n        this.menuSelect?.classList.add(\"active\")\n        break;\n      case EditorTool.Write:\n        switch (this.editor.writer.tool) {\n          case EditorWriteTool.Circle:\n            this.menuShape?.classList.add(\"active\")\n            this.subMenuShape?.circle?.classList.add(\"active\")\n            break;\n          case EditorWriteTool.Ellipse:\n            this.menuShape?.classList.add(\"active\")\n            this.subMenuShape?.ellipse?.classList.add(\"active\")\n            break;\n          case EditorWriteTool.Triangle:\n            this.menuShape?.classList.add(\"active\")\n            this.subMenuShape?.triangle?.classList.add(\"active\")\n            break;\n          case EditorWriteTool.Rectangle:\n            this.menuShape?.classList.add(\"active\")\n            this.subMenuShape?.rectangle?.classList.add(\"active\")\n            break;\n          case EditorWriteTool.Line:\n            this.menuEdge?.classList.add(\"active\")\n            this.subMenuEdge?.line?.classList.add(\"active\")\n            break;\n          case EditorWriteTool.Arrow:\n            this.menuEdge?.classList.add(\"active\")\n            this.subMenuEdge?.arrow?.classList.add(\"active\")\n            break;\n          case EditorWriteTool.DoubleArrow:\n            this.menuEdge?.classList.add(\"active\")\n            this.subMenuEdge?.doubleArrow?.classList.add(\"active\")\n            break;\n          default:\n            this.writeBtn?.classList.add(\"active\")\n            break;\n        }\n        break;\n    }\n  }\n\n  render(layer: HTMLElement): void\n  {\n    if (this.editor.configuration.menu.tool.enable) {\n      this.wrapper = document.createElement(\"div\")\n      this.wrapper.classList.add(\"ms-menu\", \"ms-menu-bottom\", \"ms-menu-row\")\n\n      this.wrapper.appendChild(this.createMenuWrite())\n      this.wrapper.appendChild(this.createMenuMove())\n      this.wrapper.appendChild(this.createMenuSelect())\n      this.wrapper.appendChild(this.createMenuErase())\n      this.wrapper.appendChild(this.createMenuEdge())\n      this.wrapper.appendChild(this.createMenuShape())\n\n      layer.appendChild(this.wrapper)\n      this.update()\n      this.show()\n    }\n  }\n\n  show(): void\n  {\n    if (this.wrapper) {\n      this.wrapper.style.visibility = \"visible\"\n    }\n  }\n\n  hide(): void\n  {\n    if (this.wrapper) {\n      this.wrapper.style.visibility = \"hidden\"\n    }\n  }\n\n  destroy(): void\n  {\n    if (this.wrapper) {\n      while (this.wrapper.lastChild) {\n        this.wrapper.removeChild(this.wrapper.lastChild)\n      }\n      this.wrapper.remove()\n      this.writeBtn = undefined\n      this.menuSelect = undefined\n      this.menuMove = undefined\n      this.menuErase = undefined\n      this.menuShape = undefined\n      this.subMenuShape = undefined\n      this.menuEdge = undefined\n      this.subMenuEdge = undefined\n      this.wrapper = undefined\n    }\n  }\n}\n","import styleIcon from \"../assets/svg/palette.svg\"\nimport { EditorTool, EditorWriteTool } from \"../Constants\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport { SymbolType, TIISymbol } from \"../symbol\"\nimport { IIMenu, TMenuItemColorList } from \"./IIMenu\"\nimport { IIMenuSub } from \"./IIMenuSub\"\nimport { TSubMenuParam } from \"./IIMenuSub\"\nimport { InteractiveInkEditor } from \"../editor\"\n\n/**\n * @group Menu\n */\nexport class IIMenuStyle extends IIMenu\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.MENU)\n\n  editor: InteractiveInkEditor\n  id: string\n  wrapper?: HTMLDivElement\n  subMenu?: IIMenuSub\n  triggerBtn?: HTMLButtonElement\n  menuColorStroke?: HTMLDivElement\n  menuColorFill?: HTMLDivElement\n  menuThickness?: HTMLDivElement\n  menuFontSize?: HTMLDivElement\n  menuFontWeight?: HTMLDivElement\n  menuStrokeOpacity?: HTMLDivElement\n\n  constructor(editor: InteractiveInkEditor, id = \"ms-menu-style\")\n  {\n    super()\n    this.id = id\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get symbolsSelected(): TIISymbol[]\n  {\n    return this.model.symbolsSelected\n  }\n\n  get writeShape(): boolean\n  {\n    return ![EditorWriteTool.Arrow, EditorWriteTool.DoubleArrow, EditorWriteTool.Line, EditorWriteTool.Pencil].includes(this.editor.writer.tool)\n  }\n\n  get rowHeight(): number\n  {\n    return this.editor.configuration.rendering.guides.gap\n  }\n\n  get isMobile(): boolean\n  {\n    return this.editor.renderer.parent.clientWidth < 700\n  }\n\n  protected createMenuStroke(): HTMLDivElement\n  {\n    const symbolsStyles = this.symbolsSelected.map(s => s.style)\n    const hasUniqColor = symbolsStyles.length && symbolsStyles.every(st => st.color === symbolsStyles[0]?.color)\n    const color = hasUniqColor && symbolsStyles[0]?.color ? symbolsStyles[0]?.color : this.editor.penStyle.color as string\n    const menuColorStrokeDef: TMenuItemColorList = {\n      type: \"colors\",\n      label: \"Colors\",\n      id: `${ this.id }-color`,\n      fill: false,\n      values: this.colors,\n      initValue: color,\n      callback: (color) =>\n      {\n        this.editor.penStyle = { color }\n        this.editor.updateSymbolsStyle(this.symbolsSelected.map(s => s.id), { color })\n      },\n    }\n    const menuColor = this.createColorList(menuColorStrokeDef)\n    this.menuColorStroke = this.createWrapCollapsible(menuColor, \"Colors\")\n    this.menuColorStroke.id = `${ this.id }-color`\n    return this.menuColorStroke\n  }\n\n  protected createMenuColorFill(): HTMLDivElement\n  {\n    const symbolsStyles = this.symbolsSelected.map(s => s.style)\n    const hasUniqColor = symbolsStyles.length && symbolsStyles.every(st => st.color === symbolsStyles[0]?.color)\n    const color = hasUniqColor && symbolsStyles[0].color ? symbolsStyles[0].color : this.editor.penStyle.color as string\n    const menuColorStrokeDef: TMenuItemColorList = {\n      type: \"colors\",\n      label: \"Fill\",\n      id: `${ this.id }-fill`,\n      fill: true,\n      values: this.colors,\n      initValue: color,\n      callback: (fill) =>\n      {\n        this.editor.penStyle = { fill }\n        this.editor.updateSymbolsStyle(this.symbolsSelected.map(s => s.id), { fill })\n      },\n    }\n    const menuColor = this.createColorList(menuColorStrokeDef)\n    this.menuColorFill = this.createWrapCollapsible(menuColor, \"Fill\")\n    this.menuColorFill.id = `${ this.id }-fill`\n    return this.menuColorFill\n  }\n\n  protected createMenuThickness(): HTMLDivElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.id = `${ this.id }-thickness-list`\n    wrapper.classList.add(\"ms-menu-row\", \"thickness-list\")\n\n    const symbolsStyles = this.symbolsSelected.map(s => s.style)\n    const hasUniqWidth = symbolsStyles.length && symbolsStyles.every(st => st.width === symbolsStyles[0].width)\n    const width = hasUniqWidth ? symbolsStyles[0].width : this.editor.penStyle.width\n\n    this.thicknessList.forEach((size) =>\n    {\n      const btn = document.createElement(\"button\")\n      btn.id = `${ this.id }-thickness-${ size.label }-btn`\n      btn.classList.add(\"ms-menu-button\", \"square\")\n      btn.textContent = size.label\n      if (width === size.value) {\n        btn.classList.add(\"active\")\n      }\n      btn.addEventListener(\"pointerup\", (e) =>\n      {\n        e.preventDefault()\n        e.stopPropagation()\n        this.editor.penStyle = { width: size.value }\n        wrapper.querySelectorAll(\"*\").forEach(e => e.classList.remove(\"active\"))\n        btn.classList.add(\"active\")\n        if (this.symbolsSelected.length) {\n          this.editor.updateSymbolsStyle(this.symbolsSelected.map(s => s.id), { width: size.value })\n          this.editor.selector.resetSelectedGroup(this.symbolsSelected)\n        }\n      })\n      wrapper.appendChild(btn)\n    })\n    this.menuThickness = this.createWrapCollapsible(wrapper, \"Thickness\")\n    this.menuThickness.id = `${ this.id }-thickness`\n    return this.menuThickness\n  }\n\n  protected createMenuFontSize(): HTMLDivElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.id = `${ this.id }-font-size-list`\n    wrapper.classList.add(\"ms-menu-row\", \"font-size-list\")\n\n    this.fontSizeList.forEach((size) =>\n    {\n      const btn = document.createElement(\"button\")\n      btn.id = `${ this.id }-font-size-${ size.label }-btn`\n      btn.classList.add(\"ms-menu-button\", \"square\")\n      btn.textContent = size.label\n      if (this.editor.configuration.fontStyle.size === size.value) {\n        btn.classList.add(\"active\")\n      }\n      btn.addEventListener(\"pointerup\", (e) =>\n      {\n        e.preventDefault()\n        e.stopPropagation()\n        wrapper.querySelectorAll(\"*\").forEach(e => e.classList.remove(\"active\"))\n        btn.classList.add(\"active\")\n        if (size.value === \"auto\") {\n          this.editor.configuration.fontStyle.size = \"auto\"\n        }\n        else {\n          const fontSize = (size.value as number)\n          this.editor.configuration.fontStyle.size = fontSize\n          const textSymbols = this.symbolsSelected.filter(s => s.type === SymbolType.Text || (s.type === SymbolType.Group && s.extractText().length))\n          this.editor.updateTextFontStyle(textSymbols.map(s => s.id), { fontSize: fontSize * this.rowHeight })\n          this.editor.selector.resetSelectedGroup(this.symbolsSelected)\n        }\n      })\n      wrapper.appendChild(btn)\n    })\n    this.menuFontSize = this.createWrapCollapsible(wrapper, \"Font size\")\n    this.menuFontSize.id = `${ this.id }-font-size`\n    return this.menuFontSize\n  }\n\n  protected createMenuFontWeight(): HTMLDivElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.id = `${ this.id }-font-weight-list`\n    wrapper.classList.add(\"ms-menu-row\", \"font-weight-list\")\n\n    this.fontWeightList.forEach((weight) =>\n    {\n      const btn = document.createElement(\"button\")\n      btn.id = `${ this.id }-font-weight-${ weight.label }-btn`\n      btn.classList.add(\"ms-menu-button\", \"center\")\n      btn.textContent = weight.label\n      if (this.editor.configuration.fontStyle.weight === weight.value) {\n        btn.classList.add(\"active\")\n      }\n      btn.addEventListener(\"pointerup\", (e) =>\n      {\n        e.preventDefault()\n        e.stopPropagation()\n        wrapper.querySelectorAll(\"*\").forEach(e => e.classList.remove(\"active\"))\n        btn.classList.add(\"active\")\n        this.editor.configuration.fontStyle.weight = weight.value as \"auto\" | \"normal\" | \"bold\"\n        if (this.editor.configuration.fontStyle.weight !== \"auto\") {\n          const textSymbols = this.symbolsSelected.filter(s => s.type === SymbolType.Text || (s.type === SymbolType.Group && s.extractText().length))\n          this.editor.updateTextFontStyle(textSymbols.map(s => s.id), { fontWeight: this.editor.configuration.fontStyle.weight })\n          this.editor.selector.resetSelectedGroup(this.symbolsSelected)\n        }\n      })\n      wrapper.appendChild(btn)\n    })\n    this.menuFontWeight = this.createWrapCollapsible(wrapper, \"Font weight\")\n    this.menuFontWeight.id = `${ this.id }-font-weight`\n    return this.menuFontWeight\n  }\n\n  protected createMenuOpacity(): HTMLDivElement\n  {\n    const symbolsStyles = this.symbolsSelected.map(s => s.style)\n    const hasUniqOpacity = symbolsStyles.length && symbolsStyles.every(st => st.opacity === symbolsStyles[0]?.opacity)\n    const currentOpacity = (hasUniqOpacity && symbolsStyles[0]?.opacity ? symbolsStyles[0]?.opacity : (this.editor.penStyle.opacity || 1)) * 100 as number\n\n    const wrapper = document.createElement(\"div\")\n    wrapper.id = `${ this.id }-opacity-input-wrapper`\n    const input = document.createElement(\"input\")\n    input.id = `${ this.id }-opacity-input`\n    input.setAttribute(\"name\", `opacity`)\n    input.setAttribute(\"type\", \"range\")\n    input.setAttribute(\"step\", \"1\")\n    input.setAttribute(\"min\", \"1\")\n    input.setAttribute(\"max\", \"100\")\n    wrapper.appendChild(input)\n\n    const output = document.createElement(\"output\")\n    output.setAttribute(\"for\", `opacity`)\n    output.innerHTML = currentOpacity ? `${ currentOpacity }` : \"-\"\n    wrapper.appendChild(output)\n\n    if (currentOpacity) {\n      input.setAttribute(\"value\", currentOpacity.toString())\n    }\n    input.addEventListener(\"input\", (evt) =>\n    {\n      const value = (evt.target as HTMLInputElement).value as unknown as number\n      output.innerHTML = `${ value }%`\n      this.editor.penStyle = { opacity: value / 100 }\n      if (this.symbolsSelected.length) {\n        this.editor.updateSymbolsStyle(this.symbolsSelected.map(s => s.id), { opacity: value / 100 })\n      }\n    })\n    this.menuStrokeOpacity = this.createWrapCollapsible(wrapper, \"Opacity\")\n    this.menuStrokeOpacity.id = `${ this.id }-opacity`\n    return this.menuStrokeOpacity\n  }\n\n  render(layer: HTMLElement): void\n  {\n    if (this.editor.configuration.menu.style.enable) {\n      this.triggerBtn = document.createElement(\"button\")\n      this.triggerBtn.id = this.id\n      this.triggerBtn.classList.add(\"ms-menu-button\", \"square\")\n      this.triggerBtn.innerHTML = styleIcon\n\n      const subMenuContent = document.createElement(\"div\")\n      subMenuContent.classList.add(\"ms-menu-colmun\")\n      subMenuContent.appendChild(this.createMenuStroke())\n      subMenuContent.appendChild(this.createMenuColorFill())\n      subMenuContent.appendChild(this.createMenuThickness())\n      subMenuContent.appendChild(this.createMenuFontSize())\n      subMenuContent.appendChild(this.createMenuFontWeight())\n      subMenuContent.appendChild(this.createMenuOpacity())\n\n      const params: TSubMenuParam = {\n        trigger: this.triggerBtn,\n        subMenu: subMenuContent,\n        position: \"bottom-left\",\n      }\n      this.subMenu = new IIMenuSub(params)\n\n      this.wrapper = document.createElement(\"div\")\n      this.wrapper.classList.add(\"ms-menu\", \"ms-menu-top-right\")\n      this.wrapper.appendChild(this.subMenu.element)\n      layer.appendChild(this.wrapper)\n      this.update()\n    }\n  }\n\n  update(): void\n  {\n    if (this.subMenu) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      this.isMobile ? this.subMenu.wrap() : this.subMenu.unwrap()\n    }\n\n    if (this.editor.tool === EditorTool.Write) {\n      this.show()\n      if (this.menuColorStroke) {\n        this.menuColorStroke.style.display = \"block\"\n      }\n      if (this.menuColorFill) {\n        this.menuColorFill.style.display = this.writeShape ? \"block\" : \"none\"\n      }\n      if (this.menuThickness) {\n        this.menuThickness.style.display = \"block\"\n      }\n      if (this.menuFontSize) {\n        this.menuFontSize.style.display = \"block\"\n      }\n      if (this.menuFontWeight) {\n        this.menuFontWeight.style.display = \"block\"\n      }\n      if (this.menuStrokeOpacity) {\n        this.menuStrokeOpacity.style.display = \"block\"\n      }\n    }\n    else if (this.editor.tool === EditorTool.Select) {\n      this.show()\n      if (this.menuColorStroke) {\n        this.menuColorStroke.style.display = \"block\"\n      }\n      if (this.menuColorFill) {\n        const shapeSelected = this.model.symbolsSelected.length && this.model.symbolsSelected.some(s => s.type === SymbolType.Shape)\n        this.menuColorFill.style.display = shapeSelected ? \"block\" : \"none\"\n      }\n      if (this.menuThickness) {\n        this.menuThickness.style.display = \"block\"\n      }\n      if (this.menuFontSize) {\n        this.menuFontSize.style.display = \"block\"\n      }\n      if (this.menuFontWeight) {\n        this.menuFontWeight.style.display = \"block\"\n      }\n      if (this.menuStrokeOpacity) {\n        this.menuStrokeOpacity.style.display = \"block\"\n      }\n    }\n    else {\n      this.hide()\n    }\n  }\n\n  show(): void\n  {\n    if (this.wrapper) {\n      this.wrapper.style.visibility = \"visible\"\n    }\n  }\n\n  hide(): void\n  {\n    if (this.wrapper) {\n      this.wrapper.style.visibility = \"hidden\"\n    }\n  }\n\n  destroy(): void\n  {\n    if (this.wrapper) {\n      while (this.wrapper.lastChild) {\n        this.wrapper.removeChild(this.wrapper.lastChild)\n      }\n      this.wrapper.remove()\n      this.wrapper = undefined\n      this.subMenu = undefined\n      this.triggerBtn = undefined\n      this.menuColorStroke = undefined\n      this.menuColorFill = undefined\n      this.menuThickness = undefined\n      this.menuFontSize = undefined\n      this.menuFontWeight = undefined\n      this.menuStrokeOpacity = undefined\n    }\n  }\n}\n","import ArrowDown from \"../assets/svg/nav-arrow-down.svg\"\nimport { SELECTION_MARGIN } from \"../Constants\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { DecoratorKind, IIDecorator, IIRecognizedText, IIStroke, IISymbolGroup, IIText, RecognizedKind, SymbolType, TIISymbol } from \"../symbol\"\nimport { IIMenu, TMenuItemBoolean, TMenuItemButton, TMenuItemColorList } from \"./IIMenu\"\nimport { createUUID } from \"../utils\"\nimport { IIMenuSub, TSubMenuParam } from \"./IIMenuSub\"\nimport { InteractiveInkEditor } from \"../editor\"\n/**\n * @group Menu\n */\nexport class IIMenuContext extends IIMenu\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.MENU)\n  editor: InteractiveInkEditor\n  id: string\n  wrapper?: HTMLElement\n  editMenu?: HTMLDivElement\n  editInput?: HTMLInputElement\n  editSaveBtn?: HTMLButtonElement\n  reorderMenu?: HTMLDivElement\n  decoratorMenu?: HTMLDivElement\n  menuExport?: HTMLDivElement\n  duplicateBtn?: HTMLButtonElement\n  groupBtn?: HTMLButtonElement\n  convertBtn?: HTMLButtonElement\n  removeBtn?: HTMLButtonElement\n\n  position: {\n    x: number,\n    y: number,\n    scrollTop: number,\n    scrollLeft: number\n  }\n\n  constructor(editor: InteractiveInkEditor, id = \"ms-menu-context\")\n  {\n    super()\n    this.id = id\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n    this.position = { x: 0, y: 0, scrollLeft: 0, scrollTop: 0 }\n  }\n\n  get symbolsSelected(): TIISymbol[]\n  {\n    return this.editor.model.symbolsSelected\n  }\n\n  get haveSymbolsSelected(): boolean\n  {\n    return this.symbolsSelected.length > 0\n  }\n\n  get symbolsDecorable(): (IIStroke | IIText | IISymbolGroup | IIRecognizedText)[]\n  {\n    return this.symbolsSelected.filter(s => [SymbolType.Stroke, SymbolType.Text, SymbolType.Group].includes(s.type) || (s.type === SymbolType.Recognized && s.kind === RecognizedKind.Text)) as (IIStroke | IIText | IISymbolGroup | IIRecognizedText)[]\n  }\n\n  get showDecorator(): boolean\n  {\n    return this.symbolsDecorable.length > 0\n  }\n\n  protected createMenuEdit(): HTMLElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-edit-trigger`\n    trigger.classList.add(\"ms-menu-button\")\n    const label = document.createElement(\"span\")\n    label.innerText = \"Edit\"\n    trigger.appendChild(label)\n    const icon = document.createElement(\"span\")\n    icon.style.setProperty(\"width\", \"32px\")\n    icon.style.setProperty(\"transform\", \"rotate(270deg)\")\n    icon.innerHTML = ArrowDown\n    trigger.appendChild(icon)\n\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n    this.editInput = document.createElement(\"input\")\n    subMenuWrapper.appendChild(this.editInput)\n    this.editSaveBtn = document.createElement(\"button\")\n    this.editSaveBtn.classList.add(\"ms-menu-button\")\n    this.editSaveBtn.innerText = \"Save\"\n    subMenuWrapper.appendChild(this.editSaveBtn)\n    this.editSaveBtn.addEventListener(\"pointerdown\", async (e) =>\n    {\n      e.stopPropagation()\n      const textSymbol = this.editor.model.symbolsSelected.find(s => s.type === SymbolType.Text) as IIText\n      if (textSymbol) {\n        const firstChar = textSymbol.chars[0]\n        textSymbol.chars = []\n        for (let i = 0; i < this.editInput!.value.length; i++) {\n          textSymbol.chars.push({\n            label: this.editInput!.value.charAt(i),\n            id: createUUID(),\n            color: firstChar.color,\n            fontSize: firstChar.fontSize,\n            fontWeight: firstChar.fontWeight,\n            bounds: firstChar.bounds\n          })\n        }\n        await this.editor.updateSymbol(textSymbol)\n        this.editor.selector.resetSelectedGroup([textSymbol])\n      }\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      subMenu: subMenuWrapper,\n      position: \"right\"\n    }\n    this.editMenu = new IIMenuSub(params).element\n\n    return this.editMenu\n  }\n\n  protected createMenuDuplicate(): HTMLElement\n  {\n    this.duplicateBtn = document.createElement(\"button\")\n    this.duplicateBtn.id = `${ this.id }-duplicate`\n    this.duplicateBtn.textContent = \"Duplicate\"\n    this.duplicateBtn.classList.add(\"ms-menu-button\")\n    this.duplicateBtn.addEventListener(\"pointerup\", async () =>\n    {\n      const symbolsToDuplicate = this.symbolsSelected\n\n      const updateDeepIdInGroup = (gr: IISymbolGroup) =>\n      {\n        gr.children.forEach(s =>\n        {\n          s.id = s.id.slice(0, -36) + `-${ createUUID() }`\n          switch (s.type) {\n            case SymbolType.Group:\n              updateDeepIdInGroup(s)\n              break\n            case SymbolType.Recognized:\n              s.strokes.forEach(s => s.id = s.id.slice(0, -36) + `-${ createUUID() }`)\n              break\n          }\n        })\n      }\n      const duplicatedSymbols = symbolsToDuplicate.map(s =>\n      {\n        const clone = s.clone()\n        while (this.editor.model.symbols.find(s => s.id === clone.id)) {\n          clone.id = clone.id.slice(0, -36) + `-${ createUUID() }`\n          if (clone.type === SymbolType.Group) {\n            updateDeepIdInGroup(clone)\n          }\n          else if (clone.type === SymbolType.Recognized) {\n            clone.strokes.forEach(s => s.id = s.id.slice(0, -36) + `-${ createUUID() }`)\n          }\n        }\n        clone.selected = true\n        this.editor.translator.applyToSymbol(clone, SELECTION_MARGIN, SELECTION_MARGIN)\n        return clone\n      })\n\n      this.editor.unselectAll()\n      await this.editor.addSymbols(duplicatedSymbols)\n      this.editor.selector.drawSelectedGroup(duplicatedSymbols)\n    })\n    return this.duplicateBtn\n  }\n\n  protected createMenuGroup(): HTMLElement\n  {\n    this.groupBtn = document.createElement(\"button\")\n    this.groupBtn.id = `${ this.id }-duplicate`\n    this.groupBtn.textContent = \"Group\"\n    this.groupBtn.classList.add(\"ms-menu-button\")\n    this.groupBtn.addEventListener(\"pointerup\", async () =>\n    {\n      if (this.symbolsSelected.length === 1 && this.symbolsSelected[0].type === SymbolType.Group) {\n        const symbols = this.editor.ungroupSymbol(this.symbolsSelected[0] as IISymbolGroup)\n        this.editor.select(symbols.map(s => s.id))\n      }\n      else {\n        const symbols = this.symbolsSelected.slice()\n        this.editor.unselectAll()\n        const group = this.editor.groupSymbols(symbols)\n        group.selected = true\n        this.editor.select([group.id])\n      }\n    })\n    return this.groupBtn\n  }\n\n  protected createMenuConvert(): HTMLElement\n  {\n    this.convertBtn = document.createElement(\"button\")\n    this.convertBtn.id = `${ this.id }-convert`\n    this.convertBtn.textContent = \"Convert\"\n    this.convertBtn.classList.add(\"ms-menu-button\")\n    this.convertBtn.addEventListener(\"pointerup\", () => this.editor.convertSymbols(this.symbolsSelected))\n    return this.convertBtn\n  }\n\n  protected createMenuRemove(): HTMLButtonElement\n  {\n    this.removeBtn = document.createElement(\"button\")\n    this.removeBtn.id = `${ this.id }-remove`\n    this.removeBtn.textContent = \"Remove\"\n    this.removeBtn.classList.add(\"ms-menu-button\")\n    this.removeBtn.addEventListener(\"pointerup\", async () =>\n    {\n      this.editor.selector.removeSelectedGroup()\n      await this.editor.removeSymbols(this.symbolsSelected.map(s => s.id))\n    })\n    return this.removeBtn\n  }\n\n  protected createMenuReorder(): HTMLElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-reorder`\n    trigger.classList.add(\"ms-menu-button\")\n    const label = document.createElement(\"span\")\n    label.innerText = \"Reorder\"\n    trigger.appendChild(label)\n    const icon = document.createElement(\"span\")\n    icon.style.setProperty(\"width\", \"32px\")\n    icon.style.setProperty(\"transform\", \"rotate(270deg)\")\n    icon.innerHTML = ArrowDown\n    trigger.appendChild(icon)\n\n    const menuItems: TMenuItemButton[] = [\n      {\n        type: \"button\",\n        id: `${ this.id }-reorder-first`,\n        label: \"Bring to front\",\n        callback: () =>\n        {\n          this.editor.changeOrderSymbols(this.symbolsSelected, \"last\")\n          this.editor.selector.resetSelectedGroup(this.symbolsSelected)\n        }\n      },\n      {\n        type: \"button\",\n        id: `${ this.id }-reorder-forward`,\n        label: \"Bring forward\",\n        callback: () =>\n        {\n          this.editor.changeOrderSymbols(this.symbolsSelected, \"forward\")\n          this.editor.selector.resetSelectedGroup(this.symbolsSelected)\n        }\n      },\n      {\n        type: \"button\",\n        id: `${ this.id }-reorder-backward`,\n        label: \"Send backward\",\n        callback: () =>\n        {\n          this.editor.changeOrderSymbols(this.symbolsSelected, \"backward\")\n          this.editor.selector.resetSelectedGroup(this.symbolsSelected)\n        }\n      },\n      {\n        type: \"button\",\n        id: `${ this.id }-reorder-last`,\n        label: \"Send to back\",\n        callback: () =>\n        {\n          this.editor.changeOrderSymbols(this.symbolsSelected.slice().reverse(), \"first\")\n          this.editor.selector.resetSelectedGroup(this.symbolsSelected)\n        }\n      },\n    ]\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      subMenu: subMenuWrapper,\n      position: \"right\"\n    }\n    this.reorderMenu = new IIMenuSub(params).element\n    return this.reorderMenu\n  }\n\n  protected createDecoratorSubMenu(label: string, kind: DecoratorKind): HTMLElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-decorator-${ kind }`\n    trigger.classList.add(\"ms-menu-button\")\n    const labelEL = document.createElement(\"span\")\n    labelEL.innerText = label\n    trigger.appendChild(labelEL)\n    const icon = document.createElement(\"span\")\n    icon.style.setProperty(\"width\", \"32px\")\n    icon.style.setProperty(\"transform\", \"rotate(270deg)\")\n    icon.innerHTML = ArrowDown\n    trigger.appendChild(icon)\n\n    const menuItems: (TMenuItemBoolean | TMenuItemColorList)[] = [\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-decorator-${ kind }-enable`,\n        label: \"Enable\",\n        initValue: false,\n        callback: (enable) =>\n        {\n          this.symbolsDecorable.forEach(s =>\n          {\n            if (enable) {\n              if (!s.decorators.some(d => d.kind === kind)) {\n                s.decorators.push(new IIDecorator(kind, this.editor.penStyle))\n              }\n            }\n            else {\n              const decoIndex = s.decorators.findIndex(d => d.kind === kind)\n              if (decoIndex > -1) {\n                s.decorators.splice(decoIndex, 1)\n              }\n            }\n            this.editor.model.updateSymbol(s)\n            this.editor.renderer.drawSymbol(s)\n          })\n\n          document.querySelectorAll(`#${ this.id }-decorator-${ kind }-color button`).forEach(b =>\n          {\n            (b as HTMLButtonElement).disabled = !enable\n            b.classList.remove(\"active\")\n          })\n          if (enable) {\n            document.querySelector(`#${ this.id }-decorator-${ kind }-color button`)?.classList.add(\"active\")\n          }\n        }\n      },\n      {\n        type: \"colors\",\n        label: \"Colors\",\n        id: `${ this.id }-decorator-${ kind }-color`,\n        fill: false,\n        values: this.colors.filter((_c, i) => !(i % 4)),\n        initValue: this.colors[0],\n        disabled: true,\n        callback: (color) =>\n        {\n          this.symbolsDecorable.forEach(s =>\n          {\n            const deco = s.decorators.find(d => d.kind === kind)\n            if (deco) {\n              deco.style.color = color\n              this.editor.model.updateSymbol(s)\n              this.editor.renderer.drawSymbol(s)\n            }\n          })\n        },\n      }\n    ]\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      subMenu: subMenuWrapper,\n      position: \"right\"\n    }\n    return this.decoratorMenu = new IIMenuSub(params).element\n  }\n\n  protected createMenuDecorator(): HTMLElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-decorator`\n    trigger.classList.add(\"ms-menu-button\")\n    const label = document.createElement(\"span\")\n    label.innerText = \"Decorator\"\n    trigger.appendChild(label)\n    const icon = document.createElement(\"span\")\n    icon.style.setProperty(\"width\", \"32px\")\n    icon.style.setProperty(\"transform\", \"rotate(270deg)\")\n    icon.innerHTML = ArrowDown\n    trigger.appendChild(icon)\n\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n    subMenuWrapper.appendChild(this.createDecoratorSubMenu(\"Hightlight\", DecoratorKind.Highlight))\n    subMenuWrapper.appendChild(this.createDecoratorSubMenu(\"Surround\", DecoratorKind.Surround))\n    subMenuWrapper.appendChild(this.createDecoratorSubMenu(\"Underline\", DecoratorKind.Underline))\n    subMenuWrapper.appendChild(this.createDecoratorSubMenu(\"Strikethrough\", DecoratorKind.Strikethrough))\n\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      subMenu: subMenuWrapper,\n      position: \"right\"\n    }\n    this.decoratorMenu = new IIMenuSub(params).element\n    return this.decoratorMenu\n  }\n\n  protected createMenuExport(): HTMLElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-export`\n    trigger.classList.add(\"ms-menu-button\")\n    const label = document.createElement(\"span\")\n    label.innerText = \"Export\"\n    trigger.appendChild(label)\n    const icon = document.createElement(\"span\")\n    icon.style.setProperty(\"width\", \"32px\")\n    icon.style.setProperty(\"transform\", \"rotate(270deg)\")\n    icon.innerHTML = ArrowDown\n    trigger.appendChild(icon)\n\n    const menuItems: TMenuItemButton[] = [\n      {\n        type: \"button\",\n        id: `${ this.id }-export-json`,\n        label: \"json\",\n        callback: () => this.editor.downloadAsJson(this.haveSymbolsSelected)\n      },\n      {\n        type: \"button\",\n        id: `${ this.id }-export-svg`,\n        label: \"svg\",\n        callback: () => this.editor.downloadAsSVG(this.haveSymbolsSelected)\n      },\n      {\n        type: \"button\",\n        id: `${ this.id }-export-png`,\n        label: \"png\",\n        callback: () => this.editor.downloadAsPNG(this.haveSymbolsSelected)\n      },\n    ]\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      subMenu: subMenuWrapper,\n      position: \"right\"\n    }\n    this.menuExport = new IIMenuSub(params).element\n    return this.menuExport\n  }\n\n  protected createMenuSelectAll(): HTMLElement\n  {\n    const btn = document.createElement(\"button\")\n    btn.id = `${ this.id }-duplicate`\n    btn.textContent = \"Select all\"\n    btn.classList.add(\"ms-menu-button\")\n    btn.addEventListener(\"pointerup\", async () => this.editor.selectAll())\n    return btn\n  }\n\n  protected updateDecoratorSubMenu(): void\n  {\n    if (this.showDecorator) {\n      this.decoratorMenu?.style.removeProperty(\"display\")\n\n      Object.values(DecoratorKind).forEach(kind =>\n      {\n        const checkbox = document.getElementById(`${ this.id }-decorator-${ kind }-enable`) as HTMLInputElement\n        if (checkbox) {\n          document.querySelectorAll(`#${ this.id }-decorator-${ kind }-color button`).forEach(e => e.classList.remove(\"active\"))\n          const decos = this.symbolsDecorable.flatMap(s => s.decorators).filter(d => d.kind === kind)\n\n          if (decos.length && decos.every(d => d.style.color === decos[0].style.color)) {\n            const btnToActivate = document.getElementById(`${ this.id }-decorator-${ kind }-color-${ decos[0].style.color?.replace(\"#\", \"\") }-btn`)\n            btnToActivate?.classList.add(\"active\")\n          }\n\n          if (this.symbolsDecorable.filter(s => s.decorators.some(d => d.kind === kind)).length === this.symbolsDecorable.length) {\n            checkbox.checked = true\n\n            document.querySelectorAll(`#${ this.id }-decorator-${ kind }-color button`).forEach(b =>\n            {\n              (b as HTMLButtonElement).disabled = false\n            })\n            checkbox.indeterminate = false\n          }\n          else if (this.symbolsDecorable.filter(s => !s.decorators.some(d => d.kind === kind)).length === this.symbolsDecorable.length) {\n            checkbox.checked = false\n            document.querySelectorAll(`#${ this.id }-decorator-${ kind }-color button`).forEach(b =>\n            {\n              (b as HTMLButtonElement).disabled = true\n            })\n            checkbox.indeterminate = false\n          }\n          else {\n            checkbox.setAttribute(\"indeterminate\", \"true\")\n            checkbox.indeterminate = true\n            document.querySelectorAll(`#${ this.id }-decorator-${ kind }-color button`).forEach(b =>\n            {\n              (b as HTMLButtonElement).disabled = false\n            })\n          }\n        }\n\n      })\n    }\n    else {\n      this.decoratorMenu?.style.setProperty(\"display\", \"none\")\n    }\n  }\n\n  protected updateGroupMenu(): void\n  {\n    if (this.groupBtn && this.haveSymbolsSelected) {\n      this.groupBtn.style.removeProperty(\"display\")\n      if (this.symbolsSelected.length === 1 && this.symbolsSelected[0].type === SymbolType.Group) {\n        this.groupBtn.textContent = \"UnGroup\"\n      }\n      else {\n        this.groupBtn.textContent = \"Group\"\n      }\n    }\n    else {\n      this.groupBtn?.style.setProperty(\"display\", \"none\")\n    }\n  }\n\n  update(): void\n  {\n    this.wrapper?.style.setProperty(\"left\", `${ this.position.x - this.position.scrollLeft }px`)\n    this.wrapper?.style.setProperty(\"top\", `${ this.position.y - this.position.scrollTop }px`)\n\n    if (this.haveSymbolsSelected) {\n      const textSymbol = this.editor.model.symbolsSelected.find(s => s.type === SymbolType.Text)\n      if (this.editMenu && this.editInput && this.editor.model.symbolsSelected.length === 1 && textSymbol) {\n        this.editMenu.style.removeProperty(\"display\")\n        this.editInput.value = (textSymbol as IIText).label\n      }\n      else {\n        this.editMenu?.style.setProperty(\"display\", \"none\")\n      }\n\n      if (this.editor.extractStrokesFromSymbols(this.symbolsSelected).length) {\n        this.convertBtn?.style.removeProperty(\"display\")\n      }\n      else {\n        this.convertBtn?.style.setProperty(\"display\", \"none\")\n      }\n\n\n      this.reorderMenu?.style.removeProperty(\"display\")\n      this.duplicateBtn?.style.removeProperty(\"display\")\n      this.removeBtn?.style.removeProperty(\"display\")\n      this.menuExport?.style.removeProperty(\"display\")\n    }\n    else {\n      this.editMenu?.style.setProperty(\"display\", \"none\")\n      this.convertBtn?.style.setProperty(\"display\", \"none\")\n      this.reorderMenu?.style.setProperty(\"display\", \"none\")\n      this.duplicateBtn?.style.setProperty(\"display\", \"none\")\n      this.removeBtn?.style.setProperty(\"display\", \"none\")\n      this.menuExport?.style.setProperty(\"display\", \"none\")\n    }\n    this.updateDecoratorSubMenu()\n    this.updateGroupMenu()\n  }\n\n  render(layer: HTMLElement): void\n  {\n    this.wrapper = document.createElement(\"div\")\n    this.wrapper.id = `${ this.id }-wrapper`\n    this.wrapper.classList.add(\"ms-menu\", \"ms-menu-context\")\n    this.wrapper.appendChild(this.createMenuEdit())\n    this.wrapper.appendChild(this.createMenuDecorator())\n    this.wrapper.appendChild(this.createMenuReorder())\n    this.wrapper.appendChild(this.createMenuExport())\n    this.wrapper.appendChild(this.createMenuConvert())\n    this.wrapper.appendChild(this.createMenuGroup())\n    this.wrapper.appendChild(this.createMenuDuplicate())\n    this.wrapper.appendChild(this.createMenuRemove())\n    this.wrapper.appendChild(this.createMenuSelectAll())\n    this.wrapper.style.setProperty(\"display\", \"none\")\n    layer.appendChild(this.wrapper)\n\n    this.editor.layers.rendering.addEventListener(\"scroll\", () =>\n    {\n      this.position.scrollLeft = this.editor.layers.rendering.scrollLeft || 0\n      this.position.scrollTop = this.editor.layers.rendering.scrollTop || 0\n      this.update()\n    })\n  }\n\n  show(): void\n  {\n    this.update()\n    this.wrapper?.style.setProperty(\"display\", \"block\")\n  }\n\n  hide(): void\n  {\n    this.wrapper?.style.setProperty(\"display\", \"none\")\n  }\n\n  destroy(): void\n  {\n    while (this.wrapper?.lastChild) {\n      this.wrapper.removeChild(this.wrapper.lastChild)\n    }\n    this.wrapper?.remove()\n  }\n}\n","\n/**\n * @group Menu\n */\nexport type TMenuConfiguration = {\n  enable: boolean,\n  style: {\n    enable: boolean,\n  }\n  tool: {\n    enable: boolean,\n  }\n  action: {\n    enable: boolean,\n  }\n  context: {\n    enable: boolean,\n  }\n}\n\n/**\n * @group Menu\n * @source\n */\nexport const DefaultMenuConfiguration: TMenuConfiguration = {\n  enable: true,\n  style: {\n    enable: true\n  },\n  tool: {\n    enable: true\n  },\n  action: {\n    enable: true\n  },\n  context: {\n    enable: true\n  },\n}\n","import style from \"./menu.css\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { InteractiveInkEditor } from \"../editor\"\nimport { IIMenuAction } from \"./IIMenuAction\"\nimport { IIMenuTool } from \"./IIMenuTool\"\nimport { IIMenuContext } from \"./IIMenuContext\"\nimport { IIMenuStyle } from \"./IIMenuStyle\"\n\n/**\n * @group Manager\n */\nexport class IIMenuManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.MENU)\n  editor: InteractiveInkEditor\n  layer?: HTMLElement\n  action: IIMenuAction\n  tool: IIMenuTool\n  context: IIMenuContext\n  style: IIMenuStyle\n\n  constructor(editor: InteractiveInkEditor, custom?: { style?: IIMenuStyle, tool?: IIMenuTool, action?: IIMenuAction, context?: IIMenuContext })\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n\n    if (custom?.style) {\n      const CustomMenuStyle = custom.style as unknown as typeof IIMenuStyle\n      this.style = new CustomMenuStyle(this.editor)\n    }\n    else {\n      this.style = new IIMenuStyle(this.editor)\n    }\n    if (custom?.tool) {\n      const CustomMenuTool = custom.tool as unknown as typeof IIMenuTool\n      this.tool = new CustomMenuTool(this.editor)\n    }\n    else {\n      this.tool = new IIMenuTool(this.editor)\n    }\n    if (custom?.action) {\n      const CustomMenuAction = custom.action as unknown as typeof IIMenuAction\n      this.action = new CustomMenuAction(this.editor)\n    }\n    else {\n      this.action = new IIMenuAction(this.editor)\n    }\n    if (custom?.context) {\n      const CustomMenuAction = custom.context as unknown as typeof IIMenuContext\n      this.context = new CustomMenuAction(this.editor)\n    }\n    else {\n      this.context = new IIMenuContext(this.editor)\n    }\n  }\n\n  render(layer: HTMLElement): void\n  {\n    if (this.editor.configuration.menu.enable) {\n      this.layer = layer\n\n      const styleElement = document.createElement(\"style\")\n      styleElement.appendChild(document.createTextNode(style as string))\n      this.layer.prepend(styleElement)\n\n      if (this.editor.configuration.menu.action.enable) {\n        this.action.render(this.layer)\n      }\n      if (this.editor.configuration.menu.style.enable) {\n        this.style.render(this.layer)\n      }\n      if (this.editor.configuration.menu.tool.enable) {\n        this.tool.render(this.layer)\n      }\n      if (this.editor.configuration.menu.context.enable) {\n        this.context.render(this.layer)\n      }\n    }\n  }\n\n  update(): void\n  {\n    this.action.update()\n    this.tool.update()\n    this.style.update()\n  }\n\n  show(): void\n  {\n    this.action.show()\n    this.tool.show()\n    this.style.show()\n  }\n\n  hide(): void\n  {\n    this.action.hide()\n    this.tool.hide()\n    this.style.hide()\n  }\n\n  destroy(): void\n  {\n    this.action.destroy()\n    this.tool.destroy()\n    this.style.destroy()\n  }\n}\n","import { PartialDeep } from \"../utils\"\n\n/**\n * @group Snap\n */\nexport type TSnapConfiguration = {\n  guide: boolean\n  symbol: boolean\n  angle: number\n}\n\n/**\n * @group Snap\n * @source\n */\nexport const DefaultSnapConfiguration: TSnapConfiguration = {\n  guide: true,\n  symbol: true,\n  angle: 0\n}\n\n/**\n * @group Snap\n */\nexport class SnapConfiguration implements TSnapConfiguration\n{\n  guide: boolean\n  symbol: boolean\n  angle: number\n\n  constructor(config? : PartialDeep<TSnapConfiguration>)\n  {\n    this.symbol = config?.symbol !== undefined ? config.symbol : DefaultSnapConfiguration.symbol\n    this.guide = config?.guide !== undefined ? config.guide : DefaultSnapConfiguration.guide\n    this.angle = config?.angle !== undefined ? config.angle : DefaultSnapConfiguration.angle\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport { Box, TPoint, TSegment } from \"../symbol\"\nimport { SVGRenderer } from \"../renderer\"\nimport { SVGRendererConst } from \"../renderer/svg/SVGRendererConst\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { PartialDeep } from \"../utils\"\nimport { SnapConfiguration, TSnapConfiguration } from \"./IISnapConfiguration\"\n\n/**\n * @group Snap\n */\nexport type TSnapNudge = TPoint\n\n/**\n * @group Snap\n */\nexport type TSnapLineInfos = {\n  nudge: TSnapNudge,\n  verticales: TSegment[]\n  horizontales: TSegment[]\n}\n\n/**\n * @group Snap\n */\nexport class IISnapManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.CONVERTER)\n  editor: InteractiveInkEditor\n  configuration: SnapConfiguration\n\n  constructor(editor: InteractiveInkEditor, config?: PartialDeep<TSnapConfiguration>)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n    this.configuration = new SnapConfiguration(config)\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get renderer(): SVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  get selectionSnapPoints(): TPoint[]\n  {\n    return Box.createFromPoints(this.model.symbolsSelected.flatMap(s => s.snapPoints)).snapPoints\n  }\n\n  get otherSnapPoints(): TPoint[]\n  {\n    const selectSymbolIds = this.model.symbolsSelected.map(s => s.id)\n    return this.model.symbols.filter(s => !selectSymbolIds.includes(s.id)).flatMap(s => s.snapPoints)\n  }\n\n  get snapThreshold(): number\n  {\n    return this.editor.configuration.rendering.guides.gap / 2\n  }\n\n  protected getNearestVerticalGuide(x: number): number\n  {\n    if (this.renderer.verticalGuides.length) {\n      return this.renderer.verticalGuides.reduce((prev, curr) =>\n      {\n        return (Math.abs(curr - x) < Math.abs(prev - x) ? curr : prev)\n      })\n    }\n    return x\n  }\n\n  protected getNearestHorizontalGuide(y: number): number\n  {\n    if (this.renderer.horizontalGuides.length) {\n      return this.renderer.horizontalGuides.reduce((prev, curr) =>\n      {\n        return (Math.abs(curr - y) < Math.abs(prev - y) ? curr : prev)\n      })\n    }\n    return y\n  }\n\n  protected getGuidePointToSnap(point: TPoint): TPoint\n  {\n    return {\n      x: this.getNearestVerticalGuide(point.x),\n      y: this.getNearestHorizontalGuide(point.y)\n    }\n  }\n\n  drawSnapToElementLines(lines: TSegment[]): void\n  {\n    const attrs = {\n      role: \"snap-to-element\",\n      fill: \"transparent\",\n      stroke: \"blue\",\n      \"stroke-width\": \"2\",\n      style: SVGRendererConst.noSelection,\n      \"marker-start\": `url(#${ SVGRendererConst.crossMarker })`,\n      \"marker-end\": `url(#${ SVGRendererConst.crossMarker })`\n    }\n    lines.forEach(seg =>\n    {\n      this.renderer.drawLine(seg.p1, seg.p2, attrs)\n    })\n  }\n\n  clearSnapToElementLines(): void\n  {\n    this.renderer.clearElements({ attrs: { role: \"snap-to-element\" } })\n  }\n\n  protected getSnapLinesInfos(sourcePoints: TPoint[], targetPoints: TPoint[]): TSnapLineInfos\n  {\n    const infos: TSnapLineInfos = {\n      nudge: {\n        x: Infinity,\n        y: Infinity\n      },\n      verticales: [],\n      horizontales: [],\n    }\n    if (!sourcePoints.length || !targetPoints.length) return infos\n\n    sourcePoints.forEach(p1 =>\n    {\n      targetPoints.forEach(p2 =>\n      {\n        if (this.snapThreshold > Math.abs(p2.x - p1.x)) {\n          if (Math.abs(infos.nudge.x) > Math.abs(p2.x - p1.x)) {\n            infos.nudge.x = p2.x - p1.x\n            infos.verticales = [{ p1: { ...p1 }, p2 }]\n          }\n          else if (infos.nudge.x === p2.x - p1.x) {\n            infos.verticales.push({ p1: { ...p1 }, p2 })\n          }\n        }\n        if (this.snapThreshold > Math.abs(p2.y - p1.y)) {\n          if (Math.abs(infos.nudge.y) > Math.abs(p2.y - p1.y)) {\n            infos.nudge.y = p2.y - p1.y\n            infos.horizontales = [{ p1: { ...p1 }, p2 }]\n          }\n          else if (infos.nudge.y === p2.y - p1.y) {\n            infos.horizontales.push({ p1: { ...p1 }, p2 })\n          }\n        }\n      })\n    })\n\n    return infos\n  }\n\n  snapResize(point: TPoint, horizontal = true, vertical = true): TPoint\n  {\n    this.clearSnapToElementLines()\n    if (!this.configuration.symbol && !this.configuration.guide) return point\n\n    let localPoint: TPoint = {\n      x: Infinity,\n      y: Infinity\n    }\n    if (this.configuration.guide) {\n      localPoint = this.getGuidePointToSnap(point)\n    }\n    const snapLines: TSegment[] = []\n\n    if (this.configuration.symbol) {\n      const snapLinesInfos = this.getSnapLinesInfos([point], this.otherSnapPoints)\n      if (horizontal && Math.abs(snapLinesInfos.nudge.x) <= Math.abs(point.x - localPoint.x)) {\n        localPoint.x = point.x + snapLinesInfos.nudge.x\n        snapLines.push(...snapLinesInfos.verticales)\n      }\n      if (vertical && Math.abs(snapLinesInfos.nudge.y) <= Math.abs(point.y - localPoint.y)) {\n        localPoint.y = point.y + snapLinesInfos.nudge.y\n        snapLines.push(...snapLinesInfos.horizontales)\n      }\n    }\n\n    if (localPoint.x === Infinity) localPoint.x = point.x\n    if (localPoint.y === Infinity) localPoint.y = point.y\n\n    snapLines.forEach(s => s.p1 = localPoint)\n    this.drawSnapToElementLines(snapLines)\n    return localPoint\n  }\n\n  snapTranslate(tx: number, ty: number): TSnapNudge\n  {\n    this.clearSnapToElementLines()\n    const nudge: TSnapNudge = { x: tx, y: ty }\n    if (!this.configuration.symbol && !this.configuration.guide) return nudge\n\n    const selectionSymbolPoints = this.selectionSnapPoints.map(p => ({ x: p.x + tx, y: p.y + ty }))\n\n    let lastDeltaX = Infinity\n    let lastDeltaY = Infinity\n\n    if (this.configuration.guide) {\n      selectionSymbolPoints.forEach(p =>\n      {\n        const gridPoint = this.getGuidePointToSnap(p)\n        if (lastDeltaX > Math.abs(gridPoint.x - p.x)) {\n          nudge.x = gridPoint.x - p.x + tx\n          lastDeltaX = Math.abs(gridPoint.x - p.x)\n        }\n        if (lastDeltaY > Math.abs(gridPoint.y - p.y)) {\n          nudge.y = gridPoint.y - p.y + ty\n          lastDeltaY = Math.abs(gridPoint.y - p.y)\n        }\n      })\n    }\n\n    const snapLines: TSegment[] = []\n    if (this.configuration.symbol) {\n      const snapLinesInfos = this.getSnapLinesInfos(selectionSymbolPoints, this.otherSnapPoints)\n      if (lastDeltaX >= Math.abs(snapLinesInfos.nudge.x) && snapLinesInfos.verticales.length) {\n        nudge.x = snapLinesInfos.nudge.x + tx\n        snapLines.push(...snapLinesInfos.verticales)\n      }\n      if (lastDeltaY >= Math.abs(snapLinesInfos.nudge.y) && snapLinesInfos.horizontales.length) {\n        nudge.y = snapLinesInfos.nudge.y + ty\n        snapLines.push(...snapLinesInfos.horizontales)\n      }\n    }\n    if (snapLines.length) {\n      snapLines.forEach(l =>\n      {\n        l.p1.x += nudge.x - tx\n        l.p1.y += nudge.y - ty\n      })\n      this.drawSnapToElementLines(snapLines)\n    }\n    return nudge\n  }\n\n  snapRotation(angleDegree: number): number\n  {\n    if (this.configuration.angle > 0) {\n      return this.configuration.angle * Math.round(angleDegree / this.configuration.angle)\n    }\n    return angleDegree\n  }\n}\n","import { mergeDeep, PartialDeep } from \"../utils\"\nimport { DefaultStyle, TStyle } from \"../style\"\nimport { DefaultLoggerConfiguration, TLoggerConfiguration } from \"../logger\"\nimport { DefaultGrabberConfiguration, TGrabberConfiguration } from \"../grabber\"\nimport { DefaultHistoryConfiguration, THistoryConfiguration } from \"../history\"\nimport { DefaultMenuConfiguration, TMenuConfiguration } from \"../menu\"\nimport { DefaultRecognizerWebSocketConfiguration, RecognizerWebSocketConfiguration, TRecognitionWebSocketConfiguration, TRecognizerWebSocketConfiguration, TServerWebsocketConfiguration } from \"../recognizer\"\nimport { DefaultIIRendererConfiguration, TIIRendererConfiguration } from \"../renderer\"\nimport { DefaultGestureConfiguration, TGestureConfiguration } from \"../gesture\"\nimport { TEditorConfiguration } from \"./AbstractEditor\"\nimport { DefaultSnapConfiguration, SnapConfiguration, TSnapConfiguration } from \"../snap\"\n\n/**\n * @group Editor\n */\nexport type TInteractiveInkEditorConfiguration = TEditorConfiguration & TRecognizerWebSocketConfiguration & {\n \"undo-redo\": THistoryConfiguration\n  rendering: TIIRendererConfiguration\n  grabber: TGrabberConfiguration\n  menu: TMenuConfiguration\n  penStyle: TStyle,\n  fontStyle: {\n    size: number | \"auto\"\n    weight: \"bold\" | \"normal\" | \"auto\"\n  }\n  gesture: TGestureConfiguration\n  snap: TSnapConfiguration\n}\n\n/**\n * @group Editor\n * @source\n */\nexport const DefaultInteractiveInkEditorConfiguration: TInteractiveInkEditorConfiguration = {\n  server: DefaultRecognizerWebSocketConfiguration.server,\n  recognition: DefaultRecognizerWebSocketConfiguration.recognition,\n  menu: DefaultMenuConfiguration,\n  rendering: DefaultIIRendererConfiguration,\n  logger: DefaultLoggerConfiguration,\n  grabber: DefaultGrabberConfiguration,\n  \"undo-redo\": DefaultHistoryConfiguration,\n\n  penStyle: DefaultStyle,\n  fontStyle: {\n    size: \"auto\",\n    weight: \"auto\",\n  },\n  gesture: DefaultGestureConfiguration,\n  snap: DefaultSnapConfiguration\n}\n\n/**\n * @group Editor\n */\nexport class InteractiveInkEditorConfiguration implements TInteractiveInkEditorConfiguration\n{\n  grabber: TGrabberConfiguration\n  logger: TLoggerConfiguration\n  server: TServerWebsocketConfiguration\n  recognition: TRecognitionWebSocketConfiguration\n  rendering: TIIRendererConfiguration\n  \"undo-redo\": THistoryConfiguration\n  menu: TMenuConfiguration\n\n  penStyle: TStyle\n  fontStyle: {\n    size: number | \"auto\"\n    weight: \"bold\" | \"normal\" | \"auto\"\n  }\n  gesture: TGestureConfiguration\n  snap: TSnapConfiguration\n\n  constructor(configuration?: PartialDeep<TInteractiveInkEditorConfiguration>)\n  {\n    const { server, recognition } =  new RecognizerWebSocketConfiguration(configuration)\n    this.recognition = recognition\n    this.server = server\n\n    this.grabber = mergeDeep({}, DefaultInteractiveInkEditorConfiguration.grabber, configuration?.grabber)\n    this.logger = mergeDeep({}, DefaultInteractiveInkEditorConfiguration.logger, configuration?.logger)\n    this.rendering = mergeDeep({}, DefaultInteractiveInkEditorConfiguration.rendering, configuration?.rendering)\n    this[\"undo-redo\"] = mergeDeep({}, DefaultInteractiveInkEditorConfiguration[\"undo-redo\"], configuration?.[\"undo-redo\"])\n    this.menu = mergeDeep({}, DefaultInteractiveInkEditorConfiguration.menu, configuration?.menu)\n    this.gesture = mergeDeep({}, DefaultInteractiveInkEditorConfiguration.gesture, configuration?.gesture)\n    this.snap = new SnapConfiguration(configuration?.snap)\n\n    this.penStyle = mergeDeep({}, DefaultInteractiveInkEditorConfiguration.penStyle, configuration?.penStyle)\n    this.fontStyle = mergeDeep({}, DefaultInteractiveInkEditorConfiguration.fontStyle, configuration?.fontStyle)\n  }\n}\n","import { EditorTool, SELECTION_MARGIN } from \"../Constants\"\nimport { JIIXEdgeKind, JIIXELementType, JIIXNodeKind, IIModel, TExport, TJIIXStrokeItem } from \"../model\"\nimport\n{\n  Box,\n  EdgeKind,\n  IIDecorator,\n  TIIEdge,\n  IIEdgeArc,\n  IIEdgeLine,\n  IIEdgePolyLine,\n  TIIShape,\n  IIShapeCircle,\n  IIShapeEllipse,\n  IIShapePolygon,\n  IIStroke,\n  IIRecognizedText,\n  IISymbolGroup,\n  IIText,\n  ShapeKind,\n  SymbolType,\n  TIISymbol,\n  convertPartialStrokesToOIStrokes,\n  TIIRecognized,\n  IIRecognizedLine,\n  IIRecognizedPolyLine,\n  IIRecognizedArc,\n} from \"../symbol\"\nimport { RecognizerWebSocket } from \"../recognizer\"\nimport { SVGRenderer, SVGBuilder, TIIRendererConfiguration } from \"../renderer\"\nimport { TStyle } from \"../style\"\nimport\n{\n  IIConversionManager,\n  IIWriterManager,\n  IISelectionManager,\n  IIResizeManager,\n  IIRotationManager,\n  IITranslateManager,\n  IITextManager,\n  EraseManager,\n  IIDebugSVGManager,\n  IIMoveManager,\n} from \"../manager\"\nimport { RecognizedKind, IIRecognizedCircle, IIRecognizedEllipse, IIRecognizedPolygon } from \"../symbol\"\nimport { IIHistoryManager, TIIHistoryBackendChanges, TIIHistoryChanges, THistoryContext } from \"../history\"\nimport { PartialDeep, convertMillimeterToPixel, mergeDeep } from \"../utils\"\nimport { IIMenuAction, IIMenuManager, IIMenuStyle, IIMenuTool } from \"../menu\"\nimport { AbstractEditor, EditorOptionsBase } from \"./AbstractEditor\"\nimport { InteractiveInkEditorConfiguration, TInteractiveInkEditorConfiguration } from \"./InteractiveInkEditorConfiguration\"\nimport { IIGestureManager } from \"../gesture\"\nimport { IISnapManager } from \"../snap\"\n\n/**\n * @group Editor\n */\nexport type TInteractiveInkEditorOptions = PartialDeep<EditorOptionsBase &\n  {\n    configuration: TInteractiveInkEditorConfiguration\n  }> &\n  {\n    override?: {\n      recognizer?: RecognizerWebSocket\n      menu?: {\n        style?: IIMenuStyle\n        tool?: IIMenuTool\n        action?: IIMenuAction\n      }\n    }\n  }\n/**\n * @group Editor\n */\nexport class InteractiveInkEditor extends AbstractEditor\n{\n  #configuration: InteractiveInkEditorConfiguration\n  #model: IIModel\n  #tool: EditorTool = EditorTool.Write\n  #layerUITimer?: ReturnType<typeof setTimeout>\n  #recognizeStrokeTimer?: ReturnType<typeof setTimeout>\n\n  renderer: SVGRenderer\n  recognizer: RecognizerWebSocket\n\n  #penStyle: TStyle\n\n  history: IIHistoryManager\n  writer: IIWriterManager\n  eraser: EraseManager\n  gesture: IIGestureManager\n  resizer: IIResizeManager\n  rotator: IIRotationManager\n  translator: IITranslateManager\n  converter: IIConversionManager\n  texter: IITextManager\n  selector: IISelectionManager\n  svgDebugger: IIDebugSVGManager\n  snaps: IISnapManager\n  move: IIMoveManager\n  menu: IIMenuManager\n\n  constructor(rootElement: HTMLElement, options?: TInteractiveInkEditorOptions)\n  {\n    super(rootElement, options)\n\n    this.#configuration = new InteractiveInkEditorConfiguration(options?.configuration)\n    this.#penStyle = Object.assign({}, this.#configuration.penStyle)\n\n    if (options?.override?.recognizer) {\n      const CustomRecognizer = options?.override.recognizer as unknown as typeof RecognizerWebSocket\n      this.recognizer = new CustomRecognizer(this.#configuration)\n    }\n    else {\n      this.recognizer = new RecognizerWebSocket(this.#configuration)\n    }\n    this.recognizer.event.addErrorListener(this.manageError.bind(this))\n    this.recognizer.event.addExportedListener(this.event.emitExported.bind(this.event))\n    this.recognizer.event.addContentChangedListener(this.onContentChanged.bind(this))\n    this.recognizer.event.addSessionOpenedListener(this.event.emitSessionOpened.bind(this.event))\n    this.recognizer.event.addEndInitialization(this.layers.hideMessageModal.bind(this.layers))\n    this.recognizer.event.addIdleListener(this.updateLayerState.bind(this))\n\n    this.renderer = new SVGRenderer(this.#configuration.rendering)\n\n    this.history = new IIHistoryManager(this.#configuration[\"undo-redo\"], this.event)\n\n    this.writer = new IIWriterManager(this)\n    this.eraser = new EraseManager(this)\n    this.selector = new IISelectionManager(this)\n    this.move = new IIMoveManager(this)\n\n    this.gesture = new IIGestureManager(this, this.#configuration.gesture)\n    this.resizer = new IIResizeManager(this)\n    this.rotator = new IIRotationManager(this)\n    this.translator = new IITranslateManager(this)\n    this.converter = new IIConversionManager(this)\n    this.texter = new IITextManager(this)\n    this.svgDebugger = new IIDebugSVGManager(this)\n    this.snaps = new IISnapManager(this, this.#configuration.snap)\n    this.menu = new IIMenuManager(this, options?.override?.menu)\n\n    this.#model = new IIModel(this.#configuration.rendering.minWidth, this.#configuration.rendering.minHeight, this.configuration.rendering.guides.gap)\n  }\n\n  get initializationPromise(): Promise<void>\n  {\n    return this.recognizer.initialized.promise\n  }\n\n  //#region Properties\n  get tool(): EditorTool\n  {\n    return this.#tool\n  }\n  set tool(i: EditorTool)\n  {\n    this.#tool = i\n    this.menu.tool.update()\n    this.setCursorStyle()\n    this.unselectAll()\n\n    this.eraser.detach()\n    this.selector.detach()\n    this.move.detach()\n    this.writer.detach()\n    switch (this.#tool) {\n      case EditorTool.Erase:\n        this.eraser.attach(this.layers.rendering)\n        break\n      case EditorTool.Select:\n        this.selector.attach(this.layers.rendering)\n        break\n      case EditorTool.Move:\n        this.move.attach(this.layers.rendering)\n        break\n      default:\n        this.writer.attach(this.layers.rendering)\n        break\n    }\n    this.event.emitToolChanged(i)\n  }\n\n  get model(): IIModel\n  {\n    return this.#model\n  }\n\n  get configuration(): InteractiveInkEditorConfiguration\n  {\n    return this.#configuration\n  }\n  set renderingConfiguration(renderingConfiguration: TIIRendererConfiguration)\n  {\n    this.configuration.rendering = mergeDeep(this.configuration.rendering, renderingConfiguration)\n    const height = Math.max(this.renderer.parent.clientHeight, this.configuration.rendering.minHeight)\n    const width = Math.max(this.renderer.parent.clientWidth, this.configuration.rendering.minWidth)\n    this.renderer.resize(height, width)\n    this.model.rowHeight = this.configuration.rendering.guides.gap\n    this.history.stack.forEach(i => i.model.rowHeight = this.model.rowHeight)\n    this.event.emitUIpdated()\n  }\n  //#endregion\n\n  //#region Style\n  get penStyle(): TStyle\n  {\n    return this.#penStyle\n  }\n  set penStyle(penStyle: PartialDeep<TStyle>)\n  {\n    this.logger.info(\"set penStyle\", { penStyle })\n    this.#penStyle = Object.assign({}, this.#penStyle, penStyle)\n  }\n  //#endregion\n\n  protected updateLayerState(idle: boolean): void\n  {\n    this.event.emitIdle(idle)\n    this.layers.updateState(idle)\n  }\n\n  updateLayerUI(timeout: number = 500): void\n  {\n    clearTimeout(this.#layerUITimer)\n    this.#layerUITimer = setTimeout(() =>\n    {\n      this.menu.update()\n      this.svgDebugger.apply()\n      this.waitForIdle()\n      this.event.emitUIpdated()\n    }, timeout)\n  }\n\n  manageError(error: Error): void\n  {\n    this.layers.showMessageError(error)\n    this.event.emitError(error)\n  }\n\n  protected setCursorStyle(): void\n  {\n    switch (this.#tool) {\n      case EditorTool.Erase:\n        this.layers.root.classList.remove(\"draw\")\n        this.layers.root.classList.add(\"erase\")\n        this.layers.root.classList.remove(\"select\")\n        this.layers.root.classList.remove(\"move\")\n        break\n      case EditorTool.Select:\n        this.layers.root.classList.remove(\"draw\")\n        this.layers.root.classList.remove(\"erase\")\n        this.layers.root.classList.add(\"select\")\n        this.layers.root.classList.remove(\"move\")\n        break\n      case EditorTool.Move:\n        this.layers.root.classList.remove(\"draw\")\n        this.layers.root.classList.remove(\"erase\")\n        this.layers.root.classList.remove(\"select\")\n        this.layers.root.classList.add(\"move\")\n        break\n      default:\n        this.layers.root.classList.add(\"draw\")\n        this.layers.root.classList.remove(\"erase\")\n        this.layers.root.classList.remove(\"select\")\n        this.layers.root.classList.remove(\"move\")\n        break\n    }\n  }\n\n  protected async onContentChanged(undoRedoContext: THistoryContext): Promise<void>\n  {\n    clearTimeout(this.#recognizeStrokeTimer)\n    this.#recognizeStrokeTimer = setTimeout(async () =>\n    {\n      await this.synchronizeStrokesWithJIIX()\n      this.updateLayerUI(0)\n      this.event.emitChanged(undoRedoContext)\n    }, 500)\n  }\n\n  async initialize(): Promise<void>\n  {\n    try {\n      this.logger.info(\"initialize\")\n      this.layers.render()\n      this.layers.showLoader()\n      this.tool = EditorTool.Write\n      this.renderer.init(this.layers.rendering)\n      this.menu.render(this.layers.ui.root)\n\n      const compStyles = window.getComputedStyle(this.layers.root)\n      this.model.width = Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.#configuration.rendering.minWidth)\n      this.model.height = Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.#configuration.rendering.minHeight)\n      this.model.rowHeight = this.configuration.rendering.guides.gap\n      this.history.init(this.model)\n\n      if(!this.recognizer.configuration.server.version) {\n        await this.loadInfo(this.configuration.server)\n        this.recognizer.configuration.server.version = this.info!.version\n      }\n      await this.recognizer.init()\n    } catch (error) {\n      this.logger.error(\"initialize\", error)\n      this.layers.showMessageError(error as Error)\n      throw error\n    }\n    finally {\n      this.logger.debug(\"initialize\", \"finally\")\n      this.layers.hideLoader()\n      this.layers.updateState(true)\n    }\n  }\n\n  async changeLanguage(code: string): Promise<void>\n  {\n    try {\n      this.logger.info(\"changeLanguage\", { code })\n      this.updateLayerState(false)\n      this.configuration.recognition.lang = code\n      await this.recognizer.newSession(this.configuration)\n      this.recognizer.addStrokes(this.extractStrokesFromSymbols(this.model.symbols), false)\n      await this.synchronizeStrokesWithJIIX(true)\n      this.layers.hideLoader()\n      this.event.emitLoaded()\n    }\n    catch (error) {\n      this.logger.error(\"changeLanguage\", error)\n      this.manageError(error as Error)\n      throw error\n    }\n    finally {\n      this.updateLayerUI()\n    }\n  }\n\n  protected buildShape(partialShape: PartialDeep<TIIShape>): TIIShape\n  {\n    switch (partialShape.kind) {\n      case ShapeKind.Circle:\n        return IIShapeCircle.create(partialShape as PartialDeep<IIShapeCircle>)\n      case ShapeKind.Ellipse:\n        return IIShapeEllipse.create(partialShape as PartialDeep<IIShapeEllipse>)\n      case ShapeKind.Polygon:\n        return IIShapePolygon.create(partialShape as PartialDeep<IIShapePolygon>)\n      default:\n        throw new Error(`Unable to create shape, kind: \"${ partialShape.kind }\" is unknown`)\n    }\n  }\n\n  protected buildEdge(partialEdge: PartialDeep<TIIEdge>): TIIEdge\n  {\n    switch (partialEdge.kind) {\n      case EdgeKind.Arc:\n        return IIEdgeArc.create(partialEdge as PartialDeep<IIEdgeArc>)\n      case EdgeKind.Line:\n        return IIEdgeLine.create(partialEdge as PartialDeep<IIEdgeLine>)\n      case EdgeKind.PolyEdge:\n        return IIEdgePolyLine.create(partialEdge as PartialDeep<IIEdgePolyLine>)\n      default:\n        throw new Error(`Unable to create edge, kind: \"${ partialEdge.kind }\" is unknown`)\n    }\n  }\n\n  protected buildRecognized(partialSymbol: PartialDeep<TIIRecognized>): TIIRecognized\n  {\n    switch (partialSymbol.kind) {\n      case RecognizedKind.Text:\n        return IIRecognizedText.create(partialSymbol)\n      case RecognizedKind.Arc:\n        return IIRecognizedArc.create(partialSymbol)\n      case RecognizedKind.Circle:\n        return IIRecognizedCircle.create(partialSymbol)\n      case RecognizedKind.Ellipse:\n        return IIRecognizedEllipse.create(partialSymbol)\n      case RecognizedKind.Polygone:\n        return IIRecognizedPolygon.create(partialSymbol)\n      case RecognizedKind.Line:\n        return IIRecognizedLine.create(partialSymbol)\n      case RecognizedKind.PolyEdge:\n        return IIRecognizedPolyLine.create(partialSymbol)\n      default:\n        throw new Error(`Unable to create recognized, symbol type '${ JSON.stringify(partialSymbol) } is unknow`)\n    }\n  }\n\n  protected buildGroup(partialGroup: PartialDeep<IISymbolGroup>): IISymbolGroup\n  {\n    if (!partialGroup.children?.length) {\n      throw new Error(`Unable to create group, no children`)\n    }\n\n    const children = partialGroup.children.map(partialSymbol =>\n    {\n      switch (partialSymbol?.type) {\n        case SymbolType.Stroke:\n          return IIStroke.create(partialSymbol as PartialDeep<IIStroke>)\n        case SymbolType.Shape:\n          return this.buildShape(partialSymbol as PartialDeep<TIIShape>)\n        case SymbolType.Edge:\n          return this.buildEdge(partialSymbol as PartialDeep<TIIEdge>)\n        case SymbolType.Text:\n          return IIText.create(partialSymbol as PartialDeep<IIText>)\n        case SymbolType.Group:\n          return this.buildGroup(partialSymbol as PartialDeep<IISymbolGroup>)\n        case SymbolType.Recognized:\n          return this.buildRecognized(partialSymbol as PartialDeep<TIIRecognized>)\n        default:\n          throw new Error(`Unable to create group, symbol type '${ JSON.stringify(partialSymbol) } is unknow`)\n      }\n    })\n    const group = new IISymbolGroup(children, partialGroup.style)\n    if (partialGroup.id) {\n      group.id = partialGroup.id\n    }\n    if (partialGroup.decorators) {\n      group.decorators = partialGroup.decorators.map(d => new IIDecorator(d!.kind!, d!.style as TStyle))\n    }\n    return group\n  }\n\n  protected buildStroke(partialSymbol: PartialDeep<IIStroke>): IIStroke\n  {\n    return IIStroke.create(partialSymbol as PartialDeep<IIStroke>)\n  }\n\n  protected buildStrokeText(partialSymbol: PartialDeep<IIRecognizedText>): IIRecognizedText\n  {\n    return IIRecognizedText.create(partialSymbol as PartialDeep<IIRecognizedText>)\n  }\n\n  protected buildText(partialSymbol: PartialDeep<IIText>): IIText\n  {\n    return IIText.create(partialSymbol as PartialDeep<IIText>)\n  }\n\n  protected buildSymbol(partialSymbol: PartialDeep<TIISymbol>): TIISymbol\n  {\n    try {\n      switch (partialSymbol.type) {\n        case SymbolType.Stroke:\n          return this.buildStroke(partialSymbol)\n        case SymbolType.Shape:\n          return this.buildShape(partialSymbol)\n        case SymbolType.Edge:\n          return this.buildEdge(partialSymbol)\n        case SymbolType.Text:\n          return this.buildText(partialSymbol)\n        case SymbolType.Group:\n          return this.buildGroup(partialSymbol)\n        case SymbolType.Recognized:\n          return this.buildRecognized(partialSymbol as PartialDeep<TIIRecognized>)\n        default:\n          throw new Error(`Unable to build symbol, type: \"${ partialSymbol.type }\" is unknown`)\n      }\n    }\n    catch (error) {\n      this.logger.error(\"createSymbol\", error)\n      this.manageError(error as Error)\n      throw error\n    }\n  }\n\n  async createSymbol(partialSymbol: PartialDeep<TIISymbol>): Promise<TIISymbol>\n  {\n    try {\n      return await this.addSymbol(this.buildSymbol(partialSymbol))\n    }\n    catch (error) {\n      this.logger.error(\"createSymbol\", error)\n      this.manageError(error as Error)\n      throw error\n    }\n    finally {\n      this.updateLayerUI()\n    }\n  }\n\n  async createSymbols(partialSymbols: PartialDeep<TIISymbol>[]): Promise<TIISymbol[]>\n  {\n    try {\n      const errors: string[] = []\n      const symbols: TIISymbol[] = []\n      partialSymbols.forEach(partialSymbol =>\n      {\n        try {\n          symbols.push(this.buildSymbol(partialSymbol))\n        } catch (error) {\n          errors.push(((error as Error).message || error) as string)\n        }\n      })\n      if (errors.length) {\n        throw new Error(errors.join(\"\\n\"))\n      }\n      return await this.addSymbols(symbols)\n    } catch (error) {\n      this.logger.error(\"createSymbols\", error)\n      this.manageError(error as Error)\n      throw error\n    }\n  }\n\n  /** @hidden */\n  protected updateTextBounds(symbol: TIISymbol): void\n  {\n    if (symbol.type === SymbolType.Text) {\n      this.texter.updateBounds(symbol)\n    }\n    else if (symbol.type === SymbolType.Group) {\n      symbol.extractText().forEach(t => this.texter.updateBounds(t))\n    }\n  }\n\n  /** @hidden */\n  async addSymbol(sym: TIISymbol, addToHistory = true): Promise<TIISymbol>\n  {\n    this.logger.info(\"addSymbol\", { sym })\n    this.updateLayerState(false)\n    this.updateTextBounds(sym)\n    this.model.addSymbol(sym)\n    this.renderer.drawSymbol(sym)\n\n    const strokes = this.extractStrokesFromSymbols([sym])\n    this.recognizer.addStrokes(strokes, false)\n\n    if (addToHistory) {\n      this.history.push(this.model, { added: [sym] })\n    }\n    this.updateLayerUI()\n    return sym\n  }\n\n  /** @hidden */\n  async addSymbols(symList: TIISymbol[], addToHistory = true): Promise<TIISymbol[]>\n  {\n    this.logger.info(\"addSymbol\", { symList })\n    this.updateLayerState(false)\n    symList.forEach(s =>\n    {\n      this.updateTextBounds(s)\n      this.model.addSymbol(s)\n      this.renderer.drawSymbol(s)\n    })\n    const strokes = this.extractStrokesFromSymbols(symList)\n    this.recognizer.addStrokes(strokes, false)\n    if (addToHistory) {\n      this.history.push(this.model, { added: symList })\n    }\n    this.updateLayerUI()\n    return symList\n  }\n\n  async updateSymbol(sym: TIISymbol, addToHistory = true): Promise<TIISymbol>\n  {\n    this.logger.info(\"updateSymbol\", { sym })\n    this.updateLayerState(false)\n    this.updateTextBounds(sym)\n    this.model.updateSymbol(sym)\n    this.renderer.drawSymbol(sym)\n    const strokes = this.extractStrokesFromSymbols([sym])\n    this.recognizer.replaceStrokes(strokes.map(s => s.id), strokes)\n    if (addToHistory) {\n      this.history.push(this.model, { updated: [sym] })\n    }\n    this.updateLayerUI()\n    return sym\n  }\n\n  async updateSymbols(symList: TIISymbol[], addToHistory = true): Promise<TIISymbol[]>\n  {\n    this.logger.info(\"updateSymbol\", { symList })\n    this.updateLayerState(false)\n    symList.forEach(s =>\n    {\n      this.updateTextBounds(s)\n      this.model.updateSymbol(s)\n      this.renderer.drawSymbol(s)\n    })\n    const strokes = this.extractStrokesFromSymbols(symList)\n    this.recognizer.replaceStrokes(strokes.map(s => s.id), strokes)\n    if (addToHistory) {\n      this.history.push(this.model, { updated: symList })\n    }\n    this.updateLayerUI()\n    return symList\n  }\n\n  updateSymbolsStyle(symbolIds: string[], style: PartialDeep<TStyle>, addToHistory = true): void\n  {\n    this.logger.info(\"updateSymbolsStyle\", { symbolIds, style })\n    const symbols: TIISymbol[] = []\n    this.model.symbols.forEach(s =>\n    {\n      if (symbolIds.includes(s.id)) {\n        s.style = Object.assign({}, s.style, style)\n        if (\n          SymbolType.Text === s.type ||\n          SymbolType.Group === s.type ||\n          SymbolType.Recognized === s.type) {\n          s.updateChildrenStyle()\n        }\n        this.renderer.drawSymbol(s)\n        this.model.updateSymbol(s)\n        s.modificationDate = Date.now()\n        symbols.push(s)\n      }\n    })\n    if (symbols.length) {\n      symbols.forEach(s =>\n      {\n        if (s.type === SymbolType.Text) {\n          const lastWidth = s.bounds.width\n          this.texter.updateBounds(s)\n          const tx = s.bounds.width - lastWidth\n          if (tx !== 0) {\n            this.texter.moveTextAfter(s, tx)\n          }\n        }\n      })\n    }\n    if (addToHistory && symbols.length) {\n      this.history.push(this.model, { style: { symbols, style } })\n    }\n  }\n\n  updateTextFontStyle(textIds: string[], { fontSize, fontWeight }: { fontSize?: number, fontWeight?: \"normal\" | \"bold\" | \"auto\" }): void\n  {\n    this.logger.info(\"updateTextFontStyle\", { textIds, fontSize, fontWeight })\n    const symbols: (IIText | IISymbolGroup)[] = []\n    const translate: { symbols: TIISymbol[], tx: number, ty: number }[] = []\n    this.model.symbols.forEach(s =>\n    {\n      if (textIds.includes(s.id)) {\n        if (s.type === SymbolType.Text) {\n          s.updateChildrenFont({ fontSize, fontWeight: fontWeight === \"auto\" ? undefined : fontWeight })\n          const lastWidth = s.bounds.width\n          this.texter.updateBounds(s)\n          this.renderer.drawSymbol(s)\n          const tx = s.bounds.width - lastWidth\n          if (tx !== 0) {\n            const symbolsTranslated = this.texter.moveTextAfter(s, tx)\n            if (symbolsTranslated?.length) {\n              translate.push({\n                symbols: symbolsTranslated,\n                tx,\n                ty: 0\n              })\n            }\n          }\n          s.modificationDate = Date.now()\n          symbols.push(s)\n        }\n        else if (s.type === SymbolType.Group) {\n          const textChildren = s.extractText()\n          if (textChildren.length) {\n            textChildren.forEach(text =>\n            {\n              text.updateChildrenFont({ fontSize, fontWeight: fontWeight === \"auto\" ? undefined : fontWeight })\n              const lastWidth = s.bounds.width\n              this.texter.updateBounds(text)\n              const tx = s.bounds.width - lastWidth\n              const symbolsTranslated = this.texter.moveTextAfter(text, tx)\n              if (symbolsTranslated?.length) {\n                translate.push({\n                  symbols: symbolsTranslated,\n                  tx,\n                  ty: 0\n                })\n              }\n            })\n            s.modificationDate = Date.now()\n            this.renderer.drawSymbol(s)\n            symbols.push(s)\n          }\n\n        }\n      }\n    })\n    if (symbols.length) {\n      this.history.push(this.model, { style: { symbols, fontSize }, translate })\n    }\n  }\n\n  async replaceSymbols(oldSymbols: TIISymbol[], newSymbols: TIISymbol[], addToHistory = true): Promise<void>\n  {\n    this.logger.info(\"replaceSymbol\", { oldSymbols, newSymbols })\n    this.updateLayerState(false)\n\n    const oldStrokes = this.extractStrokesFromSymbols(oldSymbols)\n    const newStrokes = this.extractStrokesFromSymbols(newSymbols)\n\n    const symToReplace = oldSymbols.shift()\n\n    if (symToReplace) {\n      oldSymbols.forEach(s =>\n      {\n        this.renderer.removeSymbol(s.id)\n        this.model.removeSymbol(s.id)\n      })\n\n      this.model.replaceSymbol(symToReplace.id, newSymbols)\n      this.renderer.replaceSymbol(symToReplace.id, newSymbols)\n\n\n      if (oldStrokes.length && newStrokes.length) {\n        this.recognizer.replaceStrokes(oldStrokes.map(s => s.id), newStrokes)\n      }\n      else if (oldStrokes.length) {\n        this.recognizer.eraseStrokes(oldStrokes.map(s => s.id))\n      }\n      else {\n        this.recognizer.addStrokes(newStrokes, false)\n      }\n\n      if (addToHistory) {\n        this.history.push(this.model, { replaced: { oldSymbols, newSymbols } })\n      }\n      this.updateLayerUI()\n    }\n  }\n\n  changeOrderSymbol(symbol: TIISymbol, position: \"first\" | \"last\" | \"forward\" | \"backward\"): void\n  {\n    this.model.changeOrderSymbol(symbol.id, position)\n    this.renderer.changeOrderSymbol(symbol, position)\n    this.history.push(this.model, { order: { symbols: [symbol], position } })\n  }\n\n  changeOrderSymbols(symbols: TIISymbol[], position: \"first\" | \"last\" | \"forward\" | \"backward\")\n  {\n    symbols.forEach(s =>\n    {\n      this.model.changeOrderSymbol(s.id, position)\n      this.renderer.changeOrderSymbol(s, position)\n    })\n    this.history.push(this.model, { order: { symbols, position } })\n  }\n\n  groupSymbols(symbols: TIISymbol[]): IISymbolGroup\n  {\n    const group = this.buildGroup({ children: symbols })\n    symbols.forEach(s =>\n    {\n      this.model.removeSymbol(s.id)\n      this.renderer.removeSymbol(s.id)\n    })\n    this.model.addSymbol(group)\n    this.history.push(this.model, { group: { symbols } })\n    return group\n  }\n\n  ungroupSymbol(group: IISymbolGroup): TIISymbol[]\n  {\n    group.children.forEach(s => this.renderer.drawSymbol(s))\n    this.renderer.removeSymbol(group.id)\n    this.model.replaceSymbol(group.id, group.children)\n    this.history.push(this.model, { ungroup: { group } })\n    return group.children\n  }\n\n  async synchronizeStrokesWithJIIX(force: boolean = false): Promise<void>\n  {\n    //if there is no stroke, jiix should not have changed\n    const strokes = this.model.symbols.filter(s => s.type === SymbolType.Stroke)\n    if (!force && !strokes.length) {\n      this.event.emitSynchronized()\n      return\n    }\n    await this.export([\"application/vnd.myscript.jiix\"])\n\n    const getSymbolsAndStrokesAssociatedFromJIIXStrokeItems = (items: TJIIXStrokeItem[] = []): { symbols: TIISymbol[], strokes: IIStroke[] } =>\n    {\n      const symbols: TIISymbol[] = []\n      const strokes: IIStroke[] = []\n      const strokeIdsUsed: string[] = []\n      items.forEach(i =>\n      {\n        const strokeId = i[\"full-id\"]!\n        if (strokeIdsUsed.includes(strokeId)) {\n          return\n        }\n        strokeIdsUsed.push(strokeId)\n        const sym = this.model.getRootSymbol(strokeId)\n        if (sym) {\n          switch (sym?.type) {\n            // we do not modify a group created by the user\n            // case SymbolType.Group:\n            //   strokes.push(...sym.extractStrokes())\n            //   break\n            case SymbolType.Recognized:\n              // if it's recognized symbol with same number of strokes\n              // the recognition has been already done\n              // if (sym.strokes.length === items.length) {\n              //   return\n              // }\n              strokes.push(sym.strokes.find(s => s.id === i[\"full-id\"]!)!)\n              break\n            default:\n              strokes.push(sym as IIStroke)\n              break\n          }\n          const symIdx = symbols.findIndex(s => s.id === sym.id)\n          if (symIdx < 0) {\n            symbols.push(sym)\n          }\n          else {\n            symbols[symIdx] = sym\n          }\n        }\n      })\n      return {\n        symbols,\n        strokes\n      }\n    }\n\n    const jiix = this.model.exports?.[\"application/vnd.myscript.jiix\"]\n    jiix?.elements?.forEach(el =>\n    {\n      switch (el.type) {\n        case JIIXELementType.Text: {\n          el.words?.forEach(w =>\n          {\n            const jiixAssociation = getSymbolsAndStrokesAssociatedFromJIIXStrokeItems(w.items)\n            if (jiixAssociation.strokes.length) {\n              if (jiixAssociation.symbols.length === 1) {\n                const symAsso = jiixAssociation.symbols[0]\n                if (\n                  symAsso.type === SymbolType.Recognized && symAsso.kind === RecognizedKind.Text &&\n                  symAsso.label === w.label &&\n                  symAsso.strokes.length === symAsso.strokes.length\n                ) {\n                  return\n                }\n              }\n              const line = el.lines!.find(l => l[\"first-char\"]! <= w[\"first-char\"]! && l[\"last-char\"]! >= w[\"last-char\"]!)!\n              const recognizedText = new IIRecognizedText(jiixAssociation.strokes, { baseline: convertMillimeterToPixel(line[\"baseline-y\"]), xHeight: convertMillimeterToPixel(line[\"x-height\"]) })\n              recognizedText.label = w.label\n              jiixAssociation.symbols.forEach(sym =>\n              {\n                if (sym.type === SymbolType.Recognized && sym.kind === RecognizedKind.Text) {\n                  sym.decorators.forEach(d =>\n                  {\n                    if (!recognizedText.decorators.some(wd => wd.kind === d.kind)) {\n                      recognizedText.decorators.push(d)\n                    }\n                  })\n                }\n                this.model.removeSymbol(sym.id)\n                this.renderer.removeSymbol(sym.id)\n              })\n              this.model.addSymbol(recognizedText)\n              this.renderer.drawSymbol(recognizedText)\n            }\n          })\n          break\n        }\n        case JIIXELementType.Node: {\n          let symbolRecognized: TIIRecognized | undefined\n          const jiixAssociation = getSymbolsAndStrokesAssociatedFromJIIXStrokeItems(el.items)\n          if (jiixAssociation.strokes.length) {\n            if (jiixAssociation.symbols.length === 1) {\n              const symAsso = jiixAssociation.symbols[0]\n              if (symAsso.type === SymbolType.Recognized &&\n                symAsso.strokes.length === jiixAssociation.strokes.length) {\n                return\n              }\n            }\n            switch (el.kind) {\n              case JIIXNodeKind.Circle: {\n                symbolRecognized = new IIRecognizedCircle(jiixAssociation.strokes)\n                break\n              }\n              case JIIXNodeKind.Ellipse: {\n                symbolRecognized = new IIRecognizedEllipse(jiixAssociation.strokes)\n                break\n              }\n              case JIIXNodeKind.Rectangle:\n              case JIIXNodeKind.Triangle:\n              case JIIXNodeKind.Parallelogram:\n              case JIIXNodeKind.Polygon:\n              case JIIXNodeKind.Rhombus: {\n                symbolRecognized = new IIRecognizedPolygon(jiixAssociation.strokes)\n                break\n              }\n              default:\n                this.logger.warn(\"synchronizeStrokesWithJIIX\", `Can not create recognized shape symbol, kind unknow: ${ el }`)\n                break\n            }\n            if (symbolRecognized) {\n              jiixAssociation.symbols.forEach(sym =>\n              {\n                this.model.removeSymbol(sym.id)\n                this.renderer.removeSymbol(sym.id)\n              })\n              this.model.addSymbol(symbolRecognized)\n              this.renderer.drawSymbol(symbolRecognized)\n            }\n          }\n          break\n        }\n        case JIIXELementType.Edge: {\n          let symbolRecognized: TIIRecognized | undefined\n          const jiixAssociation = getSymbolsAndStrokesAssociatedFromJIIXStrokeItems(el.kind === JIIXEdgeKind.PolyEdge ? el.edges.flatMap(e => e.items!) : el.items)\n          if (jiixAssociation.strokes.length) {\n            if (jiixAssociation.symbols.length === 1) {\n              const symAsso = jiixAssociation.symbols[0]\n              if (symAsso.type === SymbolType.Recognized &&\n                symAsso.strokes.length === jiixAssociation.strokes.length) {\n                return\n              }\n            }\n            switch (el.kind) {\n              case JIIXEdgeKind.Line: {\n                symbolRecognized = new IIRecognizedLine(jiixAssociation.strokes)\n                break\n              }\n              case JIIXEdgeKind.PolyEdge: {\n                symbolRecognized = new IIRecognizedPolyLine(jiixAssociation.strokes)\n                break\n              }\n              case JIIXEdgeKind.Arc: {\n                symbolRecognized = new IIRecognizedArc(jiixAssociation.strokes)\n                break\n              }\n              default:\n                this.logger.warn(\"synchronizeStrokesWithJIIX\", `Can not create recognized edge symbol, kind unknow: ${ el }`)\n                break\n            }\n            if (symbolRecognized) {\n              jiixAssociation.symbols.forEach(sym =>\n              {\n                this.model.removeSymbol(sym.id)\n                this.renderer.removeSymbol(sym.id)\n              })\n              this.model.addSymbol(symbolRecognized)\n              this.renderer.drawSymbol(symbolRecognized)\n            }\n          }\n          break\n        }\n        default:\n          this.logger.warn(\"synchronizeStrokesWithJIIX\", `Can not create recognized symbol, type unknow: ${ el }`)\n          break\n      }\n    })\n    // because model.export is emptied when you change symbols\n    this.model.mergeExport({ \"application/vnd.myscript.jiix\": jiix })\n    this.history.update(this.model)\n    this.event.emitSynchronized()\n  }\n\n  async removeSymbol(id: string, addToHistory = true): Promise<void>\n  {\n    this.logger.info(\"removeSymbol\", { id })\n    const symbol = this.model.getRootSymbol(id)\n    if (symbol) {\n      this.updateLayerState(false)\n      if (symbol.type === SymbolType.Group) {\n        const groupStrokeIds = symbol.extractStrokes().map(s => s.id)\n        symbol.removeChilds([id])\n        if (symbol.children.length) {\n          this.model.updateSymbol(symbol)\n          this.renderer.drawSymbol(symbol)\n          if (groupStrokeIds.includes(id)) {\n            this.recognizer.eraseStrokes([id])\n          }\n        }\n        else {\n          this.recognizer.eraseStrokes(groupStrokeIds)\n          this.model.removeSymbol(symbol.id)\n          this.renderer.removeSymbol(symbol.id)\n        }\n      }\n      else {\n        this.recognizer.eraseStrokes([id])\n        this.model.removeSymbol(symbol.id)\n        this.renderer.removeSymbol(symbol.id)\n      }\n      if (addToHistory) {\n        this.history.push(this.model, { erased: [symbol] })\n      }\n      this.updateLayerUI()\n    }\n    else {\n      this.renderer.removeSymbol(id)\n      this.recognizer.eraseStrokes([id])\n    }\n  }\n\n  async removeSymbols(ids: string[], addToHistory = true): Promise<TIISymbol[]>\n  {\n    this.logger.info(\"removeSymbol\", { ids })\n    const symbolsToRemove: TIISymbol[] = []\n    const symbolsToUpdate: TIISymbol[] = []\n    const strokesIds: string[] = []\n    ids.forEach(id =>\n    {\n      const sym = this.model.getRootSymbol(id)\n      if (sym) {\n        /** we remove root element */\n        if (sym.id === id) {\n          symbolsToRemove.push(sym)\n          switch (sym.type) {\n            case SymbolType.Stroke:\n              strokesIds.push(sym.id)\n              break\n            case SymbolType.Recognized:\n              strokesIds.push(...sym.strokes.map(s => s.id))\n              break\n            case SymbolType.Group:\n              strokesIds.push(...sym.extractStrokes().map(s => s.id))\n              break\n          }\n        }\n        else {\n          /** we want to remove child */\n          switch (sym.type) {\n            case SymbolType.Group: {\n              const gr = sym.clone()\n              strokesIds.push(...gr.extractStrokes().map(s => s.id).filter(id => ids.includes(id)))\n              gr.removeChilds(ids)\n              if (gr.children.length) {\n                symbolsToUpdate.push(gr)\n              }\n              else {\n                symbolsToRemove.push(gr)\n              }\n              break\n            }\n            case SymbolType.Recognized: {\n              strokesIds.push(id)\n              const ws = sym.clone()\n              ws.removeStrokes(ids)\n              if (ws.strokes.length) {\n                symbolsToUpdate.push(ws)\n              }\n              else {\n                symbolsToRemove.push(ws)\n              }\n              break\n            }\n          }\n\n        }\n      }\n    })\n    this.recognizer.eraseStrokes(strokesIds)\n    symbolsToRemove.forEach(s =>\n    {\n      this.model.removeSymbol(s.id)\n      this.renderer.removeSymbol(s.id)\n    })\n\n    symbolsToUpdate.forEach(s =>\n    {\n      this.model.updateSymbol(s)\n      this.renderer.drawSymbol(s)\n    })\n\n\n    if (addToHistory) {\n      const changes: TIIHistoryChanges = {}\n      if (symbolsToRemove.length || symbolsToUpdate.length) {\n        if (symbolsToRemove.length) {\n          changes.erased = symbolsToRemove\n        }\n        if (symbolsToUpdate.length) {\n          changes.updated = symbolsToUpdate\n        }\n        this.history.push(this.model, changes)\n        this.updateLayerUI()\n      }\n    }\n    this.updateLayerState(false)\n    return symbolsToRemove\n  }\n\n  select(ids: string[]): void\n  {\n    this.selector.removeSelectedGroup()\n    this.model.symbols.forEach(s =>\n    {\n      s.selected = ids.includes(s.id)\n      this.renderer.drawSymbol(s)\n    })\n    this.selector.drawSelectedGroup(this.model.symbolsSelected)\n    this.updateLayerUI()\n    this.event.emitSelected(this.model.symbolsSelected)\n  }\n\n  selectAll(): void\n  {\n    this.selector.removeSelectedGroup()\n    this.model.symbols.forEach(s =>\n    {\n      s.selected = true\n      this.renderer.drawSymbol(s)\n    })\n    this.selector.drawSelectedGroup(this.model.symbolsSelected)\n    this.updateLayerUI()\n    this.event.emitSelected(this.model.symbolsSelected)\n  }\n\n  unselectAll(): void\n  {\n    if (this.model.symbolsSelected.length) {\n      this.model.symbolsSelected.forEach(s =>\n      {\n        s.selected = false\n        this.renderer.drawSymbol(s)\n      })\n      this.selector.removeSelectedGroup()\n      this.updateLayerUI()\n      this.event.emitSelected(this.model.symbolsSelected)\n    }\n  }\n\n  async importPointEvents(partialStrokes: PartialDeep<IIStroke>[]): Promise<IIModel>\n  {\n    this.logger.info(\"importPointEvents\", { partialStrokes })\n    this.updateLayerState(false)\n    const strokes = convertPartialStrokesToOIStrokes(partialStrokes)\n    strokes.forEach(s =>\n    {\n      this.model.addSymbol(s)\n      this.renderer.drawSymbol(s)\n    })\n    this.recognizer.addStrokes(strokes, false)\n    this.history.push(this.model, { added: strokes })\n    this.logger.debug(\"importPointEvents\", this.model)\n    this.updateLayerUI()\n    this.event.emitImported(this.model.exports as TExport)\n    return this.model\n  }\n\n  protected triggerDownload(fileName: string, urlData: string): void\n  {\n    const downloadAnchorNode = document.createElement(\"a\")\n    downloadAnchorNode.setAttribute(\"href\", urlData)\n    downloadAnchorNode.setAttribute(\"download\", fileName)\n    document.body.appendChild(downloadAnchorNode)\n    downloadAnchorNode.click()\n    downloadAnchorNode.remove()\n  }\n\n  getSymbolsBounds(symbols: TIISymbol[], margin: number = SELECTION_MARGIN): Box\n  {\n    const box = Box.createFromBoxes(symbols.map(s => s.bounds))\n    box.x -= margin\n    box.y -= margin\n    box.width += margin * 2\n    box.height += margin * 2\n    return box\n  }\n\n  protected buildBlobFromSymbols(symbols: TIISymbol[], box: Box): Blob\n  {\n    const svgNode = SVGBuilder.createLayer(box)\n    symbols.forEach(s =>\n    {\n      const el = this.renderer.getElementById(s.id)?.cloneNode(true)\n      if (el) {\n        svgNode.appendChild(el)\n      }\n    })\n\n    const svgString = (new XMLSerializer()).serializeToString(svgNode)\n\n    return new Blob([svgString], {\n      type: \"image/svg+xml;charset=utf-8\"\n    })\n  }\n\n  protected getExportName(extension: string): string\n  {\n    const options: Intl.DateTimeFormatOptions = { year: \"numeric\", month: \"numeric\", day: \"numeric\", hour: \"2-digit\", minute: \"2-digit\", second: \"2-digit\" }\n    try {\n      return `iink-ts-${ new Date().toLocaleDateString(navigator.language, options) }.${ extension }`\n    }\n    catch {\n      return `iink-ts-${ new Date().toLocaleDateString(\"en-US\", options) }.${ extension }`\n    }\n  }\n\n  downloadAsSVG(selection = false)\n  {\n    const symbols = selection ? this.model.symbolsSelected : this.model.symbols\n    const box = this.getSymbolsBounds(symbols)\n    const svgBlob = this.buildBlobFromSymbols(symbols, box)\n    const url = URL.createObjectURL(svgBlob)\n    this.triggerDownload(this.getExportName(\"svg\"), url)\n  }\n\n  downloadAsPNG(selection = false)\n  {\n    const symbols = selection ? this.model.symbolsSelected : this.model.symbols\n    const box = this.getSymbolsBounds(symbols)\n    const svgBlob = this.buildBlobFromSymbols(symbols, box)\n\n    const url = URL.createObjectURL(svgBlob)\n    const image = new Image(box.width, box.height)\n    image.src = url\n    image.onload = () =>\n    {\n      const canvas = document.createElement(\"canvas\")\n      canvas.width = image.width\n      canvas.height = image.height\n\n      const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D\n      ctx.drawImage(image, 0, 0)\n      URL.revokeObjectURL(url)\n\n      const imgURI = canvas\n        .toDataURL(\"image/png\")\n        .replace(\"image/png\", \"image/octet-stream\")\n\n      this.triggerDownload(this.getExportName(\"png\"), imgURI)\n    }\n  }\n\n  downloadAsJson(selection = false)\n  {\n    const symbolsToExport = selection ? this.model.symbolsSelected : this.model.symbols\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(symbolsToExport, null, 2))\n    this.triggerDownload(this.getExportName(\"json\"), dataStr)\n  }\n\n  extractStrokesFromSymbols(symbols: TIISymbol[] | undefined): IIStroke[]\n  {\n    if (!symbols?.length) return []\n    const strokes: IIStroke[] = []\n    symbols.forEach(s =>\n    {\n      switch (s.type) {\n        case SymbolType.Stroke:\n          strokes.push(s)\n          break\n        case SymbolType.Recognized:\n          strokes.push(...s.strokes)\n          break\n        case SymbolType.Group:\n          strokes.push(...s.extractStrokes())\n          break\n      }\n    })\n    return strokes\n  }\n\n  extractTextsFromSymbols(symbols: TIISymbol[] | undefined): IIText[]\n  {\n    if (!symbols?.length) return []\n    const texts: IIText[] = []\n    symbols.forEach(s =>\n    {\n      switch (s.type) {\n        case SymbolType.Text:\n          texts.push(s)\n          break\n        case SymbolType.Group:\n          texts.push(...s.extractText())\n          break\n      }\n    })\n    return texts\n  }\n\n  protected extractBackendChanges(changes: TIIHistoryChanges): TIIHistoryBackendChanges\n  {\n    const backendChanges: TIIHistoryBackendChanges = {}\n    backendChanges.added = this.extractStrokesFromSymbols(changes.added)\n    backendChanges.erased = this.extractStrokesFromSymbols(changes.erased)\n\n    const updated = this.extractStrokesFromSymbols(changes.updated)\n\n    const oldStrokes = updated.concat(this.extractStrokesFromSymbols(changes.replaced?.oldSymbols))\n    const newStrokes = updated.concat(this.extractStrokesFromSymbols(changes.replaced?.newSymbols))\n    if (oldStrokes.length && newStrokes.length) {\n      backendChanges.replaced = {\n        oldStrokes,\n        newStrokes\n      }\n    }\n    else {\n      backendChanges.added.push(...newStrokes)\n      backendChanges.erased.push(...oldStrokes)\n    }\n\n    if (changes.matrix) {\n      backendChanges.matrix = {\n        strokes: this.extractStrokesFromSymbols(changes.matrix.symbols),\n        matrix: changes.matrix.matrix,\n      }\n    }\n\n    if (changes.translate?.length) {\n      backendChanges.translate = []\n      changes.translate.forEach(tr =>\n      {\n        const strokes = this.extractStrokesFromSymbols(tr.symbols)\n        if (strokes.length) {\n          backendChanges.translate!.push({\n            strokes,\n            tx: tr.tx,\n            ty: tr.ty\n          })\n        }\n      })\n    }\n    if (changes.scale?.length) {\n      backendChanges.scale = []\n      changes.scale.forEach(tr =>\n      {\n        const strokes = this.extractStrokesFromSymbols(tr.symbols)\n        if (strokes.length) {\n          backendChanges.scale!.push({\n            strokes,\n            origin: tr.origin,\n            scaleX: tr.scaleX,\n            scaleY: tr.scaleY\n          })\n        }\n      })\n    }\n    if (changes.rotate?.length) {\n      backendChanges.rotate = []\n      changes.rotate.forEach(tr =>\n      {\n        const strokes = this.extractStrokesFromSymbols(tr.symbols)\n        if (strokes.length) {\n          backendChanges.rotate!.push({\n            strokes,\n            center: tr.center,\n            angle: tr.angle\n          })\n        }\n      })\n    }\n    return backendChanges\n  }\n\n  async undo(): Promise<IIModel>\n  {\n    this.logger.info(\"undo\")\n    if (this.history.context.canUndo) {\n      this.updateLayerState(false)\n      this.unselectAll()\n      const previousStackItem = this.history.undo()\n      const modifications = previousStackItem.model.extractDifferenceSymbols(this.model)\n      this.#model = previousStackItem.model.clone()\n      this.logger.debug(\"undo\", { previousStackItem })\n      const actionsToBackend = this.extractBackendChanges(previousStackItem.changes)\n      modifications.removed.forEach(s => this.renderer.removeSymbol(s.id))\n      modifications.added.forEach(s => this.renderer.drawSymbol(s))\n      if (\n        actionsToBackend.added?.length ||\n        actionsToBackend.erased?.length ||\n        actionsToBackend.replaced ||\n        actionsToBackend.matrix ||\n        actionsToBackend.translate?.length ||\n        actionsToBackend.scale?.length ||\n        actionsToBackend.rotate?.length\n      ) {\n        await this.recognizer.undo(actionsToBackend)\n      }\n      this.updateLayerUI()\n    }\n    return this.model\n  }\n\n  async redo(): Promise<IIModel>\n  {\n    this.logger.info(\"redo\")\n\n    if (this.history.context.canRedo) {\n      this.updateLayerState(false)\n      this.unselectAll()\n      const nextStackItem = this.history.redo()\n      const modifications = nextStackItem.model.extractDifferenceSymbols(this.model)\n      this.#model = nextStackItem.model.clone()\n      this.logger.debug(\"redo\", { modifications })\n      const actionsToBackend = this.extractBackendChanges(nextStackItem.changes)\n      modifications.removed.forEach(s => this.renderer.removeSymbol(s.id))\n      modifications.added.forEach(s => this.renderer.drawSymbol(s))\n      if (\n        actionsToBackend.added?.length ||\n        actionsToBackend.erased?.length ||\n        actionsToBackend.replaced ||\n        actionsToBackend.matrix ||\n        actionsToBackend.translate?.length ||\n        actionsToBackend.scale?.length ||\n        actionsToBackend.rotate?.length\n      ) {\n        await this.recognizer.redo(actionsToBackend)\n      }\n\n      this.updateLayerUI()\n    }\n    return this.model\n  }\n\n  async export(mimeTypes?: string[]): Promise<IIModel>\n  {\n    try {\n      this.logger.info(\"export\", { mimeTypes })\n      const exports = await this.recognizer.export(mimeTypes)\n      this.model.mergeExport(exports as TExport)\n    }\n    catch (error) {\n      this.logger.error(\"export\", { error })\n      this.manageError(error as Error)\n      throw error\n    }\n    return this.model\n  }\n\n  async convert(): Promise<void>\n  {\n    await this.convertSymbols()\n  }\n\n  async convertSymbols(symbols?: TIISymbol[]): Promise<void>\n  {\n    try {\n      this.updateLayerState(false)\n      await this.converter.apply(symbols)\n      this.event.emitConverted(this.model.converts as TExport)\n    }\n    catch (error) {\n      this.logger.error(\"convert\", error)\n      this.manageError(error as Error)\n      throw error\n    }\n    finally {\n      this.updateLayerUI()\n    }\n  }\n\n  async waitForIdle(): Promise<void>\n  {\n    return this.recognizer.waitForIdle()\n  }\n\n  async resize({ height, width }: { height?: number, width?: number } = {}): Promise<void>\n  {\n    try {\n      this.logger.info(\"resize\", { height, width })\n      const compStyles = window.getComputedStyle(this.layers.root)\n      height = height || Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.configuration.rendering.minHeight)\n      width = width || Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.configuration.rendering.minWidth)\n\n      this.updateLayerState(false)\n      this.model.height = height\n      this.model.width = width\n      this.renderer.resize(height, width)\n      this.updateLayerUI(50)\n      this.updateLayerState(true)\n    } catch (error) {\n      this.manageError(error as Error)\n    }\n  }\n\n  async clear(): Promise<void>\n  {\n    try {\n      this.logger.info(\"clear\")\n      this.updateLayerState(false)\n      if (this.model.symbols.length) {\n        this.selector.removeSelectedGroup()\n        const erased = this.model.symbols\n        this.renderer.clear()\n        this.model.clear()\n        this.history.push(this.model, { erased })\n        this.recognizer.clear()\n        this.event.emitSelected(this.model.symbolsSelected)\n      }\n      this.updateLayerUI()\n      this.event.emitCleared()\n    } catch (error) {\n      this.manageError(error as Error)\n    }\n  }\n\n  async destroy(): Promise<void>\n  {\n    this.logger.info(\"destroy\")\n    this.eraser.detach()\n    this.selector.detach()\n    this.move.detach()\n    this.writer.detach()\n\n    this.renderer.destroy()\n    this.menu.destroy()\n    this.recognizer.destroy()\n    this.model.clear()\n    this.history.clear()\n    return Promise.resolve()\n  }\n}\n","/**\n * @group Editor\n * @remarks\n * Configure when the action is triggered.\n *\n * POINTER_UP :   Action is triggered on every PenUP.\n *                This is the recommended mode for CDK V3 WebSocket recognitions.\n *\n * QUIET_PERIOD : Action is triggered after a quiet period in milli-seconds on every pointer up.\n *                The value is set to 1000 for example recognition will be triggered when the user stops writing for 1 seconds.\n *                This is the recommended mode for all REST discoveries.\n *\n * DEMAND :       Action is triggered on external demande\n */\nexport type TIEditorTriggerConfiguration = {\n    exportContent: \"QUIET_PERIOD\" | \"POINTER_UP\" | \"DEMAND\"\n    exportContentDelay: number\n    resizeTriggerDelay: number\n  }\n\n  /**\n   * @group Editor\n   * @source\n   */\n  export const DefaultIEditorTriggerConfiguration: TIEditorTriggerConfiguration = {\n    exportContent: \"QUIET_PERIOD\",\n    exportContentDelay: 1000,\n    resizeTriggerDelay: 100\n  }\n","import { DefaultGrabberConfiguration, TGrabberConfiguration } from \"../grabber\"\nimport { DefaultHistoryConfiguration, THistoryConfiguration } from \"../history\"\nimport { DefaultLoggerConfiguration, TLoggerConfiguration } from \"../logger\"\nimport { DefaultRecognizerHTTPV1Configuration, RecognizerHTTPV1Configuration, TRecognitionHTTPV1Configuration, TRecognizerHTTPV1Configuration, TServerHTTPConfiguration } from \"../recognizer\"\nimport { DefaultRendererConfiguration, TRendererConfiguration } from \"../renderer\"\nimport { DefaultTheme, TPenStyle, TTheme } from \"../style\"\nimport { mergeDeep, PartialDeep } from \"../utils\"\nimport { TEditorConfiguration } from \"./AbstractEditor\"\nimport { DefaultIEditorTriggerConfiguration, TIEditorTriggerConfiguration } from \"./IEditorTriggerConfiguration\"\n\n\n/**\n * @group Editor\n */\nexport type TInkEditorDeprecatedConfiguration = TEditorConfiguration & TRecognizerHTTPV1Configuration & {\n  rendering: TRendererConfiguration\n  \"undo-redo\": THistoryConfiguration\n  grabber: TGrabberConfiguration\n  triggers: TIEditorTriggerConfiguration\n  logger: TLoggerConfiguration\n  penStyle: TPenStyle,\n  penStyleClasses?: string\n  theme: TTheme\n}\n\n/**\n * @group Editor\n * @source\n */\nexport const DefaultInkEditorDeprecatedConfiguration: TInkEditorDeprecatedConfiguration = {\n  server: DefaultRecognizerHTTPV1Configuration.server,\n  recognition: DefaultRecognizerHTTPV1Configuration.recognition,\n  rendering: DefaultRendererConfiguration,\n  grabber: DefaultGrabberConfiguration,\n  triggers: DefaultIEditorTriggerConfiguration,\n  \"undo-redo\": DefaultHistoryConfiguration,\n  logger: DefaultLoggerConfiguration,\n  penStyle: {},\n  theme: DefaultTheme\n}\n\n/**\n * @group Editor\n */\nexport class InkEditorDeprecatedConfiguration implements TInkEditorDeprecatedConfiguration\n{\n  server: TServerHTTPConfiguration\n  recognition: TRecognitionHTTPV1Configuration\n  rendering: TRendererConfiguration\n  \"undo-redo\": THistoryConfiguration\n  grabber: TGrabberConfiguration\n  triggers: TIEditorTriggerConfiguration\n  logger: TLoggerConfiguration\n  penStyle: TPenStyle\n  penStyleClasses?: string\n  theme: TTheme\n\n  constructor(configuration?: PartialDeep<TInkEditorDeprecatedConfiguration>)\n  {\n    const { server, recognition } = new RecognizerHTTPV1Configuration(configuration)\n    this.server = server\n    this.recognition = recognition\n    this.rendering = mergeDeep({}, DefaultInkEditorDeprecatedConfiguration.rendering, configuration?.rendering)\n    this.grabber = mergeDeep({}, DefaultInkEditorDeprecatedConfiguration.grabber, configuration?.grabber)\n    this[\"undo-redo\"] = mergeDeep({}, DefaultInkEditorDeprecatedConfiguration[\"undo-redo\"], configuration?.[\"undo-redo\"])\n    this.triggers = mergeDeep({}, DefaultInkEditorDeprecatedConfiguration.triggers, configuration?.triggers)\n    this.logger = mergeDeep({}, DefaultInkEditorDeprecatedConfiguration.logger, configuration?.logger)\n    this.penStyle = mergeDeep({}, DefaultInkEditorDeprecatedConfiguration.penStyle, configuration?.penStyle)\n    this.penStyleClasses = configuration?.penStyleClasses || this.penStyleClasses\n    this.theme = mergeDeep({}, DefaultInkEditorDeprecatedConfiguration.theme, configuration?.theme)\n  }\n}\n","import { EditorTool } from \"../Constants\"\nimport { PointerEventGrabber, PointerInfo } from \"../grabber\"\nimport { Model, TExport } from \"../model\"\nimport { Stroke, TStroke, TPointer } from \"../symbol\"\nimport { RecognizerHTTPV1, TConverstionState } from \"../recognizer\"\nimport { CanvasRenderer } from \"../renderer\"\nimport { DefaultPenStyle, StyleManager, TPenStyle, TTheme } from \"../style\"\nimport { HistoryManager } from \"../history\"\nimport { DeferredPromise, PartialDeep } from \"../utils\"\nimport { AbstractEditor, EditorOptionsBase } from \"./AbstractEditor\"\nimport { InkEditorDeprecatedConfiguration, TInkEditorDeprecatedConfiguration } from \"./InkEditorDeprecatedConfiguration\"\n\n/**\n * @group Editor\n */\nexport type TInkEditorDeprecatedOptions = PartialDeep<EditorOptionsBase &\n{\n  configuration: TInkEditorDeprecatedConfiguration\n}> &\n{\n  override?: {\n    grabber?: PointerEventGrabber\n    recognizer?: RecognizerHTTPV1\n  }\n}\n\n/**\n * @group Editor\n * @deprecated Use {@link InkEditor} instead.\n */\nexport class InkEditorDeprecated extends AbstractEditor\n{\n  #configuration: InkEditorDeprecatedConfiguration\n  #model: Model\n  #resizeTimer?: ReturnType<typeof setTimeout>\n  #exportTimer?: ReturnType<typeof setTimeout>\n\n  grabber: PointerEventGrabber\n  renderer: CanvasRenderer\n  recognizer: RecognizerHTTPV1\n  history: HistoryManager\n  styleManager: StyleManager\n  #tool: EditorTool = EditorTool.Write\n\n  constructor(rootElement: HTMLElement, options?: TInkEditorDeprecatedOptions)\n  {\n    super(rootElement, options)\n\n    this.#configuration = new InkEditorDeprecatedConfiguration(options?.configuration)\n    this.styleManager = new StyleManager(options?.configuration?.penStyle, options?.configuration?.theme)\n\n    if (options?.override?.grabber) {\n      const CustomGrabber = options.override.grabber as unknown as typeof PointerEventGrabber\n      this.grabber = new CustomGrabber(this.#configuration.grabber)\n    }\n    else {\n      this.grabber = new PointerEventGrabber(this.#configuration.grabber)\n    }\n    this.grabber.onPointerDown = this.onPointerDown.bind(this)\n    this.grabber.onPointerMove = this.onPointerMove.bind(this)\n    this.grabber.onPointerUp = this.onPointerUp.bind(this)\n\n    if (options?.override?.recognizer) {\n      const CustomRecognizer = options.override.recognizer as unknown as typeof RecognizerHTTPV1\n      this.recognizer = new CustomRecognizer(this.#configuration)\n    }\n    else {\n      this.recognizer = new RecognizerHTTPV1(this.#configuration)\n    }\n    this.renderer = new CanvasRenderer(this.#configuration.rendering)\n\n    this.tool = EditorTool.Write\n    this.#model = new Model()\n    this.history = new HistoryManager(this.#configuration[\"undo-redo\"], this.event)\n  }\n\n  protected onPointerDown(info: PointerInfo): void\n  {\n    this.logger.info(\"onPointerDown\", { tool: this.tool, info })\n    const style: TPenStyle = Object.assign({}, this.theme?.ink, this.currentPenStyle)\n    switch (this.tool) {\n      case EditorTool.Erase: {\n        if (this.model.removeStrokesFromPoint(info.pointer).length > 0) {\n          this.renderer.drawModel(this.model)\n        }\n        break\n      }\n      case EditorTool.Write:\n        this.model.initCurrentStroke(info.pointer, info.pointerType, style)\n        this.drawCurrentStroke()\n        break\n      default:\n        this.logger.warn(\"#onPointerDown\", `onPointerDown tool unknow: \"${ this.tool }\"`)\n        break\n    }\n  }\n\n  protected onPointerMove(info: PointerInfo): void\n  {\n    this.logger.info(\"onPointerMove\", { tool: this.tool, info })\n    switch (this.tool) {\n      case EditorTool.Erase: {\n        if (this.model.removeStrokesFromPoint(info.pointer).length > 0) {\n          this.renderer.drawModel(this.model)\n        }\n        break\n      }\n      case EditorTool.Write:\n        this.model.appendToCurrentStroke(info.pointer)\n        this.drawCurrentStroke()\n        break\n      default:\n        this.logger.warn(\"#onPointerMove\", `onPointerMove tool unknow: \"${ this.tool }\"`)\n        break\n    }\n  }\n\n  protected async onPointerUp(info: PointerInfo): Promise<void>\n  {\n    try {\n      this.logger.info(\"onPointerUp\", { tool: this.tool, info })\n      switch (this.tool) {\n        case EditorTool.Erase:\n          this.model.removeStrokesFromPoint(info.pointer)\n          if (this.history.stack.at(-1)?.modificationDate !== this.model.modificationDate) {\n            await this.updateModelRendering()\n          }\n          break\n        case EditorTool.Write:\n          this.model.endCurrentStroke(info.pointer)\n          await this.updateModelRendering()\n          break\n        default:\n          this.logger.warn(\"#onPointerUp\", `onPointerUp tool unknow: \"${ this.tool }\"`)\n          break\n      }\n    } catch (error) {\n      this.layers.showMessageError(error as Error)\n      this.event.emitError(error as Error)\n      throw error\n    }\n  }\n\n  get initializationPromise(): Promise<void>\n  {\n    return Promise.resolve()\n  }\n\n  get tool(): EditorTool\n  {\n    return this.#tool\n  }\n  set tool(i: EditorTool)\n  {\n    this.#tool = i\n    this.setCursorStyle()\n  }\n\n  protected setCursorStyle(): void\n  {\n    switch (this.tool) {\n      case EditorTool.Erase:\n        this.layers.root.classList.remove(\"draw\")\n        this.layers.root.classList.add(\"erase\")\n        break\n      default:\n        this.layers.root.classList.add(\"draw\")\n        this.layers.root.classList.remove(\"erase\")\n        break\n    }\n  }\n\n  get model(): Model\n  {\n    return this.#model\n  }\n\n  get currentPenStyle(): TPenStyle\n  {\n    return this.styleManager.currentPenStyle\n  }\n\n  get penStyle(): TPenStyle\n  {\n    return this.styleManager.penStyle\n  }\n  set penStyle(penStyle: TPenStyle | undefined)\n  {\n    this.logger.info(\"setPenStyle\", { penStyle })\n    this.styleManager.setPenStyle(penStyle)\n  }\n\n  get penStyleClasses(): string\n  {\n    return this.styleManager.penStyleClasses\n  }\n  set penStyleClasses(penStyleClasses: string | undefined)\n  {\n    this.logger.info(\"setPenStyleClasses\", { penStyleClasses })\n    this.styleManager.setPenStyleClasses(penStyleClasses)\n  }\n\n  get theme(): TTheme\n  {\n    return this.styleManager.theme\n  }\n  set theme(theme: PartialDeep<TTheme>)\n  {\n    this.logger.info(\"setTheme\", { theme })\n    this.styleManager.setTheme(theme)\n  }\n\n  get configuration(): InkEditorDeprecatedConfiguration\n  {\n    return this.#configuration\n  }\n\n  async initialize(): Promise<void>\n  {\n    try {\n      this.logger.info(\"initialize\")\n      this.layers.render()\n      this.layers.showLoader()\n\n      const compStyles = window.getComputedStyle(this.layers.root)\n      this.model.width = Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.#configuration.rendering.minWidth)\n      this.model.height = Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.#configuration.rendering.minHeight)\n      this.history.push(this.model)\n      this.layers.rendering.classList.add(this.configuration.recognition.type.toLowerCase().replace(\" \", \"-\"))\n      this.renderer.init(this.layers.rendering, { x: 50, y: 50 })\n      this.grabber.attach(this.layers.rendering)\n    } catch (error) {\n      this.logger.error(\"initialize\", error)\n      this.layers.showMessageError(error as Error)\n      throw error\n    }\n    finally {\n      this.logger.debug(\"initialize\", \"finally\")\n      this.layers.hideLoader()\n      this.layers.updateState(true)\n    }\n  }\n\n  drawCurrentStroke(): void\n  {\n    this.logger.debug(\"drawCurrentStroke\", { stroke: this.model.currentSymbol })\n    this.renderer.drawPendingStroke(this.model.currentSymbol)\n  }\n\n  async updateModelRendering(): Promise<Model>\n  {\n    this.logger.info(\"updateModelRendering\")\n    this.renderer.drawModel(this.model)\n    const deferred = new DeferredPromise<Model>()\n    this.history.push(this.model)\n    if (this.#configuration.triggers.exportContent !== \"DEMAND\") {\n      clearTimeout(this.#exportTimer)\n      let currentModel = this.model.clone()\n      this.#exportTimer = setTimeout(async () =>\n      {\n        try {\n          currentModel = await this.recognizer.export(currentModel)\n          this.history.updateStack(currentModel)\n          if (this.model.modificationDate === currentModel.modificationDate) {\n            this.model.exports = currentModel.exports\n          }\n          deferred.resolve(this.model)\n        } catch (error) {\n          this.logger.error(\"updateModelRendering\", { error })\n          this.event.emitError(error as Error)\n          deferred.reject(error as Error)\n        }\n      }, this.#configuration.triggers.exportContent === \"QUIET_PERIOD\" ? this.#configuration.triggers.exportContentDelay : 0)\n    } else {\n      deferred.resolve(this.model)\n    }\n    await deferred.promise\n    this.event.emitExported(this.model.exports as TExport)\n    this.logger.debug(\"updateModelRendering\", this.model.exports)\n    return deferred.promise\n  }\n\n  async export(mimeTypes?: string[]): Promise<Model>\n  {\n    this.logger.info(\"export\", { mimeTypes })\n    const newModel = await this.recognizer.export(this.model.clone(), mimeTypes)\n    if (this.model.modificationDate === newModel.modificationDate) {\n      this.model.mergeExport(newModel.exports as TExport)\n    }\n    this.history.updateStack(newModel)\n    this.event.emitExported(this.model.exports as TExport)\n    this.logger.debug(\"export\", this.model)\n    return this.model\n  }\n\n  async convert(params?: { conversionState?: TConverstionState, mimeTypes?: string[] }): Promise<Model>\n  {\n    this.logger.info(\"convert\", { params })\n    const newModel = await this.recognizer.convert(this.model, params?.conversionState, params?.mimeTypes)\n    Object.assign(this.#model, newModel)\n    this.event.emitConverted(this.model.converts as TExport)\n    this.logger.debug(\"convert\", this.model)\n    return this.model\n  }\n\n  async importPointEvents(strokes: PartialDeep<TStroke>[]): Promise<Model>\n  {\n    const errors: string[] = []\n    strokes.forEach((s, strokeIndex) =>\n    {\n      let flag = true\n      const stroke = new Stroke(s.style || DefaultPenStyle, s.pointerType)\n      if (s.id) stroke.id = s.id\n      if (!s.pointers?.length) {\n        errors.push(`stroke ${ strokeIndex + 1 } has not pointers`)\n        flag = false\n        return\n      }\n      s.pointers?.forEach((pp, pIndex) =>\n      {\n        if (!pp) {\n          errors.push(`stroke ${ strokeIndex + 1 } has no pointer at ${ pIndex }`)\n          flag = false\n          return\n        }\n        const pointer: TPointer = {\n          p: pp.p || 1,\n          t: pp.t || pIndex,\n          x: 0,\n          y: 0\n        }\n        if (pp?.x == undefined || pp?.x == null) {\n          errors.push(`stroke ${ strokeIndex + 1 } has no x at pointer at ${ pIndex }`)\n          flag = false\n          return\n        }\n        else {\n          pointer.x = pp.x\n        }\n        if (pp?.y == undefined || pp?.y == null) {\n          errors.push(`stroke ${ strokeIndex + 1 } has no y at pointer at ${ pIndex }`)\n          flag = false\n          return\n        }\n        else {\n          pointer.y = pp.y\n        }\n        if (flag) {\n          stroke.pointers.push(pointer)\n        }\n      })\n      if (flag) {\n        this.model.addStroke(stroke)\n      }\n    })\n\n    if (errors.length) {\n      this.event.emitError(new Error(errors.join(\"\\n\")))\n    }\n    try {\n      const newModel = await this.updateModelRendering()\n      Object.assign(this.#model, newModel)\n      this.event.emitImported(this.model.exports as TExport)\n      return this.model\n    } catch (error) {\n      this.event.emitError(error as Error)\n      throw error as Error\n    }\n  }\n  async resize({ height, width }: { height?: number, width?: number } = {}): Promise<void>\n  {\n    this.logger.info(\"resize\", { height, width })\n    const deferredResize = new DeferredPromise<Model>()\n    const compStyles = window.getComputedStyle(this.layers.root)\n    this.model.height = height || Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.configuration.rendering.minHeight)\n    this.model.width = width || Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.configuration.rendering.minWidth)\n    this.renderer.resize(this.model)\n    if (this.model.symbols.length) {\n      clearTimeout(this.#resizeTimer)\n      this.#resizeTimer = setTimeout(async () =>\n      {\n        const resizeModel = await this.recognizer.resize(this.model)\n        deferredResize.resolve(resizeModel)\n      }, this.#configuration.triggers.resizeTriggerDelay)\n    } else {\n      deferredResize.resolve(this.model)\n    }\n    this.#model = await deferredResize.promise\n    this.logger.debug(\"resize\", { model: this.model })\n    this.event.emitExported(this.model.exports as TExport)\n  }\n\n  async undo(): Promise<void>\n  {\n    this.logger.info(\"undo\")\n    this.#model = this.history.undo() as Model\n    this.renderer.drawModel(this.#model)\n    this.#model = await this.recognizer.export(this.#model)\n    this.history.updateStack(this.#model)\n    this.event.emitExported(this.#model.exports as TExport)\n    this.logger.debug(\"undo\", this.#model)\n  }\n\n  async redo(): Promise<void>\n  {\n    this.logger.info(\"redo\")\n    this.#model = this.history.redo() as Model\n    this.renderer.drawModel(this.#model)\n    this.#model = await this.recognizer.export(this.#model)\n    this.history.updateStack(this.#model)\n    this.event.emitExported(this.#model.exports as TExport)\n    this.logger.debug(\"redo\", this.#model)\n  }\n\n  async clear(): Promise<void>\n  {\n    this.logger.info(\"clear\")\n    this.model.clear()\n    this.history.push(this.model)\n    this.renderer.drawModel(this.model)\n    this.event.emitExported(this.model.exports as TExport)\n    this.event.emitCleared()\n    this.logger.debug(\"clear\", this.model)\n  }\n\n  async destroy(): Promise<void>\n  {\n    this.logger.info(\"destroy\")\n    this.event.removeAllListeners()\n    this.grabber.detach()\n    this.layers.destroy()\n    this.renderer.destroy()\n    return Promise.resolve()\n  }\n}\n","import style from \"./InteractiveInkSSRSmartGuide.css\"\nimport { InteractiveInkSSREditor } from \"../editor\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { ExportType, TJIIXExport, TJIIXWord } from \"../model\"\nimport { convertMillimeterToPixel, createUUID } from \"../utils\"\nimport { TMarginConfiguration } from \"../recognizer\"\n\n/**\n * @group InteractiveInkSSRSmartGuide\n */\nexport class InteractiveInkSSRSmartGuide\n{\n  uuid: string\n  #smartGuideElement!: HTMLDivElement\n  #wrapperElement!: HTMLDivElement\n  #prompterContainerElement!: HTMLDivElement\n  #prompterTextElement!: HTMLDivElement\n  #ellipsisElement!: HTMLDivElement\n  #tagElement!: HTMLDivElement\n  #candidatesElement!: HTMLDivElement\n  #menuElement!: HTMLDivElement\n  #convertElement!: HTMLButtonElement\n  #copyElement!: HTMLButtonElement\n  #deleteElement!: HTMLButtonElement\n  #isMenuOpen!: boolean\n  editor: InteractiveInkSSREditor\n  margin: TMarginConfiguration\n  jiix?: TJIIXExport\n  lastWord?: TJIIXWord\n  wordToChange?: TJIIXWord\n  #logger = LoggerManager.getLogger(LoggerCategory.SMARTGUIDE)\n\n  constructor(editor: InteractiveInkSSREditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.uuid = createUUID()\n    this.editor = editor\n    this.margin = {\n      bottom: 0,\n      left: 0,\n      right: 0,\n      top: 0\n    }\n    this.#createRootElement()\n    this.#createWrapperElement()\n    this.#createPrompterContainerElement()\n    this.#createPrompterTextElement()\n    this.#createEllipsisElement()\n    this.#createTagElement()\n    this.#createCandidatesElement()\n    this.#createMoreMenuElement()\n    this.#createConvertElement()\n    this.#createCopyElement()\n    this.#createDeleteElement()\n  }\n\n  #createRootElement(): void\n  {\n    this.#smartGuideElement = document.createElement(\"div\")\n    this.#smartGuideElement.id = `smartguide-${ this.uuid }`\n    this.#smartGuideElement.classList.add(\"smartguide\")\n    this.#smartGuideElement.addEventListener(\"pointerdown\", e => {\n      e.preventDefault()\n      e.stopPropagation()\n    })\n  }\n\n  #createWrapperElement(): void\n  {\n    this.#wrapperElement = document.createElement(\"div\")\n    this.#wrapperElement.id = `smartguide-wrapper-${ this.uuid }`\n    this.#wrapperElement.classList.add(\"smartguide-wrapper\")\n  }\n\n  #createPrompterContainerElement(): void\n  {\n    this.#prompterContainerElement = document.createElement(\"div\")\n    this.#prompterContainerElement.id = `prompter-container-${ this.uuid }`\n    this.#prompterContainerElement.classList.add(\"prompter-container\")\n  }\n\n  #createPrompterTextElement(): void\n  {\n    this.#prompterTextElement = document.createElement(\"div\")\n    this.#prompterTextElement.id = `prompter-text-${ this.uuid }`\n    this.#prompterTextElement.classList.add(\"prompter-text\")\n    this.#prompterTextElement.setAttribute(\"touch-action\", \"none\")\n  }\n\n  #createEllipsisElement(): void\n  {\n    this.#ellipsisElement = document.createElement(\"div\")\n    this.#ellipsisElement.id = `ellipsis-${ this.uuid }`\n    this.#ellipsisElement.classList.add(\"ellipsis\")\n    this.#ellipsisElement.innerHTML = \"...\"\n  }\n\n  #createTagElement(): void\n  {\n    this.#tagElement = document.createElement(\"div\")\n    this.#tagElement.id = `tag-icon-${ this.uuid }`\n    this.#tagElement.classList.add(\"tag-icon\")\n    this.#tagElement.innerHTML = \"&#182;\"\n  }\n\n  #createCandidatesElement(): void\n  {\n    this.#candidatesElement = document.createElement(\"div\")\n    this.#candidatesElement.id = `candidates-${ this.uuid }`\n    this.#candidatesElement.classList.add(\"candidates\")\n  }\n\n  #createMoreMenuElement(): void\n  {\n    this.#menuElement = document.createElement(\"div\")\n    this.#menuElement.id = `more-menu-${ this.uuid }`\n    this.#menuElement.classList.add(\"more-menu\")\n  }\n\n  #createConvertElement(): void\n  {\n    this.#convertElement = document.createElement(\"button\")\n    this.#convertElement.id = `convert-${ this.uuid }`\n    this.#convertElement.classList.add(\"options-label-button\")\n    this.#convertElement.innerHTML = \"Convert\"\n  }\n\n  #createCopyElement(): void\n  {\n    this.#copyElement = document.createElement(\"button\")\n    this.#copyElement.id = `copy-${ this.uuid }`\n    this.#copyElement.classList.add(\"options-label-button\")\n    this.#copyElement.innerHTML = \"Copy\"\n  }\n\n  #createDeleteElement(): void\n  {\n    this.#deleteElement = document.createElement(\"button\")\n    this.#deleteElement.id = `delete-${ this.uuid }`\n    this.#deleteElement.classList.add(\"options-label-button\")\n    this.#deleteElement.innerHTML = \"Delete\"\n  }\n\n  init(domElement: HTMLElement, margin: TMarginConfiguration): void\n  {\n    this.#logger.info(\"init\", { domElement, margin })\n\n    const styleElement = document.createElement(\"style\")\n    styleElement.appendChild(document.createTextNode(style as string))\n    domElement.appendChild(styleElement)\n\n\n    domElement.appendChild(this.#smartGuideElement)\n    this.#smartGuideElement.appendChild(this.#wrapperElement)\n\n    this.#wrapperElement.appendChild(this.#tagElement)\n\n    this.#prompterContainerElement.appendChild(this.#prompterTextElement)\n    this.#wrapperElement.appendChild(this.#prompterContainerElement)\n\n    this.#wrapperElement.appendChild(this.#ellipsisElement)\n\n    this.#menuElement.appendChild(this.#convertElement)\n    this.#menuElement.appendChild(this.#copyElement)\n    this.#menuElement.appendChild(this.#deleteElement)\n    this.#menuElement.classList.add(\"close\")\n    this.#wrapperElement.appendChild(this.#menuElement)\n    this.#isMenuOpen = false\n\n    this.#candidatesElement.style.display = \"none\"\n    this.#wrapperElement.appendChild(this.#candidatesElement)\n    this.margin = margin\n    this.#addListeners()\n\n    this.resize()\n  }\n\n  #showCandidates = (target: HTMLElement) =>\n  {\n    this.#logger.info(\"showCandidates\", { target })\n    const wordId = parseInt(target.id.replace(\"word-\", \"\").replace(this.uuid, \"\"))\n    const words = this.jiix?.words as TJIIXWord[]\n    this.wordToChange = words[wordId]\n    if (this.wordToChange) {\n      this.wordToChange.id = wordId.toString()\n      this.#candidatesElement.innerHTML = \"\"\n      if (this.wordToChange?.candidates) {\n        this.#candidatesElement.style.display = \"flex\"\n        this.wordToChange.candidates.forEach((word, index) =>\n        {\n          if (this.wordToChange?.label === word) {\n            this.#candidatesElement.innerHTML += `<span id=\"cdt-${ index }${ this.uuid }\" class=\"selected-word\">${ word }</span>`\n          } else {\n            this.#candidatesElement.innerHTML += `<span id=\"cdt-${ index }${ this.uuid }\">${ word }</span>`\n          }\n        })\n\n        target.appendChild(this.#candidatesElement)\n      }\n    }\n  }\n  #hideCandidates(): void\n  {\n    this.#candidatesElement.style.display = \"none\"\n  }\n\n  #openMenu(): void\n  {\n    this.#menuElement.classList.add(\"open\")\n    this.#menuElement.classList.remove(\"close\")\n    this.#isMenuOpen = true\n  }\n  #closeMenu(): void\n  {\n    this.#menuElement.classList.add(\"close\")\n    this.#menuElement.classList.remove(\"open\")\n    this.#isMenuOpen = false\n  }\n\n  #onClickEllipsis = (evt: Event) =>\n  {\n    this.#logger.info(\"onClickEllipsis\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    this.#isMenuOpen ? this.#closeMenu() : this.#openMenu()\n    this.#hideCandidates()\n  }\n\n  #onClickConvert = (evt: Event) =>\n  {\n    this.#logger.info(\"onClickConvert\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    this.editor.convert()\n    this.#closeMenu()\n  }\n\n  #createTextAreaElement(value: string): HTMLTextAreaElement\n  {\n    const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\"\n    const textArea = document.createElement(\"textarea\")\n    textArea.style.fontSize = \"12pt\"\n    textArea.style.display = \"absolute\"\n    textArea.style[isRTL ? \"right\" : \"left\"] = \"-9999px\"\n    const yPosition = window.pageYOffset || document.documentElement.scrollTop\n    textArea.style.top = `${ yPosition }px`\n    textArea.setAttribute(\"readonly\", \"\")\n    textArea.value = value\n    return textArea\n  }\n\n  #selectText(textArea: HTMLTextAreaElement)\n  {\n    if (navigator.userAgent.match(/ipad|iphone/i)) {\n      const range = document.createRange()\n      range.selectNodeContents(textArea)\n      const selection = window.getSelection()\n      if (selection) {\n        selection.removeAllRanges()\n        selection.addRange(range)\n        textArea.setSelectionRange(0, 999999)\n      }\n    } else {\n      textArea.select()\n    }\n  }\n\n  #onClickCopy = async (evt: Event): Promise<void> =>\n  {\n    this.#logger.info(\"onClickCopy\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    try {\n      this.#closeMenu()\n      let message = \"Nothing to copy\"\n      if (this.#prompterTextElement.innerText) {\n        message = `\"${ this.#prompterTextElement.innerText }\" copied to clipboard`\n        const fakeEl = this.#createTextAreaElement(this.#prompterTextElement.innerText)\n        this.#prompterContainerElement.appendChild(fakeEl)\n        this.#selectText(fakeEl)\n        document.execCommand(\"copy\")\n        fakeEl.remove()\n      }\n      this.editor.event.emitNotif({ message, timeout: 1500 })\n    } catch (error) {\n      this.#logger.error(\"onClickCopy\", error)\n      this.editor.event.emitError(error as Error)\n    }\n  }\n\n  #onClickDelete = (evt: Event) =>\n  {\n    this.#logger.info(\"onClickDelete\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    this.editor.clear()\n    this.#closeMenu()\n  }\n\n  #onClickCandidate = (evt: Event) =>\n  {\n    this.#logger.info(\"onClickCandidate\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    const target = evt.target as HTMLElement\n    const candidate = target.innerText\n    if (this.jiix?.words && candidate !== this.wordToChange?.label && this.wordToChange?.candidates?.includes(candidate)) {\n      this.jiix.words[parseInt(this.wordToChange?.id as string)].label = candidate\n      this.editor.import(new Blob([JSON.stringify(this.jiix)], { type: ExportType.JIIX }), ExportType.JIIX)\n    }\n    this.#candidatesElement.style.display = \"none\"\n  }\n\n  #onClickPrompter = (evt: Event): void =>\n  {\n    this.#logger.info(\"onClickPrompter\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    this.#closeMenu()\n    const target = evt.target as HTMLElement\n    if (target.id !== this.#prompterTextElement.id) {\n      this.#showCandidates(target)\n    } else {\n      this.#hideCandidates()\n    }\n  }\n\n  #stopPropagation = (evt: Event) =>\n  {\n    evt.preventDefault()\n    evt.stopPropagation()\n  }\n\n  #onClickOutSide = () =>\n  {\n    this.#hideCandidates()\n    this.#closeMenu()\n  }\n\n  #addListeners(): void\n  {\n    this.#smartGuideElement.addEventListener(\"pointerdown\", this.#stopPropagation.bind(this))\n    this.#ellipsisElement.addEventListener(\"pointerdown\", this.#onClickEllipsis.bind(this))\n    this.#convertElement.addEventListener(\"pointerdown\", this.#onClickConvert.bind(this))\n    this.#copyElement.addEventListener(\"pointerdown\", this.#onClickCopy.bind(this))\n    this.#deleteElement.addEventListener(\"pointerdown\", this.#onClickDelete.bind(this))\n    this.#prompterTextElement.addEventListener(\"pointerdown\", this.#onClickPrompter.bind(this))\n    this.#candidatesElement.addEventListener(\"pointerdown\", this.#onClickCandidate.bind(this))\n    document.addEventListener(\"pointerdown\", this.#onClickOutSide.bind(this))\n  }\n\n  #removeListeners(): void\n  {\n    this.#smartGuideElement.addEventListener(\"pointerdown\", this.#stopPropagation)\n    this.#ellipsisElement.removeEventListener(\"pointerdown\", this.#onClickEllipsis)\n    this.#convertElement.removeEventListener(\"pointerdown\", this.#onClickConvert)\n    this.#copyElement.removeEventListener(\"pointerdown\", this.#onClickCopy)\n    this.#deleteElement.removeEventListener(\"pointerdown\", this.#onClickDelete)\n    this.#prompterTextElement.removeEventListener(\"pointerdown\", this.#onClickPrompter)\n    this.#candidatesElement.removeEventListener(\"pointerdown\", this.#onClickCandidate)\n    document.removeEventListener(\"pointerdown\", this.#onClickOutSide)\n  }\n\n  resize(): void\n  {\n    this.#logger.info(\"resize\")\n    const marginLeft = convertMillimeterToPixel(this.margin.left)\n    const marginRight = convertMillimeterToPixel(this.margin.right)\n    this.#wrapperElement.style.marginLeft = `${ marginLeft }px`\n    this.#wrapperElement.style.marginRight = `${ marginRight }px`\n  }\n\n  update(exports: TJIIXExport): void\n  {\n    this.#logger.info(\"update\", { exports })\n    this.jiix = exports\n    const createWordSpan = (index: number, word?: TJIIXWord) =>\n    {\n      const span = document.createElement(\"span\")\n      span.id = `word-${ index }${ this.uuid }`\n      if (word) {\n        span.textContent = word.label\n      } else {\n        span.innerHTML = \"&nbsp;\"\n      }\n      this.#logger.debug(\"update\", { span })\n      return span\n    }\n\n    const populatePrompter = () =>\n    {\n      this.#logger.info(\"populatePrompter\")\n      this.#prompterTextElement.innerHTML = \"\"\n      if (this.jiix?.words) {\n        const words = this.jiix.words as TJIIXWord[]\n        const myFragment = document.createDocumentFragment()\n        words.forEach((word, index) =>\n        {\n          if (word.label === \" \" || word.label.includes(\"\\n\")) {\n            myFragment.appendChild(createWordSpan(index))\n          } else if (index !== words.length - 1) {\n            myFragment.appendChild(createWordSpan(index, word))\n          } else {\n            this.#prompterTextElement.appendChild(myFragment)\n            if (this.lastWord) {\n              this.lastWord = word\n            }\n            const span = createWordSpan(index, word)\n            // This is used to scroll to last word if last word is modified\n\n            if ((this.lastWord?.candidates !== word.candidates) && (this.lastWord?.label !== word.label)) {\n              this.lastWord = word\n            }\n            if (this.wordToChange?.id === index.toString()) {\n              span.classList.add(\"modified-word\")\n              this.wordToChange = undefined\n            }\n            else {\n              span.classList.add(\"added-word\")\n            }\n            this.#prompterTextElement.appendChild(span)\n            this.#prompterContainerElement.scrollLeft = span.offsetLeft\n            this.#logger.debug(\"update => populatePrompter\", { span, lastWord: this.lastWord })\n          }\n        })\n      }\n    }\n    populatePrompter()\n    if (this.jiix?.words?.length) {\n      this.#ellipsisElement.style.setProperty(\"pointer-events\", \"auto\")\n    }\n    else {\n      this.#ellipsisElement.style.setProperty(\"pointer-events\", \"none\")\n    }\n  }\n\n  clear(): void\n  {\n    this.#logger.info(\"clear\")\n    this.#prompterTextElement.innerHTML = \"\"\n    this.#candidatesElement.innerHTML = \"\"\n  }\n\n  destroy(): void\n  {\n    this.#logger.info(\"destroy\")\n    this.#removeListeners()\n    this.#smartGuideElement.remove()\n  }\n}","/**\n * @group Editor\n * @remarks\n * Configure when the action is triggered.\n *\n * POINTER_UP :   Action is triggered on every PenUP.\n *                This is the recommended mode for CDK V3 WebSocket recognitions.\n *\n * QUIET_PERIOD : Action is triggered after a quiet period in milli-seconds on every pointer up.\n *                The value is set to 1000 for example recognition will be triggered when the user stops writing for 1 seconds.\n *                This is the recommended mode for all REST discoveries.\n *\n * DEMAND :       Action is triggered on external demande\n */\nexport type TIIEditorTriggerConfiguration = {\n    exportContent: \"QUIET_PERIOD\" | \"POINTER_UP\" | \"DEMAND\"\n    exportContentDelay: number\n    resizeTriggerDelay: number\n  }\n\n  /**\n   * @group Editor\n   * @source\n   */\n  export const DefaultIIEditorTriggerConfiguration: TIIEditorTriggerConfiguration = {\n    exportContent: \"POINTER_UP\",\n    exportContentDelay: 1000,\n    resizeTriggerDelay: 100\n  }\n","import { DefaultGrabberConfiguration, TGrabberConfiguration } from \"../grabber\"\nimport { DefaultHistoryConfiguration, THistoryConfiguration } from \"../history\"\nimport { DefaultLoggerConfiguration, TLoggerConfiguration } from \"../logger\"\nimport { DefaultRecognizerWebSocketSSRConfiguration, TRecognizerWebSocketSSRRecognitionConfiguration, TRecognizerWebSocketSSRConfiguration, RecognizerWebSocketSSRConfiguration, TServerWebsocketConfiguration } from \"../recognizer\"\nimport { DefaultRendererConfiguration, TRendererConfiguration } from \"../renderer\"\nimport { DefaultTheme, TPenStyle, TTheme } from \"../style\"\nimport { mergeDeep, PartialDeep } from \"../utils\"\nimport { TEditorConfiguration } from \"./AbstractEditor\"\nimport { DefaultIIEditorTriggerConfiguration, TIIEditorTriggerConfiguration } from \"./IIEditorTriggerConfiguration\"\n\n/**\n * @group Editor\n */\nexport type TInteractiveInkSSREditorConfiguration = TEditorConfiguration & TRecognizerWebSocketSSRConfiguration & {\n  rendering: TRendererConfiguration\n  smartGuide: {\n    enable: boolean\n  },\n  \"undo-redo\": THistoryConfiguration\n  grabber: TGrabberConfiguration\n  triggers: TIIEditorTriggerConfiguration\n  logger: TLoggerConfiguration\n  penStyle: TPenStyle,\n  penStyleClasses?: string\n  theme: TTheme\n}\n\n/**\n * @group Editor\n * @source\n */\nexport const DefaultInteractiveInkSSREditorConfiguration: TInteractiveInkSSREditorConfiguration = {\n  server: DefaultRecognizerWebSocketSSRConfiguration.server,\n  recognition: DefaultRecognizerWebSocketSSRConfiguration.recognition,\n  rendering: DefaultRendererConfiguration,\n  smartGuide: {\n    enable: true\n  },\n  grabber: DefaultGrabberConfiguration,\n  triggers: DefaultIIEditorTriggerConfiguration,\n  \"undo-redo\": DefaultHistoryConfiguration,\n  logger: DefaultLoggerConfiguration,\n  penStyle: {},\n  theme: DefaultTheme\n}\n\n/**\n * @group Editor\n */\nexport class InteractiveInkSSREditorConfiguration implements TInteractiveInkSSREditorConfiguration\n{\n  server: TServerWebsocketConfiguration\n  recognition: TRecognizerWebSocketSSRRecognitionConfiguration\n  rendering: TRendererConfiguration\n  smartGuide: {\n    enable: boolean\n  }\n  \"undo-redo\": THistoryConfiguration\n  grabber: TGrabberConfiguration\n  triggers: TIIEditorTriggerConfiguration\n  logger: TLoggerConfiguration\n  penStyle: TPenStyle\n  penStyleClasses?: string\n  theme: TTheme\n\n  constructor(configuration?: PartialDeep<TInteractiveInkSSREditorConfiguration>)\n  {\n    const { server, recognition } = new RecognizerWebSocketSSRConfiguration(configuration)\n    this.server = server\n    this.recognition = recognition\n\n    this.rendering = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration.rendering, configuration?.rendering)\n    this.smartGuide = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration.smartGuide, configuration?.smartGuide)\n    this[\"undo-redo\"] = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration[\"undo-redo\"], configuration?.[\"undo-redo\"])\n    this.grabber = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration.grabber, configuration?.grabber)\n    this.triggers = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration.triggers, configuration?.triggers)\n    this.logger = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration.logger, configuration?.logger)\n    this.penStyle = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration.penStyle, configuration?.penStyle)\n    this.penStyleClasses = configuration?.penStyleClasses || this.penStyleClasses\n    this.theme = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration.theme, configuration?.theme)\n\n    if (this.recognition.type !== \"TEXT\") {\n      this.smartGuide.enable = false\n    }\n    if (this.smartGuide.enable && !this.recognition.text.mimeTypes.includes(\"application/vnd.myscript.jiix\")) {\n      this.recognition.text.mimeTypes.push(\"application/vnd.myscript.jiix\")\n    }\n\n  }\n}\n","import { EditorTool } from \"../Constants\"\nimport { PointerEventGrabber, PointerInfo } from \"../grabber\"\nimport { Model, TExport, TJIIXExport } from \"../model\"\nimport { TRecognizerWebSocketSSRMessageSVGPatch, RecognizerWebSocketSSR, DefaultMarginConfiguration, TConverstionState, TMarginConfiguration } from \"../recognizer\"\nimport { InteractiveInkSSRSmartGuide } from \"../smartguide\"\nimport { InteractiveInkSSRSVGRenderer } from \"../renderer\"\nimport { DefaultPenStyle, StyleManager, TPenStyle, TTheme } from \"../style\"\nimport { HistoryManager, THistoryContext } from \"../history\"\nimport { DeferredPromise, PartialDeep } from \"../utils\"\nimport { Stroke, TStroke, TPointer } from \"../symbol\"\nimport { AbstractEditor, EditorOptionsBase } from \"./AbstractEditor\"\nimport { InteractiveInkSSREditorConfiguration } from \"./InteractiveInkSSREditorConfiguration\"\n\n/**\n * @group Editor\n */\nexport type TInteractiveInkSSREditorOptions = PartialDeep<EditorOptionsBase &\n  {\n    configuration: InteractiveInkSSREditorConfiguration\n  }> &\n  {\n    override?: {\n      grabber?: PointerEventGrabber\n      recognizer?: RecognizerWebSocketSSR\n    }\n  }\n\n/**\n * @group Editor\n */\nexport class InteractiveInkSSREditor extends AbstractEditor\n{\n  #configuration: InteractiveInkSSREditorConfiguration\n  #model: Model\n  #resizeTimer?: ReturnType<typeof setTimeout>\n\n  smartGuide?: InteractiveInkSSRSmartGuide\n  grabber: PointerEventGrabber\n  renderer: InteractiveInkSSRSVGRenderer\n  recognizer: RecognizerWebSocketSSR\n  history: HistoryManager\n  styleManager: StyleManager\n  #tool: EditorTool = EditorTool.Write\n\n  constructor(rootElement: HTMLElement, options?: TInteractiveInkSSREditorOptions)\n  {\n    super(rootElement, options)\n\n    this.#configuration = new InteractiveInkSSREditorConfiguration(options?.configuration)\n    this.styleManager = new StyleManager(options?.configuration?.penStyle, options?.configuration?.theme)\n\n    if (options?.override?.grabber) {\n      const CustomGrabber = options.override.grabber as unknown as typeof PointerEventGrabber\n      this.grabber = new CustomGrabber(this.#configuration.grabber)\n    }\n    else {\n      this.grabber = new PointerEventGrabber(this.#configuration.grabber)\n    }\n\n    if (options?.override?.recognizer) {\n      const CustomRecognizer = options.override.recognizer as unknown as typeof RecognizerWebSocketSSR\n      this.recognizer = new CustomRecognizer(this.#configuration)\n    }\n    else {\n      this.recognizer = new RecognizerWebSocketSSR(this.#configuration)\n    }\n\n    this.renderer = new InteractiveInkSSRSVGRenderer(this.#configuration.rendering)\n\n    this.tool = EditorTool.Write\n    this.#model = new Model()\n    this.history = new HistoryManager(this.#configuration[\"undo-redo\"], this.event)\n  }\n\n  get initializationPromise(): Promise<void>\n  {\n    return this.recognizer.initialized.promise\n  }\n\n  get tool(): EditorTool\n  {\n    return this.#tool\n  }\n  set tool(i: EditorTool)\n  {\n    this.#tool = i\n    this.setCursorStyle()\n  }\n\n  protected setCursorStyle(): void\n  {\n    switch (this.tool) {\n      case EditorTool.Erase:\n        this.layers.root.classList.remove(\"draw\")\n        this.layers.root.classList.add(\"erase\")\n        break\n      default:\n        this.layers.root.classList.add(\"draw\")\n        this.layers.root.classList.remove(\"erase\")\n        break\n    }\n  }\n\n  get model(): Model\n  {\n    return this.#model\n  }\n\n  get configuration(): InteractiveInkSSREditorConfiguration\n  {\n    return this.#configuration\n  }\n\n  get currentPenStyle(): TPenStyle\n  {\n    return this.styleManager.currentPenStyle\n  }\n\n  get penStyle(): TPenStyle\n  {\n    return this.styleManager.penStyle\n  }\n  set penStyle(penStyle: PartialDeep<TPenStyle>)\n  {\n    this.logger.info(\"setPenStyle\", { penStyle })\n    this.styleManager.setPenStyle(penStyle)\n    this.logger.debug(\"setPenStyle\", this.styleManager.penStyle)\n    this.recognizer.setPenStyle(this.styleManager.penStyle)\n  }\n\n  get penStyleClasses(): string\n  {\n    return this.styleManager.penStyleClasses\n  }\n  set penStyleClasses(penClass: string)\n  {\n    this.logger.info(\"setPenStyleClasses\", { penClass })\n    this.styleManager.setPenStyleClasses(penClass)\n    this.logger.debug(\"setPenStyleClasses\", this.styleManager.penStyleClasses)\n    this.recognizer.setPenStyleClasses(this.styleManager.penStyleClasses)\n  }\n\n  get theme(): TTheme\n  {\n    return this.styleManager.theme\n  }\n  set theme(theme: PartialDeep<TTheme>)\n  {\n    this.logger.info(\"setTheme\", { theme })\n    this.styleManager.setTheme(theme)\n    this.logger.debug(\"setTheme\", this.styleManager.theme)\n    this.recognizer.setTheme(this.styleManager.theme)\n  }\n\n  protected async syncStyle(): Promise<void>\n  {\n    await Promise.all([\n      this.recognizer.setPenStyle(this.styleManager.penStyle),\n      this.recognizer.setPenStyleClasses(this.styleManager.penStyleClasses),\n      this.recognizer.setTheme(this.styleManager.theme)\n    ])\n  }\n\n  protected onExport(exports: TExport): void\n  {\n    this.logger.debug(\"onExport\", { exports })\n    if (this.smartGuide && exports?.[\"application/vnd.myscript.jiix\"]) {\n      const jjix = exports[\"application/vnd.myscript.jiix\"] as TJIIXExport\n      this.smartGuide.update(jjix)\n    }\n    this.model.mergeExport(exports)\n    this.event.emitExported(exports)\n  }\n\n  protected onPointerDown(info: PointerInfo): void\n  {\n    this.logger.info(\"onPointerDown\", { tool: this.tool, info })\n    const style: TPenStyle = Object.assign({}, this.theme?.ink, this.currentPenStyle)\n    this.model.initCurrentStroke(info.pointer, this.tool === EditorTool.Erase ? \"eraser\" : info.pointerType, style)\n    this.drawCurrentStroke()\n  }\n\n  protected onPointerMove(info: PointerInfo): void\n  {\n    this.logger.info(\"onPointerMove\", { tool: this.tool, info })\n    this.model.appendToCurrentStroke(info.pointer)\n    this.drawCurrentStroke()\n  }\n\n  protected async onPointerUp(info: PointerInfo): Promise<void>\n  {\n    try {\n      this.logger.info(\"onPointerUp\", { tool: this.tool, info })\n      this.model.endCurrentStroke(info.pointer)\n      await this.synchronizeModelWithBackend()\n    } catch (error) {\n      this.event.emitError(error as Error)\n    }\n  }\n\n  protected onSVGPatch(evt: TRecognizerWebSocketSSRMessageSVGPatch): void\n  {\n    this.logger.info(\"onSVGPatch\", { evt })\n    this.renderer.updatesLayer(evt.layer, evt.updates)\n  }\n\n  protected initializeSmartGuide(): void\n  {\n    this.smartGuide?.destroy()\n    this.logger.info(\"initializeSmartGuide\", { smartGuide: this.configuration.smartGuide })\n    if (this.configuration.smartGuide.enable) {\n      this.smartGuide = new InteractiveInkSSRSmartGuide(this)\n      let margin: TMarginConfiguration = DefaultMarginConfiguration\n      switch (this.configuration.recognition.type) {\n        case \"TEXT\":\n          margin = this.configuration.recognition.text.margin\n          break\n        case \"MATH\":\n          margin = this.configuration.recognition.math.margin\n          break\n      }\n      this.smartGuide.init(this.layers.ui.root, margin)\n    }\n  }\n\n  protected onContetChaned(undoRedoContext: THistoryContext): void\n  {\n    this.history.context = undoRedoContext\n    this.event.emitChanged(undoRedoContext)\n  }\n\n  protected onError(error: Error): void\n  {\n    this.layers.showMessageError(error)\n    this.event.emitError(error)\n  }\n\n  async initialize(): Promise<void>\n  {\n    try {\n      this.logger.info(\"initialize\")\n      this.layers.render()\n      this.layers.showLoader()\n\n      const compStyles = window.getComputedStyle(this.layers.root)\n      this.model.width = Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.#configuration.rendering.minWidth)\n      this.model.height = Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.#configuration.rendering.minHeight)\n      this.history.push(this.model)\n      this.renderer.init(this.layers.rendering)\n\n      this.grabber.attach(this.layers.rendering)\n      this.grabber.onPointerDown = this.onPointerDown.bind(this)\n      this.grabber.onPointerMove = this.onPointerMove.bind(this)\n      this.grabber.onPointerUp = this.onPointerUp.bind(this)\n\n      this.initializeSmartGuide()\n\n      if(!this.recognizer.configuration.server.version) {\n        await this.loadInfo(this.configuration.server)\n        this.recognizer.configuration.server.version = this.info!.version\n      }\n      await this.recognizer.init(this.model.height, this.model.width)\n      this.recognizer.event.addExportedListener(this.onExport.bind(this))\n      this.recognizer.event.addSVGPatchListener(this.onSVGPatch.bind(this))\n      this.recognizer.event.addContentChangedListener(this.onContetChaned.bind(this))\n      this.recognizer.event.addIdleListener(this.event.emitIdle.bind(this.event))\n      this.recognizer.event.addErrorListener(this.onError.bind(this))\n\n      await this.syncStyle()\n    } catch (error) {\n      this.logger.error(\"initialize\", error)\n      this.layers.showMessageError(error as Error)\n      throw error\n    }\n    finally {\n      this.logger.debug(\"initialize\", \"finally\")\n      this.layers.hideLoader()\n      this.layers.updateState(true)\n    }\n  }\n\n  drawCurrentStroke(): void\n  {\n    this.logger.debug(\"drawCurrentStroke\", { stroke: this.model.currentSymbol })\n    const currentSymbol = this.model.currentSymbol as Stroke\n    if (currentSymbol) {\n      this.renderer.drawPendingStroke(currentSymbol)\n    }\n  }\n\n  async synchronizeModelWithBackend(): Promise<Model>\n  {\n    this.logger.info(\"synchronizeModelWithBackend\")\n    if (this.#configuration.triggers.exportContent !== \"DEMAND\") {\n      const unsentStrokes = this.model.extractUnsentStrokes()\n      this.model.updatePositionSent()\n      this.history.push(this.model)\n      this.renderer.clearErasingStrokes()\n      const exports = await this.recognizer.addStrokes(unsentStrokes)\n      this.model.mergeExport(exports)\n      this.history.updateStack(this.model)\n    }\n    this.logger.debug(\"synchronizeModelWithBackend\", this.model)\n    return this.model\n  }\n\n  async waitForIdle(): Promise<void>\n  {\n    return this.recognizer.waitForIdle()\n  }\n\n  async export(mimeTypes?: string[]): Promise<Model>\n  {\n    this.logger.info(\"export\", { mimeTypes })\n    try {\n      if (this.#configuration.triggers.exportContent === \"DEMAND\") {\n        const unsentStrokes = this.model.extractUnsentStrokes()\n        this.history.push(this.model)\n        this.history.stack.push(this.model.clone())\n        this.model.updatePositionSent()\n        const exports = await this.recognizer.addStrokes(unsentStrokes)\n        this.model.updatePositionReceived()\n        this.model.mergeExport(exports)\n        this.logger.debug(\"export\", this.model)\n      } else {\n        return await this.recognizer.export(this.model, mimeTypes)\n      }\n    } catch (error) {\n      this.logger.error(\"export\", { error })\n      this.event.emitError(error as Error)\n      return Promise.reject(error)\n    }\n    return this.model\n  }\n\n  async convert(params?: { conversionState?: TConverstionState }): Promise<Model>\n  {\n    this.logger.info(\"convert\", { params })\n    this.history.push(this.model)\n    this.history.stack.push(this.model.clone())\n    this.#model = await this.recognizer.convert(this.model, params?.conversionState)\n    this.logger.debug(\"convert\", this.model)\n    this.history.push(this.model)\n    this.event.emitConverted(this.model.converts as TExport)\n    return this.model\n  }\n\n  async import(data: Blob | string | TJIIXExport, mimeType?: string): Promise<Model>\n  {\n    let blobToImport: Blob\n    if (data instanceof Blob) {\n      blobToImport = data\n    }\n    else if (typeof data === \"string\") {\n      blobToImport = new Blob([data])\n    }\n    else {\n      blobToImport = new Blob([JSON.stringify(data)])\n    }\n    this.logger.info(\"import\", { data, mimeType })\n    this.history.stack.push(this.model.clone())\n    this.#model = await this.recognizer.import(this.model, blobToImport, mimeType)\n    this.history.push(this.model)\n    this.event.emitImported(this.model.exports as TExport)\n    return this.model\n  }\n\n  async importPointEvents(strokes: PartialDeep<TStroke>[]): Promise<Model>\n  {\n    this.logger.info(\"importPointEvents\", { strokes })\n    const errors: string[] = []\n    const strokesToImport = strokes.map((s, strokeIndex) =>\n    {\n      const str = new Stroke(s.style || DefaultPenStyle, s.pointerType)\n      if (s.id) str.id = s.id\n      if (s.pointerType) str.pointerType = s.pointerType\n      if (!s.pointers?.length) {\n        errors.push(`stroke ${ strokeIndex + 1 } has not pointers`)\n      }\n      let flag = true\n      s.pointers?.forEach((pp, pIndex) =>\n      {\n        flag = true\n        if (!pp) {\n          errors.push(`stroke ${ strokeIndex + 1 } has no pointer at ${ pIndex }`)\n          return\n        }\n        const pointer: TPointer = {\n          p: pp.p || 1,\n          t: pp.t || pIndex,\n          x: 0,\n          y: 0\n        }\n        if (pp?.x == undefined || pp?.x == null) {\n          errors.push(`stroke ${ strokeIndex + 1 } has no x at pointer at ${ pIndex }`)\n          flag = false\n        }\n        else {\n          pointer.x = pp.x\n        }\n        if (pp?.y == undefined || pp?.y == null) {\n          errors.push(`stroke ${ strokeIndex + 1 } has no y at pointer at ${ pIndex }`)\n          flag = false\n        }\n        else {\n          pointer.y = pp.y\n        }\n        if (flag) {\n          str.pointers.push(pointer)\n        }\n      })\n      return str\n    })\n    if (errors.length) {\n      this.event.emitError(new Error(errors.join(\"\\n\")))\n    }\n    strokesToImport.map(s => this.model.addStroke(s))\n    const exportPoints = await this.recognizer.importPointEvents(strokesToImport)\n    this.model.mergeExport(exportPoints)\n    this.event.emitImported(this.model.exports as TExport)\n    this.logger.debug(\"importPointEvents\", this.model)\n    return this.model\n  }\n\n  async resize({ height, width }: { height?: number, width?: number } = {}): Promise<void>\n  {\n    this.logger.info(\"resize\", { height, width })\n    const deferredResize = new DeferredPromise<Model>()\n    const compStyles = window.getComputedStyle(this.layers.root)\n    this.model.height = height || Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.configuration.rendering.minHeight)\n    this.model.width = width || Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.configuration.rendering.minWidth)\n    const clonedModel = this.model.clone()\n    this.renderer.resize(clonedModel)\n    clearTimeout(this.#resizeTimer)\n    this.#resizeTimer = setTimeout(async () =>\n    {\n      try {\n        const resizeModel = await this.recognizer.resize(clonedModel)\n        deferredResize.resolve(resizeModel)\n      } catch (error) {\n        this.logger.error(\"resize\", { height, width, error })\n        deferredResize.reject(error as Error)\n      }\n    }, this.#configuration.triggers.resizeTriggerDelay)\n\n    this.#model = await deferredResize.promise\n    this.smartGuide?.resize()\n    this.event.emitExported(this.model.exports as TExport)\n    this.logger.debug(\"resize\", this.model)\n  }\n\n  async undo(): Promise<Model>\n  {\n    this.logger.info(\"undo\")\n    if (this.history.context.canUndo) {\n      this.#model = this.history.undo() as Model\n      return this.recognizer.undo(this.model)\n    }\n    else {\n      throw new Error(\"Undo not allowed\")\n    }\n  }\n\n  async redo(): Promise<Model>\n  {\n    this.logger.info(\"redo\")\n    if (this.history.context.canRedo) {\n      this.#model = this.history.redo() as Model\n      this.logger.debug(\"undo\", this.#model)\n      return this.recognizer.redo(this.model)\n    }\n    else {\n      throw new Error(\"Redo not allowed\")\n    }\n  }\n\n  async clear(): Promise<void>\n  {\n    this.logger.info(\"clear\")\n    this.model.clear()\n    this.history.push(this.model)\n    await this.recognizer.clear(this.model)\n    this.event.emitCleared()\n  }\n\n  async destroy(): Promise<void>\n  {\n    this.logger.info(\"destroy\")\n    this.event.removeAllListeners()\n    this.grabber.detach()\n    this.layers.destroy()\n    this.renderer.destroy()\n    this.recognizer.destroy()\n    this.smartGuide?.destroy()\n    return Promise.resolve()\n  }\n}\n","import { DefaultGrabberConfiguration, TGrabberConfiguration } from \"../grabber\"\nimport { DefaultHistoryConfiguration, THistoryConfiguration } from \"../history\"\nimport { DefaultLoggerConfiguration, TLoggerConfiguration } from \"../logger\"\nimport { DefaultRecognizerHTTPV2Configuration, RecognizerHTTPV2Configuration, TRecognizerHTTPV2Configuration, TRecognizerHTTPV2RecognitionConfiguration, TServerHTTPConfiguration } from \"../recognizer\"\nimport { DefaultIIRendererConfiguration, TIIRendererConfiguration } from \"../renderer\"\nimport { DefaultStyle, TStyle } from \"../style\"\nimport { convertPixelToMillimeter, mergeDeep, PartialDeep } from \"../utils\"\nimport { TEditorConfiguration } from \"./AbstractEditor\"\nimport { DefaultIEditorTriggerConfiguration, TIEditorTriggerConfiguration } from \"./IEditorTriggerConfiguration\"\n\n\n/**\n * @group Editor\n */\nexport type TInkEditorConfiguration = TEditorConfiguration & TRecognizerHTTPV2Configuration & {\n  rendering: TIIRendererConfiguration\n  \"undo-redo\": THistoryConfiguration\n  grabber: TGrabberConfiguration\n  triggers: TIEditorTriggerConfiguration\n  logger: TLoggerConfiguration\n  penStyle: TStyle\n}\n\n/**\n * @group Editor\n * @source\n */\nexport const DefaultInkEditorConfiguration: TInkEditorConfiguration = {\n  server: DefaultRecognizerHTTPV2Configuration.server,\n  recognition: DefaultRecognizerHTTPV2Configuration.recognition,\n  rendering: DefaultIIRendererConfiguration,\n  grabber: DefaultGrabberConfiguration,\n  triggers: DefaultIEditorTriggerConfiguration,\n  \"undo-redo\": DefaultHistoryConfiguration,\n  logger: DefaultLoggerConfiguration,\n  penStyle: DefaultStyle,\n}\n\n/**\n * @group Editor\n */\nexport class InkEditorConfiguration implements TInkEditorConfiguration\n{\n  server: TServerHTTPConfiguration\n  recognition: TRecognizerHTTPV2RecognitionConfiguration\n  rendering: TIIRendererConfiguration\n  \"undo-redo\": THistoryConfiguration\n  grabber: TGrabberConfiguration\n  triggers: TIEditorTriggerConfiguration\n  logger: TLoggerConfiguration\n  penStyle: TStyle\n\n  constructor(configuration?: PartialDeep<InkEditorConfiguration>)\n  {\n    const { server, recognition } = new RecognizerHTTPV2Configuration(configuration)\n    this.server = server\n    this.recognition = recognition\n    this.rendering = mergeDeep({}, DefaultInkEditorConfiguration.rendering, configuration?.rendering)\n    this.recognition.text.guides.enable = this.rendering.guides.enable\n    if (this.rendering.guides.enable)\n    {\n      this.recognition.text.guides[\"line-gap-mm\"] = convertPixelToMillimeter(this.rendering.guides.gap)\n    }\n    this.grabber = mergeDeep({}, DefaultInkEditorConfiguration.grabber, configuration?.grabber)\n    this[\"undo-redo\"] = mergeDeep({}, DefaultInkEditorConfiguration[\"undo-redo\"], configuration?.[\"undo-redo\"])\n    this.triggers = mergeDeep({}, DefaultInkEditorConfiguration.triggers, configuration?.triggers)\n    this.logger = mergeDeep({}, DefaultInkEditorConfiguration.logger, configuration?.logger)\n    this.penStyle = mergeDeep({}, DefaultInkEditorConfiguration.penStyle, configuration?.penStyle)\n  }\n}\n","import { InkEditor } from \"../editor\";\nimport { PointerInfo } from \"../grabber\";\nimport { IModel } from \"../model\";\nimport { TStyle } from \"../style\";\nimport { IIStroke, SymbolType, TIISymbol, TPointer } from \"../symbol\";\nimport { DeferredPromise } from \"../utils\";\nimport { AbstractWriterManager } from \"./AbstractWriterManager\";\n\nexport class IWriterManager extends AbstractWriterManager {\n  editor: InkEditor\n  #exportTimer?: ReturnType<typeof setTimeout>\n\n  constructor(editor: InkEditor) {\n    super(editor)\n    this.editor = editor\n  }\n\n  get model(): IModel {\n    return this.editor.model\n  }\n\n  protected createCurrentSymbol(pointer: TPointer, style: TStyle, pointerType: string): TIISymbol {\n    this.model.currentStroke = new IIStroke(style, pointerType)\n    this.model.currentStroke.addPointer(pointer)\n    return this.model.currentStroke\n  }\n\n  protected updateCurrentSymbol(pointer: TPointer): IIStroke {\n    if (this.model.currentStroke?.type === SymbolType.Stroke) {\n      this.model.currentStroke.addPointer(pointer)\n    }\n    return this.model.currentStroke!\n  }\n\n  async end(info: PointerInfo): Promise<void> {\n    const localPointer = info.pointer\n    const localSymbol = this.updateCurrentSymbol(localPointer)\n    this.model.currentStroke = undefined\n    this.renderer.drawSymbol(localSymbol)\n    this.model.addStroke(localSymbol)\n    this.editor.history.push(this.model, { added: [localSymbol] })\n    const deferred = new DeferredPromise<void>()\n\n    if (this.editor.configuration.triggers.exportContent !== \"DEMAND\") {\n      clearTimeout(this.#exportTimer)\n      this.#exportTimer = setTimeout(async () => {\n        this.editor.export()\n      }, this.editor.configuration.triggers.exportContent === \"QUIET_PERIOD\" ? this.editor.configuration.triggers.exportContentDelay : 0)\n    } else {\n      deferred.resolve()\n    }\n    return deferred.promise\n\n  }\n}\n","import { EditorTool } from \"../Constants\"\nimport { PointerEventGrabber } from \"../grabber\"\nimport { IModel, TExport, TExportV2 } from \"../model\"\nimport { RecognizerHTTPV2 } from \"../recognizer\"\nimport { SVGRenderer } from \"../renderer\"\nimport { TStyle } from \"../style\"\nimport { IHistoryManager } from \"../history\"\nimport { PartialDeep } from \"../utils\"\nimport { AbstractEditor, EditorOptionsBase } from \"./AbstractEditor\"\nimport { InkEditorConfiguration, TInkEditorConfiguration } from \"./InkEditorConfiguration\"\nimport { IWriterManager } from \"../manager/IWriterManager\"\nimport { IDebugSVGManager, EraseManager } from \"../manager\"\n\n/**\n * @group Editor\n */\nexport type TInkEditorOptions = PartialDeep<EditorOptionsBase &\n{\n  configuration: TInkEditorConfiguration\n}> &\n{\n  override?: {\n    grabber?: PointerEventGrabber\n    recognizer?: RecognizerHTTPV2\n  }\n}\n\n/**\n * @group Editor\n */\nexport class InkEditor extends AbstractEditor\n{\n  #configuration: InkEditorConfiguration\n  #model: IModel\n  #penStyle: TStyle\n  renderer: SVGRenderer\n  recognizer: RecognizerHTTPV2\n  history: IHistoryManager\n  writer: IWriterManager\n  eraser: EraseManager\n  debugger: IDebugSVGManager\n  #tool: EditorTool = EditorTool.Write\n\n  constructor(rootElement: HTMLElement, options?: TInkEditorOptions)\n  {\n    super(rootElement, options)\n\n    this.#configuration = new InkEditorConfiguration(options?.configuration)\n\n    this.#penStyle = Object.assign({}, this.#configuration.penStyle)\n\n    if (options?.override?.recognizer) {\n      const CustomRecognizer = options.override.recognizer as unknown as typeof RecognizerHTTPV2\n      this.recognizer = new CustomRecognizer(this.#configuration)\n    }\n    else {\n      this.recognizer = new RecognizerHTTPV2(this.#configuration)\n    }\n    this.renderer = new SVGRenderer(this.#configuration.rendering)\n\n    this.#model = new IModel()\n    this.writer = new IWriterManager(this)\n    this.eraser = new EraseManager(this)\n    this.debugger = new IDebugSVGManager(this)\n    this.tool = EditorTool.Write\n    this.history = new IHistoryManager(this.#configuration[\"undo-redo\"], this.event)\n  }\n\n  get penStyle(): TStyle\n  {\n    return this.#penStyle\n  }\n  set penStyle(penStyle: PartialDeep<TStyle>)\n  {\n    this.logger.info(\"set penStyle\", { penStyle })\n    this.#penStyle = Object.assign({}, this.#penStyle, penStyle)\n  }\n\n  get initializationPromise(): Promise<void>\n  {\n    return Promise.resolve()\n  }\n\n  get tool(): EditorTool\n  {\n    return this.#tool\n  }\n  set tool(i: EditorTool)\n  {\n    this.#tool = i\n    this.writer.detach()\n    this.eraser.detach()\n\n    switch (this.tool) {\n      case EditorTool.Erase:\n        this.eraser.attach(this.layers.root)\n        this.layers.root.classList.remove(\"draw\")\n        this.layers.root.classList.add(\"erase\")\n        break\n      default:\n        this.writer.attach(this.layers.root)\n        this.layers.root.classList.add(\"draw\")\n        this.layers.root.classList.remove(\"erase\")\n        break\n    }\n\n  }\n\n  get model(): IModel\n  {\n    return this.#model\n  }\n\n  get configuration(): InkEditorConfiguration\n  {\n    return this.#configuration\n  }\n\n  async initialize(): Promise<void>\n  {\n    try {\n      this.logger.info(\"initialize\")\n      this.layers.render()\n      this.layers.showLoader()\n      this.tool = EditorTool.Write\n      this.renderer.init(this.layers.rendering)\n\n      const compStyles = window.getComputedStyle(this.layers.root)\n      this.model.width = Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.#configuration.rendering.minWidth)\n      this.model.height = Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.#configuration.rendering.minHeight)\n      this.model.rowHeight = this.configuration.rendering.guides.gap\n      this.history.init(this.model)\n\n      if (!this.recognizer.configuration.server.version) {\n        await this.loadInfo(this.configuration.server)\n        this.recognizer.configuration.server.version = this.info!.version\n      }\n    } catch (error) {\n      this.logger.error(\"initialize\", error)\n      this.layers.showMessageError(error as Error)\n      throw error\n    }\n    finally {\n      this.logger.debug(\"initialize\", \"finally\")\n      this.layers.hideLoader()\n      this.layers.updateState(true)\n    }\n  }\n\n  //updateBoundingBox\n  updateSymbolsStyle(symbolIds: string[], style: PartialDeep<TStyle>): void\n  {\n    this.logger.info(\"updateSymbolsStyle\", { symbolIds, style })\n    this.model.strokes.forEach(s =>\n    {\n      if (symbolIds.includes(s.id)) {\n        s.style = Object.assign({}, s.style, style)\n        this.renderer.drawSymbol(s)\n        this.model.updateStroke(s)\n        s.modificationDate = Date.now()\n      }\n    })\n  }\n\n  async export(requestedMimeTypes?: string[]): Promise<TExportV2>\n  {\n    this.logger.info(\"export\")\n    const currentModel = this.model.clone()\n\n    const exports = await this.recognizer.send(currentModel.strokes, requestedMimeTypes)\n    currentModel.mergeExport(exports)\n    if (this.model.modificationDate === currentModel.modificationDate) {\n      this.model.exports = currentModel.exports\n    }\n    this.history.updateModelStack(currentModel)\n    this.event.emitExported(this.model.exports || {})\n    return exports\n  }\n\n  async resize({ height, width }: { height?: number, width?: number } = {}): Promise<void>\n  {\n    this.logger.info(\"resize\", { height, width })\n    const compStyles = window.getComputedStyle(this.layers.root)\n    this.model.height = height || Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.configuration.rendering.minHeight)\n    this.model.width = width || Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.configuration.rendering.minWidth)\n    this.renderer.resize(this.model.height, this.model.width)\n    this.logger.debug(\"resize\", { model: this.model })\n    this.event.emitExported(this.model.exports || {})\n  }\n\n  async removeStrokes(strokeIds: string[]): Promise<void>\n  {\n    this.logger.info(\"removeStrokes\", { strokeIds })\n    const removedStrokes = this.model.strokes.filter(s => strokeIds.includes(s.id))\n    if (removedStrokes.length === 0) {\n      this.logger.warn(\"removeStrokes\", \"No strokes found to remove\")\n      return\n    }\n    this.#model = this.model.clone()\n    removedStrokes.forEach(s => {\n      this.renderer.removeSymbol(s.id)\n      this.model.removeStroke(s.id)\n    })\n    this.history.push(this.#model, { removed: removedStrokes })\n    const exports = await this.recognizer.send(this.model.strokes)\n    this.model.mergeExport(exports)\n    this.history.updateModelStack(this.model)\n    this.event.emitExported(this.#model.exports as TExport)\n    this.logger.debug(\"removeStrokes\", { model: this.#model })\n  }\n\n  async undo(): Promise<void>\n  {\n    this.logger.info(\"undo\")\n    const previousStackItem = this.history.undo()\n    const modifications = previousStackItem.model.extractDifferenceStrokes(this.model)\n    this.#model = previousStackItem.model.clone()\n    modifications.removed.forEach(s => this.renderer.removeSymbol(s.id))\n    modifications.added.forEach(s => this.renderer.drawSymbol(s))\n    await this.export()\n  }\n\n  async redo(): Promise<void>\n  {\n    this.logger.info(\"redo\")\n    const previousStackItem = this.history.redo()\n    const modifications = previousStackItem.model.extractDifferenceStrokes(this.model)\n    this.#model = previousStackItem.model.clone()\n    modifications.removed.forEach(s => this.renderer.removeSymbol(s.id))\n    modifications.added.forEach(s => this.renderer.drawSymbol(s))\n    await this.export()\n  }\n\n  async clear(): Promise<void>\n  {\n    this.logger.info(\"clear\")\n    const erased = this.model.strokes\n    this.model.clear()\n    this.history.push(this.model, { removed: erased })\n    this.renderer.clear()\n    this.event.emitExported(this.#model.exports as TExport)\n  }\n\n  async destroy(): Promise<void>\n  {\n    this.logger.info(\"destroy\")\n    this.event.removeAllListeners()\n    this.writer.detach()\n    this.layers.destroy()\n    this.renderer.destroy()\n    return Promise.resolve()\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { EditorType } from \"./AbstractEditor\"\nimport { InteractiveInkEditor, TInteractiveInkEditorOptions } from \"./InteractiveInkEditor\"\nimport { InkEditorDeprecated, TInkEditorDeprecatedOptions } from \"./InkEditorDeprecated\"\nimport { InteractiveInkSSREditor, TInteractiveInkSSREditorOptions } from \"./InteractiveInkSSREditor\"\nimport { InkEditor, TInkEditorOptions } from \"./InkEditor\"\n\n/**\n * @group Editor\n * @hideconstructor\n */\nexport class Editor\n{\n  protected static logger = LoggerManager.getLogger(LoggerCategory.EDITOR)\n  protected static instance: InteractiveInkEditor | InkEditorDeprecated | InteractiveInkSSREditor | InkEditor |undefined\n\n  static async load<T extends EditorType>(rootElement: HTMLElement, type: T, options: T extends \"INTERACTIVEINK\" ? TInteractiveInkEditorOptions : T extends \"INKV1\" ? TInkEditorDeprecatedOptions : TInteractiveInkSSREditorOptions extends \"INKV2\" ? TInkEditorOptions : TInteractiveInkSSREditorOptions):\n    Promise<T extends \"INTERACTIVEINK\" ? InteractiveInkEditor : T extends \"INKV1\" ? InkEditorDeprecated : InteractiveInkSSREditor extends \"INKV2\" ? InkEditor : InteractiveInkSSREditor>\n  {\n    Editor.logger.info(\"load\", { type, options })\n    if (!options) {\n        throw new Error(`Param 'options' missing`)\n    }\n    if (Editor.instance) {\n      await Editor.instance.destroy()\n    }\n\n    switch (type) {\n      case \"INTERACTIVEINK\":\n        Editor.instance = new InteractiveInkEditor(rootElement, options as TInteractiveInkEditorOptions)\n        break\n      case \"INKV1\":\n        Editor.instance = new InkEditorDeprecated(rootElement, options as TInkEditorDeprecatedOptions)\n        break\n      case \"INKV2\":\n        Editor.instance = new InkEditor(rootElement, options as TInkEditorOptions)\n        break;\n      // case \"INTERACTIVEINKSSR\":\n      default:\n        Editor.instance = new InteractiveInkSSREditor(rootElement, options as TInteractiveInkSSREditorOptions)\n        break\n    }\n\n    await Editor.instance.initialize()\n\n    return Editor.instance as T extends \"INTERACTIVEINK\" ? InteractiveInkEditor : T extends \"INKV1\" ? InkEditorDeprecated : InteractiveInkSSREditor extends \"INKV2\" ? InkEditor : InteractiveInkSSREditor\n  }\n\n  static getInstance(): InteractiveInkEditor | InkEditorDeprecated | InteractiveInkSSREditor | InkEditor | undefined\n  {\n    return Editor.instance\n  }\n\n}\n"],"names":["EditorTool","EditorWriteTool","SvgElementRole","ResizeDirection","SELECTION_MARGIN","DeferredPromise","promise","resolve","reject","isFullFilled","isPending","constructor","this","Promise","async","v","isValidNumber","x","isNaN","parseFloat","toString","isFinite","isBetween","val","min","max","computeAverage","arr","reduce","p","c","length","computeDistance","p1","p2","distance","Math","hypot","y","computeAngleAxeRadian","begin","end","atan2","createPointsOnSegment","spaceBetweenPoint","points","globalDistance","spaceWithP1","push","scalaire","v1","v2","computeNearestPointOnSegment","seg","vectP1P","vectP1P2","scalaireP1P_P1P2","scalaireP1P2_P1P2","t","isPointInsideBox","point","box","width","height","convertRadianToDegree","radian","PI","toFixed","convertDegreeToRadian","degree","computeRotatedPoint","center","dx","dy","cos","sin","computePointOnEllipse","radiusX","radiusY","phi","theta","cosPhi","sinPhi","M","abs","N","computeDistanceBetweenPointAndSegment","findIntersectionBetween2Segment","seg1","seg2","S1dx","S1dy","S2dx","S2dy","S1S2dx","S1S2dy","ua_t","ub_t","u_b","ua","ub","findIntersectBetweenSegmentAndCircle","r","result","a","pow","b","cc","deter","e","sqrt","u1","u2","computeAngleRadian","p1c","p2c","p1p2","acos","getClosestPoints","points1","points2","minDistance","Number","MAX_SAFE_INTEGER","forEach","_p1","_p2","d","getClosestPoint","closest","index","i","isPointInsidePolygon","inside","j","isVersionSuperiorOrEqual","source","target","sourceParts","split","targetParts","computeHmac","message","applicationKey","hmacKey","enc","TextEncoder","messageEncoded","encode","keyEncoded","key","crypto","subtle","importKey","name","hash","signature","sign","buffer","Uint8Array","Array","prototype","map","call","padStart","join","convertMillimeterToPixel","mm","convertPixelToMillimeter","px","convertBoundingBoxMillimeterToPixel","createUUID","dt","Date","now","replace","random","floor","mergeDeep","sources","isObject","item","isArray","shift","Object","assign","concat","isDeepEqual","object1","object2","objKeys1","keys","objKeys2","value1","value2","isObjects","object","getAvailableFontList","configuration","server","scheme","host","recognition","lang","serverConfig","response","fetch","json","sort","getAvailableLanguageList","computeLinksPointers","angle","radius","computeMiddlePointer","point1","point2","getApiInfos","ok","version","gitCommit","nativeVersion","LoggerLevel","LoggerCategory","Logger","category","level","debug","functionName","data","DEBUG","dataLog","from","console","info","INFO","warn","WARN","error","LoggerManager","static","Map","getLogger","loggerMap","has","set","ERROR","get","setLoggerLevel","config","lc","DefaultLoggerConfiguration","EDITOR","RECOGNIZER","GRABBER","RENDERER","EDITOR_EVENT","MODEL","SYMBOL","SMARTGUIDE","GESTURE","STYLE","HISTORY","TRANSFORMER","CONVERTER","WRITE","SELECTION","SVGDEBUG","MENU","EditorEventName","EditorEvent","EventTarget","logger","abortController","element","super","AbortController","removeAllListeners","abort","emit","type","evt","CustomEvent","bubbles","composed","detail","undefined","dispatchEvent","emitSessionOpened","sessionId","SESSION_OPENED","addSessionOpenedListener","callback","addEventListener","signal","emitLoaded","LOADED","addLoadedListener","emitNotif","notif","NOTIF","addNotifListener","emitError","err","addErrorListener","emitExported","exports","EXPORTED","addExportedListener","emitChanged","undoRedoContext","CHANGED","canClear","empty","addChangedListener","emitIdle","idle","IDLE","addIdleListener","emitCleared","CLEARED","addClearedListener","emitConverted","CONVERTED","addConvertedListener","emitImported","IMPORTED","addImportedListener","emitSelected","symbols","SELECTED","addSelectedListener","emitToolChanged","mode","TOOL_CHANGED","addToolChangedListener","emitUIpdated","UI_UPDATED","addUIpdatedListener","emitSynchronized","SYNCHRONIZED","addSynchronizedListener","emitGestured","gesture","GESTURED","addGesturedListener","ExportType","JIIXELementType","JIIXNodeKind","JIIXEdgeKind","ExportV2Type","JIIXV2ShapeKind","EditorLayer","root","ui","rendering","onCloseModal","rootClassCss","classList","add","createLayerRender","createLayerUI","render","styleElement","document","createElement","appendChild","createTextNode","prepend","createLoader","loaderHTML","style","display","showLoader","loader","hideLoader","createMessageOverlay","overlay","closeMessageModal","modal","contains","hideMessageModal","text","innerText","remove","createMessageModal","closeBtn","bind","createMessage","showMessageInfo","setTimeout","timeout","showMessageError","createBusy","busy","createState","showState","state","hideState","updateState","destroy","lastChild","removeChild","AbstractEditor","layers","event","loggerConfiguration","rootElement","options","override","cssClass","editor","loggerConfig","loadInfo","Box","boundindBox","Error","createFromBoxes","boxes","createFromPoints","getCorners","getSide","getCenter","getSides","vertices","isContained","wrapper","containsPoint","child","overlaps","box1","box2","xMin","xMid","xMax","yMin","yMid","yMax","corners","side","snapPoints","boundaries","DefaultStyle","color","DefaultPenStyle","DefaultTheme","ink","module","o","n","l","m","defineProperty","configurable","enumerable","__esModule","default","hasOwnProperty","s","TypeError","value","Symbol","iterator","toJSON","u","trim","indexOf","substring","_trimSemiColon","toCSS","slice","parser","JsonCSS","StyleHelper","themeToCSS","themeToJSON","theme","penStyleToCSS","penStyle","css","penStyleToJSON","penStyleString","stringToJSON","JSONToString","entries","k","StyleManager","penStyleClasses","currentPenStyle","setTheme","setPenStyleClasses","setPenStyle","structuredClone","penStyleClass","DecoratorKind","SymbolType","EdgeKind","EdgeDecoration","ShapeKind","RecognizedKind","IIDecorator","id","kind","clone","MatrixTransform","xx","yx","xy","yy","tx","ty","identity","applyToPoint","mat","rotation","hypotAc","hypotBd","toCssString","matrix","invert","denom","multiply","translate","rotate","cosAngle","round","sinAngle","scale","IISymbolBase","creationTime","modificationDate","selected","deleting","transform","opacity","edges","isClosed","isIntersected","some","edge","OIEdgeBase","startDecoration","endDecoration","Edge","bounds","bb","e1","e2","isValidPoint","IIEdgeArc","startAngle","sweepAngle","_vertices","Arc","verticesId","computedVertices","nbVertices","angleStep","endAngle","at","create","partial","arc","IIEdgeLine","start","Line","line","IIEdgePolyLine","PolyEdge","polyline","OIShapeBase","Shape","IIShapeCircle","_bounds","Circle","computedBondingBox","firstPoint","perimeter","nbPoint","rad","boundingBox","createBetweenPoints","origin","updateBetweenPoints","circle","IIShapeEllipse","orientation","Ellipse","ellipse","IIShapePolygon","Polygon","polygon","createTriangleBetweenPoints","updateTriangleBetweenPoints","poly","createParallelogramBetweenPoints","updateParallelogramBetweenPoints","createRectangleBetweenPoints","updateRectangleBetweenPoints","createRhombusBetweenPoints","updateRhombusBetweenPoints","IIStroke","pointerType","decorators","pointers","Stroke","strokeToSplit","before","after","substract","stroke","partStroke","lastPointBeforeStroke","closestLastPointBeforeStroke","newStrokes","strokeAfter","firstPointAfterStroke","closestFirstPointStrokeAfter","computePressure","ratio","pressure","filterPointByAcquisitionDelta","lastPointer","delta","addPointer","pointer","formatToSend","errors","flag","pp","pIndex","convertPartialStrokesToOIStrokes","strokes","IIRecognizedBase","Recognized","flatMap","updateChildrenStyle","containsStroke","strokeId","removeStrokes","strokeIds","strokeRemoved","filter","includes","IIRecognizedArc","JSON","parse","stringify","ws","IIRecognizedCircle","IIRecognizedEllipse","IIRecognizedLine","IIRecognizedPolyLine","IIRecognizedPolygon","Polygone","IIRecognizedText","baseline","xHeight","label","lines","Text","IISymbolGroup","children","Group","chars","containsSymbol","containsOnlyStroke","extractText","extractStrokes","removeChilds","symbolIds","group","every","texts","symbolId","symbol","s1","IIText","offsetY","getCharCorners","char","boxBox","updateChildrenFont","fontSize","fontWeight","getCharsOverlaps","charCorners","fill","IIEraser","Eraser","convertPartialStrokesToStrokes","ji","Model","positions","currentSymbol","converts","rowHeight","creationDate","lastSentPosition","lastReceivedPosition","getStrokeFromPoint","_strokeList","strokePointer","addPoint","addStroke","updateStroke","updatedStroke","strokeIndex","findIndex","splice","removeStroke","removeStrokesFromPoint","strokeToRemove","extractUnsentStrokes","initCurrentStroke","dpi","pxWidth","appendToCurrentStroke","endCurrentStroke","updatePositionSent","position","updatePositionReceived","mergeExport","mergeConvert","clonedModel","clear","IIModel","symbolsSelected","symbolsToDelete","selectSymbol","find","unselectSymbol","resetSelection","getRootSymbol","getSymbolRowIndex","getSymbolsByRowOrdered","rows","rowIndex","row","s2","r1","r2","roundToLineGuide","isSymbolAbove","isSymbolInRow","isSymbolBelow","getFirstSymbol","previous","current","getLastSymbol","addSymbol","updateSymbol","updatedSymbol","sIndex","replaceSymbol","changeOrderSymbol","fromIndex","toIndex","sym","removeSymbol","symbolIndex","extractDifferenceSymbols","model","added","removed","IModel","currentStroke","strokesToDelete","extractDifferenceStrokes","DefaultServerHTTPConfiguration","DefaultServerWebsocketConfiguration","websocket","pingEnabled","pingDelay","maxPingLostCount","autoReconnect","maxRetryCount","fileChunkSize","DefaultEraserConfiguration","DefaultDiagramConvertConfiguration","types","DefaultDiagramConfiguration","convert","eraser","mimeTypes","DefaultJiixConfiguration","ids","words","DefaultExportConfiguration","jiix","DefaultMarginConfiguration","top","left","right","bottom","DefaultSolverConfiguration","enable","DefaultMathUndoRedoConfiguration","DefaultMathConfiguration","solver","margin","DefaultRawContentConfiguration","classification","DefaultDebugConfiguration","DefaultRecognitionRendererConfiguration","DefaultTextGuidesConfiguration","DefaultTextConfiguration","guides","DefaultTextGuidesConfigurationV2","DefaultTexConfigurationV2","DefaultConvertionConfiguration","force","DefaultShapeConvertConfiguration","DefaultShapeBeautificationConfiguration","DefaultShapeConfiguration","beautification","RecognizerEventName","RecognizerError","RecognizerEvent","emitStartInitialization","START_INITIALIZATION","addStartInitialization","emitEndtInitialization","END_INITIALIZATION","addEndInitialization","emitContentChanged","CONTENT_CHANGED","addContentChangedListener","emitConnectionClose","code","CONNECTION_CLOSE","addConnectionCloseListener","emitSVGPatch","svgPatch","SVG_PATCH","addSVGPatchListener","DefaulRecognitionHTTPV1ConfigurationConfiguration","export","math","diagram","renderer","DefaultRecognizerHTTPV1Configuration","RecognizerHTTPV1Configuration","Set","RecognizerHTTPV1","url","postConfig","buildData","strokeGroupByPenStyle","groupIndex","sg","isPenStyleEqual","ps1","ps2","strokeGroupsToSend","newGroup","contentType","charAt","toUpperCase","toLowerCase","xDPI","yDPI","strokeGroups","post","mimeType","headers","Headers","append","hmac","reqInit","method","body","request","Request","blob","catch","tryFetch","then","res","UNKNOW","WRONG_CREDENTIALS","CANT_ESTABLISH","getMimeTypes","requestedMimeTypes","conversionState","myModel","dataToConcert","promises","mt","all","String","mimeTypesRequiringExport","resize","DefaultRecognizerHTTPV2RecognitionConfiguration","shape","DefaultRecognizerHTTPV2Configuration","RecognizerHTTPV2Configuration","RecognizerHTTPV2","formatStrokes","scaleX","scaleY","send","TRecognizerWebSocketMessageType","DefaultRecognitionWebSocketConfiguration","gestures","ignoreGestureStrokes","DefaultRecognizerWebSocketConfiguration","RecognizerWebSocketConfiguration","RecognizerWebSocket","socket","pingWorker","pingCount","reconnectionCount","currentPartId","currentErrorCode","addStrokeDeferred","contextlessGestureDeferred","transformStrokeDeferred","eraseStrokeDeferred","replaceStrokeDeferred","exportDeferredMap","closeDeferred","waitForIdleDeferred","undoDeferred","redoDeferred","clearDeferred","initialized","readyState","OPEN","rejectDeferredPending","values","resetAllDeferred","clearSocketListener","removeEventListener","openCallback","closeCallback","messageCallback","reason","GOING_AWAY","PROTOCOL_ERROR","UNSUPPORTED_DATA","ABNORMAL_CLOSURE","INVALID_FRAME_PAYLOAD","POLICY_VIOLATION","MESSAGE_TOO_BIG","INTERNAL_ERROR","SERVICE_RESTART","TRY_AGAIN","BAD_GATEWAY","TLS_HANDSHAKE","terminate","manageHMACChallenge","hmacChallengeMessage","hmacChallenge","initPing","PingWorker","postMessage","onmessage","close","manageAuthenticated","pixelTomm","iinkSessionId","manageSessionDescriptionMessage","sessionDescriptionMessage","manageNewPartMessage","newPartMessage","managePartChangeMessage","partChangeMessage","partId","manageContentChangedMessage","contentChangeMessage","canRedo","canUndo","manageExportMessage","exportMessage","manageWaitForIdle","manageErrorMessage","errorMessage","NO_ACTIVITY","TOO_OLD","NO_SESSION_FOUND","manageGestureDetected","gestureMessage","manageContextlessGesture","websocketMessage","Pong","HMAC_Challenge","Authenticated","SessionDescription","NewPart","PartChanged","ContentChanged","Exported","GestureDetected","ContextlessGesture","Idle","newSession","init","WebSocket","CONNECTING","CLOSING","CLOSED","waitForIdle","buildAddStrokesMessage","processGestures","addStrokes","buildReplaceStrokesMessage","oldStrokeIds","replaceStrokes","buildTransformTranslateMessage","transformationType","transformTranslate","buildTransformRotateMessage","x0","y0","transformRotate","buildTransformScaleMessage","transformScale","buildTransformMatrixMessage","transformMatrix","buildEraseStrokesMessage","eraseStrokes","recognizeGesture","buildUndoRedoChanges","changes","changesMessages","erased","replaced","oldStrokes","tr","undo","actions","redo","DefaultRecognizerWebSocketSSRRecognitionConfiguration","DefaultRecognizerWebSocketSSRConfiguration","RecognizerWebSocketSSRConfiguration","RecognizerWebSocketSSR","viewSizeHeight","viewSizeWidth","connected","ackDeferred","exportDeferred","convertDeferred","importDeferred","resizeDeferred","importPointEventsDeferred","toLocaleLowerCase","infinitePing","params","xDpi","yDpi","manageAckMessage","manageContentPackageDescriptionMessage","manageContentChangeMessage","context","stackIndex","undoStackIndex","possibleUndoCount","manageSVGPatchMessage","svgPatchMessage","styleClasses","localModel","import","chunkSize","importFileId","readBlob","fileReader","FileReader","onloadend","ev","onerror","readAsText","importFileMessage","size","blobPart","fileChuckMessage","lastChunk","importPointEvents","events","myExportConverted","undoExports","redoExports","clearExports","CanvasRendererShape","table","returnedAngle","drawEllipseArc","context2D","shapeEllipse","centerPoint","maxRadius","minRadius","z1","z2","z3","z4","boundariesPoints","save","beginPath","alpha","cosAlpha","sinAlpha","moveTo","lineTo","restore","drawLine","drawArrowHead","headPoint","beta","fillStyle","strokeStyle","drawShapeEllipse","beginDecoration","beginTangentAngle","endTangentAngle","drawShapeLine","shapeLine","lastPoint","draw","lineWidth","CanvasRendererStroke","renderArc","context2d","renderLine","linkPoints1","linkPoints2","renderFinal","linkPoints","newAngle","renderQuadratic","ctrl","linkPoints3","quadraticCurveTo","NUMBER_POINTS","NUMBER_QUADRATICS","secondPoint","beginLine","endLine","beginFinal","endFinal","closePath","CanvasRendererText","string","textLine","drawUnderline","textUnderline","underline","topLeftPoint","firstCharacter","lastCharacter","drawText","font","textHeight","textAlign","justificationType","textBaseline","fillText","drawTextLine","underlineList","CanvasRenderer","strokeRenderer","shapeRenderer","textRenderer","createCanvas","canvas","resizeContent","pixelRatio","window","devicePixelRatio","renderingCanvas","capturingCanvas","domElement","parentNode","minWidth","clientWidth","minHeight","clientHeight","getContext","drawSymbol","guide","setAttribute","backgroundSize","parent","renderingCanvasContext","capturingCanvasContext","drawModel","clearRect","drawPendingStroke","innerHTML","SVGRendererConst","arrowHeadStartMarker","arrowHeadEndMaker","selectionFilterId","removalFilterId","crossMarker","noSelection","XMLNS","SVGBuilder","createLayer","attrs","svgEl","createElementNS","createFilter","createDefs","createMarker","marker","createComponentTransfert","createDropShadow","deviation","shadow","createTransfertFunctionTable","feFunc","createGroup","groupEl","createLine","lineEl","createCircle","circleEl","createPath","pathEl","createPolygon","polygonEl","createRect","rectEl","createTSpan","tSpanEl","textContent","createForeignObject","node","objEl","createText","textEl","SVGRendererEdgeUtil","getLinePath","getPolyLinePath","getArcPath","getSVGPath","getSVGElement","pathAttrs","Arrow","SVGRendererEraserUtil","startPath","strokeWith","acc","shadowBlur","SVGRendererDecoratorUtil","decorator","Highlight","Surround","Strikethrough","Underline","SVGRendererShapeUtil","getPolygonePath","getCirclePath","getEllipsePath","SVGRendererStrokeUtil","getFinalPath","parts","getQuadraticPath","central","STROKE_LENGTH","STROKE_WIDTH","NB_QUADRATICS","beforeLastPoint","strokeGroup","strokeAttrs","deco","SVGRendererTextUtil","textGroup","textElement","SVGRendererRecognizedUtil","recognizedSymbol","SVGRendererGroupUtil","getChildElement","symbolGroup","SVGRenderer","groupGuidesId","layer","definitionGroup","verticalGuides","horizontalGuides","initLayer","setProperty","createSVGTools","defs","REFX","SIZE","REFY","arrowHeadMarkerAttrs","markerWidth","markerHeight","refX","refY","arrowHeadStart","orient","arrowHeadEnd","crossMarkerAttrs","viewBox","cross","createFilters","filtersGroup","removalFilter","filterUnits","bfeComponentTransfer","bfeFuncA","selectionFilter","drawGuides","getAttribute","offSet","gap","subOffSet","role","Guide","guidesGroup","svgLine","subY","subX","svgPoint","removeGuides","querySelector","oncontextmenu","buildElementFromSymbol","prependElement","el","symbolToMove","moveEl","insertAdjacentElement","nextElementSibling","previousElementSibling","appendElement","removeElement","oldStroke","oldNode","replaceWith","elements","drawCircle","drawRect","drawConnectionBetweenBox","attrsLine","getElementById","getElements","tagName","query","querySelectorAll","clearElements","firstChild","SVGStroker","buildSVGPath","drawStroke","svgElement","svgPathElement","svgPath","InteractiveInkSSRSVGRenderer","stroker","replaceAll","layerName","update","oldLayer","insertAdjacentHTML","svg","pendingStrokesGroup","replaceElement","elementToRemove","parentSelector","parentId","insertBefore","refId","selector","removeAttribute","updateLayer","updatesLayer","updates","clearPendingStroke","pendingStrokeGroup","clearErasingStrokes","erasingStroke","rect","getBoundingClientRect","svgList","DefaultGuidesConfiguration","DefaultRendererConfiguration","DefaultIIRendererConfiguration","DefaultListenerConfiguration","capture","passive","DefaultGrabberConfiguration","listenerOptions","xyFloatPrecision","timestampFloatPrecision","delayLongTouch","PointerEventGrabber","layerCapture","capturing","prevent","preventDefault","onPointerDown","onPointerMove","onPointerUp","onContextMenu","roundFloat","oneFloat","requestedFloatPrecision","floatPrecision","extractPointer","clientX","clientY","changedTouches","clientLeft","scrollLeft","clientTop","scrollTop","getPointerInfos","isPrimary","button","buttons","pointerDownHandler","pointerInfo","pointerMoveHandler","pointerUpHandler","pointerOutHandler","contextMenuHandler","stopPointerEvent","attach","detach","removeProperty","AbstractWriterManager","grabber","detectGesture","continue","localPointer","createCurrentSymbol","updateCurrentSymbol","IIConversionManager","fontStyle","computeFontSize","buildChar","grid","weight","buildText","word","charSymbols","charFontSize","charStrokes","items","hightlight","strikethrough","surround","convertText","onlyText","jiixWords","jiixChars","textFontSize","isNewLine","currentY","leftX","currentX","texter","getSpaceWidth","wordStrokes","wordSymbol","nbRow","setBounds","buildCircle","cx","cy","buildEllipse","rx","ry","buildRectangle","rectangle","buildPolygon","buildRhombus","buildTriangle","buildParallelogram","convertNode","associatedStroke","uniqStrokes","Rectangle","Triangle","Parallelogram","Rhombus","buildLine","x1","y1","x2","y2","p1Decoration","p2Decoration","buildPolyEdge","unshift","buildArc","convertEdge","apply","removeSelectedGroup","strokesToConvert","extractStrokesFromSymbols","conversionResults","conversion","addSymbols","cs","removeSymbols","history","IIResizeManager","interactElementsGroup","direction","transformOrigin","keepRatio","applyToStroke","applyToShape","applyToEdge","applyOnText","updateBounds","applyOnGroup","applyToSymbol","applyOnRecognizedSymbol","setTransformOrigin","originX","originY","scaleElement","sx","sy","InteractElementsGroup","localPoint","horizontalResize","verticalResize","snaps","snapResize","deltaX","deltaY","clearSnapToElementLines","oldSymbols","strokesFromSymbols","recognizer","svgDebugger","IIRotationManager","angleRad","strokeText","rotateElement","angleDegree","snapRotation","IISelectionManager","selectingId","startSelectionPoint","endSelectionPoint","selectedGroup","rotator","translator","resizer","selectionBox","drawSelectingRect","clearSelectingRect","getPoint","createTranslateRect","Translate","boxWithMarge","translateEl","handler","stopPropagation","endHandler","cursor","resetSelectedGroup","hideInteractElements","createRotateGroup","Rotate","attrs1","attrs2","attrs3","createResizeGroup","Resize","P_NW","P_NE","P_SE","P_SW","bindEl","def","lineResize","cornerResize","createInteractElementsGroup","symbolElementMap","surroundGroup","SURROUND_ATTRS","createEdgeResizeGroup","pointIndex","pointEl","createInteractEdgeGroup","drawSelectedGroup","groupBox","getBBox","menu","show","hide","updatedSymbols","found","currentEl","symbolTypesAllowed","parentElement","unselectAll","updateLayerUI","IITextManager","drawSymbolHidden","setCharsBounds","textGroupEl","getNumberOfChars","ext","getExtentOfChar","getElementBoundingBox","markers","clipped","getBoundingBox","charSymbol","textSymbol","moveTextAfter","textsAfter","IITranslateManager","addToHistory","translateElement","nudge","snapTranslate","IIWriterManager","tool","Pencil","currentSymbolOrigin","wt","gestureManager","needContextLessGesture","strokeBoundsWithMargin","getSymbolsBounds","DoubleArrow","updateCurrentSymbolShape","updateCurrentSymbolEdge","interactWithBackend","localStroke","gestureFromContextLess","getGestureFromContextLess","pop","localSymbol","IIDebugSVGManager","snapPointsVisibility","verticesVisibility","boundingBoxVisibility","recognitionBoxVisibility","recognitionItemBoxVisibility","debugSnapPoints","debugVertices","showBoundingBox","hideBoundingBox","debugRecognitionBox","debugRecognitionItemBox","showSnapPoints","hideSnapPoints","showVertices","hideVertices","drawBoundingBox","symbolAttrs","charAttrs","symEl","ca","sa","debugBoundingBox","drawRecognitionBox","infos","COLOR","recognitionGroup","infosGroup","infoX","infoY","TEXT_HEIGHT","w","infosGroupBox","rectBox","rectTranslate","newRectBox","showRecognitionBox","hideProperties","candidates","inf","clearRecognitionBox","drawRecognitionItemBox","recognitionItemGroup","charX","charY","charsGroup","charsGroupBox","showRecognitionItemBox","clearRecognitionItemBox","IIMoveManager","IDebugSVGManager","recognitionBoxItemsVisibility","debugRecognitionBoxItems","debugAttr","rectAttr","buildInfos","obj","currentPath","localPath","associatedStrokes","range","to","h","showRecognitionBoxItems","spans","clearRecognitionBoxItems","EraseManager","currentEraser","lastSeg","InteractiveInkEditor","getInitialHistoryContext","HistoryManager","stack","updateContext","maxStackSize","updateStack","previousModel","nextModel","IIHistoryManager","isChangesEmpty","updated","order","ungroup","stackIdx","reverseChanges","reversedChanges","newSymbols","currentStackItem","previousStackItem","nextStackItem","IHistoryManager","updateModelStack","DefaultHistoryConfiguration","IIMenu","thicknessList","fontSizeList","fontWeightList","colors","createWrapCollapsible","title","head","btn","ArrowDown","content","toggle","createMenuItemBoolean","labelEl","checkbox","disabled","initValue","indeterminate","checked","createMenuItemSelect","select","opt","Option","createMenuItemButton","icon","createMenuItemButtonList","createMenuItemColorList","createColorList","list","colorEl","createMenuItem","SurroundAction","StrikeThroughAction","InsertAction","DefaultGestureConfiguration","Select","strikeThrough","Draw","insert","LineBreak","IIGestureManager","insertAction","surroundAction","strikeThroughAction","gestureAction","strokeSpaceWidth","applySurroundGesture","gestureStroke","symWithDec","highlight","computeScratchOnStrokes","partPointersToRemove","subStrokes","ss","fullStrokeId","strokePartToErase","computeScratchOnText","charsToRemove","cIndex","c1","computeScratchOnSymbol","strokesScratchedResult","childrenNotTouch","results","strokesToConserve","symbolsGroup","textScratchedResult","applyScratch","symbolsToUpdate","symbolsToErase","symbolsToReplace","updateSymbols","replaceSymbols","applyJoinGesture","symbolsAbove","symbolsRow","symbolsBeforeGestureInRow","symbolsOnGestureInRow","symbolsAfterGestureInRow","symbolsBelow","symbolToJoin","childBefore","childAfter","lastSymbBefore","firstSymbolAfter","translateX","lastSymbBeforeClone","firstSymbolAfterClone","symbolsToGroup","strokeTexts","d1","rest","lastSymbolBeforeGesture","firstSymbolAfterGesture","symbolInNextRow","symbolsAfterNextRow","lastSymbolAbove","createStrokesFromGestureSubStroke","strokeOrigin","subStroke","computeSplitStroke","computeSplitStrokeInGroup","newGroups","symbolsBefore","symbolsAfter","strokeIdToSplit","gs","computeChangesOnSplitStroke","symbolToSplit","strokesToSplit","strokesBefore","strokesAfter","computeChangesOnSplitGroup","groupToSplit","groupSymbolsBefore","groupsSymbolsAfter","groupBefore","grouAfter","computeChangesOnSplitStrokeText","strokeTextToSplit","strokeTextBefore","strokeTextAfter","computeChangesOnSplitText","textToSplit","charsBefore","charsAfter","newTexts","textBefore","pointAfter","textAfter","applyInsertGesture","Insert","applyUnderlineGesture","applyStrikeThroughGesture","Erase","updateSymbolsStyle","synchronizeStrokesWithJIIX","gestureType","gestureStrokeId","strokeAfterIds","strokeBeforeIds","symbolsToUnderline","symbolsToStrikeThrough","IIMenuSub","param","trigger","menuTitle","menuTitleElement","subMenu","open","unwrap","wrap","IIMenuAction","menuLanguage","menuClear","menuUndo","menuRedo","menuConvert","guideGaps","isMobile","createMenuClear","createMenuLanguage","triggerBtn","languages","changeLanguage","createMenuUndo","createMenuRedo","createMenuConvert","createMenuGesture","subMenuWrapper","surroundActionValues","strikeThroughActionValues","splitActionValues","writer","Write","createMenuGuide","renderingConfiguration","createMenuSnap","createMenuDebug","menuItems","createMenuExport","downloadAsJson","downloadAsSVG","downloadAsPNG","readFileAsText","file","reader","onload","createMenuImport","importInput","accept","multiple","importBtn","files","fileString","createSymbols","closeAllSubMenu","action","menuTrigger","visibility","IIMenuTool","writeBtn","menuSelect","menuMove","menuErase","menuShape","subMenuShape","menuEdge","subMenuEdge","createMenuWrite","createMenuMove","Move","createMenuSelect","createMenuErase","createShapeSubMenu","subMenuContent","nextSibling","createMenuShape","rectangleIcon","triangle","rhombus","createEdgeSubMenu","square","createMenuEdge","lineIcon","arrow","doubleArrow","IIMenuStyle","menuColorStroke","menuColorFill","menuThickness","menuFontSize","menuFontWeight","menuStrokeOpacity","writeShape","createMenuStroke","symbolsStyles","st","menuColorStrokeDef","menuColor","createMenuColorFill","createMenuThickness","createMenuFontSize","textSymbols","updateTextFontStyle","createMenuFontWeight","createMenuOpacity","currentOpacity","input","output","shapeSelected","IIMenuContext","editMenu","editInput","editSaveBtn","reorderMenu","decoratorMenu","menuExport","duplicateBtn","groupBtn","convertBtn","removeBtn","haveSymbolsSelected","symbolsDecorable","showDecorator","createMenuEdit","firstChar","createMenuDuplicate","symbolsToDuplicate","updateDeepIdInGroup","gr","duplicatedSymbols","createMenuGroup","ungroupSymbol","groupSymbols","convertSymbols","createMenuRemove","createMenuReorder","changeOrderSymbols","reverse","createDecoratorSubMenu","labelEL","decoIndex","_c","createMenuDecorator","createMenuSelectAll","selectAll","updateDecoratorSubMenu","decos","btnToActivate","updateGroupMenu","DefaultMenuConfiguration","IIMenuManager","custom","CustomMenuStyle","CustomMenuTool","CustomMenuAction","DefaultSnapConfiguration","SnapConfiguration","IISnapManager","selectionSnapPoints","otherSnapPoints","selectSymbolIds","snapThreshold","getNearestVerticalGuide","prev","curr","getNearestHorizontalGuide","getGuidePointToSnap","drawSnapToElementLines","getSnapLinesInfos","sourcePoints","targetPoints","Infinity","verticales","horizontales","horizontal","vertical","snapLines","snapLinesInfos","selectionSymbolPoints","lastDeltaX","lastDeltaY","gridPoint","DefaultInteractiveInkEditorConfiguration","snap","InteractiveInkEditorConfiguration","layerUITimer","recognizeStrokeTimer","converter","move","CustomRecognizer","manageError","onContentChanged","updateLayerState","initializationPromise","setCursorStyle","clearTimeout","initialize","compStyles","getComputedStyle","parseInt","buildShape","partialShape","buildEdge","partialEdge","buildRecognized","partialSymbol","buildGroup","partialGroup","buildStroke","buildStrokeText","buildSymbol","createSymbol","partialSymbols","updateTextBounds","symList","lastWidth","textIds","symbolsTranslated","textChildren","symToReplace","getSymbolsAndStrokesAssociatedFromJIIXStrokeItems","strokeIdsUsed","symIdx","jiixAssociation","symAsso","recognizedText","wd","Node","symbolRecognized","groupStrokeIds","symbolsToRemove","strokesIds","partialStrokes","triggerDownload","fileName","urlData","downloadAnchorNode","click","buildBlobFromSymbols","svgNode","cloneNode","svgString","XMLSerializer","serializeToString","Blob","getExportName","extension","year","month","day","hour","minute","second","toLocaleDateString","navigator","language","selection","svgBlob","URL","createObjectURL","image","Image","src","drawImage","revokeObjectURL","imgURI","toDataURL","symbolsToExport","dataStr","encodeURIComponent","extractTextsFromSymbols","extractBackendChanges","backendChanges","modifications","actionsToBackend","DefaultIEditorTriggerConfiguration","exportContent","exportContentDelay","resizeTriggerDelay","DefaultInkEditorDeprecatedConfiguration","triggers","InkEditorDeprecatedConfiguration","InkEditorDeprecated","resizeTimer","exportTimer","styleManager","CustomGrabber","drawCurrentStroke","updateModelRendering","deferred","currentModel","newModel","deferredResize","resizeModel","InteractiveInkSSRSmartGuide","uuid","smartGuideElement","wrapperElement","prompterContainerElement","prompterTextElement","ellipsisElement","tagElement","candidatesElement","menuElement","convertElement","copyElement","deleteElement","isMenuOpen","lastWord","wordToChange","createRootElement","createWrapperElement","createPrompterContainerElement","createPrompterTextElement","createEllipsisElement","createTagElement","createCandidatesElement","createMoreMenuElement","createConvertElement","createCopyElement","createDeleteElement","addListeners","showCandidates","wordId","hideCandidates","openMenu","closeMenu","onClickEllipsis","onClickConvert","createTextAreaElement","isRTL","documentElement","textArea","yPosition","pageYOffset","selectText","userAgent","match","createRange","selectNodeContents","getSelection","removeAllRanges","addRange","setSelectionRange","onClickCopy","fakeEl","execCommand","onClickDelete","onClickCandidate","candidate","JIIX","onClickPrompter","onClickOutSide","removeListeners","marginLeft","marginRight","createWordSpan","span","myFragment","createDocumentFragment","offsetLeft","populatePrompter","DefaultIIEditorTriggerConfiguration","DefaultInteractiveInkSSREditorConfiguration","smartGuide","InteractiveInkSSREditorConfiguration","InteractiveInkSSREditor","penClass","syncStyle","onExport","jjix","synchronizeModelWithBackend","onSVGPatch","initializeSmartGuide","onContetChaned","onError","unsentStrokes","blobToImport","strokesToImport","str","exportPoints","DefaultInkEditorConfiguration","InkEditorConfiguration","IWriterManager","InkEditor","debugger","removedStrokes","Editor","load","instance","getInstance"],"mappings":"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","x_google_ignoreList":[25]}