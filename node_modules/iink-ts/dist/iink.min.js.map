{"version":3,"file":"iink.min.js","sources":["../src/Constants.ts","../src/utils/DeferredPromise.ts","../src/utils/math.ts","../src/utils/geometry.ts","../src/utils/version.ts","../src/utils/crypto.ts","../src/utils/units.ts","../src/utils/uuid.ts","../src/utils/object.ts","../src/utils/language.ts","../src/utils/quadratics.ts","../src/utils/infos.ts","../src/logger/logger.ts","../src/logger/LoggerManager.ts","../src/logger/LoggerConfiguration.ts","../src/editor/EditorEvent.ts","../src/model/Export.ts","../src/model/ExportV2.ts","../src/editor/EditorLayer.ts","../src/editor/AbstractEditor.ts","../src/symbol/Box.ts","../src/style/Style.ts","../src/style/PenStyle.ts","../src/style/Theme.ts","../node_modules/json-css/lib/jsoncss.min.js","../src/style/StyleHelper.ts","../src/style/StyleManager.ts","../src/symbol/IIDecorator.ts","../src/symbol/Symbol.ts","../src/symbol/geometry/IIEdge.ts","../src/symbol/geometry/IIShape.ts","../src/symbol/recognized/IIRecognizedBase.ts","../src/transform/Matrix.ts","../src/symbol/IISymbolBase.ts","../src/symbol/Point.ts","../src/symbol/geometry/IIEdgeArc.ts","../src/symbol/geometry/IIEdgeLine.ts","../src/symbol/geometry/IIEdgePolyLine.ts","../src/symbol/geometry/IIShapeCircle.ts","../src/symbol/geometry/IIShapeEllipse.ts","../src/symbol/geometry/IIShapePolygon.ts","../src/symbol/IIStroke.ts","../src/symbol/recognized/IIRecognizedArc.ts","../src/symbol/recognized/IIRecognizedCircle.ts","../src/symbol/recognized/IIRecognizedEllipse.ts","../src/symbol/recognized/IIRecognizedLine.ts","../src/symbol/recognized/IIRecognizedPolyLine.ts","../src/symbol/recognized/IIRecognizedPolygon.ts","../src/symbol/recognized/IIRecognizedText.ts","../src/symbol/IISymbolGroup.ts","../src/symbol/IIText.ts","../src/symbol/IIEraser.ts","../src/symbol/Stroke.ts","../src/model/Model.ts","../src/model/IIModel.ts","../src/model/IModel.ts","../src/recognizer/ServerConfiguration.ts","../src/recognizer/recognition/EraserConfiguration.ts","../src/recognizer/recognition/DiagramConfiguration.ts","../src/recognizer/recognition/ExportConfiguration.ts","../src/recognizer/recognition/MarginConfiguration.ts","../src/recognizer/recognition/MathConfiguration.ts","../src/recognizer/recognition/RawContentConfiguration.ts","../src/recognizer/recognition/RecognitionRendererConfiguration.ts","../src/recognizer/recognition/TextConfiguration.ts","../src/recognizer/recognition/TextConfigurationV2.ts","../src/recognizer/recognition/ShapeConfiguration.ts","../src/recognizer/RecognizerEvent.ts","../src/recognizer/RecognizerError.ts","../src/recognizer/RecognizerHTTPV1Configuration.ts","../src/recognizer/RecognizerHTTPV1.ts","../src/recognizer/RecognizerHTTPV2Configuration.ts","../src/recognizer/RecognizerHTTPV2.ts","../src/recognizer/RecognizerWebSocketMessage.ts","../src/recognizer/RecognizerWebSocketConfiguration.ts","../src/recognizer/RecognizerWebSocket.ts","../src/recognizer/RecognizerWebSocketSSRConfiguration.ts","../src/recognizer/RecognizerWebSocketSSR.ts","../src/renderer/canvas/CanvasRendererShape.ts","../src/renderer/canvas/CanvasRendererStroke.ts","../src/renderer/canvas/CanvasRendererText.ts","../src/renderer/canvas/CanvasRenderer.ts","../src/renderer/svg/SVGRendererConst.ts","../src/renderer/svg/SVGBuilder.ts","../src/renderer/svg/SVGRendererEdgeUtil.ts","../src/renderer/svg/SVGRendererEraserUtil.ts","../src/renderer/svg/SVGRendererDecoratorUtil.ts","../src/renderer/svg/SVGRendererShapeUtil.ts","../src/renderer/svg/SVGRendererStrokeUtil.ts","../src/renderer/svg/SVGRendererTextUtil.ts","../src/renderer/svg/SVGRendererRecognizedUtil.ts","../src/renderer/svg/SVGRendererGroupUtil.ts","../src/renderer/svg/SVGRenderer.ts","../src/renderer/svg/SVGStroker.ts","../src/renderer/svg/SVGSSRenderer.ts","../src/renderer/RendererConfiguration.ts","../src/grabber/GrabberConfiguration.ts","../src/grabber/PointerEventGrabber.ts","../src/manager/AbstractWriterManager.ts","../src/manager/IIConversionManager.ts","../src/manager/IIResizeManager.ts","../src/manager/IIRotationManager.ts","../src/manager/IISelectionManager.ts","../src/manager/IITextManager.ts","../src/manager/IITranslateManager.ts","../src/manager/IIWriterManager.ts","../src/manager/IIDebugSVGManager.ts","../src/manager/IIMoveManager.ts","../src/manager/IDebugSVGManager.ts","../src/manager/EraseManager.ts","../src/history/HistoryContext.ts","../src/history/HistoryManager.ts","../src/history/IIHistoryManager.ts","../src/history/IHistoryManager.ts","../src/history/HistoryConfiguration.ts","../src/menu/IIMenu.ts","../src/gesture/Gesture.ts","../src/gesture/GestureConfiguration.ts","../src/gesture/IIGestureManager.ts","../src/menu/IIMenuSub.ts","../src/menu/IIMenuAction.ts","../src/menu/IIMenuTool.ts","../src/menu/IIMenuStyle.ts","../src/menu/IIMenuContext.ts","../src/menu/MenuConfiguration.ts","../src/menu/IIMenuManager.ts","../src/snap/IISnapConfiguration.ts","../src/snap/IISnapManager.ts","../src/editor/InteractiveInkEditorConfiguration.ts","../src/editor/InteractiveInkEditor.ts","../src/editor/IEditorTriggerConfiguration.ts","../src/editor/InkEditorDeprecatedConfiguration.ts","../src/editor/InkEditorDeprecated.ts","../src/smartguide/InteractiveInkSSRSmartGuide.ts","../src/editor/IIEditorTriggerConfiguration.ts","../src/editor/InteractiveInkSSREditorConfiguration.ts","../src/editor/InteractiveInkSSREditor.ts","../src/editor/InkEditorConfiguration.ts","../src/manager/IWriterManager.ts","../src/editor/InkEditor.ts","../src/editor/Editor.ts","../src/recognizer/recognition/ConvertionConfiguration.ts","../src/utils/font.ts"],"sourcesContent":["/**\n * @group Editor\n * @summary\n * List the possibilities of interactions\n */\nexport enum EditorTool\n{\n  Write = \"write\",\n  Erase = \"erase\",\n  /**\n   * @remarks only usable in the case of offscreen\n   */\n  Select = \"select\",\n  /**\n   * @remarks only usable in the case of offscreen\n   */\n  Move = \"move\"\n}\n\n/**\n * @group Editor\n * @summary\n * List all the shapes that can be drawn\n * @remarks\n * only usable in the case of offscreen\n */\nexport enum EditorWriteTool\n{\n  Pencil = \"pencil\",\n  Rectangle = \"rectangle\",\n  Rhombus = \"rhombus\",\n  Circle = \"circle\",\n  Ellipse = \"ellipse\",\n  Triangle = \"triangle\",\n  Parallelogram = \"parallelogram\",\n  Line = \"line\",\n  Arrow = \"arrow\",\n  DoubleArrow = \"double-arrow\",\n}\n\n/**\n * @group Renderer\n * @summary\n * List all svg elements roles\n * @remarks\n * only usable in the case of offscreen\n */\nexport enum SvgElementRole\n{\n  Guide = \"guide\",\n  InteractElementsGroup = \"interact-elements-group\",\n  Translate = \"translate\",\n  Resize = \"resize\",\n  Rotate = \"rotate\",\n}\n\n/**\n * @group Renderer\n * @summary\n * List all svg elements resize direction\n * @remarks\n * only usable in the case of offscreen\n */\nexport const enum ResizeDirection\n{\n  North = \"n-resize\",\n  East = \"e-resize\",\n  South = \"s-resize\",\n  West = \"w-resize\",\n  NorthEast = \"ne-resize\",\n  NorthWest = \"nw-resize\",\n  SouthEast = \"se-resize\",\n  SouthWest = \"sw-resize\"\n}\n\n/**\n * @group Renderer\n */\nexport const SELECTION_MARGIN = 10 as const\n","\n/**\n * @group Utils\n */\nexport class DeferredPromise<T> {\n  promise: Promise<T>\n  resolve!: (value: T) => void\n  reject!: (value: Error | string) => void\n\n  isFullFilled: boolean\n  isPending: boolean\n\n\n  constructor()\n  {\n    this.isFullFilled = false\n    this.isPending = true\n\n    this.promise = new Promise((resolve, reject) =>\n    {\n      this.reject = async (v: unknown) =>\n      {\n        this.isFullFilled = true\n        this.isPending = false\n        return reject(v)\n      }\n      this.resolve = async (v: unknown) =>\n      {\n        this.isFullFilled = true\n        this.isPending = false\n        return resolve(v as T)\n      }\n    })\n  }\n}\n","/**\n * @group Utils\n */\nexport function isValidNumber(x: unknown): boolean\n{\n  if (x === undefined || x === null) return false\n  return !isNaN(parseFloat(x.toString())) && isFinite(+x)\n}\n/**\n * @group Utils\n */\nexport function isBetween(val: number, min: number, max: number): boolean\n{\n  return val >= min && val <= max\n}\n\n/**\n * @group Utils\n */\nexport function computeAverage(arr: number[]): number\n{\n  return arr.reduce((p, c) => p + c, 0) / (arr.length || 1)\n}\n","import { TBox, TPoint, TSegment } from \"../symbol\"\nimport { isBetween } from \"./math\"\n\n/**\n * @group Utils\n */\nexport function computeDistance(p1: TPoint, p2: TPoint): number\n{\n  const distance = Math.hypot(p2.y - p1.y, p2.x - p1.x)\n  return isNaN(distance) ? 0 : distance\n}\n\n/**\n * @group Utils\n */\nexport function computeAngleAxeRadian(begin: TPoint, end: TPoint): number\n{\n  return Math.atan2(end.y - begin.y, end.x - begin.x)\n}\n\n/**\n * @group Utils\n */\nexport function createPointsOnSegment(p1: TPoint, p2: TPoint, spaceBetweenPoint = 1): TPoint[]\n{\n  const points: TPoint[] = []\n  const globalDistance = computeDistance(p1, p2)\n  let spaceWithP1 = spaceBetweenPoint\n  while (spaceWithP1 < globalDistance) {\n    const p = {\n      x: p1.x + (spaceWithP1 * (p2.x - p1.x)) / globalDistance,\n      y: p1.y + (spaceWithP1 * (p2.y - p1.y)) / globalDistance\n    }\n    points.push(p)\n    spaceWithP1 += spaceBetweenPoint\n  }\n  return points\n}\n\n/**\n * @group Utils\n */\nexport function scalaire(v1: TPoint, v2: TPoint): number\n{\n  return v1.x * v2.x + v1.y * v2.y\n}\n\n/**\n * @group Utils\n */\nexport function computeNearestPointOnSegment(p: TPoint, seg: TSegment): TPoint\n{\n  const vectP1P = { x: p.x - seg.p1.x, y: p.y - seg.p1.y }\n  const vectP1P2 = { x: seg.p2.x - seg.p1.x, y: seg.p2.y - seg.p1.y }\n  if (vectP1P2.x === 0 && vectP1P2.y === 0) {\n    return seg.p1\n  }\n  const scalaireP1P_P1P2 = scalaire(vectP1P, vectP1P2)\n  const scalaireP1P2_P1P2 = scalaire(vectP1P2, vectP1P2)\n\n  const t = Math.min(1, Math.max(0, scalaireP1P_P1P2 / scalaireP1P2_P1P2))\n  return { x: seg.p1.x + (vectP1P2.x * t), y: seg.p1.y + (vectP1P2.y * t) }\n}\n\n/**\n * @group Utils\n */\nexport function isPointInsideBox(point: TPoint, box: TBox): boolean\n{\n  return isBetween(point.x, box.x, box.x + box.width) && isBetween(point.y, box.y, box.y + box.height)\n}\n\n/**\n * @group Utils\n */\nexport function convertRadianToDegree(radian: number): number\n{\n  return +((radian % (2 * Math.PI)) / Math.PI * 180).toFixed(4)\n}\n\n/**\n * @group Utils\n */\nexport function convertDegreeToRadian(degree: number): number\n{\n  return +((degree % 360) / 180 * Math.PI).toFixed(4)\n}\n\n/**\n * @group Utils\n */\nexport function computeRotatedPoint(point: TPoint, center: TPoint, radian: number): TPoint\n{\n  const dx = point.x - center.x\n  const dy = point.y - center.y\n  const cos = Math.cos(radian)\n  const sin = Math.sin(radian)\n  return {\n    x: +(center.x + cos * dx - sin * dy).toFixed(3),\n    y: +(center.y + sin * dx + cos * dy).toFixed(3)\n  }\n}\n\n/**\n * @group Utils\n */\nexport function computePointOnEllipse(center: TPoint, radiusX: number, radiusY: number, phi: number, theta: number): TPoint\n{\n  const cosPhi = Math.cos(phi)\n  const sinPhi = Math.sin(phi)\n\n  const M = Math.abs(radiusX) * Math.cos(theta)\n  const N = Math.abs(radiusY) * Math.sin(theta)\n\n  return {\n    x: +(center.x + cosPhi * M - sinPhi * N).toFixed(3),\n    y: +(center.y + sinPhi * M + cosPhi * N).toFixed(3)\n  }\n}\n\n/**\n * @group Utils\n */\nexport function computeDistanceBetweenPointAndSegment(p: TPoint, seg: TSegment): number\n{\n  return computeDistance(p, computeNearestPointOnSegment(p, seg))\n}\n\n/**\n * @group Utils\n */\nexport function findIntersectionBetween2Segment(seg1: TSegment, seg2: TSegment): TPoint | undefined\n{\n\n  if (seg1.p1.x === seg2.p1.x && seg1.p1.y === seg2.p1.y) return seg1.p1\n  if (seg1.p1.x === seg2.p2.x && seg1.p1.y === seg2.p2.y) return seg1.p1\n\n  if (seg1.p2.x === seg2.p1.x && seg1.p2.y === seg2.p1.y) return seg1.p2\n  if (seg1.p2.x === seg2.p2.x && seg1.p2.y === seg2.p2.y) return seg1.p2\n\n  const S1dx = seg1.p2.x - seg1.p1.x\n  const S1dy = seg1.p2.y - seg1.p1.y\n\n  const S2dx = seg2.p2.x - seg2.p1.x\n  const S2dy = seg2.p2.y - seg2.p1.y\n\n  const S1S2dx = seg1.p1.x - seg2.p1.x\n  const S1S2dy = seg1.p1.y - seg2.p1.y\n\n  const ua_t = S2dx * S1S2dy - S2dy * S1S2dx\n  const ub_t = S1dx * S1S2dy - S1dy * S1S2dx\n  const u_b = S2dy * S1dx - S2dx * S1dy\n\n  if (ua_t === 0 || ub_t === 0 || u_b === 0) return\n\n  const ua = ua_t / u_b\n  const ub = ub_t / u_b\n  if (isBetween(ua, 0, 1) && isBetween(ub, 0, 1)) {\n    return {\n      x: seg1.p1.x + ua * S1dx,\n      y: seg1.p1.y + ua * S1dy\n    }\n  }\n  return\n}\n\n/**\n * @group Utils\n */\nexport function findIntersectBetweenSegmentAndCircle(seg: TSegment, c: TPoint, r: number): TPoint[]\n{\n  const result: TPoint[] = []\n\n  const a = Math.pow(seg.p2.x - seg.p1.x, 2) + Math.pow(seg.p2.y - seg.p1.y, 2)\n  const b = 2 * ((seg.p2.x - seg.p1.x) * (seg.p1.x - c.x) + (seg.p2.y - seg.p1.y) * (seg.p1.y - c.y))\n  const cc = Math.pow(c.x, 2) + Math.pow(c.y, 2) + Math.pow(seg.p1.x, 2) + Math.pow(seg.p1.y, 2) - 2 * (c.x * seg.p1.x + c.y * seg.p1.y) - Math.pow(r, 2)\n  const deter = Math.pow(b, 2) - 4 * a * cc\n\n  if (deter <= 0) return []\n\n  const e = Math.sqrt(deter)\n  const u1 = (-b + e) / (2 * a)\n  const u2 = (-b - e) / (2 * a)\n\n  if ((u1 < 0 || u1 > 1) && (u2 < 0 || u2 > 1)) {\n    return result\n  }\n\n  if (isBetween(u1, 0, 1)) {\n    result.push({\n      x: (seg.p2.x - seg.p1.x) * u1 + seg.p1.x,\n      y: (seg.p2.y - seg.p1.y) * u1 + seg.p1.y\n    })\n  }\n\n  if (isBetween(u2, 0, 1)) {\n    result.push({\n      x: (seg.p2.x - seg.p1.x) * u2 + seg.p1.x,\n      y: (seg.p2.y - seg.p1.y) * u2 + seg.p1.y\n    })\n  }\n\n  return result\n}\n\n/**\n * @group Utils\n */\nexport function computeAngleRadian(p1: TPoint, center: TPoint, p2: TPoint): number\n{\n  const p1c = Math.sqrt(Math.pow(center.x - p1.x, 2) + Math.pow(center.y - p1.y, 2))\n  const p2c = Math.sqrt(Math.pow(center.x - p2.x, 2) + Math.pow(center.y - p2.y, 2))\n  const p1p2 = Math.sqrt(Math.pow(p2.x - p1.x, 2) + Math.pow(p2.y - p1.y, 2))\n  return Math.acos((p2c * p2c + p1c * p1c - p1p2 * p1p2) / (2 * p2c * p1c))\n}\n\n/**\n * @group Utils\n */\nexport function getClosestPoints(points1: TPoint[], points2: TPoint[]): { p1: TPoint, p2: TPoint }\n{\n  let p1 = points1[0]\n  let p2 = points2[0]\n  let minDistance = Number.MAX_SAFE_INTEGER\n  points1.forEach(_p1 =>\n  {\n    points2.forEach(_p2 =>\n    {\n      const d = computeDistance(_p1, _p2)\n      if (minDistance > d) {\n        minDistance = d\n        p1 = _p1\n        p2 = _p2\n      }\n    })\n  })\n  return { p1, p2 }\n}\n\n/**\n * @group Utils\n */\nexport function getClosestPoint(points: TPoint[], point: TPoint): { point?: TPoint, index: number }\n{\n  let minDistance = Number.MAX_SAFE_INTEGER\n  let closest: TPoint | undefined\n  let index = -1\n  points.forEach((p, i) =>\n  {\n    const d = computeDistance(p, point)\n    if (minDistance > d) {\n      minDistance = d\n      closest = p\n      index = i\n    }\n  })\n  return {\n    point: closest,\n    index\n  }\n}\n\n/**\n * @group Utils\n */\nexport function isPointInsidePolygon(point: TPoint, points: TPoint[])\n{\n  let inside = false\n  for (let i = 0, j = points.length - 1; i < points.length; j = i++) {\n    const p1 = points[i]\n    const p2 = points[j]\n    const intersect = ((p1.y > point.y) != (p2.y > point.y))\n      && (point.x < (p2.x - p1.x) * (point.y - p1.y) / (p2.y - p1.y) + p1.x)\n    if (intersect) inside = !inside\n  }\n\n  return inside\n}\n","\n/**\n * @group Utils\n */\nexport const isVersionSuperiorOrEqual = (source: string, target: string): boolean =>\n{\n  const sourceParts = source.split(\".\")\n  const targetParts = target.split(\".\")\n\n  for (let i = 0; i < targetParts.length; i++) {\n    const a = Number(targetParts[i])\n    const b = Number(sourceParts[i])\n    if (a > b) return false\n    if (a < b) return true\n  }\n  return true\n}\n","/**\n * @group Utils\n */\nexport async function computeHmac(message: string, applicationKey: string, hmacKey: string): Promise<string>\n{\n  const enc = new TextEncoder()\n  const messageEncoded = enc.encode(message)\n  const keyEncoded = enc.encode(applicationKey + hmacKey)\n\n  const key = await crypto.subtle.importKey(\n    \"raw\",\n    keyEncoded,\n    {\n      name: \"HMAC\",\n      hash: { name: \"SHA-512\" }\n    },\n    false,\n    [\"sign\"]\n  )\n\n  const signature = await crypto.subtle.sign(\n    \"HMAC\",\n    key,\n    messageEncoded\n  )\n\n  const buffer = new Uint8Array(signature)\n  return Array.prototype.map.call(buffer, x => x.toString(16).padStart(2, \"0\")).join(\"\")\n}\n","import { TBox } from \"../symbol\"\n\n/**\n * @group Utils\n */\nexport function convertMillimeterToPixel(mm: number): number\n{\n  return +(mm * 96 / 25.4).toFixed(3)\n}\n\n/**\n * @group Utils\n */\nexport function convertPixelToMillimeter(px: number): number\n{\n  return +(px / 96 * 25.4).toFixed(3)\n}\n\n/**\n * @group Utils\n */\nexport function convertBoundingBoxMillimeterToPixel(box?: TBox): TBox\n{\n  if (!box) {\n    return { height: 0, width: 0, x: 0, y: 0}\n  }\n  return {\n    x: convertMillimeterToPixel(box.x),\n    y: convertMillimeterToPixel(box.y),\n    width: convertMillimeterToPixel(box.width),\n    height: convertMillimeterToPixel(box.height),\n  }\n}\n","\n/**\n * @group Utils\n */\nexport function createUUID(): string\n{\n  let dt = Date.now()\n  const uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c)\n  {\n    const r = (dt + Math.random() * 16) % 16 | 0\n    dt = Math.floor(dt / 16)\n    return (c == \"x\" ? r : (r & 0x3 | 0x8)).toString(16)\n  })\n  return uuid\n}\n","\n/**\n * @group Utils\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const mergeDeep = (target: any, ...sources: any[]): any =>\n{\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const isObject = (item: any) =>\n  {\n    return (item && typeof item === \"object\" && !Array.isArray(item))\n  }\n  if (!sources.length) return target\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) {\n          Object.assign(target, { [key]: {} })\n        }\n        mergeDeep(target[key], source[key])\n      }\n      else if (Array.isArray(target[key]) && Array.isArray(source[key])) {\n        target[key] = target[key].concat(source[key])\n      }\n      else {\n        Object.assign(target, { [key]: source[key] })\n      }\n    }\n  }\n  else if (Array.isArray(target) && Array.isArray(source)) {\n    target = target.concat(source)\n  }\n  else if (source) {\n    target = source\n  }\n\n  return mergeDeep(target, ...sources)\n}\n\n/**\n * @group Utils\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const isDeepEqual = (object1: any, object2: any) =>\n{\n  const objKeys1 = Object.keys(object1)\n  const objKeys2 = Object.keys(object2)\n\n  if (objKeys1.length !== objKeys2.length) return false\n\n  for (const key of objKeys1) {\n    const value1 = object1[key]\n    const value2 = object2[key]\n\n    const isObjects = isObject(value1) && isObject(value2)\n\n    if (\n      (isObjects && !isDeepEqual(value1, value2)) ||\n      (!isObjects && value1 !== value2)\n    ) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * @group Utils\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst isObject = (object: any) =>\n{\n  return object && typeof object === \"object\"\n}\n","import { TServerHTTPConfiguration } from \"../recognizer\"\nimport { PartialDeep } from \"./types\"\n\n/**\n * @group Utils\n */\nexport async function getAvailableLanguageList(configuration: PartialDeep<{ server: TServerHTTPConfiguration }>): Promise<{ result: { [key: string]: string } }>\n{\n  if (configuration?.server?.scheme && configuration?.server?.host) {\n    const serverConfig = configuration.server\n    const response = await fetch(`${ serverConfig.scheme }://${ serverConfig.host }/api/v4.0/iink/availableLanguageList`)\n    return response.json()\n  } else {\n    return Promise.reject(\"Failed to get languages: configuration.server.scheme & configuration.server.host are required!\")\n  }\n}\n","import { TPoint, TPointer } from \"../symbol\"\n\n/**\n * @group Utils\n */\nexport function computeLinksPointers(point: TPointer, angle: number, width: number): TPoint[]\n{\n  const radius = point.p * width\n  return [\n    {\n      x: +(point.x - (Math.sin(angle) * radius)).toFixed(3),\n      y: +(point.y + (Math.cos(angle) * radius)).toFixed(3)\n    },\n    {\n      x: +(point.x + (Math.sin(angle) * radius)).toFixed(3),\n      y: +(point.y - (Math.cos(angle) * radius)).toFixed(3),\n    }\n  ]\n}\n\n/**\n * @group Utils\n */\nexport function computeMiddlePointer(point1: TPointer, point2: TPointer): TPointer\n{\n  return {\n    x: +((point2.x + point1.x) / 2).toFixed(3),\n    y: +((point2.y + point1.y) / 2).toFixed(3),\n    p: +((point2.p + point1.p) / 2).toFixed(3),\n    t: +((point2.t + point1.t) / 2).toFixed(3),\n  }\n}\n","import { TServerHTTPConfiguration } from \"../recognizer\"\nimport { PartialDeep } from \"./types\"\n\n/**\n * @group Utils\n */\nexport type TApiInfos = {\n  version: string,\n  gitCommit: string,\n  nativeVersion: string\n}\n\n/**\n * @group Utils\n */\nexport async function getApiInfos(configuration?: PartialDeep<{ server: TServerHTTPConfiguration }>): Promise<TApiInfos>\n{\n  try {\n    if (!configuration?.server?.scheme && !configuration?.server?.host) {\n      return Promise.reject(\"Failed to get infos: configuration.server.scheme & configuration.server.host are required!\")\n    }\n    const response = await fetch(`${ configuration.server.scheme }://${ configuration.server.host }/api/v4.0/iink/version`)\n    if (response.ok) {\n      const version = await response.json() as TApiInfos\n      return version\n    }\n    else {\n      //latest version published before this endpoint\n      return { version: \"3.1.3\", gitCommit: \"unknown\", nativeVersion: \"<=3.1.1\" }\n    }\n\n  } catch {\n    //latest version published before this endpoint\n    return { version: \"3.1.3\", gitCommit: \"7e148bd566438ca77dc83cb4edcc6ed0f51a8a15\", nativeVersion: \"<=3.1.1\" }\n   }\n\n}\n","/**\n * @group Logger\n */\nexport enum LoggerLevel\n{\n  DEBUG = \"1\",\n  INFO = \"2\",\n  WARN = \"3\",\n  ERROR = \"4\"\n}\n\n/**\n * @group Logger\n */\nexport enum LoggerCategory\n{\n  EDITOR = \"EDITOR\",\n  RECOGNIZER = \"RECOGNIZER\",\n  GRABBER = \"GRABBER\",\n  GESTURE = \"GESTURE\",\n  EDITOR_EVENT = \"EDITOR_EVENT\",\n  MODEL = \"MODEL\",\n  RENDERER = \"RENDERER\",\n  SMARTGUIDE = \"SMARTGUIDE\",\n  STYLE = \"STYLE\",\n  HISTORY = \"HISTORY\",\n  SYMBOL = \"SYMBOL\",\n  WRITE = \"WRITE\",\n  TRANSFORMER = \"TRANSFORMER\",\n  CONVERTER = \"CONVERTER\",\n  SELECTION = \"SELECTION\",\n  SVGDEBUG = \"SVGDEBUG\",\n  MENU = \"MENU\"\n}\n\n/**\n * @group Logger\n */\nexport class Logger\n{\n  category: LoggerCategory\n  level: LoggerLevel\n\n  constructor(category: LoggerCategory, level: LoggerLevel)\n  {\n    this.category = category\n    this.level = level\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  debug(functionName: string, ...data: any)\n  {\n    if (LoggerLevel.DEBUG >= this.level) {\n      const dataLog = {\n        level: \"debug\",\n        from: `${ this.category }.${ functionName }`,\n        message: data,\n      }\n      console.debug(dataLog)\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  info(functionName: string, ...data: any)\n  {\n    if (LoggerLevel.INFO >= this.level) {\n      const dataLog = {\n        level: \"info\",\n        from: `${ this.category }.${ functionName }`,\n        message: data,\n      }\n      console.info(dataLog)\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  warn(functionName: string, ...data: any)\n  {\n    if (LoggerLevel.WARN >= this.level) {\n      const dataLog = {\n        level: \"warn\",\n        from: `${ this.category }.${ functionName }`,\n        message: data,\n      }\n      console.warn(dataLog)\n    }\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error(functionName: string, ...error: any)\n  {\n    const dataLog = {\n      level: \"error\",\n      from: `${ this.category }.${ functionName }`,\n      message: error,\n    }\n    console.error(dataLog)\n  }\n}\n","import { TLoggerConfiguration } from \"./LoggerConfiguration\"\nimport { Logger, LoggerCategory, LoggerLevel } from \"./logger\"\n\n/**\n * @group Logger\n */\nexport class LoggerManager\n{\n  static #loggerMap: Map<LoggerCategory, Logger> = new Map()\n\n  static getLogger(name: LoggerCategory): Logger\n  {\n    if (!this.#loggerMap.has(name)) {\n      this.#loggerMap.set(name, new Logger(name, LoggerLevel.ERROR))\n    }\n    return this.#loggerMap.get(name) as Logger\n  }\n\n  static setLoggerLevel(config: TLoggerConfiguration)\n  {\n    Object.keys(config).forEach((lc) =>\n    {\n      LoggerManager.getLogger(lc as LoggerCategory).level = config[lc as LoggerCategory]\n    })\n  }\n}\n","import { LoggerCategory, LoggerLevel } from \"./logger\"\n\n/**\n * @group Logger\n */\nexport type TLoggerConfiguration = {\n  [key in keyof typeof LoggerCategory]: LoggerLevel\n}\n\n/**\n * @group Logger\n * @source\n */\nexport const DefaultLoggerConfiguration: TLoggerConfiguration = {\n  [LoggerCategory.EDITOR]: LoggerLevel.ERROR,\n  [LoggerCategory.RECOGNIZER]: LoggerLevel.ERROR,\n  [LoggerCategory.GRABBER]: LoggerLevel.ERROR,\n  [LoggerCategory.RENDERER]: LoggerLevel.ERROR,\n  [LoggerCategory.EDITOR_EVENT]: LoggerLevel.ERROR,\n  [LoggerCategory.MODEL]: LoggerLevel.ERROR,\n  [LoggerCategory.SYMBOL]: LoggerLevel.ERROR,\n  [LoggerCategory.SMARTGUIDE]: LoggerLevel.ERROR,\n  [LoggerCategory.GESTURE]: LoggerLevel.ERROR,\n  [LoggerCategory.STYLE]: LoggerLevel.ERROR,\n  [LoggerCategory.HISTORY]: LoggerLevel.ERROR,\n  [LoggerCategory.TRANSFORMER]: LoggerLevel.ERROR,\n  [LoggerCategory.CONVERTER]: LoggerLevel.ERROR,\n  [LoggerCategory.WRITE]: LoggerLevel.ERROR,\n  [LoggerCategory.SELECTION]: LoggerLevel.ERROR,\n  [LoggerCategory.SVGDEBUG]: LoggerLevel.ERROR,\n  [LoggerCategory.MENU]: LoggerLevel.ERROR,\n}\n","import { EditorTool } from \"../Constants\"\nimport { LoggerManager, LoggerCategory } from \"../logger\"\nimport { TExport, TExportV2 } from \"../model\"\nimport { IIStroke, TIISymbol, TSymbol } from \"../symbol\"\nimport { THistoryContext } from \"../history\"\nimport { TGestureType } from \"../gesture\"\n\n/**\n * @group Editor\n * @remarks Lists all events that can be listened to on the editor or DOM element\n * @example\n * You can run code on \"EditorEventName\" raised by using\n * ```ts\n * editor.event.addEventListener(EditorEventName.CHANGED, (evt) => console.log(evt.detail))\n * ```\n */\nexport enum EditorEventName\n{\n  /**\n   * @remarks event emitted when history has changed i.e. the context of undo-redo\n   */\n  CHANGED = \"changed\",\n  /**\n   * @remarks event emitted when clearing is complete\n   */\n  CLEARED = \"cleared\",\n  /**\n   * @remarks event emitted after the conversion is complete\n   */\n  CONVERTED = \"converted\",\n  /**\n   * @remarks event emitted when the editor encounters an error\n   */\n  ERROR = \"error\",\n  /**\n   * @remarks event emitted on click on pointer events\n   */\n  POINTEREVENTS = \"pointer_events\",\n  /**\n   * @remarks event emitted after\n   */\n  NOTIF = \"notif\",\n  /**\n   * @remarks event emitted after the end of the export\n   */\n  EXPORTED = \"exported\",\n  /**\n   * @remarks event emitted after the end of the import\n   */\n  IMPORTED = \"imported\",\n  /**\n   * @remarks event emitted when the server is idle after a job\n   */\n  IDLE = \"idle\",\n  /**\n   * @remarks event emitted after full editor initialization\n   */\n  LOADED = \"loaded\",\n  /**\n   * @remarks event emitted session opened\n   */\n  SESSION_OPENED = \"session-opened\",\n  /**\n   * @remarks event emitted after selection change\n   */\n  SELECTED = \"selected\",\n  /**\n   * @remarks event emitted after tool change\n   */\n  TOOL_CHANGED = \"tool-changed\",\n  /**\n   * @remarks event emitted after mode change\n   */\n  UI_UPDATED = \"ui-updated\",\n  /**\n   * @remarks event emitted after stroke synchronized with jiix\n   */\n  SYNCHRONIZED = \"synchronized\",\n  /**\n   * @remarks event emitted after applying a gesture\n   */\n  GESTURED = \"gestured\"\n}\n\n/**\n * @group Editor\n */\nexport class EditorEvent extends EventTarget\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.EDITOR_EVENT);\n  protected abortController: AbortController\n  element: Element\n\n  constructor(element: Element)\n  {\n    super()\n    this.#logger.info(\"constructor\", { element })\n    this.abortController = new AbortController()\n    this.element = element\n  }\n\n  removeAllListeners(): void\n  {\n    this.#logger.info(\"removeAllListeners\")\n    this.abortController.abort()\n    this.abortController = new AbortController()\n  }\n\n  protected emit(type: string, data?: unknown): void\n  {\n    const evt = new CustomEvent(type, Object.assign({ bubbles: true, composed: true }, data ? { detail: data } : undefined))\n    this.dispatchEvent(evt)\n    this.element?.dispatchEvent(evt)\n  }\n\n  emitSessionOpened(sessionId: string): void\n  {\n    this.#logger.info(\"emitSessionOpened\")\n    this.emit(EditorEventName.SESSION_OPENED, sessionId)\n  }\n  addSessionOpenedListener(callback: (sessionId: string) => void): void\n  {\n    this.#logger.info(\"addSessionOpenedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.SESSION_OPENED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as string),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitLoaded(): void\n  {\n    this.#logger.info(\"emitLoaded\")\n    this.emit(EditorEventName.LOADED)\n  }\n  addLoadedListener(callback: () => void): void\n  {\n    this.#logger.info(\"addLoadedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.LOADED,\n      () => callback(),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitNotif(notif: { message: string; timeout?: number }): void\n  {\n    this.#logger.info(\"emitNotif\", { notif })\n    this.emit(EditorEventName.NOTIF, notif)\n  }\n  addNotifListener(callback: (notif: { message: string; timeout?: number }) => void): void\n  {\n    this.#logger.info(\"addNotifListener\", { callback })\n    this.addEventListener(\n      EditorEventName.NOTIF,\n      (evt: unknown) => callback((evt as CustomEvent).detail as { message: string; timeout?: number }),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitError(err: Error): void\n  {\n    this.#logger.info(\"emitError\", { err })\n    this.emit(EditorEventName.ERROR, err)\n  }\n  addErrorListener(callback: (err: Error) => void): void\n  {\n    this.#logger.info(\"addErrorListener\", { callback })\n    this.addEventListener(\n      EditorEventName.ERROR,\n      (evt: unknown) => callback((evt as CustomEvent).detail as Error),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitExported(exports: TExport | TExportV2): void\n  {\n    this.#logger.info(\"emitExported\", { exports })\n    this.emit(EditorEventName.EXPORTED, exports)\n  }\n  addExportedListener(callback: (exports: TExport | TExportV2) => void): void\n  {\n    this.#logger.info(\"addExportedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.EXPORTED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as TExport | TExportV2),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitChanged(undoRedoContext: THistoryContext): void\n  {\n    this.#logger.info(\"emitChanged\", { undoRedoContext })\n    this.emit(EditorEventName.CHANGED, {\n      ...undoRedoContext,\n      canClear: !undoRedoContext.empty\n    })\n  }\n  addChangedListener(callback: (context: THistoryContext) => void): void\n  {\n    this.#logger.info(\"addChangedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.CHANGED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as THistoryContext),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitIdle(idle: boolean): void\n  {\n    this.#logger.info(\"emitIdle\", { idle })\n    this.emit(EditorEventName.IDLE, idle)\n  }\n  addIdleListener(callback: (idle: boolean) => void): void\n  {\n    this.#logger.info(\"addIdleListener\", { callback })\n    this.addEventListener(\n      EditorEventName.IDLE,\n      (evt: unknown) => callback((evt as CustomEvent).detail as boolean),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitCleared(): void\n  {\n    this.#logger.info(\"emitCleared\")\n    this.emit(EditorEventName.CLEARED)\n  }\n  addClearedListener(callback: () => void): void\n  {\n    this.#logger.info(\"addClearedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.CLEARED,\n      () => callback(),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitConverted(exports: TExport): void\n  {\n    this.#logger.info(\"emitConverted\", { exports })\n    this.emit(EditorEventName.CONVERTED, exports)\n  }\n  addConvertedListener(callback: (exports: TExport) => void): void\n  {\n    this.#logger.info(\"addConvertedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.CONVERTED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as TExport),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitImported(exports: TExport): void\n  {\n    this.#logger.info(\"emitImported\", { exports })\n    this.emit(EditorEventName.IMPORTED, exports)\n  }\n  addImportedListener(callback: (exports: TExport) => void): void\n  {\n    this.#logger.info(\"addImportedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.IMPORTED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as TExport),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitSelected(symbols: TSymbol[]): void\n  {\n    this.#logger.info(\"emitSelected\")\n    this.emit(EditorEventName.SELECTED, symbols)\n  }\n  addSelectedListener(callback: (symbols: TIISymbol[]) => void): void\n  {\n    this.#logger.info(\"addSelectedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.SELECTED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as TIISymbol[]),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitToolChanged(mode: EditorTool): void\n  {\n    this.#logger.info(\"emitToolChanged\")\n    this.emit(EditorEventName.TOOL_CHANGED, mode)\n  }\n  addToolChangedListener(callback: (mode: EditorTool) => void): void\n  {\n    this.#logger.info(\"addToolChangedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.TOOL_CHANGED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as EditorTool),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitUIpdated(): void\n  {\n    this.#logger.info(\"emitUIpdated\")\n    this.emit(EditorEventName.UI_UPDATED)\n  }\n  addUIpdatedListener(callback: () => void): void\n  {\n    this.#logger.info(\"addUIpdatedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.UI_UPDATED,\n      () => callback(),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitSynchronized(): void\n  {\n    this.#logger.info(\"emitSynchronized\")\n    this.emit(EditorEventName.SYNCHRONIZED)\n  }\n  addSynchronizedListener(callback: () => void): void\n  {\n    this.#logger.info(\"addSynchronizedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.SYNCHRONIZED,\n      () => callback(),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitGestured(gesture: { gestureType: TGestureType, stroke: IIStroke }): void\n  {\n    this.#logger.info(\"emitSynchronized\")\n    this.emit(EditorEventName.GESTURED, gesture)\n  }\n  addGesturedListener(callback: (gesture: { gestureType: TGestureType, stroke: IIStroke }) => void): void\n  {\n    this.#logger.info(\"addSynchronizedListener\", { callback })\n    this.addEventListener(\n      EditorEventName.GESTURED,\n      (evt) => callback((evt as CustomEvent).detail as { gestureType: TGestureType, stroke: IIStroke }),\n      { signal: this.abortController.signal }\n    )\n  }\n}\n","import { EdgeDecoration, TBox, TPoint } from \"../symbol\"\n\n/**\n * @group Exports\n * @remarks List all supported MIME types for export. Please note, the MIME types supported depend on the recognition type configured\n */\nexport enum ExportType\n{\n  JIIX = \"application/vnd.myscript.jiix\",\n  TEXT = \"text/plain\",\n  LATEX = \"application/x-latex\",\n  MATHML = \"application/mathml+xml\",\n  SVG = \"image/svg+xml\",\n  OFFICE_DOCUMENT = \"application/vnd.openxmlformats-officedocument.presentationml.presentation\"\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix  Element type}\n */\nexport enum JIIXELementType\n{\n  Text = \"Text\",\n  Node = \"Node\",\n  Edge = \"Edge\",\n  RawContent = \"Raw Content\",\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix/#diagram-item-blocks | Element node kind}\n */\nexport enum JIIXNodeKind\n{\n  Circle = \"circle\",\n  Ellipse = \"ellipse\",\n  Rectangle = \"rectangle\",\n  Triangle = \"triangle\",\n  Parallelogram = \"parallelogram\",\n  Polygon = \"polygon\",\n  Rhombus = \"rhombus\",\n}\n\n/**\n * @group Exports\n */\nexport enum JIIXEdgeKind\n{\n  Line = \"line\",\n  PolyEdge = \"polyedge\",\n  Arc = \"arc\",\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix/#stroke-item | Stroke item}\n */\nexport type TJIIXStrokeItem = {\n  type: \"stroke\"\n  id: string\n  \"full-id\"?: string\n  timestamp?: string\n  X?: number[]\n  Y?: number[]\n  F?: number[]\n  T?: number[]\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXBase = {\n  \"bounding-box\"?: TBox\n  items?: TJIIXStrokeItem[]\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXElementBase<T = string> = TJIIXBase & {\n  id: string\n  type: T\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix/#word-object | Word object}\n */\nexport type TJIIXWord = TJIIXBase & {\n  id?: string\n  label: string\n  candidates?: string[]\n  \"first-char\"?: number\n  \"last-char\"?: number\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix/#character-object | Character object}\n */\nexport type TJIIXChar = TJIIXBase & {\n  label: string\n  candidates?: string[]\n  word: number\n  grid: TPoint[]\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix/#text-interpretation | Text Element }\n */\nexport type TJIIXLine = {\n  \"baseline-y\": number\n  \"first-char\"?: number\n  \"last-char\"?: number\n  \"x-height\": number\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix/#text-interpretation | Text Element }\n */\nexport type TJIIXTextElement = TJIIXElementBase<JIIXELementType.Text> & {\n  id: string\n  \"bounding-box\"?: TBox\n  label: string\n  words?: TJIIXWord[]\n  chars?: TJIIXChar[]\n  lines?: TJIIXLine[]\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeElementBase<K = string> = TJIIXElementBase<JIIXELementType.Node> & {\n  id: string\n  kind: K\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeCircle = TJIIXNodeElementBase<JIIXNodeKind.Circle> & {\n  id: string\n  cx: number\n  cy: number\n  r: number\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeEllipse = TJIIXNodeElementBase<JIIXNodeKind.Ellipse> & {\n  id: string\n  cx: number\n  cy: number\n  rx: number\n  ry: number\n  orientation: number\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeRectangle = TJIIXNodeElementBase<JIIXNodeKind.Rectangle> & {\n  id: string\n  height: number\n  width: number\n  x: number\n  y: number\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeTriangle = TJIIXNodeElementBase<JIIXNodeKind.Triangle> & {\n  id: string\n  points: number[]\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeParrallelogram = TJIIXNodeElementBase<JIIXNodeKind.Parallelogram> & {\n  id: string\n  points: number[]\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodePolygon = TJIIXNodeElementBase<JIIXNodeKind.Polygon> & {\n  id: string\n  points: number[]\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeRhombus = TJIIXNodeElementBase<JIIXNodeKind.Rhombus> & {\n  id: string\n  points: number[]\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXNodeElement =\n  TJIIXNodeCircle |\n  TJIIXNodeEllipse |\n  TJIIXNodeRectangle |\n  TJIIXNodeTriangle |\n  TJIIXNodeParrallelogram |\n  TJIIXNodePolygon |\n  TJIIXNodeRhombus\n\n/**\n * @group Exports\n */\nexport type TJIIXEdgeElementBase<K = string> = TJIIXElementBase<JIIXELementType.Edge> & {\n  kind: K\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix/#line-item | Element line}\n */\nexport type TJIIXEdgeLine = TJIIXEdgeElementBase<JIIXEdgeKind.Line> & {\n  x1: number\n  x2: number\n  y1: number\n  y2: number\n  p1Decoration?: EdgeDecoration\n  p2Decoration?: EdgeDecoration\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXEdgePolyEdge = TJIIXEdgeElementBase<JIIXEdgeKind.PolyEdge> & {\n  edges: TJIIXEdgeLine[]\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix/#arc-item | Element arc}\n */\nexport type TJIIXEdgeArc = TJIIXEdgeElementBase<JIIXEdgeKind.Arc> & {\n  cx: number,\n  cy: number,\n  rx: number,\n  ry: number,\n  phi: number,\n  startAngle: number,\n  sweepAngle: number\n  startDecoration?: EdgeDecoration\n  endDecoration?: EdgeDecoration\n}\n\n/**\n * @group Exports\n */\nexport type TJIIXEdgeElement =\n  TJIIXEdgeLine |\n  TJIIXEdgePolyEdge |\n  TJIIXEdgeArc\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/web/jiix | Exports}\n */\nexport type TJIIXElement =\n  TJIIXTextElement |\n  TJIIXNodeElement |\n  TJIIXEdgeElement\n\n/**\n * @group Exports\n */\nexport type TJIIXExport = {\n  type: string\n  id: string\n  \"bounding-box\"?: TBox\n  version: string\n  elements?: TJIIXElement[]\n  label?: string\n  words?: TJIIXWord[]\n  chars?: TJIIXChar[]\n}\n\n/**\n * @group Exports\n * @remarks\n * List all supported MIME types for export.\n *\n * Attention the MIME types supported depend on the {@link TRecognitionType | type of recognition}\n *\n * {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix | Documentation}\n */\nexport type TExport = {\n  /** @hidden */\n  [key: string]: unknown\n  /**\n   * @remarks vnd.myscript.jiix is used for text and raw-content exports\n   */\n  \"application/vnd.myscript.jiix\"?: TJIIXExport\n  /**\n   * @remarks text/plain is only use for text export\n   */\n  \"text/plain\"?: string\n  /**\n   * @remarks x-latex is only use for math export\n   * @see {@link https://katex.org/docs/browser.html | katex} to render\n   */\n  \"application/x-latex\"?: string\n  /**\n   * @remarks mathml+xml is only use for math export\n   * @see {@link https://www.w3.org/Math/whatIsMathML.html | Mathematical Markup Language}\n   */\n  \"application/mathml+xml\"?: string\n  /**\n   * @remarks svg+xml is only use for diagram export\n   */\n  \"image/svg+xml\"?: string\n  /**\n   * @remarks vnd.openxmlformats-officedocument.presentationml.presentation is only use for diagram export\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Blob | Blob}\n   */\n  \"application/vnd.openxmlformats-officedocument.presentationml.presentation\"?: Blob\n}\n","import { TRecognitionV2Type } from \"../recognizer\"\nimport { TJIIXBase, TJIIXWord } from \"./Export\"\n\n/**\n * @group Exports\n * @remarks List all supported MIME types for export in RecognizersV2. Please note, the MIME types supported depend on the recognition type configured\n */\nexport enum ExportV2Type {\n  JIIX = \"application/vnd.myscript.jiix\",\n  TEXT = \"text/plain\",\n  LATEX = \"application/x-latex\",\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix  Element type}\n */\n\n\n/**\n * @group Exports\n*/\nexport type JIIXV2RangeItem = {\n  from: { stroke: number }\n  to: { stroke: number }\n}\n\n/**\n * @group Exports\n * @remarks Only in InkRecognizer () activated with recognition.export.JIIXV2.range = true\n */\nexport type JIIXV2Range = JIIXV2RangeItem[]\n\n/**\n * @group Exports\n */\nexport type JIIXV2Base = TJIIXBase & {\n  range?: JIIXV2Range\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ElementBase<T = TRecognitionV2Type> = JIIXV2Base & {\n  id: string\n  type: T\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2LineSpan = {\n  type: string\n  range: JIIXV2RangeItem[]\n  label: string\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2Line = {\n  type: string\n  range: JIIXV2RangeItem[]\n  label: string\n  spans: JIIXV2LineSpan[]\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix/#word-object | Word object}\n */\nexport type JIIXV2Expression = JIIXV2Base & TJIIXWord & {\n  lines: JIIXV2Line[]\n}\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix#text-interpretation | Text Element }\n */\nexport type JIIXV2TextElement = JIIXV2ElementBase<\"Text\"> & JIIXV2Expression\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/jiix#text-interpretation | Math Element }\n */\nexport type JIIXV2MathElement = JIIXV2ElementBase<\"Math\"> & JIIXV2Expression\n\n/** @group Exports\n */\nexport type JIIXV2DrawingElement = JIIXV2ElementBase<\"Drawing\"> & JIIXV2Expression\n\n/**\n * @group Exports\n */\nexport enum JIIXV2ShapeKind {\n  Circle = \"circle\",\n  Ellipse = \"ellipse\",\n  Rectangle = \"rectangle\",\n  Triangle = \"triangle\",\n  IsoscelesTriangle = \"isosceles triangle\",\n  RightTriangle = \"right triangle\",\n  RightIsoscelesTriangle = \"right isosceles triangle\",\n  EquilateralTriangle = \"equilateral triangle\",\n  Quadrilateral = \"quadrilateral\",\n  Trapezoid = \"trapezoid\",\n  Square = \"square\",\n  Parallelogram = \"parallelogram\",\n  Polygon = \"polygon\",\n  Rhombus = \"rhombus\",\n  Line = \"line\",\n  ArcOfEllipse = \"arc of ellipse\",\n  ArcOfCircle = \"arc of circle\",\n  PolyLine = \"polyline\",\n  Arrow = \"arrow\",\n  CurvedDoubleArrow = \"curved double arrow\",\n  CurvedArrow = \"curved arrow\",\n  PolylineArrow = \"polyline arrow\",\n  PolylineDoubleArrow = \"polyline double arrow\",\n  DoubleArrow = \"double arrow\",\n}\n\n/**\n   * @group Exports\n   */\nexport type JIIXV2PolygonType = \"triangle\" | \"isosceles triangle\" | \"right triangle\" | \"right isosceles triangle\" | \"equilateral triangle\" | \"quadrilateral\" | \"trapezoid\" | \"parallelogram\" | \"rhombus\" | \"rectangle\" | \"square\"\n\n/**\n   * @group Exports\n   */\nexport type JIIXV2ShapeItemBase<K = JIIXV2ShapeKind> = JIIXV2ElementBase<K> & {\n  kind: K\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2EllipseBase<K = JIIXV2ShapeKind.Ellipse | JIIXV2ShapeKind.Circle> = JIIXV2ShapeItemBase<JIIXV2ShapeKind.Ellipse | JIIXV2ShapeKind.Circle> & {\n  kind: K\n  id: string\n  cx: number\n  cy: number\n  rx: number\n  ry: number\n  orientation: number\n  type: string\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2Circle = JIIXV2EllipseBase<JIIXV2ShapeKind.Circle>\n\n/**\n * @group Exports\n */\nexport type JIIXV2Ellipse = JIIXV2EllipseBase<JIIXV2ShapeKind.Ellipse>\n\n/**\n * @group Exports\n */\nexport type JIIXV2PrimitiveArc = {\n  type: \"arc\"\n  cx: number,\n  cy: number,\n  rx: number,\n  ry: number,\n  phi: number,\n  startAngle: number,\n  sweepAngle: number\n  startDecoration?: string\n  endDecoration?: string\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2PrimitiveLine = {\n  type: \"line\"\n  x1: number\n  y1: number\n  x2: number\n  y2: number\n  startDecoration?: string\n  endDecoration?: string\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2PolygonBase<K = JIIXV2PolygonType> = JIIXV2ShapeItemBase<K> & {\n  kind: K\n  primitives: JIIXV2PrimitiveLine[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygon = JIIXV2PolygonBase<JIIXV2ShapeKind.Polygon>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonTriangle = JIIXV2PolygonBase<JIIXV2ShapeKind.Triangle>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonIsoscelesTriangle = JIIXV2PolygonBase<JIIXV2ShapeKind.IsoscelesTriangle>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonRightTriangle = JIIXV2PolygonBase<JIIXV2ShapeKind.RightTriangle>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonRightIsoscelesTriangle = JIIXV2PolygonBase<JIIXV2ShapeKind.RightIsoscelesTriangle>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonEquilateralTriangle = JIIXV2PolygonBase<JIIXV2ShapeKind.EquilateralTriangle>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonQuadrilateral = JIIXV2PolygonBase<JIIXV2ShapeKind.Quadrilateral>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonTrapezoid = JIIXV2PolygonBase<JIIXV2ShapeKind.Trapezoid>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonParallelogram = JIIXV2PolygonBase<JIIXV2ShapeKind.Parallelogram>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonRhombus = JIIXV2PolygonBase<JIIXV2ShapeKind.Rhombus>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonRectangle = JIIXV2PolygonBase<JIIXV2ShapeKind.Rectangle>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapePolygonSquare = JIIXV2PolygonBase<JIIXV2ShapeKind.Square>\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeLine = JIIXV2ShapeItemBase<JIIXV2ShapeKind.Line> & {\n  primitives: JIIXV2PrimitiveLine[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeLineArrow = JIIXV2ShapeItemBase<JIIXV2ShapeKind.Arrow> & {\n  primitives: JIIXV2PrimitiveLine[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeLineDoubleArrow = JIIXV2ShapeItemBase<JIIXV2ShapeKind.DoubleArrow> & {\n  primitives: JIIXV2PrimitiveLine[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeLinePolyline = JIIXV2ShapeItemBase<JIIXV2ShapeKind.PolyLine> & {\n  primitives: JIIXV2PrimitiveLine[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeLinePolylineArrow = JIIXV2ShapeItemBase<JIIXV2ShapeKind.PolylineArrow> & {\n  primitives: JIIXV2PrimitiveLine[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeLinePolylineDoubleArrow = JIIXV2ShapeItemBase<JIIXV2ShapeKind.PolylineDoubleArrow> & {\n  primitives: JIIXV2PrimitiveLine[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeCurvedDoubleArrow = JIIXV2ShapeItemBase<JIIXV2ShapeKind.CurvedDoubleArrow> & {\n  primitives: JIIXV2PrimitiveArc[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeCurvedArrow = JIIXV2ShapeItemBase<JIIXV2ShapeKind.CurvedArrow> & {\n  primitives: JIIXV2PrimitiveArc[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeArcOfEllipse = JIIXV2ShapeItemBase<JIIXV2ShapeKind.ArcOfEllipse> & {\n  primitives: JIIXV2PrimitiveArc[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeArcOfCircle = JIIXV2ShapeItemBase<JIIXV2ShapeKind.ArcOfCircle> & {\n  primitives: JIIXV2PrimitiveArc[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2ShapeElement = JIIXV2Circle | JIIXV2Ellipse | JIIXV2ShapePolygon | JIIXV2ShapePolygonTriangle | JIIXV2ShapePolygonIsoscelesTriangle | JIIXV2ShapePolygonRightTriangle | JIIXV2ShapePolygonRightIsoscelesTriangle | JIIXV2ShapePolygonEquilateralTriangle | JIIXV2ShapePolygonQuadrilateral | JIIXV2ShapePolygonTrapezoid | JIIXV2ShapePolygonParallelogram | JIIXV2ShapePolygonRhombus | JIIXV2ShapePolygonRectangle | JIIXV2ShapePolygonSquare | JIIXV2ShapeLineArrow | JIIXV2ShapeLineDoubleArrow | JIIXV2ShapeLinePolyline | JIIXV2ShapeLinePolylineArrow | JIIXV2ShapeLinePolylineDoubleArrow | JIIXV2ShapeCurvedDoubleArrow | JIIXV2ShapeCurvedArrow | JIIXV2ShapeArcOfEllipse | JIIXV2ShapeArcOfCircle | JIIXV2ShapeLine\n\n/**\n * @group Exports\n * @remarks Only in InkRecognizer () activated with recognition.export.JIIXV2.range = true\n */\nexport type JIIXV2RawContentBase<T = TRecognitionV2Type> = {\n  type: T\n  range?: JIIXV2Range\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2RawContentItemText = JIIXV2RawContentBase<\"Text\"> & JIIXV2Expression\n\n/**\n * @group Exports\n */\nexport type JIIXV2RawContentTextLine = {\n  type: \"Line\"\n  label: string\n  range?: JIIXV2RangeItem\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2RawContentShape = JIIXV2RawContentBase<\"Shape\"> & {\n  label: string\n  shape: JIIXV2RawContentItemShape[]\n}\n\n/**\n * @group Exports\n */\nexport type JIIXV2RawContentItemShape = JIIXV2RawContentBase<\"Shape\"> & {\n  range: JIIXV2RangeItem[]\n  elements: JIIXV2ShapeElement[]\n}\n\nexport type JIIXV2RawContentElement = JIIXV2RawContentItemText | JIIXV2RawContentItemShape\n\n/**\n * @group Exports\n * @remarks {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/web/JIIXV2 | Exports}\n */\nexport type JIIXV2Element =\n  JIIXV2TextElement |\n  JIIXV2ShapeElement |\n  JIIXV2MathElement |\n  JIIXV2DrawingElement |\n  JIIXV2RawContentElement\n\n/**\n * @group Exports\n */\nexport type JIIXV2Export = JIIXV2Base & {\n  type: string\n  id: string\n  version: string\n  elements?: JIIXV2Element[]\n  label?: string\n  words?: JIIXV2Expression[]\n}\n\n/**\n * @group Exports\n * @remarks\n * List all supported MIME types for export.\n *\n * Attention the MIME types supported depend on the {@link TRecognitionType | type of recognition}\n *\n * {@link https://developer.myscript.com/docs/interactive-ink/latest/reference/JIIXV2 | Documentation}\n */\nexport type TExportV2 = {\n  /** @hidden */\n  [key: string]: unknown\n  /**\n   * @remarks vnd.myscript.jiix is used for text and raw-content exports\n   */\n  \"application/vnd.myscript.jiix\"?: JIIXV2Export\n  /**\n   * @remarks text/plain is only use for text export\n   */\n  \"text/plain\"?: string\n  /**\n   * @remarks x-latex is only use for math export\n   * @see {@link https://katex.org/docs/browser.html | katex} to render\n   */\n  \"application/x-latex\"?: string\n}\n","\nimport style from \"../iink.css\"\n/**\n * @group Editor\n */\nexport type EditorLayerUIInfoModal = {\n  root: HTMLDivElement,\n  text: HTMLParagraphElement\n}\n\n/**\n * @group Editor\n */\nexport type EditorLayerUIMessage = {\n  root: HTMLDivElement\n  overlay: HTMLDivElement\n  modal: EditorLayerUIInfoModal\n}\n\n/**\n * @group Editor\n */\nexport type EditorLayerUIState = {\n  root: HTMLDivElement\n  busy: HTMLDivElement\n}\n\n/**\n * @group Editor\n */\nexport type EditorLayerUI = {\n  root: HTMLDivElement\n  loader: HTMLDivElement\n  message: EditorLayerUIMessage\n  state: EditorLayerUIState\n}\n\n/**\n * @group Editor\n */\nexport class EditorLayer\n{\n  root: HTMLElement\n  ui: EditorLayerUI\n  rendering: HTMLElement\n\n  onCloseModal?: (inError?: boolean) => void\n\n  constructor(root: HTMLElement, rootClassCss: string = \"ms-editor\")\n  {\n    this.root = root\n    this.root.classList.add(rootClassCss)\n    this.rendering = this.createLayerRender()\n    this.ui = this.createLayerUI()\n  }\n\n  render(): void\n  {\n    const styleElement = document.createElement(\"style\")\n    styleElement.appendChild(document.createTextNode(style as string))\n    this.root.prepend(styleElement)\n\n    this.root.appendChild(this.rendering)\n    this.root.appendChild(this.ui.root)\n  }\n\n  createLoader(): HTMLDivElement\n  {\n    const loaderHTML = document.createElement(\"div\")\n    loaderHTML.classList.add(\"loader\")\n    loaderHTML.style.display = \"none\"\n    return loaderHTML\n  }\n  showLoader(): void\n  {\n    this.ui.loader.style.display = \"block\"\n  }\n  hideLoader(): void\n  {\n    this.ui.loader.style.display = \"none\"\n  }\n\n  createMessageOverlay(): HTMLDivElement\n  {\n    const overlay = document.createElement(\"div\")\n    overlay.classList.add(\"message-overlay\")\n    return overlay\n  }\n  closeMessageModal(): void\n  {\n    this.onCloseModal?.(this.ui.message.modal.root.classList.contains(\"error-msg\"))\n    this.hideMessageModal()\n  }\n\n  hideMessageModal(): void\n  {\n    this.ui.message.root.style.display = \"none\"\n    this.ui.message.modal.text.innerText = \"\"\n    this.ui.message.modal.root.classList.remove(\"error-msg\")\n    this.ui.message.modal.root.classList.remove(\"info-msg\")\n  }\n  createMessageModal(): EditorLayerUIInfoModal\n  {\n    const element = document.createElement(\"div\")\n    element.classList.add(\"message-modal\")\n\n    const closeBtn = document.createElement(\"button\")\n    closeBtn.classList.add(\"ms-button\", \"close\")\n    closeBtn.addEventListener(\"pointerup\", this.closeMessageModal.bind(this))\n    element.appendChild(closeBtn)\n\n    const text = document.createElement(\"p\")\n    element.appendChild(text)\n    return { root: element, text }\n  }\n  createMessage(): EditorLayerUIMessage\n  {\n    const root = document.createElement(\"div\")\n    root.classList.add(\"message-container\")\n    root.style.display = \"none\"\n\n    const overlay = this.createMessageOverlay()\n    root.appendChild(overlay)\n\n    const modal = this.createMessageModal()\n    root.appendChild(modal.root)\n\n    return {\n      root,\n      overlay,\n      modal\n    }\n  }\n  showMessageInfo(notif: { message: string, timeout?: number })\n  {\n    this.ui.message.modal.root.classList.add(\"info-msg\")\n    this.ui.message.modal.root.classList.remove(\"error-msg\")\n    this.ui.message.root.style.display = \"block\"\n    this.ui.message.modal.text.innerText = notif.message\n    setTimeout(() =>\n    {\n      this.closeMessageModal()\n    }, notif.timeout || 2500)\n  }\n  showMessageError(err: Error | string)\n  {\n    this.ui.message.modal.root.classList.add(\"error-msg\")\n    this.ui.message.modal.root.classList.remove(\"info-msg\")\n    this.ui.message.root.style.display = \"block\"\n    this.ui.message.modal.text.innerText = typeof err === \"string\" ? err : err.message\n  }\n\n  createBusy(): HTMLDivElement\n  {\n    const busy = document.createElement(\"div\")\n    busy.classList.add(\"busy\")\n    return busy\n  }\n  createState(): EditorLayerUIState\n  {\n    const root = document.createElement(\"div\")\n    root.classList.add(\"state\")\n    root.style.display = \"none\"\n\n    const busy = this.createBusy()\n    root.appendChild(busy)\n\n    return {\n      root,\n      busy\n    }\n  }\n  showState(): void\n  {\n    this.ui.state.root.style.display = \"block\"\n  }\n  hideState(): void\n  {\n    this.ui.state.root.style.display = \"none\"\n  }\n  updateState(idle: boolean): void\n  {\n    if (idle) {\n      this.hideState()\n    }\n    else {\n      this.showState()\n    }\n  }\n\n  createLayerUI(): EditorLayerUI\n  {\n    const root = document.createElement(\"div\")\n    root.classList.add(\"ms-layer-ui\")\n\n    const loader = this.createLoader()\n    root.appendChild(loader)\n\n    const message = this.createMessage()\n    root.appendChild(message.root)\n\n    const state = this.createState()\n    root.appendChild(state.root)\n\n    return {\n      root,\n      loader,\n      message,\n      state\n    }\n  }\n\n  createLayerRender(): HTMLDivElement\n  {\n    const render = document.createElement(\"div\")\n    render.classList.add(\"ms-layer-rendering\")\n    return render\n  }\n\n  destroy(): void\n  {\n    while (this.root.lastChild) {\n      this.root.removeChild(this.root.lastChild)\n    }\n  }\n}\n","import { getApiInfos, PartialDeep, TApiInfos } from \"../utils\"\nimport {\n  LoggerCategory,\n  LoggerManager,\n  DefaultLoggerConfiguration,\n  TLoggerConfiguration\n} from \"../logger\"\nimport { TServerHTTPConfiguration } from \"../recognizer\"\nimport { EditorEvent } from \"./EditorEvent\"\nimport { EditorLayer } from \"./EditorLayer\"\n\n/**\n * @hidden\n * @group Editor\n */\nexport type TEditorConfiguration = {\n  logger: TLoggerConfiguration\n}\n\n/**\n * @group Editor\n * @remarks \"INKV1\" is deprecated use \"INKV2\" instead.\n */\nexport type EditorType = \"INTERACTIVEINK\" | \"INKV1\" | \"INTERACTIVEINKSSR\" | \"INKV2\"\n\n/**\n * @hidden\n * @group Editor\n */\nexport type EditorOptionsBase = {\n  configuration: TEditorConfiguration\n  override?: {\n    cssClass?: string\n  }\n}\n\n/**\n * @hidden\n * @group Editor\n */\nexport abstract class AbstractEditor\n{\n  logger = LoggerManager.getLogger(LoggerCategory.EDITOR)\n  layers: EditorLayer\n  event: EditorEvent\n  info?: TApiInfos\n\n  #loggerConfiguration!: TLoggerConfiguration\n\n  constructor(rootElement: HTMLElement, options?: PartialDeep<EditorOptionsBase>)\n  {\n    this.loggerConfiguration = Object.assign({}, DefaultLoggerConfiguration, options?.configuration?.logger)\n    this.logger.info(\"constructor\", { rootElement, options })\n\n    this.event = new EditorEvent(rootElement)\n    this.layers = new EditorLayer(rootElement, options?.override?.cssClass || \"ms-editor\")\n\n    //@ts-ignore\n    rootElement.editor = this\n  }\n\n  get loggerConfiguration(): TLoggerConfiguration\n  {\n    return this.#loggerConfiguration\n  }\n\n  set loggerConfiguration(loggerConfig: TLoggerConfiguration)\n  {\n    this.#loggerConfiguration = Object.assign({}, DefaultLoggerConfiguration, loggerConfig)\n    LoggerManager.setLoggerLevel(this.#loggerConfiguration)\n  }\n\n  abstract initialize(): Promise<void>\n\n  abstract clear(): Promise<void>\n\n  abstract destroy(): Promise<void>\n\n  async loadInfo(server: TServerHTTPConfiguration): Promise<TApiInfos>\n  {\n    if (!this.info) {\n      this.info = await getApiInfos({ server })\n    }\n    return this.info\n  }\n}\n","import { isBetween } from \"../utils\"\nimport { TPoint, TSegment } from \"./Point\"\n\n/**\n * @group Symbol\n */\nexport type TBox = {\n  x: number,\n  y: number,\n  width: number,\n  height: number\n}\n\n/**\n * @group Symbol\n */\nexport class Box implements TBox\n{\n  x: number\n  y: number\n  width: number\n  height: number\n\n  constructor(boundindBox: TBox)\n  {\n    if (boundindBox.width < 0) throw new Error(\"width must be positive\")\n    if (boundindBox.height < 0) throw new Error(\"height must be positive\")\n    this.height = boundindBox.height\n    this.width = boundindBox.width\n    this.x = boundindBox.x\n    this.y = boundindBox.y\n  }\n\n  static createFromBoxes(boxes: TBox[]): Box\n  {\n    if (!boxes?.length) {\n      return new Box({ height: 0, width: 0, x: 0, y: 0 })\n    }\n    const x = Math.min(...boxes.map(b => b.x))\n    const width = Math.max(...boxes.map(b => b.x + b.width)) - x\n    const y = Math.min(...boxes.map(b => b.y))\n    const height = Math.max(...boxes.map(b => b.y + b.height)) - y\n    return new Box({ x, y, width, height })\n  }\n\n  static createFromPoints(points: TPoint[]): Box\n  {\n    if (!points?.length) {\n      return new Box({ height: 0, width: 0, x: 0, y: 0 })\n    }\n    const x = Math.min(...points.map(p => p.x))\n    const width = Math.max(...points.map(p => p.x)) - x\n    const y = Math.min(...points.map(p => p.y))\n    const height = Math.max(...points.map(p => p.y)) - y\n    return new Box({ x, y, width, height })\n  }\n\n  static getCorners(box: TBox): TPoint[]\n  {\n    return [\n      { x: box.x, y: box.y },\n      { x: box.x + box.width, y: box.y },\n      { x: box.x + box.width, y: box.y + box.height },\n      { x: box.x, y: box.y + box.height }\n    ]\n  }\n\n  static getSide(box: TBox): TPoint[]\n  {\n    return [\n      { x: box.x + box.width / 2, y: box.y },\n      { x: box.x + box.width, y: box.y + box.height / 2 },\n      { x: box.x + box.width / 2, y: box.y + box.height },\n      { x: box.x, y: box.y + box.height / 2 }\n    ];\n\n  }\n\n  static getCenter(box: TBox): TPoint\n  {\n    return { x: box.x + box.width / 2, y: box.y + box.height / 2 }\n  }\n\n  static getSides(box: TBox): TSegment[]\n  {\n    const vertices = Box.getCorners(box)\n    return vertices.map((p, i) =>\n    {\n      if (i === 3) {\n        return { p1: vertices[0], p2: p }\n      }\n      else {\n        return { p1: p, p2: vertices[i + 1] }\n      }\n    })\n  }\n\n  static isContained(box: TBox, wrapper: TBox): boolean\n  {\n    return isBetween(box.x, wrapper.x, wrapper.x + wrapper.width) &&\n      isBetween(box.x + box.width, wrapper.x, wrapper.x + wrapper.width) &&\n      isBetween(box.y, wrapper.y, wrapper.y + wrapper.height) &&\n      isBetween(box.y + box.height, wrapper.y, wrapper.y + wrapper.height)\n  }\n\n  static containsPoint(box: TBox, point: TPoint): boolean\n  {\n    return isBetween(point.x, box.x, box.x + box.width) &&\n      isBetween(point.y, box.y, box.y + box.height)\n  }\n\n  static contains(box: TBox, child: TBox): boolean\n  {\n    return isBetween(child.x, box.x, box.x + box.width) &&\n      isBetween(child.x + child.width, box.x, box.x + box.width) &&\n      isBetween(child.y, box.y, box.y + box.height) &&\n      isBetween(child.y + child.height, box.y, box.y + box.height)\n  }\n\n  static overlaps(box1: TBox, box2: TBox): boolean\n  {\n    if (box1.x > box2.x + box2.width) return false\n    if (box1.x + box1.width < box2.x) return false\n    if (box1.y > box2.y + box2.height) return false\n    if (box1.y + box1.height < box2.y) return false\n\n    return true\n  }\n\n  get xMin(): number\n  {\n    return this.x\n  }\n\n  get xMid(): number\n  {\n    return this.x + this.width / 2\n  }\n\n  get xMax(): number\n  {\n    return this.x + this.width\n  }\n\n  get yMin(): number\n  {\n    return this.y\n  }\n\n  get yMid(): number\n  {\n    return this.y + this.height / 2\n  }\n\n  get yMax(): number\n  {\n    return this.y + this.height\n  }\n\n  get corners(): TPoint[]\n  {\n    return Box.getCorners(this)\n  }\n\n  get center(): TPoint\n  {\n    return Box.getCenter(this)\n  }\n\n  get side(): TPoint[]\n  {\n    return Box.getSide(this)\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return [\n      ...this.corners,\n      this.center\n    ]\n  }\n\n  isContained(wrapper: TBox): boolean\n  {\n    return Box.isContained(this, wrapper)\n  }\n\n  contains(child: TBox): boolean\n  {\n    return Box.contains(this, child)\n  }\n\n  containsPoint(point: TPoint): boolean\n  {\n    return Box.containsPoint(this, point)\n  }\n\n  overlaps(boundaries: TBox): boolean\n  {\n    return Box.overlaps(this, boundaries)\n  }\n}\n","/**\n * @group Style\n * @property {String} color=#000000 Color (supported formats rgb() rgba() hsl() hsla() #rgb #rgba #rrggbb #rrggbbaa)\n * @property {String} width in px\n\n */\nexport type TStyle = {\n  [key: string]: string | number | undefined\n  width: number\n  color: string\n  opacity?: number\n  fill?: string\n}\n\n/**\n * @group Style\n * @source\n */\nexport const DefaultStyle: TStyle = {\n  width: 2,\n  color: \"#000000\",\n//   opacity: 1,\n//   fill: \"transparent\",\n} as const\n","import { PartialDeep } from \"../utils\"\nimport { TStyle } from \"./Style\"\n\n/**\n * @group Style\n * @property {String} -myscript-pen-width=1 Width of strokes and primitives in mm (no other unit is supported yet)\n * @property {String} -myscript-pen-fill-style=none\n * @property {String} -myscript-pen-fill-color=#FFFFFF00 Color filled inside the area delimited by strokes and primitives\n */\nexport type TPenStyle = PartialDeep<TStyle> & {\n  \"-myscript-pen-width\"?: number\n  \"-myscript-pen-fill-style\"?: string\n  \"-myscript-pen-fill-color\"?: string\n}\n\n/**\n * @group Style\n * @source\n */\nexport const DefaultPenStyle: TPenStyle = {\n}\n","import { TPenStyle } from \"./PenStyle\"\n\n/**\n * @group Style\n */\nexport type TThemeMath = {\n  \"font-family\": string\n}\n\n/**\n * @group Style\n */\nexport type TThemeMathSolved = {\n  \"font-family\": string\n  color: string\n}\n\n/**\n * @group Style\n */\nexport type TThemeText = {\n  \"font-family\": string,\n  \"font-size\": number\n}\n\n/**\n * @group Style\n */\nexport type TTheme = {\n  ink: TPenStyle\n  \".math\": TThemeMath\n  \".math-solved\": TThemeMathSolved\n  \".text\": TThemeText\n  [key: string]: unknown\n}\n\n/**\n * @group Style\n * @source\n */\nexport const DefaultTheme: TTheme = {\n  ink: {\n    color: \"#000000\",\n    width: 1,\n    \"-myscript-pen-width\": 1,\n    \"-myscript-pen-fill-style\": \"none\",\n    \"-myscript-pen-fill-color\": \"#FFFFFF00\"\n  },\n  \".math\": {\n    \"font-family\": \"STIXGeneral\"\n  },\n  \".math-solved\": {\n    \"font-family\": \"STIXGeneral\",\n    color: \"#A8A8A8FF\"\n  },\n  \".text\": {\n    \"font-family\": \"MyScriptInter\",\n    \"font-size\": 10\n  }\n}\n","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.JsonCSS=e():t.JsonCSS=e()}(this,function(){return function(t){function e(o){if(n[o])return n[o].exports;var r=n[o]={i:o,l:!1,exports:{}};return t[o].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};return e.m=t,e.c=n,e.i=function(t){return t},e.d=function(t,n,o){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:o})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,\"a\",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"\",e(e.s=1)}([function(t,e,n){\"use strict\";function o(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(e,\"__esModule\",{value:!0});var r=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},i=function t(e){var n=this;o(this,t),this.toJSON=function(t){if(\"string\"!=typeof t)return console.error(\"Need a CSS string but given \",void 0===t?\"undefined\":r(t),t),\"Not a valid CSS..!\";var e={},o=void 0,i=void 0,u=void 0;try{t.split(\"{\").forEach(function(t){if(i=t.trim())if(-1===i.indexOf(\"}\"))e[i]={},o=i;else{i.substring(0,i.indexOf(\"}\")).split(\";\").forEach(function(t){(u=t.split(\":\"))&&2===u.length&&(e[o][u[0].trim().replace(/^\\\"|\\\"$/g,\"\")]=n._trimSemiColon(u[1].trim().replace(/^\\\"|\\\"$/g,\"\")))});try{o=i.split(\"}\")[1].trim(),o&&(e[o]={})}catch(t){}}})}catch(t){return\"Not a valid CSS..!\"}return e},this.toCSS=function(t){if(\"object\"!==(void 0===t?\"undefined\":r(t)))return console.error(\"Need a JSON object but given \",void 0===t?\"undefined\":r(t),t),\"Not a valid JSON..!\";var e=\"\";try{for(var n in t)if(t.hasOwnProperty(n)){e+=n+\" {\\n\";for(var o in t[n])t[n].hasOwnProperty(o)&&(e+=o+\": \"+t[n][o]+\";\\n\");e+=\"}\\n\"}}catch(t){return\"Not a valid JSON..!\"}return e},this._trimSemiColon=function(t){return\";\"===t.slice(-1)?t.slice(0,n.length-1):t}};e.default=i},function(t,e,n){\"use strict\";t.exports=n(0).default}])});","import JsonCSS from \"json-css\"\nimport { TTheme } from \"./Theme\"\nimport { TPenStyle } from \"./PenStyle\"\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst parser: any = new JsonCSS()\n\n/**\n * @group Style\n */\nexport const StyleHelper = {\n  themeToCSS(json: TTheme): string\n  {\n    return parser.toCSS(json) as string\n    // css = css.replace( /[\\r\\n]+/gm, \"\" )\n    // return css\n  },\n  themeToJSON(style: string): TTheme\n  {\n    const theme = parser.toJSON(style) as TTheme\n    theme[\".text\"][\"font-size\"] = Number(theme[\".text\"][\"font-size\"])\n    theme.ink[\"-myscript-pen-width\"] = Number(theme.ink[\"-myscript-pen-width\"])\n    theme.ink.width = Number(theme.ink.width)\n    return theme\n  },\n  penStyleToCSS (penStyle: TPenStyle): string {\n    let css = parser.toCSS({ css: penStyle }) as string\n    css = css.substring(6, css.length - 3)\n    return css\n  },\n  penStyleToJSON (penStyleString: string): TPenStyle {\n    const penStyle = parser.toJSON(`css {${penStyleString}}`).css as TPenStyle\n    if (penStyle.width) {\n      penStyle.width = Number(penStyle.width)\n    } else {\n      delete penStyle.width\n    }\n    if (penStyle[\"-myscript-pen-width\"]) {\n      penStyle[\"-myscript-pen-width\"] = Number(penStyle[\"-myscript-pen-width\"])\n    } else {\n      delete penStyle[\"-myscript-pen-width\"]\n    }\n    return penStyle\n  },\n\n  stringToJSON(style: string): {[key: string]: string}\n  {\n    return parser.toJSON(`css {${style}}`).css\n  },\n  JSONToString(style: {[key: string]: string}): string\n  {\n    return Object.entries(style).map(([k, v]) => `${k}:${v}`).join(\";\")\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { PartialDeep, mergeDeep } from \"../utils\"\nimport { DefaultPenStyle, TPenStyle } from \"./PenStyle\"\nimport { DefaultTheme, TTheme } from \"./Theme\"\n\n/**\n * @group Style\n */\nexport class StyleManager\n{\n  #penStyle!: TPenStyle\n  #theme!: TTheme\n  #penStyleClasses!: string\n  #currentPenStyle!: TPenStyle\n  #logger =  LoggerManager.getLogger(LoggerCategory.STYLE)\n\n  constructor(penStyle?: PartialDeep<TPenStyle>, theme?: PartialDeep<TTheme>)\n  {\n    this.#logger.info(\"constructor\", { penStyle, theme })\n    this.setTheme(theme)\n    this.setPenStyleClasses()\n    this.setPenStyle(penStyle)\n  }\n\n  get currentPenStyle(): TPenStyle\n  {\n    return this.#currentPenStyle || this.#penStyle\n  }\n\n  get penStyle(): TPenStyle\n  {\n    return this.#penStyle\n  }\n  setPenStyle(style?: PartialDeep<TPenStyle>)\n  {\n    this.#logger.info(\"setPenStyle\", { style })\n    this.#penStyle = mergeDeep(structuredClone(DefaultPenStyle), style || {}) as TPenStyle\n    this.#currentPenStyle = style || (this.theme[`.${ this.#penStyleClasses }`]) as TPenStyle\n    this.#logger.debug(\"setPenStyle\", this.#currentPenStyle)\n  }\n\n  get theme(): TTheme\n  {\n    return this.#theme\n  }\n  setTheme(theme?: PartialDeep<TTheme>)\n  {\n    this.#logger.info(\"setTheme\", { theme })\n    this.#theme = mergeDeep(structuredClone(DefaultTheme), theme || {}) as TTheme\n    this.#logger.debug(\"setTheme\", this.#theme)\n  }\n\n  get penStyleClasses(): string\n  {\n    return this.#penStyleClasses\n  }\n  setPenStyleClasses(penStyleClass = \"\")\n  {\n    this.#logger.info(\"setPenStyleClasses\", { penStyleClass })\n    this.#penStyleClasses = penStyleClass\n    this.#currentPenStyle = (this.theme[`.${ this.#penStyleClasses }`]) as TPenStyle\n    this.#logger.debug(\"setPenStyleClasses\", this.#currentPenStyle)\n  }\n\n}\n","import { createUUID, mergeDeep, PartialDeep } from \"../utils\"\nimport { DefaultStyle, TStyle } from \"../style\"\n\n/**\n * @group Symbol\n */\nexport enum DecoratorKind\n{\n  Highlight = \"highlight\",\n  Surround = \"surround\",\n  Underline = \"underline\",\n  Strikethrough = \"strikethrough\",\n}\n\n/**\n * @group Symbol\n */\nexport class IIDecorator\n{\n  id: string\n  kind: DecoratorKind\n  style: TStyle\n\n  constructor(kind: DecoratorKind, style: PartialDeep<TStyle>)\n  {\n    this.id = `${ kind }-${ createUUID() }`\n    this.style = structuredClone(mergeDeep({}, DefaultStyle ,style))\n    this.kind = kind\n  }\n\n  clone(): IIDecorator\n  {\n    const clone = new IIDecorator(this.kind, structuredClone(this.style))\n    clone.id = this.id\n    return clone\n  }\n\n}\n","import { TStyle } from \"../style\"\nimport { PartialDeep } from \"../utils\"\n\n/**\n * @group Symbol\n */\nexport enum SymbolType\n{\n  Stroke = \"stroke\",\n  Group = \"group\",\n  Shape = \"shape\",\n  Edge = \"edge\",\n  Text = \"text\",\n  Eraser = \"eraser\",\n  Recognized = \"recognized\"\n}\n\n/**\n * @group Symbol\n */\nexport interface TSymbol {\n  id: string\n  creationTime: number\n  modificationDate: number\n  type: string\n  style: PartialDeep<TStyle>\n}\n","import { SELECTION_MARGIN } from \"../../Constants\"\nimport { TStyle } from \"../../style\"\nimport { findIntersectionBetween2Segment, PartialDeep } from \"../../utils\"\nimport { Box, TBox } from \"../Box\"\nimport { IISymbolBase } from \"../IISymbolBase\"\nimport { TPoint } from \"../Point\"\nimport { SymbolType } from \"../Symbol\"\n\n/**\n * @group Symbol\n */\nexport enum EdgeKind\n{\n  Line = \"line\",\n  PolyEdge = \"polyedge\",\n  Arc = \"arc\",\n}\n\n/**\n * @group Symbol\n */\nexport enum EdgeDecoration\n{\n  Arrow = \"arrow-head\"\n}\n\n/**\n * @group Symbol\n */\nexport abstract class OIEdgeBase<K = EdgeKind> extends IISymbolBase<SymbolType.Edge>\n{\n  readonly kind: K\n  readonly isClosed = false\n\n  startDecoration?: EdgeDecoration\n  endDecoration?: EdgeDecoration\n\n  constructor(\n    kind: K,\n    startDecoration?: EdgeDecoration,\n    endDecoration?: EdgeDecoration,\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(SymbolType.Edge, style)\n    this.kind = kind\n\n    this.startDecoration = startDecoration\n    this.endDecoration = endDecoration\n  }\n\n  abstract get vertices(): TPoint[]\n\n  get bounds(): Box\n  {\n    const bb = Box.createFromPoints(this.vertices)\n    bb.x -= SELECTION_MARGIN / 2\n    bb.y -= SELECTION_MARGIN / 2\n    bb.height += SELECTION_MARGIN\n    bb.width += SELECTION_MARGIN\n    if (this.startDecoration || this.endDecoration) {\n      bb.x -= ((this.style.width || 1) * 2.5)\n      bb.y -= ((this.style.width || 1) * 2.5)\n      bb.height += ((this.style.width || 1) * 5)\n      bb.width += ((this.style.width || 1) * 5)\n    }\n    return bb\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return this.vertices\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.bounds.isContained(box) ||\n      this.edges.some(e1 => Box.getSides(box).some(e2 => !!findIntersectionBetween2Segment(e1, e2)))\n  }\n\n  abstract clone(): OIEdgeBase\n}\n","import { TStyle } from \"../../style\"\nimport { findIntersectionBetween2Segment, PartialDeep } from \"../../utils\"\nimport { Box, TBox } from \"../Box\"\nimport { IISymbolBase } from \"../IISymbolBase\"\nimport { TPoint } from \"../Point\"\nimport { SymbolType } from \"../Symbol\"\n\n/**\n * @group Symbol\n */\nexport enum ShapeKind\n{\n  Circle = \"circle\",\n  Ellipse = \"ellipse\",\n  Polygon = \"polygon\",\n  Table = \"table\"\n}\n\n/**\n * @group Symbol\n */\nexport abstract class OIShapeBase<K = ShapeKind> extends IISymbolBase<SymbolType.Shape>\n{\n  readonly kind: K\n  readonly isClosed = true\n\n  constructor(kind: K, style?: PartialDeep<TStyle>)\n  {\n    super(SymbolType.Shape, style)\n    this.kind = kind\n  }\n\n  get bounds(): Box\n  {\n    return Box.createFromPoints(this.vertices)\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return this.bounds.snapPoints\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.bounds.isContained(box) ||\n      this.edges.some(e1 => Box.getSides(box).some(e2 => !!findIntersectionBetween2Segment(e1, e2)))\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { Box, TBox } from \"../Box\"\nimport { IIStroke } from \"../IIStroke\"\nimport { IISymbolBase } from \"../IISymbolBase\"\nimport { TPoint } from \"../Point\"\nimport { SymbolType } from \"../Symbol\"\n\n/**\n * @group Symbol\n */\nexport enum RecognizedKind\n{\n  Text = \"text\",\n  Line = \"line\",\n  PolyEdge = \"polyedge\",\n  Arc = \"arc\",\n  Circle = \"circle\",\n  Ellipse = \"ellipse\",\n  Polygone = \"polygone\",\n}\n\n/**\n * @group Symbol\n */\nexport abstract class IIRecognizedBase<K = RecognizedKind> extends IISymbolBase<SymbolType.Recognized>\n{\n  readonly kind: K\n\n  strokes: IIStroke[]\n\n  constructor(\n    kind: K,\n    strokes: IIStroke[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(SymbolType.Recognized, style)\n    this.kind = kind\n    this.strokes = strokes\n  }\n\n  get vertices(): TPoint[]\n  {\n    return this.strokes.flatMap(s => s.vertices)\n  }\n\n  get bounds(): Box\n  {\n    return Box.createFromBoxes(this.strokes.map(c => c.bounds))\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return this.bounds.snapPoints\n  }\n\n  updateChildrenStyle(): void\n  {\n    this.strokes.forEach(child => child.style = Object.assign({}, child.style, this.style))\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.strokes.some(s => s.overlaps(box))\n  }\n\n  containsStroke(strokeId: string): boolean\n  {\n    return this.strokes.some(s => s.id === strokeId)\n  }\n\n  removeStrokes(strokeIds: string[]): IIStroke[]\n  {\n    const strokeRemoved = this.strokes.filter(s => strokeIds.includes(s.id))\n    this.strokes = this.strokes.filter(s => !strokeIds.includes(s.id))\n    return strokeRemoved\n  }\n}\n","import { TPoint } from \"../symbol\"\n\n/**\n * @group Transform\n * @remarks Represents a 2D affine transform, defined as a 3x3 matrix with an implicit third raw of <code>[ 0 0 1 ]</code>\n */\nexport type TMatrixTransform = {\n  /**\n   * @remarks scaling x\n   */\n  xx: number,\n  /**\n   * @remarks shearing x\n   */\n  yx: number,\n  /**\n   * @remarks translation x\n   */\n  tx: number,\n  /**\n   * @remarks shearing y\n   */\n  xy: number,\n  /**\n   * @remarks scaling y\n   */\n  yy: number,\n  /**\n   * @remarks translation y\n   */\n  ty: number,\n}\n\n/**\n * @group Transform\n * @remarks Represents a 2D affine transform, defined as a 3x3 matrix with an implicit third raw of <code>[ 0 0 1 ]</code>\n */\nexport class MatrixTransform implements TMatrixTransform\n{\n  xx: number\n  yx: number\n  xy: number\n  yy: number\n  tx: number\n  ty: number\n\n  constructor(xx: number, yx: number, xy: number, yy: number, tx: number, ty: number)\n  {\n    this.xx = xx\n    this.yx = yx\n    this.xy = xy\n    this.yy = yy\n    this.tx = tx\n    this.ty = ty\n  }\n\n  static identity(): MatrixTransform\n  {\n    return new MatrixTransform(1, 0, 0, 1, 0, 0)\n  }\n\n  static applyToPoint(mat: TMatrixTransform, point: TPoint): TPoint\n  {\n    return {\n      x: mat.xx * point.x + mat.xy * point.y + mat.tx,\n      y: mat.yx * point.x + mat.yy * point.y + mat.ty,\n    }\n  }\n\n  static rotation(mat: TMatrixTransform): number\n  {\n    let rotation\n\n    if (mat.xx !== 0 || mat.xy !== 0) {\n      const hypotAc = Math.hypot(mat.xx, mat.xy)\n      rotation = Math.acos(mat.xx / hypotAc) * (mat.xy > 0 ? -1 : 1)\n    } else if (mat.yx !== 0 || mat.yy !== 0) {\n      const hypotBd = Math.hypot(mat.yx, mat.yy)\n      rotation = Math.PI / 2 + Math.acos(mat.yx / hypotBd) * (mat.yy > 0 ? -1 : 1)\n    } else {\n      rotation = 0\n    }\n\n    return rotation\n  }\n\n  static toCssString(matrix: TMatrixTransform): string\n  {\n    return `matrix(${ matrix.xx }, ${ matrix.yx }, ${ matrix.xy }, ${ matrix.yy }, ${ matrix.tx }, ${ matrix.ty })`\n  }\n\n\tinvert() {\n\t\tconst { xx, yx, xy, yy, tx, ty } = this\n\t\tconst denom = xx * yy - yx * xy\n\t\tthis.xx = yy / denom\n\t\tthis.yx = yx / -denom\n\t\tthis.xy = xy / -denom\n\t\tthis.yy = xx / denom\n\t\tthis.tx = (yy * tx - xy * ty) / -denom\n\t\tthis.ty = (yx * tx - xx * ty) / denom\n\t\treturn this\n\t}\n\n  multiply(m: TMatrixTransform): MatrixTransform\n  {\n    const { xx, yx, xy, yy, tx, ty } = this\n    this.xx = xx * m.xx + xy * m.yx\n    this.yx = yx * m.xx + yy * m.yx\n    this.xy = xx * m.xy + xy * m.yy\n    this.yy = yx * m.xy + yy * m.yy\n    this.tx = xx * m.tx + xy * m.ty + tx\n    this.ty = yx * m.tx + yy * m.ty + ty\n    return this\n  }\n\n  translate(tx: number, ty: number): MatrixTransform\n  {\n    return this.multiply({ xx: 1, yx: 0, xy: 0, yy: 1, tx, ty })\n  }\n\n  rotate(radian: number, center?: TPoint): MatrixTransform\n  {\n    if (center) {\n      this.translate(center.x, center.y)\n    }\n    const cosAngle = Math.round(Math.cos(radian) * 1000) / 1000\n    const sinAngle = Math.round(Math.sin(radian) * 1000) / 1000\n    this.multiply({\n      xx: cosAngle,\n      yx: sinAngle,\n      xy: -sinAngle,\n      yy: cosAngle,\n      tx: 0,\n      ty: 0\n    })\n    if (center) {\n      this.translate(-center.x, -center.y)\n    }\n    return this\n  }\n\n  scale(x: number, y: number, center?: TPoint): MatrixTransform\n  {\n    if (center) {\n      this.translate(center.x, center.y)\n    }\n    this.multiply({\n      xx: x,\n      yx: 0,\n      xy: 0,\n      yy: y,\n      tx: 0,\n      ty: 0\n    })\n    if (center) {\n      this.translate(-center.x, -center.y)\n    }\n    return this\n  }\n\n  applyToPoint(point: TPoint): TPoint\n  {\n    return MatrixTransform.applyToPoint(this, point)\n  }\n\n  clone(): MatrixTransform\n  {\n    return new MatrixTransform(this.xx, this.yx, this.xy, this.yy, this.tx, this.ty)\n  }\n\n  toCssString(): string\n  {\n    return MatrixTransform.toCssString(this)\n  }\n\n}\n","import { PartialDeep, createUUID, findIntersectionBetween2Segment } from \"../utils\"\nimport { TBox } from \"./Box\"\nimport { TPoint, TSegment } from \"./Point\"\nimport { SymbolType, TSymbol } from \"./Symbol\"\nimport { DefaultStyle, TStyle } from \"../style\"\nimport { MatrixTransform } from \"../transform\"\n\n/**\n * @group Symbol\n */\nexport abstract class IISymbolBase<T extends string = SymbolType> implements TSymbol\n{\n  readonly type: T\n  abstract readonly isClosed: boolean\n  style: TStyle\n\n  id: string\n  creationTime: number\n  modificationDate: number\n  selected: boolean\n  deleting: boolean\n  transform: MatrixTransform\n\n  constructor(type: T, style?: PartialDeep<TStyle>)\n  {\n    this.type = type\n    this.id = `${ this.type }-${ createUUID() }`\n\n    this.creationTime = Date.now()\n    this.modificationDate = this.creationTime\n    this.selected = false\n    this.deleting = false\n\n    this.transform = MatrixTransform.identity()\n\n    this.style = Object.assign({}, DefaultStyle, style)\n    if (this.style.opacity) {\n      this.style.opacity = +this.style.opacity\n    }\n    this.style.width = +this.style.width\n  }\n\n  abstract get vertices(): TPoint[]\n\n  abstract get snapPoints(): TPoint[]\n\n  get edges(): TSegment[]\n  {\n    if (this.isClosed) {\n      return this.vertices.map((p, i) =>\n      {\n        if (i === this.vertices.length - 1) {\n          return { p1: p, p2: this.vertices[0] }\n        }\n        else {\n          return { p1: p, p2: this.vertices[i + 1] }\n        }\n      })\n    }\n    else {\n      return this.vertices.slice(0, -1).map((p, i) =>\n      {\n        return { p1: p, p2: this.vertices[i + 1] }\n      })\n    }\n  }\n\n  abstract overlaps(box: TBox): boolean\n\n  abstract clone(): IISymbolBase\n\n  abstract toJSON(): PartialDeep<IISymbolBase>\n\n  isIntersected(seg: TSegment): boolean\n  {\n    return this.edges.some(edge =>\n    {\n      return findIntersectionBetween2Segment(edge, seg)\n    })\n  }\n}\n","import { PartialDeep, isValidNumber } from \"../utils\"\n\n/**\n * @group Symbol\n */\nexport type TPoint = {\n  x: number\n  y: number\n}\n\n/**\n * @group Symbol\n */\nexport type TPointer = TPoint & {\n  t: number\n  p: number\n}\n\n/**\n * @group Symbol\n */\nexport type TSegment = {\n  p1: TPoint\n  p2: TPoint\n}\n\n/**\n * @group Symbol\n */\nexport function isValidPoint(p?: PartialDeep<TPoint>): boolean\n{\n  if (!p) return false\n  if (!isValidNumber(p.x)) return false\n  if (!isValidNumber(p.y)) return false\n  return true\n}\n","import { SELECTION_MARGIN } from \"../../Constants\"\nimport { TStyle } from \"../../style\"\nimport { PartialDeep, computePointOnEllipse, isValidNumber } from \"../../utils\"\nimport { EdgeDecoration, EdgeKind, OIEdgeBase } from \"./IIEdge\"\nimport { TPoint, isValidPoint } from \"../Point\"\n\n/**\n * @group Symbol\n */\nexport class IIEdgeArc extends OIEdgeBase<EdgeKind.Arc>\n{\n  center: TPoint\n  startAngle: number\n  sweepAngle: number\n  radiusX: number\n  radiusY: number\n  phi: number\n  protected _vertices: Map<string, TPoint[]>\n\n  constructor(\n    center: TPoint,\n    startAngle: number,\n    sweepAngle: number,\n    radiusX: number,\n    radiusY: number,\n    phi: number,\n    startDecoration?: EdgeDecoration,\n    endDecoration?: EdgeDecoration,\n    style?: PartialDeep<TStyle>,\n  )\n  {\n    super(EdgeKind.Arc, startDecoration, endDecoration, style)\n    this.center = center\n    this.startAngle = startAngle\n    this.sweepAngle = sweepAngle\n    this.radiusX = radiusX\n    this.radiusY = radiusY\n    this.phi = phi\n    this._vertices = new Map<string, TPoint[]>()\n    this._vertices.set(this.verticesId, this.computedVertices())\n  }\n\n  protected get verticesId(): string\n  {\n    return `${ this.center.x }-${ this.center.y }-${ this.startAngle }-${ this.sweepAngle }-${ this.radiusX }-${ this.radiusY }-${ this.phi }`\n  }\n\n  protected computedVertices(): TPoint[]\n  {\n    const length = Math.abs(this.sweepAngle) * Math.sqrt((Math.pow(this.radiusX, 2) + Math.pow(this.radiusY, 2)) / 2)\n    const nbVertices = Math.max(8, Math.round(length / SELECTION_MARGIN))\n    const angleStep = this.sweepAngle / nbVertices\n    const v: TPoint[] = []\n    const endAngle = this.startAngle + this.sweepAngle\n    if (this.sweepAngle > 0) {\n      for (let angle = this.startAngle; angle < endAngle; angle += angleStep) {\n        v.push(computePointOnEllipse(this.center, this.radiusX, this.radiusY, this.phi, angle))\n      }\n    } else {\n      for (let angle = this.startAngle; angle > endAngle; angle += angleStep) {\n        v.push(computePointOnEllipse(this.center, this.radiusX, this.radiusY, this.phi, angle))\n      }\n    }\n    v.push(computePointOnEllipse(this.center, this.radiusX, this.radiusY, this.phi, endAngle))\n    return v\n  }\n\n  get vertices(): TPoint[]\n  {\n    if (!this._vertices.has(this.verticesId)) {\n      this._vertices.set(this.verticesId, this.computedVertices())\n    }\n    return this._vertices.get(this.verticesId)!\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return [\n      this.vertices[0],\n      this.vertices.at(-1)!\n    ]\n  }\n\n  clone(): IIEdgeArc\n  {\n    const clone = new IIEdgeArc(\n      structuredClone(this.center),\n      this.startAngle,\n      this.sweepAngle,\n      this.radiusX,\n      this.radiusY,\n      this.phi,\n      this.startDecoration,\n      this.endDecoration,\n      structuredClone(this.style)\n    )\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIEdgeArc>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      center: this.center,\n      startAngle: this.startAngle,\n      sweepAngle: this.sweepAngle,\n      radiusX: this.radiusX,\n      radiusY: this.radiusY,\n      phi: this.phi,\n      startDecoration: this.startDecoration,\n      style: this.style,\n      endDecoration: this.endDecoration,\n    }\n  }\n\n  static create(partial: PartialDeep<IIEdgeArc>): IIEdgeArc\n  {\n    if (!isValidPoint(partial?.center)) throw new Error(`Unable to create a arc, center point is invalid`)\n    if (!isValidNumber(partial?.startAngle)) throw new Error(`Unable to create a arc, startAngle is invalid`)\n    if (!isValidNumber(partial?.sweepAngle)) throw new Error(`Unable to create a arc, sweepAngle is invalid`)\n    if (!isValidNumber(partial?.radiusX)) throw new Error(`Unable to create a arc, radiusX is invalid`)\n    if (!isValidNumber(partial?.radiusY)) throw new Error(`Unable to create a arc, radiusY is invalid`)\n    const arc = new IIEdgeArc(\n      partial?.center as TPoint,\n      partial.startAngle!,\n      partial.sweepAngle!,\n      partial.radiusX!,\n      partial.radiusY!,\n      partial.phi || 0,\n      partial.startDecoration,\n      partial.endDecoration,\n      partial.style\n    )\n    if (partial.id) {\n      arc.id = partial.id\n    }\n    return arc\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { EdgeDecoration, EdgeKind, OIEdgeBase } from \"./IIEdge\"\nimport { TPoint, isValidPoint } from \"../Point\"\n\n/**\n * @group Symbol\n */\nexport class IIEdgeLine extends OIEdgeBase<EdgeKind.Line>\n{\n  start: TPoint\n  end: TPoint\n\n  constructor(\n    start: TPoint,\n    end: TPoint,\n    startDecoration?: EdgeDecoration,\n    endDecoration?: EdgeDecoration,\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(EdgeKind.Line, startDecoration, endDecoration, style)\n    this.start = start\n    this.end = end\n  }\n\n  get vertices(): TPoint[]\n  {\n    return [\n      this.start,\n      this.end\n    ]\n  }\n\n  clone(): IIEdgeLine\n  {\n    const clone = new IIEdgeLine(structuredClone(this.start), structuredClone(this.end), this.startDecoration, this.endDecoration, structuredClone(this.style))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIEdgeLine>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      start: this.start,\n      end: this.end,\n      style: this.style,\n      startDecoration: this.startDecoration,\n      endDecoration: this.endDecoration,\n    }\n  }\n\n  static create(partial: PartialDeep<IIEdgeLine>): IIEdgeLine\n  {\n    if (!isValidPoint(partial?.start)) throw new Error(`Unable to create a arc, start point is invalid`)\n    if (!isValidPoint(partial?.end)) throw new Error(`Unable to create a arc, end point is invalid`)\n    const line = new IIEdgeLine(partial?.start as TPoint, partial?.end as TPoint, partial.startDecoration, partial.endDecoration, partial.style)\n    if (partial.id) {\n      line.id = partial.id\n    }\n    return line\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { EdgeDecoration, EdgeKind, OIEdgeBase } from \"./IIEdge\"\nimport { TPoint, isValidPoint } from \"../Point\"\n\n/**\n * @group Symbol\n */\nexport class IIEdgePolyLine extends OIEdgeBase<EdgeKind.PolyEdge>\n{\n  points: TPoint[]\n\n  constructor(\n    points: TPoint[],\n    startDecoration?: EdgeDecoration,\n    endDecoration?: EdgeDecoration,\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(EdgeKind.PolyEdge, startDecoration, endDecoration, style)\n    this.points = points\n  }\n\n  get vertices(): TPoint[]\n  {\n    return this.points\n  }\n\n  clone(): IIEdgePolyLine\n  {\n    const clone = new IIEdgePolyLine(structuredClone(this.points),this.startDecoration, this.endDecoration, structuredClone(this.style))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIEdgePolyLine>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      points: this.points,\n      style: this.style,\n      startDecoration: this.startDecoration,\n      endDecoration: this.endDecoration,\n    }\n  }\n\n  static create(partial: PartialDeep<IIEdgePolyLine>): IIEdgePolyLine\n  {\n    if (!partial?.points?.map(p => isValidPoint(p))) throw new Error(`Unable to create a PolyLine, points are invalid`)\n    const polyline = new IIEdgePolyLine(partial?.points as TPoint[], partial.startDecoration, partial.endDecoration, partial.style)\n    if (partial.id) {\n      polyline.id = partial.id\n    }\n    return polyline\n  }\n}\n","import { SELECTION_MARGIN } from \"../../Constants\"\nimport { TStyle } from \"../../style\"\nimport { PartialDeep, findIntersectBetweenSegmentAndCircle, isValidNumber, computeRotatedPoint } from \"../../utils\"\nimport { TPoint, isValidPoint } from \"../Point\"\nimport { OIShapeBase, ShapeKind } from \"./IIShape\"\nimport { Box, TBox } from \"../Box\"\n\n/**\n * @group Symbol\n */\nexport class IIShapeCircle extends OIShapeBase<ShapeKind.Circle>\n{\n  center: TPoint\n  radius: number\n  protected _vertices: Map<string, TPoint[]>\n  protected _bounds: Map<string, Box>\n\n  constructor(\n    center: TPoint,\n    radius: number,\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(ShapeKind.Circle, style)\n    this.center = center\n    this.radius = radius\n    this._vertices = new Map<string, TPoint[]>()\n    this._vertices.set(this.verticesId, this.computedVertices())\n    this._bounds = new Map<string, Box>()\n    this._bounds.set(this.verticesId, this.computedBondingBox())\n  }\n\n  protected get verticesId(): string\n  {\n    return `${ this.center.x }-${ this.center.y }-${ this.radius }`\n  }\n\n  protected computedVertices(): TPoint[]\n  {\n    const firstPoint: TPoint = {\n      x: this.center.x,\n      y: this.radius + this.center.y\n    }\n    const perimeter = 2 * Math.PI * this.radius\n    const nbPoint = Math.max(8, Math.round(perimeter / SELECTION_MARGIN))\n    const points: TPoint[] = []\n    for (let i = 0; i < nbPoint; i++) {\n      const rad = 2 * Math.PI * (i / nbPoint)\n      points.push(computeRotatedPoint(firstPoint, this.center, rad))\n    }\n    return points\n  }\n\n  protected computedBondingBox(): Box\n  {\n    const boundingBox: TBox = {\n      x: this.center.x - this.radius,\n      y: this.center.y - this.radius,\n      height: this.radius * 2,\n      width: this.radius * 2\n    }\n    return new Box(boundingBox)\n  }\n\n  get bounds(): Box\n  {\n    if (!this._bounds.has(this.verticesId)) {\n      this._bounds.set(this.verticesId, this.computedBondingBox())\n    }\n    return this._bounds.get(this.verticesId)!\n  }\n\n  get vertices(): TPoint[]\n  {\n    if (!this._vertices.has(this.verticesId)) {\n      this._vertices.set(this.verticesId, this.computedVertices())\n    }\n    return this._vertices.get(this.verticesId)!\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.bounds.isContained(box) ||\n      Box.getSides(box).some(seg => findIntersectBetweenSegmentAndCircle(seg, this.center, this.radius).length)\n  }\n\n  clone(): IIShapeCircle\n  {\n    const clone = new IIShapeCircle(structuredClone(this.center), this.radius, structuredClone(this.style))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIShapeCircle>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      center: this.center,\n      radius: this.radius,\n      style: this.style,\n    }\n  }\n\n  static createBetweenPoints(origin: TPoint, target: TPoint, style?: PartialDeep<TStyle>): IIShapeCircle\n  {\n    const center = {\n      x: (origin.x + target.x) / 2,\n      y: (origin.y + target.y) / 2\n    }\n\n    const width = Math.abs(origin.x - target.x)\n    const height = Math.abs(origin.y - target.y)\n    const radius = Math.min(width, height) / 2\n    return new IIShapeCircle(center, radius, style)\n  }\n\n  static updateBetweenPoints(circle: IIShapeCircle, origin: TPoint, target: TPoint): IIShapeCircle\n  {\n    circle.center = {\n      x: (origin.x + target.x) / 2,\n      y: (origin.y + target.y) / 2\n    }\n    const width = Math.abs(origin.x - target.x)\n    const height = Math.abs(origin.y - target.y)\n    circle.radius = Math.min(width, height) / 2\n    return circle\n  }\n\n  static create(partial: PartialDeep<IIShapeCircle>): IIShapeCircle\n  {\n    if (!isValidPoint(partial.center)) throw new Error(`Unable to create circle, center is invalid`)\n    if (!isValidNumber(partial.radius)) throw new Error(`Unable to create circle, radius is undefined`)\n    const circle = new IIShapeCircle(partial.center as TPoint, partial.radius!, partial.style)\n    if (partial.id) {\n      circle.id = partial.id\n    }\n    return circle\n  }\n}\n","import { SELECTION_MARGIN } from \"../../Constants\"\nimport { TStyle } from \"../../style\"\nimport { PartialDeep, computePointOnEllipse, findIntersectionBetween2Segment, isValidNumber, } from \"../../utils\"\nimport { TPoint, isValidPoint } from \"../Point\"\nimport { OIShapeBase, ShapeKind } from \"./IIShape\"\nimport { Box, TBox } from \"../Box\"\n\n/**\n * @group Symbol\n */\nexport class IIShapeEllipse extends OIShapeBase<ShapeKind.Ellipse>\n{\n  center: TPoint\n  radiusX: number\n  radiusY: number\n  orientation: number\n  protected _vertices: Map<string, TPoint[]>\n\n  constructor(\n    center: TPoint,\n    radiusX: number,\n    radiusY: number,\n    orientation: number,\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(ShapeKind.Ellipse, style)\n    this.center = center\n    this.radiusX = radiusX\n    this.radiusY = radiusY\n    this.orientation = orientation\n    this._vertices = new Map<string, TPoint[]>()\n  }\n\n  protected get verticesId(): string\n  {\n    return `${ this.center.x }-${ this.center.y }-${ this.radiusX }-${ this.radiusY }-${ this.orientation }`\n  }\n\n  protected computedVertices(): TPoint[]\n  {\n    const points: TPoint[] = []\n    const perimeter = 2 * Math.PI * Math.sqrt((Math.pow(this.radiusX, 2) + Math.pow(this.radiusY, 2)) / 2)\n    const nbPoint = Math.max(8, Math.round(perimeter / SELECTION_MARGIN))\n    for (let i = 0; i < nbPoint; i++) {\n      const theta = 2 * Math.PI * (i / nbPoint)\n      points.push(computePointOnEllipse(this.center, this.radiusX, this.radiusY, this.orientation, theta))\n    }\n\n    return points\n  }\n\n  get vertices(): TPoint[]\n  {\n    if (!this._vertices.has(this.verticesId)) {\n      this._vertices.set(this.verticesId, this.computedVertices())\n    }\n    return this._vertices.get(this.verticesId)!\n  }\n\n  overlaps(box: TBox): boolean\n  {\n\n    return this.bounds.isContained(box) ||\n      this.edges.some(e1 => Box.getSides(box).some(e2 => !!findIntersectionBetween2Segment(e1, e2)))\n  }\n\n  clone(): IIShapeEllipse\n  {\n    const clone = new IIShapeEllipse(structuredClone(this.center), this.radiusX, this.radiusY, this.orientation, structuredClone(this.style))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIShapeEllipse>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      center: this.center,\n      orientation: this.orientation,\n      radiusX: this.radiusX,\n      radiusY: this.radiusY,\n      style: this.style,\n    }\n  }\n\n  static createBetweenPoints(origin: TPoint, target: TPoint, style?: PartialDeep<TStyle>): IIShapeEllipse\n  {\n    const center = {\n      x: (origin.x + target.x) / 2,\n      y: (origin.y + target.y) / 2\n    }\n    const radiusX = Math.abs(origin.x - target.x) / 2\n    const radiusY = Math.abs(origin.y - target.y) / 2\n    return new IIShapeEllipse(center, radiusX, radiusY, 0, style)\n  }\n\n  static updateBetweenPoints(ellipse: IIShapeEllipse, origin: TPoint, target: TPoint): IIShapeEllipse\n  {\n    ellipse.center = {\n      x: (origin.x + target.x) / 2,\n      y: (origin.y + target.y) / 2\n    }\n    ellipse.radiusX = Math.abs(origin.x - target.x) / 2\n    ellipse.radiusY = Math.abs(origin.y - target.y) / 2\n    return ellipse\n  }\n\n  static create(partial: PartialDeep<IIShapeEllipse>): IIShapeEllipse\n  {\n    if (!isValidPoint(partial.center)) throw new Error(`Unable to create ellipse, center is undefined`)\n    if (!isValidNumber(partial.radiusX)) throw new Error(`Unable to create ellipse, radiusX is undefined`)\n    if (!isValidNumber(partial.radiusY)) throw new Error(`Unable to create ellipse, radiusY is undefined`)\n    const ellipse = new IIShapeEllipse(partial.center as TPoint, partial.radiusX!, partial.radiusY!, partial.orientation || 0, partial.style)\n    if (partial.id) {\n      ellipse.id = partial.id\n    }\n    return ellipse\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { TPoint, isValidPoint } from \"../Point\"\nimport { OIShapeBase, ShapeKind } from \"./IIShape\"\nimport { Box } from \"../Box\"\nimport { PartialDeep } from \"../../utils\"\n\n/**\n * @group Symbol\n */\nexport class IIShapePolygon extends OIShapeBase<ShapeKind.Polygon>\n{\n  points: TPoint[]\n\n  constructor(points: TPoint[], style?: PartialDeep<TStyle>)\n  {\n    super(ShapeKind.Polygon, style)\n    this.points = points\n  }\n\n  get vertices(): TPoint[]\n  {\n    return this.points\n  }\n\n  get bounds(): Box\n  {\n    return Box.createFromPoints(this.vertices)\n  }\n\n  clone(): IIShapePolygon\n  {\n    const clone = new IIShapePolygon(structuredClone(this.points), structuredClone(this.style))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIShapePolygon>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      points: this.points,\n      style: this.style,\n    }\n  }\n\n  static create(partial: PartialDeep<IIShapePolygon>): IIShapePolygon\n  {\n    if (!partial?.points || partial?.points?.length < 3) throw new Error(`Unable to create polygon at least 3 points required`)\n    if (partial?.points?.some(p => !isValidPoint(p))) throw new Error(`Unable to create a polygon, one or more points are invalid`)\n    const polygon = new IIShapePolygon(partial.points as TPoint[], partial.style)\n    if (partial.id) {\n      polygon.id = partial.id\n    }\n    return polygon\n  }\n\n  static createTriangleBetweenPoints(origin: TPoint, target: TPoint, style?: PartialDeep<TStyle>): IIShapePolygon\n  {\n    const points: TPoint[] = [\n      { x: origin.x, y: origin.y },\n      { x: target.x, y: origin.y },\n      { x: (origin.x + target.x) / 2, y: target.y }\n    ]\n    return new IIShapePolygon(points, style)\n  }\n  static updateTriangleBetweenPoints(poly: IIShapePolygon, origin: TPoint, target: TPoint): IIShapePolygon\n  {\n    poly.points = [\n      { x: origin.x, y: origin.y },\n      { x: target.x, y: origin.y },\n      { x: (origin.x + target.x) / 2, y: target.y }\n    ]\n    poly.modificationDate = Date.now()\n    return poly\n  }\n\n  static createParallelogramBetweenPoints(origin: TPoint, target: TPoint, style?: PartialDeep<TStyle>): IIShapePolygon\n  {\n    const points: TPoint[] = [\n      { x: origin.x, y: origin.y },\n      { x: origin.x + (target.x - origin.x) * 0.75, y: origin.y },\n      { x: target.x, y: target.y },\n      { x: origin.x + (target.x - origin.x) * 0.25, y: target.y },\n    ]\n    return new IIShapePolygon(points, style)\n  }\n  static updateParallelogramBetweenPoints(poly: IIShapePolygon, origin: TPoint, target: TPoint): IIShapePolygon\n  {\n    const points: TPoint[] = [\n      { x: origin.x, y: origin.y },\n      { x: origin.x + (target.x - origin.x) * 0.75, y: origin.y },\n      { x: target.x, y: target.y },\n      { x: origin.x + (target.x - origin.x) * 0.25, y: target.y },\n    ]\n    poly.points = points\n    poly.modificationDate = Date.now()\n    return poly\n  }\n\n  static createRectangleBetweenPoints(origin: TPoint, target: TPoint, style?: PartialDeep<TStyle>): IIShapePolygon\n  {\n    const box = Box.createFromPoints([origin, target])\n    const points: TPoint[] = [\n      { x: box.xMin, y: box.yMin },\n      { x: box.xMax, y: box.yMin },\n      { x: box.xMax, y: box.yMax },\n      { x: box.xMin, y: box.yMax },\n    ]\n    return new IIShapePolygon(points, style)\n  }\n  static updateRectangleBetweenPoints(poly: IIShapePolygon, origin: TPoint, target: TPoint): IIShapePolygon\n  {\n    const box = Box.createFromPoints([origin, target])\n    const points: TPoint[] = [\n      { x: box.xMin, y: box.yMin },\n      { x: box.xMax, y: box.yMin },\n      { x: box.xMax, y: box.yMax },\n      { x: box.xMin, y: box.yMax },\n    ]\n    poly.points = points\n    poly.modificationDate = Date.now()\n    return poly\n  }\n\n  static createRhombusBetweenPoints(origin: TPoint, target: TPoint, style?: PartialDeep<TStyle>): IIShapePolygon\n  {\n    const box = Box.createFromPoints([origin, target])\n    const points: TPoint[] = [\n      { x: box.xMid, y: box.yMin },\n      { x: box.xMax, y: box.yMid },\n      { x: box.xMid, y: box.yMax },\n      { x: box.xMin, y: box.yMid },\n    ]\n    return new IIShapePolygon(points, style)\n  }\n\n  static updateRhombusBetweenPoints(poly: IIShapePolygon, origin: TPoint, target: TPoint): IIShapePolygon\n  {\n    const box = Box.createFromPoints([origin, target])\n    const points: TPoint[] = [\n      { x: box.xMid, y: box.yMin },\n      { x: box.xMax, y: box.yMid },\n      { x: box.xMid, y: box.yMax },\n      { x: box.xMin, y: box.yMid },\n    ]\n    poly.points = points\n    poly.modificationDate = Date.now()\n    return poly\n  }\n}\n","import { TStyle } from \"../style\"\nimport { PartialDeep, computeDistance, getClosestPoint } from \"../utils\"\nimport { TStroke, TStrokeToSend } from \"./Stroke\"\nimport { TPoint, TPointer } from \"./Point\"\nimport { Box, TBox } from \"./Box\"\nimport { SymbolType } from \"./Symbol\"\nimport { IIDecorator } from \"./IIDecorator\"\nimport { IISymbolBase } from \"./IISymbolBase\"\n\n/**\n * @group Symbol\n */\nexport class IIStroke extends IISymbolBase<SymbolType.Stroke>\n{\n  readonly isClosed = false\n\n  pointerType: string\n  length: number\n  decorators: IIDecorator[]\n  pointers: Array<TPointer>\n\n  constructor(style?: PartialDeep<TStyle>, pointerType = \"pen\")\n  {\n    super(SymbolType.Stroke, style)\n\n    this.pointerType = pointerType\n    this.pointers = []\n    this.decorators = []\n    this.length = 0\n  }\n\n  get bounds(): Box\n  {\n    return Box.createFromPoints(this.vertices)\n  }\n\n  static split(strokeToSplit: IIStroke, i: number): { before: IIStroke, after: IIStroke }\n  {\n    const before = new IIStroke(strokeToSplit.style, strokeToSplit.pointerType)\n    before.pointers = strokeToSplit.pointers.slice(0, i)\n\n    const after = new IIStroke(strokeToSplit.style, strokeToSplit.pointerType)\n    after.pointers = strokeToSplit.pointers.slice(i)\n\n    return { before, after }\n  }\n\n  static substract(stroke: IIStroke, partStroke: IIStroke): { before?: IIStroke, after?: IIStroke }\n  {\n    if (!partStroke.length) return { before: stroke }\n    const result: { before?: IIStroke, after?: IIStroke } = {}\n    const lastPointBeforeStroke = {\n      x: partStroke.pointers[0].x as number,\n      y: partStroke.pointers[0].y as number\n    }\n    const closestLastPointBeforeStroke = getClosestPoint(stroke.pointers, lastPointBeforeStroke)\n    if (closestLastPointBeforeStroke.index > -1) {\n      const newStrokes = IIStroke.split(stroke, closestLastPointBeforeStroke.index)\n      result.before = newStrokes.before\n      result.after = newStrokes.after\n    }\n    const strokeAfter = result.after || stroke\n    const firstPointAfterStroke = {\n      x: partStroke.pointers.at(-1)!.x as number,\n      y: partStroke.pointers.at(-1)!.y as number\n    }\n    const closestFirstPointStrokeAfter = getClosestPoint(strokeAfter.pointers, firstPointAfterStroke)\n    if (closestFirstPointStrokeAfter.index > -1) {\n      const newStrokes = IIStroke.split(strokeAfter, closestFirstPointStrokeAfter.index)\n      result.after = newStrokes.after\n    }\n    if (!result.before?.pointers.length) result.before = undefined\n    if (!result.after?.pointers.length) result.after = undefined\n    return result\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return this.bounds.snapPoints\n  }\n\n  get vertices(): TPoint[]\n  {\n    return this.pointers\n  }\n\n  protected computePressure(distance: number): number\n  {\n    let ratio = 1.0\n    if (distance === this.length) {\n      ratio = 1.0\n    } else if (distance < 10) {\n      ratio = 0.2 + Math.pow(0.1 * distance, 0.4)\n    } else if (distance > this.length - 10) {\n      ratio = 0.2 + Math.pow(0.1 * (this.length - distance), 0.4)\n    }\n    const pressure = ratio * Math.max(0.1, 1.0 - (0.1 * Math.sqrt(distance)))\n    return isNaN(pressure) ? 0.5 : Math.round(pressure * 100) / 100\n  }\n\n  protected filterPointByAcquisitionDelta(point: TPointer): boolean\n  {\n    const lastPointer = this.pointers.at(-1)\n    const delta: number = (2 + ((this.style.width || 1) / 4))\n    return !lastPointer ||\n      Math.abs(lastPointer.x - point.x) >= delta ||\n      Math.abs(lastPointer.y - point.y) >= delta\n  }\n\n  addPointer(pointer: TPointer): void\n  {\n    if (this.filterPointByAcquisitionDelta(pointer)) {\n      const lastPointer = this.pointers.at(-1)\n      const distance = lastPointer ? computeDistance(pointer, lastPointer) : 0\n      this.length += distance\n      pointer.p = this.computePressure(distance)\n      this.pointers.push(pointer)\n      this.modificationDate = Date.now()\n    }\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.pointers.some(p =>\n    {\n      return p.x >= box.x && p.x <= box.x + box.width\n        && p.y >= box.y && p.y <= box.y + box.height\n    })\n  }\n\n  clone(): IIStroke\n  {\n    const clone = new IIStroke(this.style, this.pointerType)\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    clone.pointers = structuredClone(this.pointers)\n    clone.decorators = this.decorators.map(d => d.clone())\n    clone.length = this.length\n    return clone\n  }\n\n  formatToSend(): TStrokeToSend\n  {\n    const json: TStrokeToSend = {\n      id: this.id,\n      pointerType: this.pointerType,\n      p: [],\n      t: [],\n      x: [],\n      y: []\n    }\n    this.pointers.forEach(p =>\n    {\n      json.p.push(p.p)\n      json.t.push(p.t)\n      json.x.push(p.x)\n      json.y.push(p.y)\n    })\n    return json\n  }\n\n  toJSON(): PartialDeep<IIStroke>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      pointers: this.pointers,\n      style: this.style,\n      decorators: this.decorators.length ? this.decorators : undefined\n    }\n  }\n\n  static create(partial: PartialDeep<IIStroke>): IIStroke\n  {\n    if (!partial.pointers?.length) {\n      throw new Error(`not pointers`)\n    }\n    const stroke = new IIStroke(partial.style, partial.pointerType)\n    if (partial.id) {\n      stroke.id = partial.id\n    }\n    const errors: string[] = []\n    let flag = true\n    partial.pointers?.forEach((pp, pIndex) =>\n    {\n      if (!pp) {\n        errors.push(`no pointer at ${ pIndex }`)\n        flag = false\n        return\n      }\n      const pointer: TPointer = {\n        p: pp.p || 1,\n        t: pp.t || pIndex,\n        x: 0,\n        y: 0\n      }\n      if (pp?.x == undefined || pp?.x == null) {\n        errors.push(`no x at pointer at ${ pIndex }`)\n        flag = false\n        return\n      }\n      else {\n        pointer.x = pp.x\n      }\n      if (pp?.y == undefined || pp?.y == null) {\n        errors.push(`no y at pointer at ${ pIndex }`)\n        flag = false\n        return\n      }\n      else {\n        pointer.y = pp.y\n      }\n      if (flag) {\n        stroke.addPointer(pointer)\n      }\n    })\n\n    if (errors.length) {\n      throw new Error(errors.join(\" and \"))\n    }\n    if (partial.decorators?.length) {\n      partial.decorators.forEach(d => {\n        if(d?.kind) {\n          stroke.decorators.push(new IIDecorator(d.kind, Object.assign({}, stroke.style, d.style)))\n        }\n      })\n    }\n    return stroke\n  }\n}\n\n/**\n * @group Symbol\n * @group Utils\n */\nexport function convertPartialStrokesToOIStrokes(json: PartialDeep<TStroke>[]): IIStroke[]\n{\n  const errors: string[] = []\n  const strokes: IIStroke[] = []\n  json.forEach((j, i) =>\n  {\n    try {\n      strokes.push(IIStroke.create(j as PartialDeep<IIStroke>))\n    } catch (e) {\n      errors.push(`stroke ${ i + 1 } has ${ (e as Error).message }`)\n    }\n  })\n\n  if (errors.length) {\n    throw new Error(errors.join(\"\\n\"))\n  }\n\n  return strokes\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { IIRecognizedBase, RecognizedKind } from \"./IIRecognizedBase\"\nimport { IIStroke } from \"../IIStroke\"\n\n/**\n * @group Symbol\n */\nexport class IIRecognizedArc extends IIRecognizedBase<RecognizedKind.Arc>\n{\n  readonly isClosed = false\n\n  constructor(\n    strokes: IIStroke[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(RecognizedKind.Arc, strokes, style)\n  }\n\n  clone(): IIRecognizedArc\n  {\n    const clone = new IIRecognizedArc(this.strokes.map(s => s.clone()), structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIRecognizedArc>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      strokes: JSON.parse(JSON.stringify(this.strokes)),\n    }\n  }\n\n  static create(partial: PartialDeep<IIRecognizedArc>): IIRecognizedArc\n  {\n    if (!partial.strokes?.length) {\n      throw new Error(`no strokes`)\n    }\n    const strokes = partial.strokes.map(s => IIStroke.create(s!))\n    const ws = new IIRecognizedArc(strokes, partial.style)\n\n    if (partial.id) {\n      ws.id = partial.id\n    }\n    return ws\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { IIRecognizedBase, RecognizedKind } from \"./IIRecognizedBase\"\nimport { IIStroke } from \"../IIStroke\"\n\n/**\n * @group Symbol\n */\nexport class IIRecognizedCircle extends IIRecognizedBase<RecognizedKind.Circle>\n{\n  readonly isClosed = true\n\n  constructor(\n    strokes: IIStroke[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(RecognizedKind.Circle, strokes, style)\n  }\n\n  clone(): IIRecognizedCircle\n  {\n    const clone = new IIRecognizedCircle(this.strokes.map(s => s.clone()), structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIRecognizedCircle>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      strokes: JSON.parse(JSON.stringify(this.strokes)),\n    }\n  }\n\n  static create(partial: PartialDeep<IIRecognizedCircle>): IIRecognizedCircle\n  {\n    if (!partial.strokes?.length) {\n      throw new Error(`no strokes`)\n    }\n    const strokes = partial.strokes.map(s => IIStroke.create(s!))\n\n    const ws = new IIRecognizedCircle(strokes, partial.style)\n\n    if (partial.id) {\n      ws.id = partial.id\n    }\n    return ws\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { IIRecognizedBase, RecognizedKind } from \"./IIRecognizedBase\"\nimport { IIStroke } from \"../IIStroke\"\n\n/**\n * @group Symbol\n */\nexport class IIRecognizedEllipse extends IIRecognizedBase<RecognizedKind.Ellipse>\n{\n  readonly isClosed = true\n\n  constructor(\n    strokes: IIStroke[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(RecognizedKind.Ellipse, strokes, style)\n  }\n\n  clone(): IIRecognizedEllipse\n  {\n    const clone = new IIRecognizedEllipse(this.strokes.map(s => s.clone()), structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIRecognizedEllipse>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      strokes: JSON.parse(JSON.stringify(this.strokes)),\n    }\n  }\n\n  static create(partial: PartialDeep<IIRecognizedEllipse>): IIRecognizedEllipse\n  {\n    if (!partial.strokes?.length) {\n      throw new Error(`no strokes`)\n    }\n    const strokes = partial.strokes.map(s => IIStroke.create(s!))\n\n    const ws = new IIRecognizedEllipse(strokes, partial.style)\n\n    if (partial.id) {\n      ws.id = partial.id\n    }\n    return ws\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { IIRecognizedBase, RecognizedKind } from \"./IIRecognizedBase\"\nimport { IIStroke } from \"../IIStroke\"\n\n/**\n * @group Symbol\n */\nexport class IIRecognizedLine extends IIRecognizedBase<RecognizedKind.Line>\n{\n  readonly isClosed = false\n\n  constructor(\n    strokes: IIStroke[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(RecognizedKind.Line, strokes, style)\n  }\n\n  clone(): IIRecognizedLine\n  {\n    const clone = new IIRecognizedLine(this.strokes.map(s => s.clone()), structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIRecognizedLine>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      strokes: JSON.parse(JSON.stringify(this.strokes)),\n    }\n  }\n\n  static create(partial: PartialDeep<IIRecognizedLine>): IIRecognizedLine\n  {\n    if (!partial.strokes?.length) {\n      throw new Error(`no strokes`)\n    }\n    const strokes = partial.strokes.map(s => IIStroke.create(s!))\n\n    const ws = new IIRecognizedLine(strokes, partial.style)\n\n    if (partial.id) {\n      ws.id = partial.id\n    }\n    return ws\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { IIRecognizedBase, RecognizedKind } from \"./IIRecognizedBase\"\nimport { IIStroke } from \"../IIStroke\"\n\n/**\n * @group Symbol\n */\nexport class IIRecognizedPolyLine extends IIRecognizedBase<RecognizedKind.PolyEdge>\n{\n  readonly isClosed = false\n\n  constructor(\n    strokes: IIStroke[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(RecognizedKind.PolyEdge, strokes, style)\n  }\n\n  clone(): IIRecognizedPolyLine\n  {\n    const clone = new IIRecognizedPolyLine(this.strokes.map(s => s.clone()), structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIRecognizedPolyLine>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      strokes: JSON.parse(JSON.stringify(this.strokes)),\n    }\n  }\n\n  static create(partial: PartialDeep<IIRecognizedPolyLine>): IIRecognizedPolyLine\n  {\n    if (!partial.strokes?.length) {\n      throw new Error(`no strokes`)\n    }\n    const strokes = partial.strokes.map(s => IIStroke.create(s!))\n\n    const ws = new IIRecognizedPolyLine(strokes, partial.style)\n\n    if (partial.id) {\n      ws.id = partial.id\n    }\n    return ws\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { IIRecognizedBase, RecognizedKind } from \"./IIRecognizedBase\"\nimport { IIStroke } from \"../IIStroke\"\n\n/**\n * @group Symbol\n */\nexport class IIRecognizedPolygon extends IIRecognizedBase<RecognizedKind.Polygone>\n{\n  readonly isClosed = true\n\n  constructor(\n    strokes: IIStroke[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(RecognizedKind.Polygone, strokes, style)\n  }\n\n  clone(): IIRecognizedPolygon\n  {\n    const clone = new IIRecognizedPolygon(this.strokes.map(s => s.clone()), structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIRecognizedPolygon>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      strokes: JSON.parse(JSON.stringify(this.strokes)),\n    }\n  }\n\n  static create(partial: PartialDeep<IIRecognizedPolygon>): IIRecognizedPolygon\n  {\n    if (!partial.strokes?.length) {\n      throw new Error(`no strokes`)\n    }\n    const strokes = partial.strokes.map(s => IIStroke.create(s!))\n\n    const ws = new IIRecognizedPolygon(strokes, partial.style)\n\n    if (partial.id) {\n      ws.id = partial.id\n    }\n    return ws\n  }\n}\n","import { TStyle } from \"../../style\"\nimport { PartialDeep } from \"../../utils\"\nimport { IIDecorator } from \"../IIDecorator\"\nimport { IIRecognizedBase, RecognizedKind } from \"./IIRecognizedBase\"\nimport { IIStroke } from \"../IIStroke\"\n\n/**\n * @group Symbol\n */\nexport class IIRecognizedText extends IIRecognizedBase<RecognizedKind.Text>\n{\n  readonly isClosed = false\n\n  decorators: IIDecorator[]\n\n  baseline: number\n  xHeight: number\n  label?: string\n\n  constructor(\n    strokes: IIStroke[],\n    lines: { baseline: number, xHeight: number },\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(RecognizedKind.Text, strokes, style)\n    this.baseline = lines.baseline\n    this.xHeight = lines.xHeight\n    this.decorators = []\n  }\n\n  clone(): IIRecognizedText\n  {\n    const clone = new IIRecognizedText(this.strokes.map(s => s.clone()), { baseline: this.baseline, xHeight: this.xHeight }, structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.label = this.label\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    clone.decorators = this.decorators.map(d => d.clone())\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIRecognizedText>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      kind: this.kind,\n      label: this.label,\n      baseline: this.baseline,\n      xHeight: this.xHeight,\n      strokes: JSON.parse(JSON.stringify(this.strokes)),\n      decorators: this.decorators.length ? JSON.parse(JSON.stringify(this.decorators)) : undefined\n    }\n  }\n\n  static create(partial: PartialDeep<IIRecognizedText>): IIRecognizedText\n  {\n    if (!partial.strokes?.length) {\n      throw new Error(`no strokes`)\n    }\n    const strokes = partial.strokes.map(s => IIStroke.create(s!))\n    const line = {\n      baseline: partial.baseline || 0,\n      xHeight: partial.xHeight || 0\n    }\n    const ws = new IIRecognizedText(strokes, line, partial.style)\n\n    if (partial.decorators?.length) {\n      partial.decorators.forEach(d =>\n      {\n        if (d?.kind) {\n          ws.decorators.push(new IIDecorator(d.kind, Object.assign({}, ws.style, d.style)))\n        }\n      })\n    }\n    if (partial.id) {\n      ws.id = partial.id\n    }\n    return ws\n  }\n}\n","import { TStyle } from \"../style\"\nimport { PartialDeep } from \"../utils\"\nimport { TPoint } from \"./Point\"\nimport { Box, TBox } from \"./Box\"\nimport { SymbolType } from \"./Symbol\"\nimport { IIDecorator } from \"./IIDecorator\"\nimport { IISymbolBase } from \"./IISymbolBase\"\nimport { IIStroke } from \"./IIStroke\"\nimport { IIText } from \"./IIText\"\nimport { TIISymbol } from \".\"\n\n/**\n * @group Symbol\n */\nexport class IISymbolGroup extends IISymbolBase<SymbolType.Group>\n{\n  readonly isClosed = false\n\n  children: TIISymbol[]\n  decorators: IIDecorator[]\n\n  constructor(\n    children: TIISymbol[],\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(SymbolType.Group, style)\n    this.children = children\n    this.decorators = []\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return this.bounds.snapPoints\n  }\n\n  get vertices(): TPoint[]\n  {\n    return this.children.flatMap(s => s.vertices)\n  }\n\n  get bounds(): Box\n  {\n    return Box.createFromBoxes(this.children.map(c => c.bounds))\n  }\n\n  updateChildrenStyle(): void\n  {\n    this.children.forEach(child => {\n      child.style = Object.assign({}, child.style, this.style)\n      switch (child.type) {\n        case SymbolType.Group:\n          child.updateChildrenStyle()\n          break\n        case SymbolType.Text:\n          child.chars.forEach(c =>\n          {\n            if (child.style.color) {\n              c.color = child.style.color\n            }\n          })\n          break\n        case SymbolType.Recognized:\n          child.updateChildrenStyle()\n          break\n      }\n\n    })\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.children.some(s => s.overlaps(box))\n  }\n\n  containsSymbol(strokeId: string): boolean\n  {\n    return IISymbolGroup.containsSymbol(this, strokeId)\n  }\n\n  containsOnlyStroke(): boolean\n  {\n    return IISymbolGroup.containsOnlyStroke(this)\n  }\n\n  extractText(): IIText[]\n  {\n    return IISymbolGroup.extractText(this)\n  }\n\n  extractStrokes(): IIStroke[]\n  {\n    return IISymbolGroup.extractStrokes(this)\n  }\n\n  removeChilds(symbolIds: string[]): IISymbolGroup\n  {\n    return IISymbolGroup.removeChilds(this, symbolIds)\n  }\n\n  static containsOnlyStroke(group: IISymbolGroup): boolean\n  {\n    return group.children.every(s =>\n    {\n      if (s.type === SymbolType.Group) {\n        return IISymbolGroup.containsOnlyStroke(s as IISymbolGroup)\n      }\n      if (s.type === SymbolType.Stroke) {\n        return true\n      }\n      return false\n    })\n  }\n\n  static extractText(group: IISymbolGroup): IIText[]\n  {\n    const texts: IIText[] = []\n    group.children.forEach(s =>\n    {\n      switch (s.type) {\n        case SymbolType.Text:\n          texts.push(s)\n          break;\n        case SymbolType.Group:\n          texts.push(...IISymbolGroup.extractText(s))\n          break;\n      }\n    })\n    return texts\n  }\n\n  static extractStrokes(group: IISymbolGroup): IIStroke[]\n  {\n    const strokes: IIStroke[] = []\n    group.children.forEach(s =>\n    {\n      switch (s.type) {\n        case SymbolType.Stroke:\n          strokes.push(s)\n          break;\n        case SymbolType.Recognized:\n          strokes.push(...s.strokes)\n          break;\n        case SymbolType.Group:\n          strokes.push(...IISymbolGroup.extractStrokes(s))\n          break;\n      }\n    })\n    return strokes\n  }\n\n  static containsSymbol(group: IISymbolGroup, symbolId: string): boolean\n  {\n    return group.children.some(symbol =>\n    {\n      if (symbol.id === symbolId) return true\n      if (symbol.type === SymbolType.Group) {\n        return IISymbolGroup.containsSymbol(symbol, symbolId)\n      }\n      else if (symbol.type === SymbolType.Recognized) {\n        return symbol.containsStroke(symbolId)\n      }\n      return false\n    })\n  }\n\n  static removeChilds(group: IISymbolGroup, symbolIds: string[]): IISymbolGroup\n  {\n    group.children = group.children.filter(s => !symbolIds.includes(s.id))\n    const symbolsToRemove = group.children.slice()\n    symbolsToRemove.forEach(s =>\n    {\n      if (s.type === SymbolType.Group) {\n        if (!s.removeChilds(symbolIds).children.length) {\n          group.children = group.children.filter(s1 => s1.id !== s.id)\n        }\n      }\n      else if (s.type === SymbolType.Recognized) {\n        s.removeStrokes(symbolIds)\n        if (!s.strokes.length) {\n          group.removeChilds([s.id])\n        }\n      }\n    })\n    return group\n  }\n\n  clone(): IISymbolGroup\n  {\n    const clone = new IISymbolGroup(this.children.map(s => s.clone()), structuredClone({ ...this.style }))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    clone.decorators = this.decorators.map(d => d.clone())\n    return clone\n  }\n\n  toJSON(): PartialDeep<IISymbolGroup>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      children: JSON.parse(JSON.stringify(this.children)),\n      decorators: this.decorators.length ? JSON.parse(JSON.stringify(this.decorators)) : undefined\n    }\n  }\n}\n","import { TStyle } from \"../style\"\nimport { PartialDeep, convertDegreeToRadian, findIntersectionBetween2Segment, isPointInsidePolygon, computeRotatedPoint } from \"../utils\"\nimport { TPoint, isValidPoint } from \"./Point\"\nimport { SymbolType } from \"./Symbol\"\nimport { Box, TBox } from \"./Box\"\nimport { IIDecorator } from \"./IIDecorator\"\nimport { IISymbolBase } from \"./IISymbolBase\"\n\n/**\n * @group Symbol\n */\nexport type TIISymbolChar = {\n  id: string\n  label: string\n  fontSize: number\n  fontWeight: \"normal\" | \"bold\"\n  color: string\n  bounds: TBox\n}\n\n/**\n * @group Symbol\n */\nexport class IIText extends IISymbolBase<SymbolType.Text>\n{\n  readonly isClosed = true\n\n  point: TPoint\n  chars: TIISymbolChar[]\n  decorators: IIDecorator[]\n  bounds: Box\n  rotation?: {\n    degree: number,\n    center: TPoint\n  }\n\n  constructor(\n    chars: TIISymbolChar[],\n    point: TPoint,\n    bounds: TBox,\n    style?: PartialDeep<TStyle>\n  )\n  {\n    super(SymbolType.Text, style)\n    this.point = point\n    this.bounds = new Box(bounds)\n    this.chars = chars\n    this.decorators = []\n  }\n\n  get label(): string\n  {\n    return this.chars.map(c => c.label).join(\"\")\n  }\n\n  get vertices(): TPoint[]\n  {\n    if (this.rotation) {\n      const center = this.rotation.center\n      const rad = convertDegreeToRadian(-this.rotation.degree)\n      return this.bounds.corners\n        .map(p =>\n        {\n          return computeRotatedPoint(p, center, rad)\n        })\n    }\n    else {\n      return this.bounds.corners\n    }\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    const offsetY = this.bounds.yMax - this.point.y\n    const points = [\n      { x: this.bounds.x, y: this.bounds.yMin + offsetY },\n      { x: this.bounds.xMax, y: this.bounds.yMin + offsetY },\n      { x: this.bounds.xMax, y: this.bounds.yMax - offsetY },\n      { x: this.bounds.x, y: this.bounds.yMax - offsetY },\n      this.bounds.center\n    ]\n    if (this.rotation) {\n      const center = this.rotation.center\n      const rad = convertDegreeToRadian(-this.rotation.degree)\n      return points\n        .map(p =>\n        {\n          return computeRotatedPoint(p, center, rad)\n        })\n    }\n    return points\n  }\n\n  protected getCharCorners(char: TIISymbolChar): TPoint[]\n  {\n    const boxBox = new Box(char.bounds)\n    if (this.rotation) {\n      const center = this.rotation.center\n      const rad = convertDegreeToRadian(-this.rotation.degree)\n      return boxBox.corners\n        .map(p =>\n        {\n          return computeRotatedPoint(p, center, rad)\n        })\n    }\n    return boxBox.corners\n  }\n\n  updateChildrenStyle(): void\n  {\n    this.chars.forEach(c => {\n      if (this.style.color) {\n        c.color = this.style.color\n      }\n    })\n    this.modificationDate = Date.now()\n  }\n\n  updateChildrenFont( { fontSize, fontWeight }: { fontSize?: number, fontWeight?: \"normal\" | \"bold\" }): void\n  {\n    this.chars.forEach(c => {\n      if (fontSize) {\n        c.fontSize = fontSize\n      }\n      if (fontWeight) {\n        c.fontWeight = fontWeight\n      }\n    })\n    this.modificationDate = Date.now()\n  }\n\n  getCharsOverlaps(points: TPoint[]): TIISymbolChar[]\n  {\n    return this.chars.filter(c =>\n    {\n      const charCorners = this.getCharCorners(c)\n      return points.some(p => isPointInsidePolygon(p, charCorners))\n    })\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.vertices.some(p => Box.containsPoint(box, p)) ||\n      this.edges.some(e1 => Box.getSides(box).some(e2 => !!findIntersectionBetween2Segment(e1, e2)))\n  }\n\n  clone(): IIText\n  {\n    const clone = new IIText(structuredClone(this.chars), structuredClone(this.point), this.bounds, structuredClone(this.style))\n    clone.id = this.id\n    clone.selected = this.selected\n    clone.deleting = this.deleting\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    clone.decorators = this.decorators.map(d => d.clone())\n    clone.rotation = this.rotation ? structuredClone(this.rotation) : undefined\n    return clone\n  }\n\n  toJSON(): PartialDeep<IIText>\n  {\n    return {\n      id: this.id,\n      type: this.type,\n      point: this.point,\n      chars: this.chars,\n      style: this.style,\n      rotation: this.rotation,\n      bounds: this.bounds,\n      decorators: this.decorators.length ? this.decorators : undefined\n    }\n  }\n\n  static create(partial: PartialDeep<IIText>): IIText\n  {\n    if (!isValidPoint(partial?.point)) throw new Error(`Unable to create a IIText, point are invalid`)\n    if (!partial.chars?.length) throw new Error(`Unable to create a IIText, no chars`)\n    if (!partial.bounds) throw new Error(`Unable to create a IIText, no boundingBox`)\n    const text = new IIText(partial.chars as TIISymbolChar[], partial.point as TPoint, partial.bounds as TBox, partial.style)\n    if (partial.id) text.id = partial.id\n    if (partial.decorators?.length) {\n      partial.decorators.forEach(d => {\n        if(d?.kind) {\n          text.decorators.push(new IIDecorator(d.kind, Object.assign({}, text.style, d.style)))\n        }\n      })\n    }\n    return text\n  }\n}\n","import { createUUID, PartialDeep } from \"../utils\"\nimport { TPoint, TPointer } from \"./Point\"\nimport { Box, TBox } from \"./Box\"\nimport { SymbolType } from \"./Symbol\"\nimport { IISymbolBase } from \"./IISymbolBase\"\nimport { TStyle } from \"../style\"\n\nconst style: TStyle = {\n  color: \"grey\",\n  fill: \"none\",\n  width: 12,\n  opacity: 0.2\n}\n\n/**\n * @group Symbol\n */\nexport class IIEraser extends IISymbolBase<SymbolType.Eraser>\n{\n  readonly isClosed = false\n  pointers: TPointer[]\n\n  constructor()\n  {\n    super(SymbolType.Eraser, style)\n    this.id = `${ this.type }-${ createUUID() }`\n    this.creationTime = Date.now()\n    this.modificationDate = this.creationTime\n    this.pointers = []\n  }\n\n  get bounds(): Box\n  {\n    return Box.createFromPoints(this.vertices)\n  }\n\n  get vertices(): TPoint[]\n  {\n    return this.pointers\n  }\n\n  get snapPoints(): TPoint[]\n  {\n    return []\n  }\n\n  clone(): IISymbolBase\n  {\n    const clone = new IIEraser()\n    clone.id = this.id\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    clone.pointers = structuredClone(this.pointers)\n    return clone\n  }\n\n  overlaps(box: TBox): boolean\n  {\n    return this.pointers.some(p =>\n    {\n      return p.x >= box.x && p.x <= box.x + box.width\n        && p.y >= box.y && p.y <= box.y + box.height\n    })\n  }\n\n  toJSON(): PartialDeep<IIEraser>\n  {\n    return {\n      id: this.id,\n      pointers: this.pointers,\n      style: this.style\n    }\n  }\n}\n","import { DefaultPenStyle, TPenStyle } from \"../style\"\nimport { PartialDeep, createUUID } from \"../utils\"\nimport { TPointer } from \"./Point\"\nimport { SymbolType, TSymbol } from \"./Symbol\"\n\n/**\n * @group Symbol\n */\nexport type TStrokeToSend = {\n  id: string\n  pointerType: string\n  x: number[]\n  y: number[]\n  t: number[]\n  p: number[]\n}\n\n/**\n * @group Symbol\n */\nexport type TStrokeGroupToSend = {\n  penStyle?: string\n  strokes: TStrokeToSend[]\n}\n\n/**\n * @group Symbol\n */\nexport type TStroke = TSymbol & {\n  style: TPenStyle\n  pointerType: string\n  pointers: TPointer[]\n  length: number\n}\n\n/**\n * @group Symbol\n */\nexport type TStrokeGroup = {\n  penStyle: TPenStyle\n  strokes: Stroke[]\n}\n\n/**\n * @group Symbol\n */\nexport class Stroke implements TStroke\n{\n  type = SymbolType.Stroke\n  id: string\n  creationTime: number\n  modificationDate: number\n  style: TPenStyle\n  pointerType: string\n  pointers: TPointer[]\n  length: number\n\n  constructor(style: TPenStyle, pointerType = \"pen\")\n  {\n    this.id = `${this.type}-${createUUID()}`\n    this.creationTime = Date.now()\n    this.modificationDate = this.creationTime\n    this.style = style\n    this.pointerType = pointerType\n    this.pointers = []\n    this.length = 0\n  }\n\n  clone(): Stroke\n  {\n    const clone = new Stroke(this.style, this.pointerType)\n    clone.id = this.id\n    clone.creationTime = this.creationTime\n    clone.modificationDate = this.modificationDate\n    clone.pointers = structuredClone(this.pointers)\n    clone.length = this.length\n    return clone\n  }\n\n  formatToSend(): TStrokeToSend\n  {\n    const json: TStrokeToSend = {\n      id: this.id,\n      pointerType: this.pointerType,\n      p: [],\n      t: [],\n      x: [],\n      y: []\n    }\n    this.pointers.forEach(p => {\n      json.p.push(p.p)\n      json.t.push(p.t)\n      json.x.push(p.x)\n      json.y.push(p.y)\n    })\n    return json\n  }\n}\n\n/**\n * @group Symbol\n * @group Utils\n */\nexport function convertPartialStrokesToStrokes(json: PartialDeep<TStroke>[]): Stroke[]\n{\n  const errors: string[] = []\n  const strokes: Stroke[] = []\n  json.forEach((j, ji) => {\n    let flag = true\n    const stroke = new Stroke(j.style || DefaultPenStyle, j.pointerType)\n    if (j.id) stroke.id = j.id\n    if (!j.pointers?.length) {\n      errors.push(`stroke ${ji + 1} has not pointers`)\n      flag = false\n      return\n    }\n    j.pointers?.forEach((pp, pIndex) => {\n      if (!pp) {\n        errors.push(`stroke ${ji + 1} has no pointer at ${pIndex}`)\n        flag = false\n        return\n      }\n      const pointer: TPointer = {\n        p: pp.p || 1,\n        t: pp.t || pIndex,\n        x: 0,\n        y: 0\n      }\n      if (pp?.x == undefined || pp?.x == null) {\n        errors.push(`stroke ${ji + 1} has no x at pointer at ${pIndex}`)\n        flag = false\n        return\n      }\n      else {\n        pointer.x = pp.x\n      }\n      if (pp?.y == undefined || pp?.y == null) {\n        errors.push(`stroke ${ji + 1} has no y at pointer at ${pIndex}`)\n        flag = false\n        return\n      }\n      else {\n        pointer.y = pp.y\n      }\n      if (flag) {\n        stroke.pointers.push(pointer)\n      }\n    })\n    if (flag) {\n      strokes.push(stroke)\n    }\n  })\n\n  if (errors.length) {\n    throw new Error(errors.join(\"\\n\"))\n  }\n\n  return strokes\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { TPenStyle } from \"../style\"\nimport { computeDistance } from \"../utils\"\nimport { TExport } from \"./Export\"\nimport { Stroke, TPoint, TPointer } from \"../symbol\"\n\n/**\n * @group Model\n */\nexport type TRecognitionPositions = {\n  lastSentPosition: number\n  lastReceivedPosition: number\n}\n\n/**\n * @group Model\n */\nexport class Model\n{\n  readonly creationTime: number\n  modificationDate: number\n  positions: TRecognitionPositions\n  currentSymbol?: Stroke\n  symbols: Stroke[]\n  exports?: TExport\n  converts?: TExport\n  width: number\n  height: number\n  rowHeight: number\n  idle: boolean\n  #logger = LoggerManager.getLogger(LoggerCategory.MODEL)\n\n  constructor(width = 100, height = 100, rowHeight = 0, creationDate = Date.now())\n  {\n    this.#logger.info(\"constructor\", { width, height, creationDate })\n    this.creationTime = creationDate\n    this.modificationDate = creationDate\n    this.width = width\n    this.height = height\n    this.rowHeight = rowHeight\n    this.symbols = []\n    this.positions = {\n      lastSentPosition: 0,\n      lastReceivedPosition: 0\n    }\n    this.idle = true\n  }\n\n  protected computePressure(distance: number, globalDistance: number): number\n  {\n    let ratio = 1.0\n    if (distance === globalDistance) {\n      ratio = 1.0\n    } else if (distance < 10) {\n      ratio = 0.2 + Math.pow(0.1 * distance, 0.4)\n    } else if (distance > globalDistance - 10) {\n      ratio = 0.2 + Math.pow(0.1 * (globalDistance - distance), 0.4)\n    }\n    const pressure = ratio * Math.max(0.1, 1.0 - (0.1 * Math.sqrt(distance)))\n    return isNaN(pressure) ? 0.5 : Math.round(pressure * 100) / 100\n  }\n\n  protected filterPointByAcquisitionDelta(stroke: Stroke, point: TPointer, lastPointer?: TPointer): boolean\n  {\n    const delta: number = (2 + ((stroke.style[\"-myscript-pen-width\"] || 0) / 4))\n    return !lastPointer ||\n      stroke.pointers.length === 0 ||\n      Math.abs(lastPointer.x - point.x) >= delta ||\n      Math.abs(lastPointer.y - point.y) >= delta\n  }\n\n  getStrokeFromPoint(point: TPoint): Stroke[]\n  {\n    this.#logger.info(\"getStrokeFromPoint\", { point })\n    const isBetween = (val: number, min: number, max: number): boolean => (val >= min && val <= max)\n\n    const _strokeList: Stroke[] = []\n    this.symbols.forEach((stroke) =>\n    {\n      for (let i = 0; i < stroke.pointers.length; i++) {\n        const strokePointer = stroke.pointers[i]\n        if (\n          isBetween(strokePointer.x, point.x - 5, point.x + 5) &&\n          isBetween(strokePointer.y, point.y - 5, point.y + 5)\n        ) {\n          _strokeList.push(stroke)\n          break\n        }\n        else {\n          if (computeDistance(point, strokePointer) < 10) {\n            _strokeList.push(stroke)\n            break\n          }\n        }\n      }\n    })\n    this.#logger.debug(\"getStrokeFromPoint\", { strokes: _strokeList })\n    return _strokeList\n  }\n\n  addPoint(stroke: Stroke, pointer: TPointer): void\n  {\n    this.#logger.debug(\"addPoint\", { stroke, pointer })\n    const lastPointer = stroke.pointers.at(-1)\n    if (this.filterPointByAcquisitionDelta(stroke, pointer, lastPointer)) {\n      const distance = lastPointer ? computeDistance(pointer, lastPointer) : 0\n      stroke.length += distance\n      pointer.p = this.computePressure(distance, stroke.length)\n      stroke.pointers.push(pointer)\n      stroke.modificationDate = Date.now()\n    }\n  }\n\n  addStroke(stroke: Stroke): void\n  {\n    this.#logger.info(\"addStroke\", { stroke })\n    this.symbols.push(stroke)\n    this.modificationDate = Date.now()\n    this.converts = undefined\n    this.exports = undefined\n  }\n\n  updateStroke(updatedStroke: Stroke): void\n  {\n    this.#logger.info(\"updateStroke\", { updatedStroke })\n    const strokeIndex = this.symbols.findIndex((s: Stroke): boolean => s.id === updatedStroke.id)\n    if (strokeIndex !== -1) {\n      updatedStroke.modificationDate = Date.now()\n      this.symbols.splice(strokeIndex, 1, updatedStroke)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n    this.#logger.debug(\"updateStroke\", this.symbols)\n  }\n\n  removeStroke(id: string): void\n  {\n    this.#logger.info(\"removeStroke\", { id })\n    const strokeIndex = this.symbols.findIndex(s => s.id === id)\n    if (strokeIndex !== -1) {\n      this.positions.lastSentPosition--\n      this.positions.lastReceivedPosition--\n      this.symbols.splice(strokeIndex, 1)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n    this.#logger.debug(\"removeStroke\", this.symbols)\n  }\n\n  removeStrokesFromPoint(point: TPoint): string[]\n  {\n    this.#logger.info(\"removeStrokesFromPoint\", { point })\n    const strokes = this.getStrokeFromPoint(point)\n    strokes.forEach(strokeToRemove =>\n    {\n      this.removeStroke(strokeToRemove.id)\n    })\n    this.#logger.debug(\"removeStrokesFromPoint\", strokes.map(s => s.id))\n    return strokes.map(s => s.id)\n  }\n\n  extractUnsentStrokes(): Stroke[]\n  {\n    return this.symbols.slice(this.positions.lastSentPosition)\n  }\n\n  initCurrentStroke(point: TPointer, pointerType: string, style: TPenStyle, dpi = 96): void\n  {\n    this.#logger.info(\"initCurrentStroke\", { point, pointerType, style, dpi })\n    if (style[\"-myscript-pen-width\"]) {\n      const pxWidth = (style[\"-myscript-pen-width\"] * dpi) / 25.4\n      style.width = pxWidth / 2\n    }\n    this.modificationDate = Date.now()\n    this.exports = undefined\n    this.currentSymbol = new Stroke(style, pointerType)\n    this.#logger.debug(\"initCurrentStroke\", this.currentSymbol)\n    this.addPoint(this.currentSymbol, point)\n  }\n\n  appendToCurrentStroke(point: TPointer): void\n  {\n    this.#logger.info(\"appendToCurrentStroke\", { point })\n    if (this.currentSymbol) {\n      this.addPoint(this.currentSymbol, point)\n    }\n    this.#logger.debug(\"appendToCurrentStroke\", this.currentSymbol)\n  }\n\n  endCurrentStroke(point: TPointer): void\n  {\n    this.#logger.info(\"endCurrentStroke\", { point })\n    if (this.currentSymbol) {\n      this.addPoint(this.currentSymbol, point)\n      this.addStroke(this.currentSymbol)\n      this.currentSymbol = undefined\n    }\n    this.#logger.debug(\"endCurrentStroke\", this.currentSymbol)\n  }\n\n  updatePositionSent(position: number = this.symbols.length): void\n  {\n    this.#logger.info(\"updatePositionSent\", { position })\n    this.positions.lastSentPosition = position\n    this.#logger.debug(\"updatePositionSent\", this.positions.lastSentPosition)\n  }\n\n  updatePositionReceived(): void\n  {\n    this.#logger.info(\"updatePositionReceived\")\n    this.positions.lastReceivedPosition = this.positions.lastSentPosition\n    this.#logger.debug(\"updatePositionReceived\", this.positions.lastReceivedPosition)\n  }\n\n  mergeExport(exports: TExport)\n  {\n    this.#logger.info(\"mergeExport\", { exports })\n    if (this.exports) {\n      Object.assign(this.exports, exports)\n    } else {\n      this.exports = exports\n    }\n    this.#logger.debug(\"mergeExport\", this.exports)\n  }\n\n  mergeConvert(converts: TExport)\n  {\n    this.#logger.info(\"mergeConvert\", { converts })\n    if (this.converts) {\n      Object.assign(this.converts, converts)\n    } else {\n      this.converts = converts\n    }\n    this.#logger.debug(\"mergeConvert\", this.converts)\n  }\n\n  clone(): Model\n  {\n    this.#logger.info(\"clone\")\n    const clonedModel = new Model(this.width, this.height, this.rowHeight, this.creationTime)\n    clonedModel.modificationDate = JSON.parse(JSON.stringify(this.modificationDate))\n    clonedModel.currentSymbol = this.currentSymbol ? this.currentSymbol.clone() : undefined\n    clonedModel.symbols = this.symbols.map(s => s.clone())\n    clonedModel.positions = JSON.parse(JSON.stringify(this.positions))\n    clonedModel.exports = this.exports ? JSON.parse(JSON.stringify(this.exports)) : undefined\n    clonedModel.converts = this.converts ? JSON.parse(JSON.stringify(this.converts)) : undefined\n    clonedModel.idle = this.idle\n    this.#logger.debug(\"clone\", { clonedModel })\n    return clonedModel\n  }\n\n  clear(): void\n  {\n    this.#logger.info(\"clear\")\n    this.modificationDate = Date.now()\n    this.currentSymbol = undefined\n    this.symbols = []\n    this.positions.lastSentPosition = 0\n    this.positions.lastReceivedPosition = 0\n    this.exports = undefined\n    this.converts = undefined\n    this.idle = true\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport\n{\n  RecognizedKind,\n  SymbolType,\n  TIISymbol,\n} from \"../symbol\"\nimport { TExport } from \"./Export\"\n\n/**\n * @group Model\n */\nexport class IIModel\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.MODEL)\n  readonly creationTime: number\n  modificationDate: number\n  currentSymbol?: TIISymbol\n  symbols: TIISymbol[]\n  exports?: TExport\n  converts?: TExport\n  width: number\n  height: number\n  rowHeight: number\n  idle: boolean\n\n  constructor(width = 100, height = 100, rowHeight = 0, creationDate = Date.now())\n  {\n    this.creationTime = creationDate\n    this.modificationDate = creationDate\n    this.width = width\n    this.height = height\n    this.rowHeight = rowHeight\n    this.symbols = []\n    this.exports = undefined\n    this.converts = undefined\n    this.idle = true\n  }\n\n  get symbolsSelected(): TIISymbol[]\n  {\n    return this.symbols.filter(s => s.selected)\n  }\n\n  get symbolsToDelete(): TIISymbol[]\n  {\n    return this.symbols.filter(s => s.deleting)\n  }\n\n  selectSymbol(id: string): void\n  {\n    const symbol = this.symbols.find(s => s.id === id || (s.type === SymbolType.Group && s.containsSymbol(id)))\n    if (symbol) {\n      symbol.selected = true\n    }\n  }\n\n  unselectSymbol(id: string): void\n  {\n    const symbol = this.symbols.find(s => s.id === id)\n    if (symbol) {\n      symbol.selected = false\n    }\n  }\n\n  resetSelection(): void\n  {\n    this.symbols.forEach(s => s.selected = false)\n  }\n\n  getRootSymbol(id: string): TIISymbol | undefined\n  {\n    return this.symbols.find(s =>\n    {\n      if (s.id === id) return s\n      if (s.type === SymbolType.Group && s.containsSymbol(id)) {\n        return s\n      }\n      if (s.type === SymbolType.Recognized && s.containsStroke(id)) {\n        return s\n      }\n      return\n    })\n  }\n\n  getSymbolRowIndex(symbol: TIISymbol): number\n  {\n    return Math.round((symbol.type === SymbolType.Recognized && symbol.kind === RecognizedKind.Text ? symbol.baseline : symbol.bounds.yMid) / this.rowHeight)\n  }\n\n  getSymbolsByRowOrdered(): { rowIndex: number, symbols: TIISymbol[] }[]\n  {\n    const rows: { rowIndex: number, symbols: TIISymbol[] }[] = []\n    this.symbols.forEach(s =>\n    {\n      const rowIndex = this.getSymbolRowIndex(s)\n      const row = rows.find(r => r.rowIndex === rowIndex)\n      if (row) {\n        row.symbols.push(s)\n      }\n      else {\n        rows.push({ rowIndex, symbols: [s] })\n      }\n    })\n    rows.forEach(r =>\n    {\n      r.symbols.sort((s1, s2) => s1.bounds.xMid - s2.bounds.xMid)\n    })\n    return rows.sort((r1, r2) => r1.rowIndex - r2.rowIndex)\n  }\n\n  roundToLineGuide(y: number): number\n  {\n    return Math.round(y / this.rowHeight) * this.rowHeight\n  }\n\n  isSymbolAbove(source: TIISymbol, target: TIISymbol): boolean\n  {\n    return this.getSymbolRowIndex(source) > this.getSymbolRowIndex(target)\n  }\n\n  isSymbolInRow(source: TIISymbol, target: TIISymbol): boolean\n  {\n    return this.getSymbolRowIndex(source) === this.getSymbolRowIndex(target)\n  }\n\n  isSymbolBelow(source: TIISymbol, target: TIISymbol): boolean\n  {\n    return this.getSymbolRowIndex(source) < this.getSymbolRowIndex(target)\n  }\n\n  getFirstSymbol(symbols: TIISymbol[]): TIISymbol | undefined\n  {\n    if (!symbols.length) return\n    return symbols.reduce((previous, current) =>\n    {\n      if (previous) {\n        if (this.getSymbolRowIndex(previous) < this.getSymbolRowIndex(current)) {\n          return previous\n        }\n        else if (this.getSymbolRowIndex(previous) == this.getSymbolRowIndex(current) && previous.bounds.xMid < current.bounds.xMid) {\n          return previous\n        }\n      }\n      return current\n    })\n  }\n\n  getLastSymbol(symbols: TIISymbol[]): TIISymbol | undefined\n  {\n    if (!symbols.length) return\n    return symbols.reduce((previous, current) =>\n    {\n      if (previous) {\n        if (this.getSymbolRowIndex(previous) > this.getSymbolRowIndex(current)) {\n          return previous\n        }\n        if (this.getSymbolRowIndex(previous) < this.getSymbolRowIndex(current)) {\n          return current\n        }\n        else if (previous.bounds.xMid > current.bounds.xMid) {\n          return previous\n        }\n      }\n      return current\n    })\n  }\n\n  addSymbol(symbol: TIISymbol): void\n  {\n    this.#logger.info(\"addSymbol\", { symbol })\n    const sIndex = this.symbols.findIndex(s => s.id === symbol.id)\n    if (sIndex > -1) {\n      throw new Error(`Symbol id already exist: ${ symbol.id }`)\n    }\n    this.symbols.push(symbol)\n    this.modificationDate = Date.now()\n    this.converts = undefined\n    this.exports = undefined\n    this.#logger.debug(\"addSymbol\", this.symbols)\n  }\n\n  updateSymbol(updatedSymbol: TIISymbol): void\n  {\n    this.#logger.info(\"updateSymbol\", { updatedSymbol })\n    const sIndex = this.symbols.findIndex(s => s.id === updatedSymbol.id)\n    if (sIndex !== -1) {\n      updatedSymbol.modificationDate = Date.now()\n      this.symbols.splice(sIndex, 1, updatedSymbol)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n    this.#logger.debug(\"updateSymbol\", this.symbols)\n  }\n\n  replaceSymbol(id: string, symbols: TIISymbol[]): void\n  {\n    const sIndex = this.symbols.findIndex(s => s.id === id)\n    if (sIndex !== -1) {\n      this.symbols.splice(sIndex, 1, ...symbols)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n  }\n\n  changeOrderSymbol(id: string, position: \"first\" | \"last\" | \"forward\" | \"backward\")\n  {\n    const fromIndex = this.symbols.findIndex(s => s.id === id)\n    if (fromIndex > -1) {\n      let toIndex = fromIndex\n      switch (position) {\n        case \"first\":\n          toIndex = 0\n          break\n        case \"last\":\n          toIndex = this.symbols.length - 1\n          break\n        case \"forward\":\n          toIndex = Math.min(toIndex + 1, this.symbols.length - 1)\n          break\n        case \"backward\":\n          toIndex = Math.max(toIndex - 1, 0)\n          break\n      }\n      const sym = this.symbols.splice(fromIndex, 1)[0]\n      this.symbols.splice(toIndex, 0, sym)\n    }\n  }\n\n  removeSymbol(id: string): void\n  {\n    this.#logger.info(\"removeSymbol\", { id })\n    const symbolIndex = this.symbols.findIndex(s => s.id === id)\n    if (symbolIndex !== -1) {\n      this.symbols.splice(symbolIndex, 1)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n    this.#logger.debug(\"removeSymbol\", this.symbols)\n  }\n\n  extractDifferenceSymbols(model: IIModel): { added: TIISymbol[], removed: TIISymbol[] }\n  {\n    return {\n      added: this.symbols.filter(s1 => model.symbols.findIndex(s2 => s1.id === s2.id && s1.modificationDate === s2.modificationDate) === -1),\n      removed: model.symbols.filter(s1 => this.symbols.findIndex(s2 => s1.id === s2.id && s1.modificationDate === s2.modificationDate) === -1)\n    }\n  }\n\n  mergeExport(exports: TExport)\n  {\n    this.#logger.info(\"mergeExport\", { exports })\n    if (this.exports) {\n      Object.assign(this.exports, exports)\n    } else {\n      this.exports = exports\n    }\n    this.#logger.debug(\"mergeExport\", this.exports)\n  }\n\n  clone(): IIModel\n  {\n    this.#logger.info(\"clone\")\n    const clonedModel = new IIModel(this.width, this.height, this.rowHeight, this.creationTime)\n    clonedModel.modificationDate = this.modificationDate\n    clonedModel.symbols = this.symbols.map(s =>\n    {\n      const c = s.clone()\n      c.selected = false\n      return c\n    })\n    clonedModel.exports = structuredClone(this.exports)\n    clonedModel.idle = this.idle\n    this.#logger.debug(\"clone\", { clonedModel })\n    return clonedModel\n  }\n\n  clear(): void\n  {\n    this.#logger.info(\"clear\")\n    this.modificationDate = Date.now()\n    this.symbols = []\n    this.currentSymbol = undefined\n    this.exports = undefined\n    this.converts = undefined\n    this.idle = true\n\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIStroke } from \"../symbol\"\nimport { TExportV2 } from \"./ExportV2\"\n\n/**\n * @group Model\n */\nexport class IModel\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.MODEL)\n  readonly creationTime: number\n  modificationDate: number\n  currentStroke?: IIStroke\n  strokes: IIStroke[]\n  exports?: TExportV2\n  converts?: TExportV2\n  width: number\n  height: number\n  rowHeight: number\n  idle: boolean\n\n  constructor(width = 100, height = 100, rowHeight = 0, creationDate = Date.now())\n  {\n    this.creationTime = creationDate\n    this.modificationDate = creationDate\n    this.width = width\n    this.height = height\n    this.rowHeight = rowHeight\n    this.strokes = []\n    this.exports = undefined\n    this.converts = undefined\n    this.idle = true\n  }\n\n  get strokesToDelete(): IIStroke[]\n  {\n    return this.strokes.filter(s => s.deleting)\n  }\n\n  addStroke(stroke: IIStroke): void\n  {\n    this.#logger.info(\"addStroke\", { stroke })\n    const sIndex = this.strokes.findIndex(s => s.id === stroke.id)\n    if (sIndex > -1) {\n      throw new Error(`Stroke id already exist: ${ stroke.id }`)\n    }\n    this.strokes.push(stroke)\n    this.modificationDate = Date.now()\n    this.converts = undefined\n    this.exports = undefined\n    this.#logger.debug(\"addStroke\", this.strokes)\n  }\n\n  updateStroke(updatedStroke: IIStroke): void\n  {\n    this.#logger.info(\"updateStroke\", { updatedStroke })\n    const sIndex = this.strokes.findIndex(s => s.id === updatedStroke.id)\n    if (sIndex !== -1) {\n      updatedStroke.modificationDate = Date.now()\n      this.strokes.splice(sIndex, 1, updatedStroke)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n    this.#logger.debug(\"updateStroke\", this.strokes)\n  }\n\n  removeStroke(id: string): void\n  {\n    this.#logger.info(\"removeSymbol\", { id })\n    const strokeIndex = this.strokes.findIndex(s => s.id === id)\n    if (strokeIndex !== -1) {\n      this.strokes.splice(strokeIndex, 1)\n      this.modificationDate = Date.now()\n      this.converts = undefined\n      this.exports = undefined\n    }\n    this.#logger.debug(\"removeSymbol\", this.strokes)\n  }\n\n  extractDifferenceStrokes(model: IModel): { added: IIStroke[], removed: IIStroke[] }\n  {\n    return {\n      added: this.strokes.filter(s1 => model.strokes.findIndex(s2 => s1.id === s2.id && s1.modificationDate === s2.modificationDate) === -1),\n      removed: model.strokes.filter(s1 => this.strokes.findIndex(s2 => s1.id === s2.id && s1.modificationDate === s2.modificationDate) === -1)\n    }\n  }\n\n  mergeExport(exports: TExportV2)\n  {\n    this.#logger.info(\"mergeExport\", { exports })\n    if (this.exports) {\n      Object.assign(this.exports, exports)\n    } else {\n      this.exports = exports\n    }\n    this.#logger.debug(\"mergeExport\", this.exports)\n  }\n\n  clone(): IModel\n  {\n    this.#logger.info(\"clone\")\n    const clonedModel = new IModel(this.width, this.height, this.rowHeight, this.creationTime)\n    clonedModel.modificationDate = this.modificationDate\n    clonedModel.strokes = this.strokes.map(s =>\n    {\n      const c = s.clone()\n      c.selected = false\n      return c\n    })\n    clonedModel.exports = structuredClone(this.exports)\n    clonedModel.idle = this.idle\n    this.#logger.debug(\"clone\", { clonedModel })\n    return clonedModel\n  }\n\n  clear(): void\n  {\n    this.#logger.info(\"clear\")\n    this.modificationDate = Date.now()\n    this.strokes = []\n    this.exports = undefined\n    this.converts = undefined\n    this.currentStroke = undefined\n    this.idle = true\n\n  }\n}\n","/**\n * @group Recognizer\n */\nexport type TScheme = \"https\" | \"http\"\n\n/**\n * @group Recognizer\n */\nexport type TServerHTTPConfiguration = {\n  scheme: TScheme,\n  host: string\n  applicationKey: string\n  hmacKey: string\n  version?: string\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultServerHTTPConfiguration: TServerHTTPConfiguration = {\n  scheme: \"https\",\n  host: \"cloud.myscript.com\",\n  applicationKey: \"\",\n  hmacKey: \"\",\n  version: \"\"\n}\n\n/**\n * @group Recognizer\n */\nexport type TServerWebsocketConfiguration = TServerHTTPConfiguration & {\n  websocket: {\n    pingEnabled: boolean\n    pingDelay: number\n    maxPingLostCount: number\n    autoReconnect: boolean\n    maxRetryCount: number\n    fileChunkSize: number\n  }\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultServerWebsocketConfiguration: TServerWebsocketConfiguration = {\n  ...DefaultServerHTTPConfiguration,\n  websocket: {\n    pingEnabled: true,\n    pingDelay: 15000,\n    maxPingLostCount: 20,\n    autoReconnect: true,\n    maxRetryCount: 2,\n    fileChunkSize: 300000\n  }\n}\n","\n/**\n * @group Recognizer\n */\nexport type TEraserConfiguration = {\n  \"erase-precisely\": boolean\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultEraserConfiguration: TEraserConfiguration = {\n  \"erase-precisely\": false\n}\n","\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\nimport { TTextConfConfiguration } from \"./TextConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TDiagramConvertConfiguration = {\n  types?: (\"text\" | \"shape\")[]\n  \"match-text-size\"?: boolean\n}\n\n/**\n * @group Recognizer\n */\nexport type TDiagramConfiguration = {\n  mimeTypes: (\"application/vnd.myscript.jiix\" | \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" | \"image/svg+xml\")[]\n  \"enable-sub-blocks\"?: boolean\n  text?: TTextConfConfiguration\n  convert?: TDiagramConvertConfiguration\n  \"session-time\"?: number\n  eraser?: TEraserConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultDiagramConvertConfiguration: TDiagramConvertConfiguration = {\n  types: [\"text\", \"shape\"],\n  \"match-text-size\": true\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultDiagramConfiguration: TDiagramConfiguration = {\n  convert: DefaultDiagramConvertConfiguration,\n  eraser: DefaultEraserConfiguration,\n  mimeTypes: [\"application/vnd.myscript.jiix\"],\n}\n","\n/**\n * @group Recognizer\n */\nexport type TImageViewportConfiguration = {\n  x: number\n  y: number\n  width: number\n  height: number\n}\n\n/**\n * @group Recognizer\n */\nexport type TImageConfiguration = {\n  guides: boolean\n  viewport: TImageViewportConfiguration\n}\n\n/**\n * @group Recognizer\n */\nexport type TJiixConfiguration = {\n  \"bounding-box\": boolean\n  strokes: boolean\n  ids: boolean\n  \"full-stroke-ids\": boolean\n  text: {\n    chars: boolean\n    words: boolean\n    lines?: boolean\n  }\n  style?: boolean\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultJiixConfiguration: TJiixConfiguration = {\n  \"bounding-box\": false,\n  strokes: false,\n  ids: false,\n  \"full-stroke-ids\": false,\n  text: {\n    chars: false,\n    words: true,\n    lines: false\n  },\n}\n\n/**\n * @group Recognizer\n */\nexport type TMathMLFlavor = {\n  name: string\n}\n\n/**\n * @group Recognizer\n */\nexport type TMathMLExport = {\n  flavor: TMathMLFlavor\n}\n\n/**\n * @group Recognizer\n */\nexport type TExportConfiguration = {\n  \"image-resolution\"?: number\n  image?: TImageConfiguration\n  jiix: TJiixConfiguration\n  mathml?: TMathMLExport\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultExportConfiguration: TExportConfiguration = {\n  \"image-resolution\": 300,\n  jiix: DefaultJiixConfiguration\n}\n","\n/**\n * @group Recognizer\n */\nexport type TMarginConfiguration = {\n  bottom: number\n  left: number\n  right: number\n  top: number\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultMarginConfiguration: TMarginConfiguration = {\n  top: 20,\n  left: 10,\n  right: 10,\n  bottom: 10\n}\n","import { DefaultMarginConfiguration, TMarginConfiguration } from \"./MarginConfiguration\"\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TRoundingMode = \"half up\" | \"truncate\"\n\n/**\n * @group Recognizer\n */\nexport type TAngleUnit = \"deg\" | \"rad\"\n\n/**\n * @group Recognizer\n */\nexport type TSolverOptions = \"algebraic\" | \"numeric\"\n\n/**\n * @group Recognizer\n */\nexport type TSolverConfiguration = {\n  enable?: boolean\n  \"fractional-part-digits\"?: number\n  \"decimal-separator\"?: string\n  \"rounding-mode\"?: TRoundingMode\n  \"angle-unit\"?: TAngleUnit\n  options?: TSolverOptions\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultSolverConfiguration: TSolverConfiguration = {\n  enable: true,\n  \"fractional-part-digits\": 3,\n  \"decimal-separator\": \".\",\n  \"rounding-mode\": \"half up\",\n  \"angle-unit\": \"deg\"\n}\n\n/**\n * @group Recognizer\n */\nexport type TUndoRedoMode = \"stroke\" | \"session\"\n\n/**\n * @group Recognizer\n */\nexport type TMathUndoRedoConfiguration = {\n  mode: TUndoRedoMode\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultMathUndoRedoConfiguration: TMathUndoRedoConfiguration = {\n  mode: \"stroke\"\n}\n\n/**\n * @group Recognizer\n */\nexport type TMathConfiguration = {\n  mimeTypes: (\"application/x-latex\" | \"application/mathml+xml\" | \"application/vnd.myscript.jiix\")[]\n  solver?: TSolverConfiguration\n  margin: TMarginConfiguration\n  \"undo-redo\"?: TMathUndoRedoConfiguration\n  customGrammar?: string\n  customGrammarId?: string\n  customGrammarContent?: string\n  eraser?: TEraserConfiguration\n  \"session-time\"?: number\n  \"recognition-timeout\"?: number\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultMathConfiguration: TMathConfiguration = {\n  solver: DefaultSolverConfiguration,\n  margin: DefaultMarginConfiguration,\n  eraser: DefaultEraserConfiguration,\n  \"undo-redo\": DefaultMathUndoRedoConfiguration,\n  mimeTypes: [\"application/vnd.myscript.jiix\"],\n}\n","\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\nimport { TTextConfConfiguration } from \"./TextConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TRawContentConfiguration = {\n  text?: TTextConfConfiguration\n  \"session-time\"?: number\n  recognition: {\n    types: (\"text\" | \"shape\" | \"math\" | \"decoration\")[]\n  }\n  classification: {\n    types: (\"text\" | \"shape\" | \"math\" | \"decoration\" | \"drawing\")[]\n  }\n  eraser?: TEraserConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultRawContentConfiguration: TRawContentConfiguration = {\n  recognition: {\n    types: [ \"text\", \"math\", \"shape\", \"decoration\"]\n  },\n  classification: {\n    types: [ \"text\", \"math\", \"shape\", \"decoration\", \"drawing\"]\n  },\n  eraser: DefaultEraserConfiguration,\n}\n","\n/**\n * @group Recognizer\n */\nexport type TRecognitionRendererDebugConfiguration = {\n  \"draw-text-boxes\": boolean\n  \"draw-image-boxes\": boolean\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultDebugConfiguration: TRecognitionRendererDebugConfiguration = {\n  \"draw-text-boxes\": false,\n  \"draw-image-boxes\": false\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognitionRendererConfiguration = {\n  debug: TRecognitionRendererDebugConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultRecognitionRendererConfiguration: TRecognitionRendererConfiguration = {\n  debug: DefaultDebugConfiguration\n}\n","import { DefaultMarginConfiguration, TMarginConfiguration } from \"./MarginConfiguration\"\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TTextGuidesConfiguration = {\n  enable: boolean\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultTextGuidesConfiguration: TTextGuidesConfiguration = {\n  enable: true\n}\n\n/**\n * @group Recognizer\n */\nexport type TTextConfConfiguration = {\n  customResources?: string[]\n  customLexicon?: string[]\n  addLKText?: boolean\n}\n\n/**\n * @group Recognizer\n */\nexport type TTextConfiguration = {\n  text?: boolean\n  mimeTypes: (\"text/plain\" | \"application/vnd.myscript.jiix\")[]\n  margin: TMarginConfiguration\n  guides?: TTextGuidesConfiguration\n  configuration?: TTextConfConfiguration\n  eraser?: TEraserConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultTextConfiguration: TTextConfiguration = {\n  guides: DefaultTextGuidesConfiguration,\n  eraser: DefaultEraserConfiguration,\n  margin: DefaultMarginConfiguration,\n  mimeTypes: [\"application/vnd.myscript.jiix\"],\n}\n","import { DefaultMarginConfiguration, TMarginConfiguration } from \"./MarginConfiguration\"\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TTextGuidesConfigurationV2 = {\n  enable: boolean,\n  \"line-gap-mm\"?: number,\n  \"origin-y-mm\"?: number,\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultTextGuidesConfigurationV2: TTextGuidesConfigurationV2 = {\n  enable: true,\n  \"line-gap-mm\": 100,\n  \"origin-y-mm\": 0,\n}\n\n/**\n * @group Recognizer\n */\nexport type TTextRecognizerHTTPV2ConfConfiguration = {\n  customResources?: string[]\n  customLexicon?: string[]\n  addLKText?: boolean\n}\n\n/**\n * @group Recognizer\n */\nexport type TTextRecognizerHTTPV2Configuration = {\n  text?: boolean\n  mimeTypes: (\"text/plain\" | \"application/vnd.myscript.jiix\")[]\n  margin: TMarginConfiguration\n  guides: TTextGuidesConfigurationV2\n  configuration?: TTextRecognizerHTTPV2ConfConfiguration\n  eraser?: TEraserConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultTexConfigurationV2: TTextRecognizerHTTPV2Configuration = {\n  guides: DefaultTextGuidesConfigurationV2,\n  eraser: DefaultEraserConfiguration,\n  margin: DefaultMarginConfiguration,\n  mimeTypes: [\"application/vnd.myscript.jiix\"],\n}\n","\nimport { DefaultEraserConfiguration, TEraserConfiguration } from \"./EraserConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TShapeConvertConfiguration = {\n  types?: (\"shape\")[]\n  \"match-text-size\"?: boolean\n}\n\nexport type TShapeBeautificationConfiguration = {\n    enable?: true\n}\n/**\n * @group Recognizer\n */\nexport type TShapeConfiguration = {\n  mimeTypes: (\"application/vnd.myscript.jiix\" | \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" | \"image/svg+xml\")[]\n  \"enable-sub-blocks\"?: boolean\n  convert?: TShapeConvertConfiguration\n  \"session-time\"?: number\n  eraser?: TEraserConfiguration\n  beautification?: TShapeBeautificationConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultShapeConvertConfiguration: TShapeConvertConfiguration = {\n  types: [\"shape\"],\n  \"match-text-size\": true\n}\n\nexport const DefaultShapeBeautificationConfiguration: TShapeBeautificationConfiguration = {\n    enable: true\n  }\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultShapeConfiguration: TShapeConfiguration = {\n  convert: DefaultShapeConvertConfiguration,\n  eraser: DefaultEraserConfiguration,\n  mimeTypes: [\"application/vnd.myscript.jiix\"],\n  beautification: DefaultShapeBeautificationConfiguration\n}\n","import { THistoryContext } from \"../history\"\nimport { TExport } from \"../model\"\nimport { TRecognizerWebSocketSSRMessageSVGPatch } from \"./RecognizerWebSocketSSRMessage\"\n\n/**\n * @group Recognizer\n * @summary\n * Lists all events that can be listened to on the editor or DOM element\n * @example\n * You can run code on \"RecognizerEventName\" raised by using\n * ```ts\n * recognizer.events.addEventListener(RecognizerEventName.CONTENT_CHANGED, (evt) => console.log(evt.detail))\n * ```\n */\nexport enum RecognizerEventName\n{\n  /**\n   * @summary event emitted at the start of connection initialization\n   */\n  START_INITIALIZATION = \"start-initialization\",\n  /**\n   * @summary event emitted after full recognizer initialization\n   */\n  END_INITIALIZATION = \"end-initialization\",\n  /**\n   * @summary event emitted after receiving an \"contentChanged\" message\n   */\n  CONTENT_CHANGED = \"content-changed\",\n  /**\n   * @summary event emitted after receiving an \"idle\" message\n   */\n  IDLE = \"idle\",\n  /**\n   * @summary event emitted after receiving an \"exported\" message\n   */\n  EXPORTED = \"exported\",\n  /**\n   * @summary event emitted when the recognizer encounters an error\n   */\n  ERROR = \"error\",\n  /**\n   * @remarks event emitted after connection closed\n   */\n  CONNECTION_CLOSE = \"connection-close\",\n  /**\n   * @summary\n   * event emitted after receiving an \"svgPatch\" message\n   * @remarks\n   * only usable in the case of websocket\n   */\n  SVG_PATCH = \"svg-patch\",\n  /**\n   * @summary event emitted session opened\n   */\n  SESSION_OPENED = \"session-opened\",\n\n}\n\n/**\n * @group Recognizer\n */\nexport class RecognizerEvent extends EventTarget\n{\n  protected abortController: AbortController\n\n  constructor()\n  {\n    super()\n    this.abortController = new AbortController()\n  }\n\n  removeAllListeners(): void\n  {\n    this.abortController.abort()\n    this.abortController = new AbortController()\n  }\n\n  protected emit(type: string, data?: unknown): void\n  {\n    const evt = new CustomEvent(type, Object.assign({ bubbles: true, composed: true }, data ? { detail: data } : undefined))\n    this.dispatchEvent(evt)\n  }\n\n  emitStartInitialization(): void\n  {\n    this.emit(RecognizerEventName.START_INITIALIZATION)\n  }\n  addStartInitialization(callback: () => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.START_INITIALIZATION,\n      () => callback(),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitEndtInitialization(): void\n  {\n    this.emit(RecognizerEventName.END_INITIALIZATION)\n  }\n  addEndInitialization(callback: () => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.END_INITIALIZATION,\n      () => callback(),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitSessionOpened(sessionId: string): void\n  {\n    this.emit(RecognizerEventName.SESSION_OPENED, sessionId)\n  }\n  addSessionOpenedListener(callback: (sessionId: string) => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.SESSION_OPENED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as string),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitContentChanged(undoRedoContext: THistoryContext): void\n  {\n    this.emit(RecognizerEventName.CONTENT_CHANGED, {\n      ...undoRedoContext,\n      canClear: !undoRedoContext.empty\n    })\n  }\n  addContentChangedListener(callback: (context: THistoryContext) => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.CONTENT_CHANGED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as THistoryContext),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitIdle(idle: boolean): void\n  {\n    this.emit(RecognizerEventName.IDLE, idle)\n  }\n  addIdleListener(callback: (idle: boolean) => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.IDLE,\n      (evt: unknown) => callback((evt as CustomEvent).detail as boolean),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitExported(exports: TExport): void\n  {\n    this.emit(RecognizerEventName.EXPORTED, exports)\n  }\n  addExportedListener(callback: (exports: TExport) => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.EXPORTED,\n      (evt: unknown) => callback((evt as CustomEvent).detail as TExport),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitError(err: Error): void\n  {\n    this.emit(RecognizerEventName.ERROR, err)\n  }\n  addErrorListener(callback: (err: Error) => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.ERROR,\n      (evt: unknown) => callback((evt as CustomEvent).detail as Error),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  emitConnectionClose({ code, message }: { code: number, message?: string }): void\n  {\n    this.emit(RecognizerEventName.CONNECTION_CLOSE, { code, message })\n  }\n  addConnectionCloseListener(callback: ({ code, message }: { code: number, message?: string }) => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.CONNECTION_CLOSE,\n      (evt: unknown) => callback((evt as CustomEvent).detail as { code: number, message?: string }),\n      { signal: this.abortController.signal }\n    )\n  }\n\n  /**\n   * @remarks only use in the case of websocket\n   */\n  emitSVGPatch(svgPatch: TRecognizerWebSocketSSRMessageSVGPatch): void\n  {\n    this.emit(RecognizerEventName.SVG_PATCH, svgPatch)\n  }\n  /**\n   * @remarks only usable in the case of websocket\n   */\n  addSVGPatchListener(callback:  (svgPatch: TRecognizerWebSocketSSRMessageSVGPatch) => void): void\n  {\n    this.addEventListener(\n      RecognizerEventName.SVG_PATCH,\n      (evt: unknown) => callback((evt as CustomEvent).detail as TRecognizerWebSocketSSRMessageSVGPatch),\n      { signal: this.abortController.signal }\n    )\n  }\n}\n","/**\n * @group Recognizer\n * @remarks List all errors generated by the backend with their descriptions\n */\nexport enum RecognizerError {\n  NO_ACTIVITY = \"Session closed due to no activity. Without a connection on your part, it will be permanently lost after an hour.\",\n  WRONG_CREDENTIALS = \"Application credentials are invalid. Please check or regenerate your application key and hmackey.\",\n  TOO_OLD = \"Session is too old. Max Session Duration Reached.\",\n  NO_SESSION_FOUND = \"No sessions found. Without activation for 1 hour, sessions are deleted from the server. To avoid losing your work, use the json export, then import it this will create a new session.\",\n  UNKNOW = \"An unknown error has occurred.\",\n  ABNORMAL_CLOSURE = \"MyScript recognition server is not reachable.\",\n  CANT_ESTABLISH = \"Unable to establish a connection to MyScript recognition server. Check the host and your connectivity.\",\n  GOING_AWAY = \"MyScript recognition server is going away, either because of a server failure or because the browser is navigating away from the page that opened the connection.\",\n  PROTOCOL_ERROR = \"MyScript recognition server terminated the connection due to a protocol error.\",\n  UNSUPPORTED_DATA = \"MyScript recognition server terminated the connection because the endpoint received data of a type it cannot accept. (For example, a text-only endpoint received binary data.)\",\n  INVALID_FRAME_PAYLOAD = \"MyScript recognition server terminated the connection because a message was received that contained inconsistent data (e.g., non-UTF-8 data within a text message).\",\n  POLICY_VIOLATION = \"MyScript recognition server terminated the connection because it received a message that violates its policy.\",\n  MESSAGE_TOO_BIG = \"MyScript recognition server terminated the connection because a data frame was received that is too large.\",\n  INTERNAL_ERROR = \"MyScript recognition server terminated the connection because it encountered an unexpected condition that prevented it from fulfilling the request.\",\n  SERVICE_RESTART = \"MyScript recognition server terminated the connection because it is restarting.\",\n  TRY_AGAIN = \"MyScript recognition server terminated the connection due to a temporary condition, e.g. it is overloaded and is casting off some of its clients.\",\n  BAD_GATEWAY = \"MyScript recognition server was acting as a gateway or proxy and received an invalid response from the upstream server.\",\n  TLS_HANDSHAKE = \"MyScript recognition server connection was closed due to a failure to perform a TLS handshake\",\n}\n","import { isVersionSuperiorOrEqual, mergeDeep, PartialDeep } from \"../utils\"\nimport {\n  DefaultDiagramConfiguration,\n  DefaultExportConfiguration,\n  DefaultMathConfiguration,\n  DefaultRawContentConfiguration,\n  DefaultRecognitionRendererConfiguration,\n  DefaultTextConfiguration,\n  TConvertionConfiguration,\n  TDiagramConfiguration,\n  TExportConfiguration,\n  TMathConfiguration,\n  TRawContentConfiguration,\n  TRecognitionRendererConfiguration,\n  TTextConfiguration\n} from \"./recognition\"\nimport { TRecognitionType } from \"./RecognitionConfiguration\"\nimport { DefaultServerHTTPConfiguration, TServerHTTPConfiguration } from \"./ServerConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TRecognitionHTTPV1Configuration = {\n  type: TRecognitionType\n  lang: string\n  math: TMathConfiguration\n  text: TTextConfiguration\n  diagram: TDiagramConfiguration\n  \"raw-content\": TRawContentConfiguration\n  renderer: TRecognitionRendererConfiguration\n  export: TExportConfiguration\n  convert?: TConvertionConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaulRecognitionHTTPV1ConfigurationConfiguration: TRecognitionHTTPV1Configuration = {\n  export: DefaultExportConfiguration,\n  math: DefaultMathConfiguration,\n  diagram: DefaultDiagramConfiguration,\n  \"raw-content\": DefaultRawContentConfiguration,\n  renderer: DefaultRecognitionRendererConfiguration,\n  text: DefaultTextConfiguration,\n  type: \"TEXT\",\n  lang: \"en_US\",\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerHTTPV1Configuration = {\n  server: TServerHTTPConfiguration\n  recognition: TRecognitionHTTPV1Configuration\n}\n\n/**\n * @group Recognizer\n */\nexport const DefaultRecognizerHTTPV1Configuration: TRecognizerHTTPV1Configuration =\n{\n  server: DefaultServerHTTPConfiguration,\n  recognition: DefaulRecognitionHTTPV1ConfigurationConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport class RecognizerHTTPV1Configuration implements TRecognizerHTTPV1Configuration {\n  recognition: TRecognitionHTTPV1Configuration\n  server: TServerHTTPConfiguration\n\n  constructor(configuration?: PartialDeep<TRecognizerHTTPV1Configuration>)\n  {\n    this.server = mergeDeep({}, DefaultRecognizerHTTPV1Configuration.server, configuration?.server)\n    this.recognition = mergeDeep({}, DefaultRecognizerHTTPV1Configuration.recognition, configuration?.recognition)\n\n    if (configuration?.recognition?.text?.mimeTypes) {\n      this.recognition.text.mimeTypes = configuration.recognition.text.mimeTypes as (\"text/plain\" | \"application/vnd.myscript.jiix\")[]\n    }\n    this.recognition.text.mimeTypes = [...new Set(this.recognition.text.mimeTypes)]\n\n    if (configuration?.recognition?.math?.mimeTypes) {\n      this.recognition.math.mimeTypes = configuration.recognition.math.mimeTypes as (\"application/vnd.myscript.jiix\" | \"application/x-latex\" | \"application/mathml+xml\")[]\n    }\n    this.recognition.math.mimeTypes = [...new Set(this.recognition.math.mimeTypes)]\n\n    if (configuration?.recognition?.diagram?.mimeTypes) {\n      this.recognition.diagram.mimeTypes = configuration.recognition.diagram.mimeTypes as (\"application/vnd.myscript.jiix\" | \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" | \"image/svg+xml\")[]\n    }\n    this.recognition.diagram.mimeTypes = [...new Set(this.recognition.diagram.mimeTypes)]\n\n    if (configuration?.recognition?.diagram?.convert?.types) {\n      this.recognition.diagram.convert!.types = configuration.recognition.diagram.convert.types as (\"text\" | \"shape\")[]\n    }\n\n    if (configuration?.recognition?.[\"raw-content\"]?.recognition?.types) {\n      this.recognition[\"raw-content\"].recognition!.types = configuration?.recognition?.[\"raw-content\"]?.recognition?.types as (\"text\" | \"shape\")[]\n    }\n    this.recognition[\"raw-content\"].recognition.types = [...new Set(this.recognition[\"raw-content\"].recognition.types.filter((type) => type !== \"decoration\"))]\n\n    if (configuration?.recognition?.[\"raw-content\"]?.classification?.types) {\n      this.recognition[\"raw-content\"].classification!.types = configuration?.recognition?.[\"raw-content\"]?.classification?.types as (\"text\" | \"shape\")[]\n    }\n\n    if (this.server.version) {\n      if (!isVersionSuperiorOrEqual(this.server.version, \"2.3.0\")) {\n        delete this.recognition.convert\n      }\n      if (!isVersionSuperiorOrEqual(this.server.version, \"3.2.0\")) {\n        delete this.recognition.export.jiix.text.lines\n      }\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { Model, TExport, TJIIXExport } from \"../model\"\nimport { TStrokeGroup, TStrokeGroupToSend } from \"../symbol\"\nimport { StyleHelper, TPenStyle } from \"../style\"\nimport { computeHmac, getApiInfos, isVersionSuperiorOrEqual, PartialDeep } from \"../utils\"\nimport { RecognizerError } from \"./RecognizerError\"\nimport { RecognizerHTTPV1Configuration, TRecognizerHTTPV1Configuration } from \"./RecognizerHTTPV1Configuration\"\nimport { TConverstionState } from \"./RecognitionConfiguration\"\nimport { TDiagramConfiguration, TExportConfiguration, TMathConfiguration, TRawContentConfiguration, TTextConfiguration } from \"./recognition\"\n\ntype ApiError = {\n  code?: string\n  message: string\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerHTTPV1PostConfiguration = {\n  lang: string,\n  diagram?: TDiagramConfiguration,\n  math?: TMathConfiguration,\n  \"raw-content\"?: TRawContentConfiguration,\n  text?: TTextConfiguration,\n  export: TExportConfiguration\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerHTTPV1PostData = {\n  configuration: TRecognizerHTTPV1PostConfiguration,\n  xDPI: number,\n  yDPI: number,\n  contentType: string,\n  conversionState?: TConverstionState\n  height: number,\n  width: number,\n  strokeGroups: TStrokeGroupToSend[]\n}\n\n/**\n * @deprecated Use {@link RecognizerHTTPV2} instead.\n * @group Recognizer\n */\nexport class RecognizerHTTPV1\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RECOGNIZER)\n\n  configuration: RecognizerHTTPV1Configuration\n\n  constructor(config: PartialDeep<TRecognizerHTTPV1Configuration>)\n  {\n    this.#logger.info(\"constructor\", { config })\n    this.configuration = new RecognizerHTTPV1Configuration(config)\n  }\n\n  get url()\n  {\n    return `${ this.configuration.server.scheme }://${ this.configuration.server.host }/api/v4.0/iink/batch`\n  }\n\n  get postConfig(): TRecognizerHTTPV1PostConfiguration\n  {\n    switch (this.configuration.recognition.type) {\n      case \"DIAGRAM\":\n        return {\n          lang: this.configuration.recognition.lang,\n          diagram: this.configuration.recognition.diagram,\n          export: this.configuration.recognition.export\n        }\n      case \"MATH\":\n        return {\n          lang: this.configuration.recognition.lang,\n          math: this.configuration.recognition.math,\n          export: this.configuration.recognition.export\n        }\n      case \"Raw Content\":\n        return {\n          lang: this.configuration.recognition.lang,\n          \"raw-content\": this.configuration.recognition[\"raw-content\"],\n          export: this.configuration.recognition.export\n        }\n      case \"TEXT\":\n        return {\n          lang: this.configuration.recognition.lang,\n          text: this.configuration.recognition.text,\n          export: this.configuration.recognition.export\n        }\n      default:\n        throw new Error(`get postConfig error Recognition type unkow \"${ this.configuration.recognition.type }\"`)\n        break\n    }\n  }\n\n  protected buildData(model: Model): TRecognizerHTTPV1PostData\n  {\n    this.#logger.info(\"buildData\", { model })\n    const isPenStyleEqual = (ps1: TPenStyle, ps2: TPenStyle) =>\n    {\n      return ps1 && ps2 && ps1[\"-myscript-pen-fill-color\"] === ps2[\"-myscript-pen-fill-color\"] &&\n        ps1[\"-myscript-pen-fill-style\"] === ps2[\"-myscript-pen-fill-style\"] &&\n        ps1[\"-myscript-pen-width\"] === ps2[\"-myscript-pen-width\"] &&\n        ps1.color === ps2.color &&\n        ps1.width === ps2.width\n    }\n\n    const strokeGroupByPenStyle: TStrokeGroup[] = []\n    model.symbols.forEach((s) =>\n    {\n      const groupIndex = strokeGroupByPenStyle.findIndex(sg => isPenStyleEqual(sg.penStyle, s.style))\n      if (groupIndex > -1) {\n        strokeGroupByPenStyle[groupIndex].strokes.push(s)\n      } else {\n        strokeGroupByPenStyle.push({\n          penStyle: s.style,\n          strokes: [s]\n        })\n      }\n    })\n\n    const strokeGroupsToSend: TStrokeGroupToSend[] = []\n    strokeGroupByPenStyle.forEach((group: TStrokeGroup) =>\n    {\n      const newPenStyle = JSON.stringify(group.penStyle) === \"{}\" ? undefined : StyleHelper.penStyleToCSS(group.penStyle as TPenStyle)\n      const newGroup = {\n        penStyle: newPenStyle,\n        strokes: group.strokes.map(s => s.formatToSend())\n      }\n      strokeGroupsToSend.push(newGroup)\n    })\n\n    const contentType: string = this.configuration.recognition.type === \"Raw Content\" ?\n      \"Raw Content\" :\n      this.configuration.recognition.type.charAt(0).toUpperCase() + this.configuration.recognition.type.slice(1).toLowerCase()\n\n    const data = {\n      configuration: this.postConfig,\n      xDPI: 96,\n      yDPI: 96,\n      contentType,\n      height: model.height,\n      width: model.width,\n      strokeGroups: strokeGroupsToSend\n    }\n    this.#logger.debug(\"buildData\", { data })\n    return data\n  }\n\n  protected async post(data: unknown, mimeType: string): Promise<unknown>\n  {\n    this.#logger.info(\"post\", { data, mimeType })\n    const headers = new Headers()\n    headers.append(\"Accept\", \"application/json,\" + mimeType)\n    headers.append(\"applicationKey\", this.configuration.server.applicationKey)\n    try {\n      const hmac = await computeHmac(JSON.stringify(data), this.configuration.server.applicationKey, this.configuration.server.hmacKey)\n      headers.append(\"hmac\", hmac)\n    } catch (error) {\n      this.#logger.error(\"post.computeHmac\", error)\n    }\n    headers.append(\"Content-Type\", \"application/json\")\n\n    if (!this.configuration.server.version) {\n      this.configuration.server.version = (await getApiInfos(this.configuration)).version\n    }\n    if (isVersionSuperiorOrEqual(this.configuration.server.version!, \"2.0.4\")) {\n      headers.append(\"myscript-client-name\", \"iink-ts\")\n      headers.append(\"myscript-client-version\", \"3.0.2\")\n    }\n    if (!isVersionSuperiorOrEqual(this.configuration.server.version!, \"2.3.0\")) {\n      delete this.configuration.recognition.convert\n    }\n    if (!isVersionSuperiorOrEqual(this.configuration.server.version!, \"3.2.0\")) {\n      delete this.configuration.recognition.export.jiix.text.lines\n    }\n\n    const reqInit: RequestInit = {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(data)\n    }\n    const request = new Request(this.url, reqInit)\n    const response: Response = await fetch(request)\n    if (response.ok) {\n      const contentType = response.headers.get(\"content-type\")\n      let result: unknown\n      switch (contentType) {\n        case \"application/vnd.openxmlformats-officedocument.presentationml.presentation\":\n        case \"image/png\":\n        case \"image/jpeg\":\n          result = await response.blob()\n          break\n        case \"application/json\":\n          result = await response.json()\n          break\n        case \"application/vnd.myscript.jiix\":\n          result = await response.clone().json().catch(async () => await response.text())\n          break\n        default:\n          result = await response.text()\n          break\n      }\n      this.#logger.debug(\"post\", { result })\n      return result\n    } else {\n      const err = await response.json() as ApiError\n      this.#logger.error(\"post\", { err })\n      throw err\n    }\n  }\n\n  protected async tryFetch(data: TRecognizerHTTPV1PostData, mimeType: string): Promise<TExport | never>\n  {\n    this.#logger.debug(\"tryFetch\", { data, mimeType })\n    return this.post(data, mimeType)\n      .then((res) =>\n      {\n        const exports: TExport = {}\n        exports[mimeType] = res as TJIIXExport | string | Blob\n        this.#logger.debug(\"tryFetch\", { exports })\n        return exports\n      })\n      .catch((err) =>\n      {\n        this.#logger.error(\"tryFetch\", { data, mimeType, err })\n        let message = err.message || RecognizerError.UNKNOW\n        if (!err.code) {\n          message = RecognizerError.CANT_ESTABLISH\n        } else if (err.code === \"access.not.granted\") {\n          message = RecognizerError.WRONG_CREDENTIALS\n        }\n        const error = new Error(message)\n        throw error\n      })\n  }\n\n  protected getMimeTypes(requestedMimeTypes?: string[]): string[]\n  {\n    this.#logger.info(\"getMimeTypes\", { requestedMimeTypes })\n    let mimeTypes: string[] = requestedMimeTypes || []\n    if (!mimeTypes.length) {\n      switch (this.configuration.recognition.type) {\n        case \"DIAGRAM\":\n          mimeTypes = this.configuration.recognition.diagram.mimeTypes\n          break\n        case \"MATH\":\n          mimeTypes = this.configuration.recognition.math.mimeTypes\n          break\n        case \"Raw Content\":\n          mimeTypes = [\"application/vnd.myscript.jiix\"]\n          break\n        case \"TEXT\":\n          mimeTypes = this.configuration.recognition.text.mimeTypes\n          break\n        default:\n          throw new Error(`Recognition type \"${ this.configuration.recognition.type }\" is unknown.\\n Possible types are:\\n -DIAGRAM\\n -MATH\\n -Raw Content\\n -TEXT`)\n          break\n      }\n    }\n    return mimeTypes\n  }\n\n  async convert(model: Model, conversionState?: TConverstionState, requestedMimeTypes?: string[]): Promise<Model>\n  {\n    this.#logger.info(\"convert\", { model, conversionState, requestedMimeTypes })\n    const myModel = model.clone()\n    const mimeTypes = this.getMimeTypes(requestedMimeTypes)\n    const dataToConcert = this.buildData(myModel)\n    dataToConcert.conversionState = conversionState\n    const promises = mimeTypes.map(mt => this.tryFetch(dataToConcert, mt))\n    const exports: TExport[] = await Promise.all(promises)\n    exports.forEach(e =>\n    {\n      myModel.mergeConvert(e)\n    })\n    this.#logger.debug(\"convert\", { model: myModel })\n    return myModel\n  }\n\n  async export(model: Model, requestedMimeTypes?: string[]): Promise<Model>\n  {\n    this.#logger.info(\"export\", { model, requestedMimeTypes })\n    const myModel = model.clone()\n    if (myModel.symbols.length === 0) {\n      return Promise.resolve(myModel)\n    }\n    const mimeTypes = this.getMimeTypes(requestedMimeTypes)\n    if (!mimeTypes.length) {\n      this.#logger.error(\"export\", { model, requestedMimeTypes, \"Export failed, no mimeTypes define in recognition configuration\": String })\n      return Promise.reject(new Error(\"Export failed, no mimeTypes define in recognition configuration\"))\n    }\n    const mimeTypesRequiringExport: string[] = mimeTypes.filter(m => !myModel.exports || !myModel.exports[m])\n    const data = this.buildData(model)\n    const exports: TExport[] = await Promise.all(mimeTypesRequiringExport.map(mimeType => this.tryFetch(data, mimeType)))\n    exports.forEach(e =>\n    {\n      myModel.mergeExport(e)\n    })\n    this.#logger.debug(\"export\", { model: myModel })\n    return myModel\n  }\n\n  async resize(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"resize\", { model })\n    return this.export(model)\n  }\n\n}\n","import { mergeDeep, isVersionSuperiorOrEqual, PartialDeep } from \"../utils\"\nimport {\n  DefaultShapeConfiguration,\n  DefaultExportConfiguration,\n  DefaultMathConfiguration,\n  DefaultRawContentConfiguration,\n  DefaultTexConfigurationV2,\n  TConvertionConfiguration,\n  TShapeConfiguration,\n  TExportConfiguration,\n  TMathConfiguration,\n  TRawContentConfiguration,\n  TTextRecognizerHTTPV2Configuration\n} from \"./recognition\"\nimport { TRecognitionV2Type } from \"./RecognitionConfiguration\"\nimport { DefaultServerHTTPConfiguration, TServerHTTPConfiguration } from \"./ServerConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerHTTPV2RecognitionConfiguration = {\n  type: TRecognitionV2Type\n  lang: string\n  math: TMathConfiguration\n  text: TTextRecognizerHTTPV2Configuration\n  shape: TShapeConfiguration\n  \"raw-content\": TRawContentConfiguration\n  export: TExportConfiguration\n  convert?: TConvertionConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultRecognizerHTTPV2RecognitionConfiguration: TRecognizerHTTPV2RecognitionConfiguration = {\n  export: DefaultExportConfiguration,\n  math: DefaultMathConfiguration,\n  shape: DefaultShapeConfiguration,\n  \"raw-content\": DefaultRawContentConfiguration,\n  text: DefaultTexConfigurationV2,\n  type: \"TEXT\",\n  lang: \"en_US\",\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerHTTPV2Configuration = {\n  server: TServerHTTPConfiguration\n  recognition: TRecognizerHTTPV2RecognitionConfiguration\n}\n\n/**\n * @group Recognizer\n */\nexport const DefaultRecognizerHTTPV2Configuration: TRecognizerHTTPV2Configuration =\n{\n  server: DefaultServerHTTPConfiguration,\n  recognition: DefaultRecognizerHTTPV2RecognitionConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport class RecognizerHTTPV2Configuration implements TRecognizerHTTPV2Configuration {\n  recognition: TRecognizerHTTPV2RecognitionConfiguration\n  server: TServerHTTPConfiguration\n\n  constructor(configuration?: PartialDeep<TRecognizerHTTPV2Configuration>)\n  {\n    this.server = mergeDeep({}, DefaultRecognizerHTTPV2Configuration.server, configuration?.server)\n    this.recognition = mergeDeep({}, DefaultRecognizerHTTPV2Configuration.recognition, configuration?.recognition)\n\n    if (configuration?.recognition?.text?.mimeTypes) {\n      this.recognition.text.mimeTypes = configuration.recognition.text.mimeTypes as (\"text/plain\" | \"application/vnd.myscript.jiix\")[]\n    }\n    this.recognition.text.mimeTypes = [...new Set(this.recognition.text.mimeTypes)]\n\n    if (configuration?.recognition?.math?.mimeTypes) {\n      this.recognition.math.mimeTypes = configuration.recognition.math.mimeTypes as (\"application/vnd.myscript.jiix\" | \"application/x-latex\" | \"application/mathml+xml\")[]\n    }\n    this.recognition.math.mimeTypes = [...new Set(this.recognition.math.mimeTypes)]\n\n    if (configuration?.recognition?.shape?.mimeTypes) {\n      this.recognition.shape.mimeTypes = configuration.recognition.shape.mimeTypes as (\"application/vnd.myscript.jiix\" | \"application/vnd.openxmlformats-officedocument.presentationml.presentation\" | \"image/svg+xml\")[]\n    }\n    this.recognition.shape.mimeTypes = [...new Set(this.recognition.shape.mimeTypes)]\n\n    if (configuration?.recognition?.[\"raw-content\"]?.recognition?.types) {\n      this.recognition[\"raw-content\"].recognition!.types = configuration?.recognition?.[\"raw-content\"]?.recognition?.types as (\"text\" | \"shape\")[]\n    }\n    if (configuration?.recognition?.[\"raw-content\"]?.classification?.types) {\n      this.recognition[\"raw-content\"].classification!.types = configuration?.recognition?.[\"raw-content\"]?.classification?.types as (\"text\" | \"shape\")[]\n    }\n\n    if (this.server.version) {\n      if (!isVersionSuperiorOrEqual(this.server.version, \"2.3.0\")) {\n        delete this.recognition.convert\n      }\n      if (!isVersionSuperiorOrEqual(this.server.version, \"3.2.0\")) {\n        delete this.recognition.export.jiix.text.lines\n      }\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { TExportV2, TJIIXExport } from \"../model\"\nimport { TStroke, TStrokeToSend } from \"../symbol\"\nimport { computeHmac, getApiInfos, isVersionSuperiorOrEqual, PartialDeep } from \"../utils\"\nimport { RecognizerError } from \"./RecognizerError\"\nimport { RecognizerHTTPV2Configuration, TRecognizerHTTPV2Configuration } from \"./RecognizerHTTPV2Configuration\"\nimport { TDiagramConfiguration, TExportConfiguration, TMathConfiguration, TRawContentConfiguration, TTextConfiguration } from \"./recognition\"\n\ntype ApiError = {\n  code?: string\n  message: string\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerHTTPV2PostConfiguration = {\n  lang: string,\n  diagram?: TDiagramConfiguration,\n  math?: TMathConfiguration,\n  \"raw-content\"?: TRawContentConfiguration,\n  text?: TTextConfiguration,\n  export: TExportConfiguration\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerHTTPV2PostData = {\n  scaleX: number,\n  scaleY: number,\n  configuration: TRecognizerHTTPV2PostConfiguration,\n  contentType: string,\n  strokes: TStrokeToSend[]\n}\n\n/**\n * @group Recognizer\n */\nexport class RecognizerHTTPV2 {\n  #logger = LoggerManager.getLogger(LoggerCategory.RECOGNIZER)\n\n  configuration: RecognizerHTTPV2Configuration\n\n  constructor(config: PartialDeep<TRecognizerHTTPV2Configuration>) {\n    this.#logger.info(\"constructor\", { config })\n    this.configuration = new RecognizerHTTPV2Configuration(config)\n  }\n\n  get url() {\n    return `${this.configuration.server.scheme}://${this.configuration.server.host}/api/v4.0/iink/recognize`\n  }\n\n  get postConfig(): TRecognizerHTTPV2PostConfiguration {\n    switch (this.configuration.recognition.type) {\n      case \"SHAPE\":\n        return {\n          lang: this.configuration.recognition.lang,\n          diagram: this.configuration.recognition.shape,\n          export: this.configuration.recognition.export\n        }\n      case \"MATH\":\n        return {\n          lang: this.configuration.recognition.lang,\n          math: this.configuration.recognition.math,\n          export: this.configuration.recognition.export\n        }\n      case \"Raw Content\":\n        return {\n          lang: this.configuration.recognition.lang,\n          \"raw-content\": this.configuration.recognition[\"raw-content\"],\n          export: this.configuration.recognition.export\n        }\n      case \"TEXT\":\n        return {\n          lang: this.configuration.recognition.lang,\n          text: this.configuration.recognition.text,\n          export: this.configuration.recognition.export\n        }\n      default:\n        throw new Error(`get postConfig error Recognition type unkow \"${this.configuration.recognition.type}\"`)\n        break\n    }\n  }\n\n  protected formatStrokes(strokes: TStroke[]): TStrokeToSend[] {\n    return strokes.map(s => {\n      return {\n        id: s.id,\n        pointerType: s.pointerType,\n        p: s.pointers.map(p => p.p),\n        t: s.pointers.map(p => p.t),\n        x: s.pointers.map(p => p.x),\n        y: s.pointers.map(p => p.y)\n      }\n    })\n  }\n\n  protected buildData(strokes: TStroke[]): TRecognizerHTTPV2PostData {\n    this.#logger.info(\"buildData\", { strokes })\n\n    const contentType: string = this.configuration.recognition.type === \"Raw Content\" ?\n      \"Raw Content\" :\n      this.configuration.recognition.type.charAt(0).toUpperCase() + this.configuration.recognition.type.slice(1).toLowerCase()\n\n    const data = {\n      configuration: this.postConfig,\n      scaleX: 0.265,\n      scaleY: 0.265,\n      contentType,\n      strokes: this.formatStrokes(strokes)\n    }\n    this.#logger.debug(\"buildData\", { data })\n    return data\n  }\n\n  protected async post(data: unknown, mimeType: string): Promise<unknown> {\n    this.#logger.info(\"post\", { data, mimeType })\n    const headers = new Headers()\n    headers.append(\"Accept\", mimeType)\n    headers.append(\"applicationKey\", this.configuration.server.applicationKey)\n    try {\n      const hmac = await computeHmac(JSON.stringify(data), this.configuration.server.applicationKey, this.configuration.server.hmacKey)\n      headers.append(\"hmac\", hmac)\n    } catch (error) {\n      this.#logger.error(\"post.computeHmac\", error)\n    }\n    headers.append(\"Content-Type\", \"application/json\")\n\n    if (!this.configuration.server.version) {\n      this.configuration.server.version = (await getApiInfos(this.configuration)).version\n    }\n\n    if (this.configuration.server.version && isVersionSuperiorOrEqual(this.configuration.server.version, \"2.0.4\")) {\n      headers.append(\"myscript-client-name\", \"iink-ts\")\n      headers.append(\"myscript-client-version\", \"3.0.2\")\n    }\n\n    const reqInit: RequestInit = {\n      method: \"POST\",\n      headers,\n      body: JSON.stringify(data)\n    }\n    const request = new Request(this.url, reqInit)\n    const response: Response = await fetch(request)\n    if (response.ok) {\n      const contentType = response.headers.get(\"content-type\")\n      let result: unknown\n      switch (contentType) {\n        case \"application/vnd.openxmlformats-officedocument.presentationml.presentation\":\n        case \"image/png\":\n        case \"image/jpeg\":\n          result = await response.blob()\n          break\n        case \"application/json\":\n          result = await response.json()\n          break\n        case \"application/vnd.myscript.jiix\":\n          result = await response.clone().json().catch(async () => await response.text())\n          break\n        default:\n          result = await response.text()\n          break\n      }\n      this.#logger.debug(\"post\", { result })\n      return result\n    } else {\n      const err = await response.json() as ApiError\n      this.#logger.error(\"post\", { err })\n      throw err\n    }\n  }\n\n  protected async tryFetch(data: TRecognizerHTTPV2PostData, mimeType: string): Promise<TExportV2 | never> {\n    this.#logger.debug(\"tryFetch\", { data, mimeType })\n    return this.post(data, mimeType)\n      .then((res) => {\n        const exports: TExportV2 = {}\n        exports[mimeType] = res as TJIIXExport | string | Blob\n        this.#logger.debug(\"tryFetch\", { exports })\n        return exports\n      })\n      .catch((err) => {\n        this.#logger.error(\"tryFetch\", { data, mimeType, err })\n        let message = err.message || RecognizerError.UNKNOW\n        if (!err.code) {\n          message = RecognizerError.CANT_ESTABLISH\n        } else if (err.code === \"access.not.granted\") {\n          message = RecognizerError.WRONG_CREDENTIALS\n        }\n        const error = new Error(message)\n        throw error\n      })\n  }\n\n  protected getMimeTypes(requestedMimeTypes?: string[]): string[] {\n    this.#logger.info(\"getMimeTypes\", { requestedMimeTypes })\n    let mimeTypes: string[] = requestedMimeTypes || []\n    if (!mimeTypes.length) {\n      switch (this.configuration.recognition.type) {\n        case \"SHAPE\":\n          mimeTypes = this.configuration.recognition.shape.mimeTypes\n          break\n        case \"MATH\":\n          mimeTypes = this.configuration.recognition.math.mimeTypes\n          break\n        case \"Raw Content\":\n          mimeTypes = [\"application/vnd.myscript.jiix\"]\n          break\n        case \"TEXT\":\n          mimeTypes = this.configuration.recognition.text.mimeTypes\n          break\n        default:\n          throw new Error(`Recognition type \"${this.configuration.recognition.type}\" is unknown.\\n Possible types are:\\n -DIAGRAM\\n -MATH\\n -Raw Content\\n -TEXT\\n -SHAPE`)\n          break\n      }\n    }\n    return mimeTypes\n  }\n\n  async send(strokes: TStroke[], requestedMimeTypes?: string[]): Promise<TExportV2> {\n    this.#logger.info(\"send\", strokes)\n\n    const recognition: TExportV2 = {}\n    if (strokes.length === 0) {\n      return Promise.resolve(recognition)\n    }\n    const mimeTypes = requestedMimeTypes || this.getMimeTypes()\n\n    const data = this.buildData(strokes)\n    const exports: TExportV2[] = await Promise.all(mimeTypes.map(mimeType => this.tryFetch(data, mimeType)))\n      exports.forEach(e => {\n        Object.assign(recognition, e)\n      })\n\n    this.#logger.debug(\"send\", recognition)\n    return recognition\n  }\n}\n","import { TGesture } from \"../gesture\"\nimport { TExport } from \"../model\"\n\n/**\n * @group Recognizer\n */\nexport enum TRecognizerWebSocketMessageType\n{\n  HMAC_Challenge = \"hmacChallenge\",\n  Authenticated = \"authenticated\",\n  SessionDescription = \"sessionDescription\",\n  NewPart = \"newPart\",\n  PartChanged = \"partChanged\",\n  ContentChanged = \"contentChanged\",\n  Idle = \"idle\",\n  Pong = \"pong\",\n  Exported = \"exported\",\n  GestureDetected = \"gestureDetected\",\n  ContextlessGesture = \"contextlessGesture\",\n  Error = \"error\",\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessage<T = string> = {\n  type: T\n  [key: string]: unknown\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageAuthenticated = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.Authenticated>\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageHMACChallenge = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.HMAC_Challenge> & {\n  hmacChallenge: string\n  iinkSessionId: string\n}\n\n/**\n * @group Recognizer\n */\nexport type TInteractiveInkSessionDescriptionMessage = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.SessionDescription> & {\n  contentPartCount: number\n  iinkSessionId: string\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageNewPart = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.NewPart> & {\n  id: string\n  idx: null\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessagePartChange = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.PartChanged> & {\n  partIdx: number\n  partId: string\n  partCount: number\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageContentChange = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.ContentChanged> & {\n  partId: string\n  canUndo: boolean\n  canRedo: boolean\n  empty: boolean\n  undoStackIndex: number\n  possibleUndoCount: number\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageExport = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.Exported> & {\n  partId: string\n  exports: TExport\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageGesture = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.GestureDetected> & TGesture\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageContextlessGesture = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.ContextlessGesture> & {\n  gestureType: \"none\" | \"scratch\" | \"left-right\" | \"right-left\" | \"bottom-top\" | \"top-bottom\" | \"surround\",\n  strokeId: string\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessagePong = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.Pong>\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageIdle = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.Idle>\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageError = TRecognizerWebSocketMessage<TRecognizerWebSocketMessageType.Error> & {\n  code?: number | string\n  message?: string\n  data?: {\n    code: number | string\n    message: string\n  }\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketMessageReceived =\n  TRecognizerWebSocketMessageAuthenticated |\n  TRecognizerWebSocketMessageHMACChallenge |\n  TInteractiveInkSessionDescriptionMessage |\n  TRecognizerWebSocketMessageNewPart |\n  TRecognizerWebSocketMessagePartChange |\n  TRecognizerWebSocketMessageContentChange |\n  TRecognizerWebSocketMessageExport |\n  TRecognizerWebSocketMessageGesture |\n  TRecognizerWebSocketMessageContextlessGesture |\n  TRecognizerWebSocketMessagePong |\n  TRecognizerWebSocketMessageIdle |\n  TRecognizerWebSocketMessageError\n","import { mergeDeep, isVersionSuperiorOrEqual, PartialDeep } from \"../utils\"\nimport { TExportConfiguration, TTextConfConfiguration } from \"./recognition\"\nimport { DefaultServerWebsocketConfiguration, TServerWebsocketConfiguration } from \"./ServerConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TRecognitionWebSocketConfiguration = {\n  lang: string\n  export: TExportConfiguration\n  \"raw-content\": {\n    text?: TTextConfConfiguration\n    \"session-time\"?: number\n    recognition?: {\n      types: (\"text\" | \"shape\")[]\n    }\n    classification?: {\n      types: (\"text\" | \"shape\")[]\n    }\n    gestures?: (\"underline\" | \"scratch-out\" | \"join\" | \"insert\" | \"strike-through\" | \"surround\")[]\n  }\n  gesture: {\n    enable: boolean,\n    ignoreGestureStrokes: boolean\n  }\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultRecognitionWebSocketConfiguration: TRecognitionWebSocketConfiguration = {\n  export: {\n    jiix: {\n      \"bounding-box\": true,\n      \"full-stroke-ids\": true,\n      ids: true,\n      strokes: false,\n      text: {\n        chars: true,\n        words: true,\n        lines: true\n      }\n    }\n  },\n  \"raw-content\": {\n    recognition: {\n      types: [\"text\", \"shape\"]\n    },\n    classification: {\n      types: [\"text\", \"shape\"]\n    },\n    gestures: [\"underline\", \"scratch-out\", \"join\", \"insert\", \"strike-through\", \"surround\"]\n  },\n  lang: \"en_US\",\n  gesture: {\n    enable: true,\n    ignoreGestureStrokes: false,\n  }\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketConfiguration = {\n  server: TServerWebsocketConfiguration\n  recognition: TRecognitionWebSocketConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultRecognizerWebSocketConfiguration: TRecognizerWebSocketConfiguration =\n{\n  server: DefaultServerWebsocketConfiguration,\n  recognition: DefaultRecognitionWebSocketConfiguration\n}\n\n/**\n * @group Recognizer\n */\nexport class RecognizerWebSocketConfiguration implements TRecognizerWebSocketConfiguration\n{\n  server: TServerWebsocketConfiguration\n  recognition: TRecognitionWebSocketConfiguration\n\n  constructor(configuration?: PartialDeep<TRecognizerWebSocketConfiguration>)\n  {\n    this.server = mergeDeep({}, DefaultRecognizerWebSocketConfiguration.server, configuration?.server)\n\n    this.recognition = mergeDeep({}, DefaultRecognizerWebSocketConfiguration.recognition, configuration?.recognition)\n    this.recognition.export.jiix[\"full-stroke-ids\"] = true\n    this.recognition.export.jiix.ids = true\n    this.recognition.export.jiix.text.words = true\n    this.recognition.export.jiix.text.chars = true\n    this.recognition.export.jiix.text.lines = true\n    this.recognition.export.jiix[\"bounding-box\"] = true\n    if (configuration?.recognition?.[\"raw-content\"]?.recognition?.types) {\n      this.recognition[\"raw-content\"].recognition!.types = configuration.recognition[\"raw-content\"].recognition.types as (\"text\" | \"shape\")[]\n    }\n    if (configuration?.recognition?.[\"raw-content\"]?.classification?.types) {\n      this.recognition[\"raw-content\"].classification!.types = configuration.recognition[\"raw-content\"].classification.types as (\"text\" | \"shape\")[]\n    }\n    if (configuration?.recognition?.[\"raw-content\"]?.gestures) {\n      this.recognition[\"raw-content\"].gestures = configuration.recognition[\"raw-content\"].gestures as (\"underline\" | \"scratch-out\" | \"join\" | \"insert\" | \"strike-through\" | \"surround\")[]\n    }\n    if (this.server.version && !isVersionSuperiorOrEqual(this.server.version, \"3.2.0\")) {\n      delete this.recognition.export.jiix.text.lines\n      delete this.recognition[\"raw-content\"].classification\n    }\n  }\n}\n","import { TIIHistoryBackendChanges, THistoryContext } from \"../history\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { TExport, TJIIXExport } from \"../model\"\nimport { IIStroke } from \"../symbol\"\nimport { TMatrixTransform } from \"../transform\"\nimport { computeHmac, mergeDeep, DeferredPromise, PartialDeep, isVersionSuperiorOrEqual, getApiInfos } from \"../utils\"\nimport\n{\n  TRecognizerWebSocketMessage,\n  TRecognizerWebSocketMessageContentChange,\n  TRecognizerWebSocketMessageContextlessGesture,\n  TRecognizerWebSocketMessageError,\n  TRecognizerWebSocketMessageExport,\n  TRecognizerWebSocketMessageGesture,\n  TRecognizerWebSocketMessageHMACChallenge,\n  TRecognizerWebSocketMessageNewPart,\n  TRecognizerWebSocketMessagePartChange,\n  TRecognizerWebSocketMessageReceived,\n  TRecognizerWebSocketMessageType,\n  TInteractiveInkSessionDescriptionMessage\n} from \"./RecognizerWebSocketMessage\"\nimport { RecognizerError } from \"./RecognizerError\"\nimport PingWorker from \"web-worker:../worker/ping.worker.ts\"\nimport { RecognizerEvent } from \"./RecognizerEvent\"\nimport { RecognizerWebSocketConfiguration, TRecognizerWebSocketConfiguration } from \"./RecognizerWebSocketConfiguration\"\n\n/**\n * A websocket dialog have this sequence :\n * --------------- Client --------------------------------------------------------------- Server ---------------\n * { type: \"authenticate\" }                           ==================>\n *                                                    <==================       { type: \"hmacChallenge\" }\n * { type: \"hmac\" }                                   ==================>\n *                                                    <==================       { type: \"authenticated\" }\n * { type: \"initSession\" | \"restoreSession\" }         ==================>\n *                                                    <==================       { type: \"sessionDescription\" }\n * { type: \"newContentPart\" | \"openContentPart\" }     ==================>\n *                                                    <==================       { type: \"partChanged\" }\n * { type: \"addStrokes\" }                             ==================>\n *                                                    <==================       { type: \"contentChanged\" }\n * { type: \"transform\" }                              ==================>\n *                                                    <==================       { type: \"contentChanged\" }\n * { type: \"eraseStrokes\" }                           ==================>\n *                                                    <==================       { type: \"contentChanged\" }\n */\n\n/**\n * @group Recognizer\n */\nexport class RecognizerWebSocket\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RECOGNIZER)\n\n  protected socket!: WebSocket\n  protected pingWorker?: Worker\n  protected pingCount = 0\n  protected reconnectionCount = 0\n  protected sessionId?: string\n  protected currentPartId?: string\n  protected currentErrorCode?: string | number\n\n  protected addStrokeDeferred?: DeferredPromise<TRecognizerWebSocketMessageGesture | undefined>\n  protected contextlessGestureDeferred: Map<string, DeferredPromise<TRecognizerWebSocketMessageContextlessGesture>>\n  protected transformStrokeDeferred?: DeferredPromise<void>\n  protected eraseStrokeDeferred?: DeferredPromise<void>\n  protected replaceStrokeDeferred?: DeferredPromise<void>\n  protected exportDeferredMap: Map<string, DeferredPromise<TExport>>\n  protected closeDeferred?: DeferredPromise<void>\n  protected waitForIdleDeferred?: DeferredPromise<void>\n  protected undoDeferred?: DeferredPromise<void>\n  protected redoDeferred?: DeferredPromise<void>\n  protected clearDeferred?: DeferredPromise<void>\n\n  configuration: RecognizerWebSocketConfiguration\n  initialized: DeferredPromise<void>\n  url: string\n  event: RecognizerEvent\n\n  constructor(config: PartialDeep<TRecognizerWebSocketConfiguration>, event?: RecognizerEvent)\n  {\n    this.#logger.info(\"constructor\", { config })\n    this.configuration = new RecognizerWebSocketConfiguration(config)\n    const scheme = (this.configuration.server.scheme === \"https\") ? \"wss\" : \"ws\"\n    this.url = `${ scheme }://${ this.configuration.server.host }/api/v4.0/iink/offscreen?applicationKey=${ this.configuration.server.applicationKey }`\n\n    this.event = event || new RecognizerEvent()\n    this.initialized = new DeferredPromise<void>()\n    this.exportDeferredMap = new Map()\n    this.contextlessGestureDeferred = new Map()\n  }\n\n  get mimeTypes(): string[]\n  {\n    return [\"application/vnd.myscript.jiix\"]\n  }\n\n  async #send(message: TRecognizerWebSocketMessage): Promise<void>\n  {\n    if (!this.socket) {\n      throw new Error(\"Recognizer must be initilized\")\n    }\n    if (this.socket.readyState === this.socket.OPEN) {\n      this.socket.send(JSON.stringify(message))\n    }\n    else {\n      throw new Error(`Can not send message: ${message.type}, connection not ready, state: ${ this.socket.readyState }`)\n    }\n  }\n\n  protected rejectDeferredPending(error: Error | string): void\n  {\n    this.initialized.reject(error)\n    this.addStrokeDeferred?.reject(error)\n    this.transformStrokeDeferred?.reject(error)\n    this.eraseStrokeDeferred?.reject(error)\n    this.replaceStrokeDeferred?.reject(error)\n    this.undoDeferred?.reject(error)\n    this.redoDeferred?.reject(error)\n    this.clearDeferred?.reject(error)\n    Array.from(this.contextlessGestureDeferred.values())\n      .forEach(v =>\n      {\n        v.reject(error)\n      })\n    Array.from(this.exportDeferredMap.values())\n      .forEach(v =>\n      {\n        v.reject(error)\n      })\n    this.waitForIdleDeferred?.reject(error)\n  }\n\n  protected resetAllDeferred(): void\n  {\n    this.initialized = new DeferredPromise<void>()\n    this.addStrokeDeferred = undefined\n    this.contextlessGestureDeferred.clear()\n    this.transformStrokeDeferred = undefined\n    this.eraseStrokeDeferred = undefined\n    this.replaceStrokeDeferred = undefined\n    this.exportDeferredMap.clear()\n    this.waitForIdleDeferred = undefined\n    this.closeDeferred = undefined\n  }\n\n  protected clearSocketListener(): void\n  {\n    this.socket.removeEventListener(\"open\", this.openCallback.bind(this))\n    this.socket.removeEventListener(\"close\", this.closeCallback.bind(this))\n    this.socket.removeEventListener(\"message\", this.messageCallback.bind(this))\n  }\n\n  protected closeCallback(evt: CloseEvent): void\n  {\n    this.#logger.info(\"closeCallback\", { evt })\n    let message = evt.reason\n    if (!this.currentErrorCode) {\n      switch (evt.code) {\n        case 1000:\n          // Normal Closure\n          break\n        case 1001:\n          message = RecognizerError.GOING_AWAY\n          break\n        case 1002:\n          message = RecognizerError.PROTOCOL_ERROR\n          break\n        case 1003:\n          message = RecognizerError.UNSUPPORTED_DATA\n          break\n        case 1006:\n          message = RecognizerError.ABNORMAL_CLOSURE\n          break\n        case 1007:\n          message = RecognizerError.INVALID_FRAME_PAYLOAD\n          break\n        case 1008:\n          message = RecognizerError.POLICY_VIOLATION\n          break\n        case 1009:\n          message = RecognizerError.MESSAGE_TOO_BIG\n          break\n        case 1011:\n          message = RecognizerError.INTERNAL_ERROR\n          break\n        case 1012:\n          message = RecognizerError.SERVICE_RESTART\n          break\n        case 1013:\n          message = RecognizerError.TRY_AGAIN\n          break\n        case 1014:\n          message = RecognizerError.BAD_GATEWAY\n          break\n        case 1015:\n          message = RecognizerError.TLS_HANDSHAKE\n          break\n        default:\n          message = RecognizerError.CANT_ESTABLISH\n          break\n      }\n    }\n\n    this.clearSocketListener()\n    this.closeDeferred?.resolve()\n    if (!this.currentErrorCode && evt.code !== 1000) {\n      const error = new Error(message)\n      this.event.emitError(error)\n      this.rejectDeferredPending(message)\n    }\n    this.pingWorker?.terminate()\n    this.resetAllDeferred()\n  }\n\n  protected openCallback(): void\n  {\n    this.reconnectionCount = 0\n    this.#send({\n      type: \"authenticate\",\n      \"myscript-client-name\": \"iink-ts\",\n      \"myscript-client-version\": \"3.0.2\",\n    })\n  }\n\n  protected async manageHMACChallenge(hmacChallengeMessage: TRecognizerWebSocketMessageHMACChallenge): Promise<void>\n  {\n    this.#send({\n      type: \"hmac\",\n      hmac: await computeHmac(hmacChallengeMessage.hmacChallenge, this.configuration.server.applicationKey, this.configuration.server.hmacKey)\n    })\n  }\n\n  protected initPing(): void\n  {\n    this.pingWorker = new PingWorker()\n    this.pingWorker.postMessage({\n      pingDelay: this.configuration.server.websocket.pingDelay,\n    })\n    this.pingWorker.onmessage = () =>\n    {\n      if (this.socket.readyState <= 1) {\n        if (this.pingCount < this.configuration.server.websocket.maxPingLostCount) {\n          this.send({ type: \"ping\" })\n        }\n        else {\n          this.close(1000, \"MAXIMUM_PING_REACHED\")\n          this.pingWorker?.terminate()\n        }\n        this.pingCount++\n      }\n    }\n  }\n\n  protected manageAuthenticated(): void\n  {\n    if (!isVersionSuperiorOrEqual(this.configuration.server.version!, \"3.2.0\")) {\n      delete this.configuration.recognition.export.jiix.text.lines\n      delete this.configuration.recognition[\"raw-content\"].classification\n    }\n    const pixelTomm = 25.4 / 96\n    this.#send({\n      type: this.sessionId ? \"restoreSession\" : \"initSession\",\n      iinkSessionId: this.sessionId,\n      scaleX: pixelTomm,\n      scaleY: pixelTomm,\n      configuration: this.configuration.recognition\n    })\n  }\n\n  protected manageSessionDescriptionMessage(sessionDescriptionMessage: TInteractiveInkSessionDescriptionMessage): void\n  {\n    if (sessionDescriptionMessage.iinkSessionId) {\n      this.sessionId = sessionDescriptionMessage.iinkSessionId\n      this.event.emitSessionOpened(this.sessionId)\n    }\n    if (this.currentPartId) {\n      this.#send({ type: \"openContentPart\", id: this.currentPartId })\n    }\n    else {\n      this.#send({ type: \"newContentPart\", contentType: \"Raw Content\", mimeTypes: this.mimeTypes })\n    }\n  }\n\n  protected manageNewPartMessage(newPartMessage: TRecognizerWebSocketMessageNewPart): void\n  {\n    this.initialized.resolve()\n    this.currentPartId = newPartMessage.id\n  }\n\n  protected managePartChangeMessage(partChangeMessage: TRecognizerWebSocketMessagePartChange): void\n  {\n    this.initialized.resolve()\n    this.currentPartId = partChangeMessage.partId\n  }\n\n  protected manageContentChangedMessage(contentChangeMessage: TRecognizerWebSocketMessageContentChange): void\n  {\n    this.initialized.resolve()\n    this.replaceStrokeDeferred?.resolve()\n    this.transformStrokeDeferred?.resolve()\n    this.eraseStrokeDeferred?.resolve()\n    this.undoDeferred?.resolve()\n    this.redoDeferred?.resolve()\n    this.clearDeferred?.resolve()\n    this.event.emitContentChanged({\n      canRedo: contentChangeMessage.canRedo,\n      canUndo: contentChangeMessage.canRedo,\n    } as THistoryContext)\n  }\n\n  protected manageExportMessage(exportMessage: TRecognizerWebSocketMessageExport): void\n  {\n    if (exportMessage.exports[\"application/vnd.myscript.jiix\"]) {\n      exportMessage.exports[\"application/vnd.myscript.jiix\"] = JSON.parse(exportMessage.exports[\"application/vnd.myscript.jiix\"].toString()) as TJIIXExport\n    }\n\n    Object.keys(exportMessage.exports)\n      .forEach(key =>\n      {\n        if (this.exportDeferredMap.has(key)) {\n          this.exportDeferredMap.get(key)!.resolve(exportMessage.exports)\n        }\n      })\n    this.event.emitExported(exportMessage.exports)\n  }\n\n  protected manageWaitForIdle(): void\n  {\n    this.waitForIdleDeferred?.resolve()\n    this.event.emitIdle(true)\n  }\n\n  protected manageErrorMessage(errorMessage: TRecognizerWebSocketMessageError): void\n  {\n    this.currentErrorCode = errorMessage.data?.code || errorMessage.code\n    let message = errorMessage.data?.message || errorMessage.message || RecognizerError.UNKNOW\n\n    if (this.currentErrorCode === \"no.activity\") {\n      this.rejectDeferredPending(message)\n      this.event.emitConnectionClose({ code: 1000,  message: RecognizerError.NO_ACTIVITY })\n    }\n    else {\n      switch (this.currentErrorCode) {\n        case \"access.not.granted\":\n          message = RecognizerError.WRONG_CREDENTIALS\n          break\n        case \"session.too.old\":\n          message = RecognizerError.TOO_OLD\n          break\n        case \"restore.session.not.found\":\n          message = RecognizerError.NO_SESSION_FOUND\n          break\n      }\n      this.rejectDeferredPending(message)\n      this.event.emitError(new Error(message))\n    }\n  }\n\n  protected manageGestureDetected(gestureMessage: TRecognizerWebSocketMessageGesture): void\n  {\n    this.addStrokeDeferred?.resolve(gestureMessage)\n  }\n\n  protected manageContextlessGesture(gestureMessage: TRecognizerWebSocketMessageContextlessGesture): void\n  {\n    this.contextlessGestureDeferred.get(gestureMessage.strokeId)?.resolve(gestureMessage)\n  }\n\n  protected messageCallback(message: MessageEvent<string>): void\n  {\n    this.currentErrorCode = undefined\n    try {\n      const websocketMessage: TRecognizerWebSocketMessageReceived = JSON.parse(message.data)\n      if (websocketMessage.type === TRecognizerWebSocketMessageType.Pong) {\n        return\n      }\n      this.pingCount = 0\n      switch (websocketMessage.type) {\n        case TRecognizerWebSocketMessageType.HMAC_Challenge:\n          this.manageHMACChallenge(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.Authenticated:\n          this.manageAuthenticated()\n          break\n        case TRecognizerWebSocketMessageType.SessionDescription:\n          this.manageSessionDescriptionMessage(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.NewPart:\n          this.manageNewPartMessage(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.PartChanged:\n          this.managePartChangeMessage(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.ContentChanged:\n          this.manageContentChangedMessage(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.Exported:\n          this.manageExportMessage(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.GestureDetected:\n          this.manageGestureDetected(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.ContextlessGesture:\n          this.manageContextlessGesture(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.Error:\n          this.manageErrorMessage(websocketMessage)\n          break\n        case TRecognizerWebSocketMessageType.Idle:\n          this.manageWaitForIdle()\n          break\n        default:\n          this.#logger.warn(\"messageCallback\", `Message type unknow: \"${ websocketMessage }\".`)\n          break\n      }\n    }\n    catch {\n      this.event.emitError(new Error(message.data))\n    }\n  }\n\n  async newSession(config: PartialDeep<TRecognizerWebSocketConfiguration>): Promise<void>\n  {\n    await this.close(1000, \"new-session\")\n    this.configuration = mergeDeep({}, this.configuration, config)\n    this.sessionId = undefined\n    this.currentPartId = undefined\n    await this.init()\n  }\n\n  async init(): Promise<void>\n  {\n    this.event.emitStartInitialization()\n    if (this.currentErrorCode === \"restore.session.not.found\") {\n      this.currentErrorCode = undefined\n      this.sessionId = undefined\n      this.currentPartId = undefined\n    }\n    this.initialized = new DeferredPromise<void>()\n    if (!this.configuration.server.version) {\n      this.configuration.server.version = (await getApiInfos(this.configuration)).version\n    }\n    this.socket = new WebSocket(this.url)\n    this.clearSocketListener()\n    this.socket.addEventListener(\"open\", this.openCallback.bind(this))\n    this.socket.addEventListener(\"close\", this.closeCallback.bind(this))\n    this.socket.addEventListener(\"message\", this.messageCallback.bind(this))\n    await this.initialized.promise\n    if (this.configuration.server.websocket.pingEnabled) {\n      this.pingCount = 0\n      this.initPing()\n    }\n    this.event.emitEndtInitialization()\n  }\n\n  async send(message: TRecognizerWebSocketMessage): Promise<void>\n  {\n    if (!this.socket) {\n      return Promise.reject(new Error(\"Recognizer must be initilized\"))\n    }\n\n    switch (this.socket.readyState) {\n      case this.socket.CONNECTING:\n      case this.socket.OPEN:\n        await this.initialized.promise\n        this.#send(message)\n        return Promise.resolve()\n      case this.socket.CLOSING:\n      case this.socket.CLOSED:\n        if (this.configuration.server.websocket.autoReconnect) {\n          this.reconnectionCount++\n          if (this.configuration.server.websocket.maxRetryCount > this.reconnectionCount) {\n            await this.init()\n            await this.waitForIdle()\n            return this.#send(message)\n          }\n          else {\n            return Promise.reject(new Error(\"Unable to send message. The maximum number of connection attempts has been reached.\"))\n          }\n        }\n        else {\n          return Promise.reject(new Error(\"Unable to send message. Connection closed and automatic reconnection disabled\"))\n        }\n        break\n    }\n  }\n\n  protected buildAddStrokesMessage(strokes: IIStroke[], processGestures = true): TRecognizerWebSocketMessage\n  {\n    return {\n      type: \"addStrokes\",\n      processGestures,\n      strokes: strokes.map(s => s.formatToSend())\n    }\n  }\n  async addStrokes(strokes: IIStroke[], processGestures = true): Promise<TRecognizerWebSocketMessageGesture | undefined>\n  {\n    this.addStrokeDeferred = new DeferredPromise<TRecognizerWebSocketMessageGesture | undefined>()\n    if (strokes.length === 0) {\n      this.addStrokeDeferred.resolve(undefined)\n      return this.addStrokeDeferred?.promise\n    }\n    await this.send(this.buildAddStrokesMessage(strokes, processGestures))\n    return this.addStrokeDeferred?.promise\n  }\n\n  protected buildReplaceStrokesMessage(oldStrokeIds: string[], newStrokes: IIStroke[]): TRecognizerWebSocketMessage\n  {\n    return {\n      type: \"replaceStrokes\",\n      oldStrokeIds,\n      newStrokes: newStrokes.map(s => s.formatToSend())\n    }\n  }\n  async replaceStrokes(oldStrokeIds: string[], newStrokes: IIStroke[]): Promise<void>\n  {\n    this.replaceStrokeDeferred = new DeferredPromise<void>()\n    if (oldStrokeIds.length === 0) {\n      this.replaceStrokeDeferred.resolve()\n      return this.replaceStrokeDeferred?.promise\n    }\n    await this.send(this.buildReplaceStrokesMessage(oldStrokeIds, newStrokes))\n    return this.replaceStrokeDeferred?.promise\n  }\n\n  protected buildTransformTranslateMessage(strokeIds: string[], tx: number, ty: number): TRecognizerWebSocketMessage\n  {\n    return {\n      type: \"transform\",\n      transformationType: \"TRANSLATE\",\n      strokeIds,\n      tx,\n      ty\n    }\n  }\n  async transformTranslate(strokeIds: string[], tx: number, ty: number): Promise<void>\n  {\n    this.transformStrokeDeferred = new DeferredPromise<void>()\n    if (strokeIds.length === 0) {\n      this.transformStrokeDeferred.resolve()\n      return this.transformStrokeDeferred?.promise\n    }\n    await this.send(this.buildTransformTranslateMessage(strokeIds, tx, ty))\n    return this.transformStrokeDeferred?.promise\n  }\n\n  protected buildTransformRotateMessage(strokeIds: string[], angle: number, x0: number = 0, y0: number = 0): TRecognizerWebSocketMessage\n  {\n    return {\n      type: \"transform\",\n      transformationType: \"ROTATE\",\n      strokeIds,\n      angle,\n      x0,\n      y0\n    }\n  }\n  async transformRotate(strokeIds: string[], angle: number, x0: number = 0, y0: number = 0): Promise<void>\n  {\n    this.transformStrokeDeferred = new DeferredPromise<void>()\n    if (strokeIds.length === 0) {\n      this.transformStrokeDeferred.resolve()\n      return this.transformStrokeDeferred?.promise\n    }\n    await this.send(this.buildTransformRotateMessage(strokeIds, angle, x0, y0))\n    return this.transformStrokeDeferred?.promise\n  }\n\n  protected buildTransformScaleMessage(strokeIds: string[], scaleX: number, scaleY: number, x0: number = 0, y0: number = 0): TRecognizerWebSocketMessage\n  {\n    return {\n      type: \"transform\",\n      transformationType: \"SCALE\",\n      strokeIds,\n      scaleX,\n      scaleY,\n      x0,\n      y0\n    }\n  }\n  async transformScale(strokeIds: string[], scaleX: number, scaleY: number, x0: number = 0, y0: number = 0): Promise<void>\n  {\n    this.transformStrokeDeferred = new DeferredPromise<void>()\n    if (strokeIds.length === 0) {\n      this.transformStrokeDeferred.resolve()\n      return this.transformStrokeDeferred?.promise\n    }\n    await this.send(this.buildTransformScaleMessage(strokeIds, scaleX, scaleY, x0, y0))\n    return this.transformStrokeDeferred?.promise\n  }\n\n  protected buildTransformMatrixMessage(strokeIds: string[], matrix: TMatrixTransform): TRecognizerWebSocketMessage\n  {\n    return {\n      type: \"transform\",\n      transformationType: \"MATRIX\",\n      strokeIds,\n      ...matrix\n    }\n  }\n  async transformMatrix(strokeIds: string[], matrix: TMatrixTransform): Promise<void>\n  {\n    this.transformStrokeDeferred = new DeferredPromise<void>()\n    if (strokeIds.length === 0) {\n      this.transformStrokeDeferred.resolve()\n      return this.transformStrokeDeferred?.promise\n    }\n    await this.send(this.buildTransformMatrixMessage(strokeIds, matrix))\n    return this.transformStrokeDeferred?.promise\n  }\n\n  protected buildEraseStrokesMessage(strokeIds: string[]): TRecognizerWebSocketMessage\n  {\n    return {\n      type: \"eraseStrokes\",\n      strokeIds\n    }\n  }\n  async eraseStrokes(strokeIds: string[]): Promise<void>\n  {\n    this.eraseStrokeDeferred = new DeferredPromise<void>()\n    if (strokeIds.length === 0) {\n      this.eraseStrokeDeferred.resolve()\n      return this.eraseStrokeDeferred?.promise\n    }\n    await this.send(this.buildEraseStrokesMessage(strokeIds))\n    return this.eraseStrokeDeferred?.promise\n  }\n\n  async recognizeGesture(stroke: IIStroke): Promise<TRecognizerWebSocketMessageContextlessGesture | undefined>\n  {\n    if (!stroke) {\n      return\n    }\n    this.contextlessGestureDeferred.set(stroke.id, new DeferredPromise<TRecognizerWebSocketMessageContextlessGesture>())\n    const pixelTomm = 25.4 / 96\n    await this.send({\n      type: \"contextlessGesture\",\n      scaleX: pixelTomm,\n      scaleY: pixelTomm,\n      stroke: stroke.formatToSend()\n    })\n    return this.contextlessGestureDeferred.get(stroke.id)!.promise\n  }\n\n  async waitForIdle(): Promise<void>\n  {\n    if (!this.waitForIdleDeferred || this.waitForIdleDeferred.isFullFilled) {\n      this.waitForIdleDeferred = new DeferredPromise<void>()\n    }\n    const message: TRecognizerWebSocketMessage = {\n      type: \"waitForIdle\",\n    }\n    await this.send(message)\n    return this.waitForIdleDeferred?.promise\n  }\n\n  protected buildUndoRedoChanges(changes: TIIHistoryBackendChanges): TRecognizerWebSocketMessage[]\n  {\n    const changesMessages: TRecognizerWebSocketMessage[] = []\n    if (changes.added?.length) {\n      changesMessages.push(this.buildAddStrokesMessage(changes.added, false))\n    }\n    if (changes.erased?.length) {\n      changesMessages.push(this.buildEraseStrokesMessage(changes.erased.map(s => s.id)))\n    }\n    if (changes.replaced?.newStrokes.length) {\n      changesMessages.push(this.buildReplaceStrokesMessage(changes.replaced.oldStrokes.map(s => s.id), changes.replaced.newStrokes))\n    }\n    if (changes.matrix?.strokes.length) {\n      changesMessages.push(this.buildTransformMatrixMessage(changes.matrix.strokes.map(s => s.id), changes.matrix.matrix))\n    }\n    if (changes.translate?.length) {\n      changes.translate.forEach(tr =>\n      {\n        changesMessages.push(this.buildTransformTranslateMessage(tr.strokes.map(s => s.id), tr.tx, tr.ty))\n      })\n    }\n    if (changes.rotate?.length) {\n      changes.rotate.forEach(tr =>\n      {\n        changesMessages.push(this.buildTransformRotateMessage(tr.strokes.map(s => s.id), tr.angle, tr.center.x, tr.center.y))\n      })\n    }\n    if (changes.scale?.length) {\n      changes.scale.forEach(tr =>\n      {\n        changesMessages.push(this.buildTransformScaleMessage(tr.strokes.map(s => s.id), tr.scaleX, tr.scaleY, tr.origin.x, tr.origin.y))\n      })\n    }\n    return changesMessages\n  }\n\n  async undo(actions: TIIHistoryBackendChanges): Promise<void>\n  {\n    const changes = this.buildUndoRedoChanges(actions)\n    if (changes.length === 0) {\n      return\n    }\n    this.undoDeferred = new DeferredPromise<void>()\n    const message: TRecognizerWebSocketMessage = {\n      type: \"undo\",\n      changes\n    }\n    await this.send(message)\n    return this.undoDeferred?.promise\n  }\n\n  async redo(actions: TIIHistoryBackendChanges): Promise<void>\n  {\n    const changes = this.buildUndoRedoChanges(actions)\n    if (changes.length === 0) {\n      return\n    }\n    this.redoDeferred = new DeferredPromise<void>()\n\n    const message: TRecognizerWebSocketMessage = {\n      type: \"redo\",\n      changes\n    }\n    await this.send(message)\n    return this.redoDeferred?.promise\n  }\n\n  async export(requestedMimeTypes?: string[]): Promise<TExport>\n  {\n    const mimeTypes: string[] = requestedMimeTypes || this.mimeTypes.slice()\n    await Promise.all(mimeTypes.map(mt => this.exportDeferredMap.get(mt)?.promise))\n    mimeTypes.forEach(mt =>\n    {\n      this.exportDeferredMap.set(mt, new DeferredPromise<TExport>())\n    })\n\n    const message: TRecognizerWebSocketMessage = {\n      type: \"export\",\n      partId: this.currentPartId,\n      mimeTypes\n    }\n    await this.send(message)\n    const exports = await Promise.all(mimeTypes.map(mt => this.exportDeferredMap.get(mt)!.promise))\n    return Object.assign({}, ...exports)\n  }\n\n  async clear(): Promise<void>\n  {\n    this.clearDeferred = new DeferredPromise<void>()\n    await this.send({\n      type: \"clear\"\n    })\n    return this.clearDeferred?.promise\n  }\n\n  async close(code: number, reason: string): Promise<void>\n  {\n    this.resetAllDeferred()\n    this.closeDeferred = new DeferredPromise<void>()\n    if (this.socket.readyState === this.socket.OPEN || this.socket.readyState === this.socket.CONNECTING) {\n      this.socket.close(code, reason)\n    }\n    else {\n      this.closeDeferred.resolve()\n    }\n    await this.closeDeferred.promise\n  }\n\n  async destroy(): Promise<void>\n  {\n    if (this.socket) {\n      await this.close(1000, \"Recognizer destroyed\")\n    }\n  }\n}\n","import { isVersionSuperiorOrEqual, mergeDeep, PartialDeep } from \"../utils\"\nimport {\n  DefaultExportConfiguration,\n  DefaultMathConfiguration,\n  DefaultRecognitionRendererConfiguration,\n  DefaultTextConfiguration,\n  TConvertionConfiguration,\n  TExportConfiguration,\n  TMathConfiguration,\n  TRecognitionRendererConfiguration,\n  TTextConfiguration\n} from \"./recognition\"\nimport { TRecognitionType } from \"./RecognitionConfiguration\"\nimport { DefaultServerWebsocketConfiguration, TServerWebsocketConfiguration } from \"./ServerConfiguration\"\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketSSRRecognitionConfiguration = {\n  type: Omit<TRecognitionType, \"DIAGRAM\" | \"Raw Content\">\n  lang: string\n  math: TMathConfiguration\n  text: TTextConfiguration\n  renderer: TRecognitionRendererConfiguration\n  export: TExportConfiguration\n  convert?: TConvertionConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultRecognizerWebSocketSSRRecognitionConfiguration: TRecognizerWebSocketSSRRecognitionConfiguration = {\n  export: DefaultExportConfiguration,\n  math: DefaultMathConfiguration,\n  renderer: DefaultRecognitionRendererConfiguration,\n  text: DefaultTextConfiguration,\n  type: \"TEXT\",\n  lang: \"en_US\",\n}\n\n/**\n * @group Recognizer\n */\nexport type TRecognizerWebSocketSSRConfiguration = {\n  server: TServerWebsocketConfiguration\n  recognition: TRecognizerWebSocketSSRRecognitionConfiguration\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultRecognizerWebSocketSSRConfiguration: TRecognizerWebSocketSSRConfiguration =\n{\n  server: DefaultServerWebsocketConfiguration,\n  recognition: DefaultRecognizerWebSocketSSRRecognitionConfiguration\n}\n\n/**\n * @group Recognizer\n */\nexport class RecognizerWebSocketSSRConfiguration implements TRecognizerWebSocketSSRConfiguration\n{\n  recognition: TRecognizerWebSocketSSRRecognitionConfiguration\n  server: TServerWebsocketConfiguration\n\n  constructor(configuration?: PartialDeep<TRecognizerWebSocketSSRConfiguration>) {\n    this.server = mergeDeep({}, DefaultRecognizerWebSocketSSRConfiguration.server, configuration?.server)\n    this.recognition = mergeDeep({}, DefaultRecognizerWebSocketSSRConfiguration.recognition, configuration?.recognition)\n\n    if (configuration?.recognition?.text?.mimeTypes) {\n      this.recognition.text.mimeTypes = configuration.recognition.text.mimeTypes as (\"text/plain\" | \"application/vnd.myscript.jiix\")[]\n    }\n    this.recognition.text.mimeTypes = [...new Set(this.recognition.text.mimeTypes)]\n\n    if (configuration?.recognition?.math?.mimeTypes) {\n      this.recognition.math.mimeTypes = configuration.recognition.math.mimeTypes as (\"application/vnd.myscript.jiix\" | \"application/x-latex\" | \"application/mathml+xml\")[]\n    }\n    this.recognition.math.mimeTypes = [...new Set(this.recognition.math.mimeTypes)]\n\n    if (this.server.version) {\n      if (!isVersionSuperiorOrEqual(this.server.version, \"2.3.0\")) {\n        delete this.recognition.convert\n      }\n      if (!isVersionSuperiorOrEqual(this.server.version, \"3.2.0\")) {\n        delete this.recognition.export.jiix.text.lines\n      }\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { Model, TExport, TJIIXExport } from \"../model\"\nimport { Stroke } from \"../symbol\"\nimport { StyleHelper, TPenStyle, TTheme } from \"../style\"\nimport { THistoryContext } from \"../history\"\nimport { DeferredPromise, PartialDeep, computeHmac, getApiInfos, isVersionSuperiorOrEqual } from \"../utils\"\nimport\n{\n  TRecognizerWebSocketSSRMessage,\n  TRecognizerWebSocketSSRMessageContentChange,\n  TRecognizerWebSocketSSRMessageError,\n  TRecognizerWebSocketSSRMessageExport,\n  TRecognizerWebSocketSSRMessageHMACChallenge,\n  TRecognizerWebSocketSSRMessagePartChange,\n  TRecognizerWebSocketSSRMessageSVGPatch\n} from \"./RecognizerWebSocketSSRMessage\"\nimport { RecognizerError } from \"./RecognizerError\"\nimport { RecognizerEvent } from \"./RecognizerEvent\"\nimport { TRecognizerWebSocketSSRConfiguration, RecognizerWebSocketSSRConfiguration } from \"./RecognizerWebSocketSSRConfiguration\"\nimport { TConverstionState } from \"./RecognitionConfiguration\"\n\n/**\n * A websocket dialog have this sequence :\n * --------------------------- Client --------------------------------------------------- Server ----------------------------------\n * init: send newContentPackage or restoreIInkSession           ==================>\n *                                                              <==================       ack\n * answer ack:\n *  send the hmac (if enable)                                   ==================>\n *  send the configuration                                      ==================>\n *                                                              <==================       contentPackageDescription\n * answer contentPackageDescription:\n *  send newContentPart or openContentPart                      ==================>\n *                                                              <==================        partChanged\n *                                                              <==================        contentChanged\n *                                                              <==================        newPart\n *                                                              <==================        svgPatch\n *\n * setPenStyle (send the parameters)                            ==================>\n * setTheme (send the parameters)                               ==================>\n * setPenStyleClasses (send the parameters)                     ==================>\n *                                                              <==================        svgPatch\n * addStrokes (send the strokes ) ============>\n *                                                              <==================        update\n */\n\n/**\n * @group Recognizer\n */\nexport class RecognizerWebSocketSSR\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RECOGNIZER)\n\n  protected socket!: WebSocket\n  protected pingCount = 0\n  protected reconnectionCount = 0\n  protected viewSizeHeight!: number\n  protected viewSizeWidth!: number\n  protected sessionId?: string\n  // contentPartCount = 0\n  currentPartId?: string\n  protected currentErrorCode?: string | number\n\n  protected penStyle?: TPenStyle\n  protected penStyleClasses?: string\n  protected theme?: TTheme\n\n  protected connected?: DeferredPromise<void>\n  protected ackDeferred?: DeferredPromise<void>\n  protected addStrokeDeferred?: DeferredPromise<TExport>\n  protected exportDeferred?: DeferredPromise<TExport>\n  protected convertDeferred?: DeferredPromise<TExport>\n  protected importDeferred?: DeferredPromise<TExport>\n  protected resizeDeferred?: DeferredPromise<void>\n  protected undoDeferred?: DeferredPromise<TExport>\n  protected redoDeferred?: DeferredPromise<TExport>\n  protected clearDeferred?: DeferredPromise<TExport>\n  protected importPointEventsDeferred?: DeferredPromise<TExport>\n  protected waitForIdleDeferred?: DeferredPromise<void>\n\n  configuration: TRecognizerWebSocketSSRConfiguration\n  initialized: DeferredPromise<void>\n  url: string\n  event: RecognizerEvent\n\n  constructor(config?: PartialDeep<TRecognizerWebSocketSSRConfiguration>)\n  {\n    this.#logger.info(\"constructor\", { config })\n    this.configuration = new RecognizerWebSocketSSRConfiguration(config)\n    const scheme = (this.configuration.server.scheme === \"https\") ? \"wss\" : \"ws\"\n    this.url = `${ scheme }://${ this.configuration.server.host }/api/v4.0/iink/document?applicationKey=${ this.configuration.server.applicationKey }`\n    this.event = new RecognizerEvent()\n    this.initialized = new DeferredPromise<void>()\n  }\n\n  get mimeTypes(): string[]\n  {\n    switch (this.configuration.recognition.type.toLocaleLowerCase()) {\n      case \"text\":\n        return this.configuration.recognition.text.mimeTypes\n      case \"math\":\n        return this.configuration.recognition.math.mimeTypes\n      default:\n        throw new Error(`Unauthorized recognition type: \"${ this.configuration.recognition.type }\"`)\n    }\n  }\n\n  protected infinitePing(): void\n  {\n    this.pingCount++\n    if (this.configuration.server.websocket.maxPingLostCount < this.pingCount) {\n      this.socket.close(1000, \"MAXIMUM_PING_REACHED\")\n    } else if (this.socket.readyState <= 1) {\n      setTimeout(() =>\n      {\n        if (this.socket.readyState <= 1) {\n          this.socket.send(JSON.stringify({ type: \"ping\" }))\n          this.infinitePing()\n        }\n      }, this.configuration.server.websocket.pingDelay)\n    }\n  }\n\n  protected openCallback(): void\n  {\n    this.connected?.resolve()\n    const params: TRecognizerWebSocketSSRMessage = {\n      type: this.sessionId ? \"restoreIInkSession\" : \"newContentPackage\",\n      iinkSessionId: this.sessionId,\n      applicationKey: this.configuration.server.applicationKey,\n      xDpi: 96,\n      yDpi: 96,\n      viewSizeHeight: this.viewSizeHeight,\n      viewSizeWidth: this.viewSizeWidth\n    }\n    if (isVersionSuperiorOrEqual(this.configuration.server.version!, \"2.0.4\")) {\n      params[\"myscript-client-name\"] = \"iink-ts\"\n      params[\"myscript-client-version\"] = \"3.0.2\"\n    }\n    this.send(params)\n  }\n\n  protected rejectDeferredPending(error: Error): void\n  {\n    if (this.connected?.isPending) {\n      this.connected?.reject(error)\n    }\n    if (this.initialized.isPending) {\n      this.initialized.reject(error)\n    }\n    if (this.addStrokeDeferred?.isPending) {\n      this.addStrokeDeferred?.reject(error)\n    }\n    if (this.exportDeferred?.isPending) {\n      this.exportDeferred?.reject(error)\n    }\n    if (this.importPointEventsDeferred?.isPending) {\n      this.importPointEventsDeferred?.reject(error)\n    }\n    if (this.convertDeferred?.isPending) {\n      this.convertDeferred?.reject(error)\n    }\n    if (this.importDeferred?.isPending) {\n      this.importDeferred?.reject(error)\n    }\n    if (this.resizeDeferred?.isPending) {\n      this.resizeDeferred?.reject(error)\n    }\n    if (this.waitForIdleDeferred?.isPending) {\n      this.waitForIdleDeferred?.reject(error)\n    }\n    if (this.undoDeferred?.isPending) {\n      this.undoDeferred?.reject(error)\n    }\n    if (this.redoDeferred?.isPending) {\n      this.redoDeferred?.reject(error)\n    }\n    if (this.clearDeferred?.isPending) {\n      this.clearDeferred.reject(error)\n    }\n    if (this.waitForIdleDeferred?.isPending) {\n      this.waitForIdleDeferred.reject(error)\n    }\n  }\n\n  protected closeCallback(evt: CloseEvent): void\n  {\n    let message = \"\"\n    if (!this.currentErrorCode) {\n      switch (evt.code) {\n        case 1000:\n          // Normal Closure\n          break\n        case 1001:\n          message = RecognizerError.GOING_AWAY\n          break\n        case 1002:\n          message = RecognizerError.PROTOCOL_ERROR\n          break\n        case 1003:\n          message = RecognizerError.UNSUPPORTED_DATA\n          break\n        case 1006:\n          message = RecognizerError.ABNORMAL_CLOSURE\n          break\n        case 1007:\n          message = RecognizerError.INVALID_FRAME_PAYLOAD\n          break\n        case 1008:\n          message = RecognizerError.POLICY_VIOLATION\n          break\n        case 1009:\n          message = RecognizerError.MESSAGE_TOO_BIG\n          break\n        case 1011:\n          message = RecognizerError.INTERNAL_ERROR\n          break\n        case 1012:\n          message = RecognizerError.SERVICE_RESTART\n          break\n        case 1013:\n          message = RecognizerError.TRY_AGAIN\n          break\n        case 1014:\n          message = RecognizerError.BAD_GATEWAY\n          break\n        case 1015:\n          message = RecognizerError.TLS_HANDSHAKE\n          break\n        default:\n          this.#logger.warn(\"closeCallback\", \"unknow CloseEvent.code\", { evt })\n          message = RecognizerError.CANT_ESTABLISH\n          break\n      }\n    }\n\n    if (!this.currentErrorCode && evt.code !== 1000) {\n      const error = new Error(message || evt.reason)\n      this.rejectDeferredPending(error)\n      this.event.emitError(error)\n    }\n  }\n\n  protected async manageAckMessage(websocketMessage: TRecognizerWebSocketSSRMessage): Promise<void>\n  {\n    this.#logger.info(\"manageAckMessage\", { websocketMessage })\n    const hmacChallengeMessage = websocketMessage as TRecognizerWebSocketSSRMessageHMACChallenge\n    if (hmacChallengeMessage.hmacChallenge) {\n      this.send({\n        type: \"hmac\",\n        hmac: await computeHmac(hmacChallengeMessage.hmacChallenge, this.configuration.server.applicationKey, this.configuration.server.hmacKey)\n      })\n    }\n    if (hmacChallengeMessage.iinkSessionId) {\n      this.sessionId = hmacChallengeMessage.iinkSessionId\n    }\n    if (!isVersionSuperiorOrEqual(this.configuration.server.version!, \"2.3.0\")) {\n      delete this.configuration.recognition.convert\n    }\n    if (!isVersionSuperiorOrEqual(this.configuration.server.version!, \"3.2.0\")) {\n      delete this.configuration.recognition.export.jiix.text.lines\n    }\n    this.send({ ...this.configuration.recognition, type: \"configuration\" })\n    this.ackDeferred?.resolve()\n  }\n\n  protected async manageContentPackageDescriptionMessage(): Promise<void>\n  {\n    this.reconnectionCount = 0\n    await this.ackDeferred?.promise\n    this.#logger.info(\"manageContentPackageDescriptionMessage\")\n    if (this.currentPartId) {\n      this.send({ type: \"openContentPart\", id: this.currentPartId, mimeTypes: this.mimeTypes })\n    }\n    else {\n      this.send({ type: \"newContentPart\", contentType: this.configuration.recognition.type, mimeTypes: this.mimeTypes })\n    }\n  }\n\n  protected managePartChangeMessage(websocketMessage: TRecognizerWebSocketSSRMessage): void\n  {\n    this.#logger.info(\"managePartChangeMessage\", { websocketMessage })\n    const partChangeMessage = websocketMessage as TRecognizerWebSocketSSRMessagePartChange\n    this.currentPartId = partChangeMessage.partId\n    this.initialized.resolve()\n  }\n\n  protected manageExportMessage(websocketMessage: TRecognizerWebSocketSSRMessage): void\n  {\n    this.#logger.info(\"manageExportMessage\", { websocketMessage })\n    const exportMessage = websocketMessage as TRecognizerWebSocketSSRMessageExport\n    if (exportMessage.exports[\"application/vnd.myscript.jiix\"]) {\n      exportMessage.exports[\"application/vnd.myscript.jiix\"] = JSON.parse(exportMessage.exports[\"application/vnd.myscript.jiix\"].toString()) as TJIIXExport\n    }\n    this.initialized.resolve()\n    this.addStrokeDeferred?.resolve(exportMessage.exports)\n    this.exportDeferred?.resolve(exportMessage.exports)\n    this.convertDeferred?.resolve(exportMessage.exports)\n    this.importDeferred?.resolve(exportMessage.exports)\n    this.undoDeferred?.resolve(exportMessage.exports)\n    this.redoDeferred?.resolve(exportMessage.exports)\n    this.clearDeferred?.resolve(exportMessage.exports)\n    this.importPointEventsDeferred?.resolve(exportMessage.exports)\n    this.event.emitExported(exportMessage.exports)\n  }\n\n  protected async manageWaitForIdle(): Promise<void>\n  {\n    this.event.emitIdle(true)\n    this.waitForIdleDeferred?.resolve()\n  }\n\n  protected manageErrorMessage(websocketMessage: TRecognizerWebSocketSSRMessage): void\n  {\n    const err = websocketMessage as TRecognizerWebSocketSSRMessageError\n    this.currentErrorCode = err.data?.code || err.code\n    let message = err.data?.message || err.message || RecognizerError.UNKNOW\n\n    switch (this.currentErrorCode) {\n      case \"no.activity\":\n        message = RecognizerError.NO_ACTIVITY\n        break\n      case \"access.not.granted\":\n        message = RecognizerError.WRONG_CREDENTIALS\n        break\n      case \"session.too.old\":\n        message = RecognizerError.TOO_OLD\n        break\n    }\n    const error = new Error(message)\n    this.rejectDeferredPending(error)\n    this.event.emitError(error)\n  }\n\n  protected manageContentChangeMessage(websocketMessage: TRecognizerWebSocketSSRMessage): void\n  {\n    this.#logger.info(\"manageContentChangeMessage\", { websocketMessage })\n    const contentChangeMessage = websocketMessage as TRecognizerWebSocketSSRMessageContentChange\n    const context: THistoryContext = {\n      canRedo: contentChangeMessage.canRedo,\n      canUndo: contentChangeMessage.canUndo,\n      empty: contentChangeMessage.empty,\n      stackIndex: contentChangeMessage.undoStackIndex,\n      possibleUndoCount: contentChangeMessage.possibleUndoCount,\n    }\n    this.event.emitContentChanged(context)\n  }\n\n  protected manageSVGPatchMessage(websocketMessage: TRecognizerWebSocketSSRMessage): void\n  {\n    this.#logger.info(\"manageSVGPatchMessage\", { websocketMessage })\n    this.resizeDeferred?.resolve()\n    const svgPatchMessage = websocketMessage as TRecognizerWebSocketSSRMessageSVGPatch\n    this.event.emitSVGPatch(svgPatchMessage)\n  }\n\n  protected messageCallback(message: MessageEvent<string>): void\n  {\n    this.#logger.debug(\"messageCallback\", { message })\n    this.currentErrorCode = undefined\n    const websocketMessage: TRecognizerWebSocketSSRMessage = JSON.parse(message.data)\n    if (websocketMessage.type !== \"pong\") {\n      this.pingCount = 0\n      switch (websocketMessage.type) {\n        case \"ack\":\n          this.manageAckMessage(websocketMessage)\n          break\n        case \"contentPackageDescription\":\n          this.manageContentPackageDescriptionMessage()\n          break\n        case \"partChanged\":\n          this.managePartChangeMessage(websocketMessage)\n          break\n        case \"newPart\":\n          this.initialized.resolve()\n          break\n        case \"contentChanged\":\n          this.manageContentChangeMessage(websocketMessage)\n          break\n        case \"exported\":\n          this.manageExportMessage(websocketMessage)\n          break\n        case \"svgPatch\":\n          this.manageSVGPatchMessage(websocketMessage)\n          break\n        case \"error\":\n          this.manageErrorMessage(websocketMessage)\n          break\n        case \"idle\":\n          this.manageWaitForIdle()\n          break\n        default:\n          this.#logger.warn(\"messageCallback\", `Message type unknow: \"${ websocketMessage.type }\".`)\n      }\n    }\n  }\n\n  async init(height: number, width: number): Promise<void>\n  {\n    try {\n      this.event.emitStartInitialization()\n      this.#logger.info(\"init\", { height, width })\n      this.destroy()\n\n      if (!this.configuration.server.version) {\n        this.configuration.server.version = (await getApiInfos(this.configuration)).version\n      }\n      this.connected = new DeferredPromise<void>()\n      this.initialized = new DeferredPromise<void>()\n      this.ackDeferred = new DeferredPromise<void>()\n      this.viewSizeHeight = height\n      this.viewSizeWidth = width\n      this.pingCount = 0\n      this.socket = new WebSocket(this.url)\n\n      if (this.configuration.server.websocket.pingEnabled) {\n        this.infinitePing()\n      }\n\n      this.socket.addEventListener(\"open\", this.openCallback.bind(this))\n      this.socket.addEventListener(\"close\", this.closeCallback.bind(this))\n      this.socket.addEventListener(\"message\", this.messageCallback.bind(this))\n      this.event.emitEndtInitialization()\n      await this.connected.promise\n      await this.initialized.promise\n    } catch (err: unknown) {\n      this.rejectDeferredPending(err as Error)\n      return this.initialized.promise\n    }\n  }\n\n  async send(message: TRecognizerWebSocketSSRMessage): Promise<void>\n  {\n    if (!this.socket) {\n      return Promise.reject(new Error(\"Recognizer must be initilized\"))\n    }\n    await this.connected?.promise\n    if (this.socket.readyState === this.socket.OPEN) {\n      this.#logger.debug(\"send\", { message })\n      this.socket.send(JSON.stringify(message))\n      return Promise.resolve()\n    } else {\n      if (this.socket.readyState != this.socket.CONNECTING && this.configuration.server.websocket.autoReconnect) {\n        this.reconnectionCount++\n        if (this.configuration.server.websocket.maxRetryCount >= this.reconnectionCount) {\n          this.#logger.debug(\"send\", `try to reconnect number: ${ this.reconnectionCount }.`)\n          await this.init(this.viewSizeHeight, this.viewSizeWidth)\n          await this.setPenStyle(this.penStyle as TPenStyle)\n          await this.setPenStyleClasses(this.penStyleClasses as string)\n          await this.setTheme(this.theme as TTheme)\n          return this.send(message)\n        }\n        else {\n          return Promise.reject(new Error(\"Unable to send message. The maximum number of connection attempts has been reached.\"))\n        }\n      }\n    }\n  }\n\n  async addStrokes(strokes: Stroke[]): Promise<TExport>\n  {\n    this.#logger.info(\"addStrokes\", { strokes })\n    await this.initialized.promise\n    this.addStrokeDeferred = new DeferredPromise<TExport>()\n    if (strokes.length === 0) {\n      this.addStrokeDeferred.resolve({} as TExport)\n    }\n    else {\n      await this.send({\n        type: \"addStrokes\",\n        strokes: strokes.map(s => s.formatToSend())\n      })\n    }\n    return this.addStrokeDeferred?.promise\n  }\n\n  async setPenStyle(penStyle: TPenStyle): Promise<void>\n  {\n    this.#logger.info(\"setPenStyle\", { penStyle })\n    await this.initialized.promise\n    this.penStyle = penStyle\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"setPenStyle\",\n      style: StyleHelper.penStyleToCSS(penStyle)\n    }\n    return this.send(message)\n  }\n\n  async setPenStyleClasses(penStyleClasses: string): Promise<void>\n  {\n    await this.initialized.promise\n    this.penStyleClasses = penStyleClasses\n    this.#logger.info(\"setPenStyleClasses\", { penStyleClasses })\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"setPenStyleClasses\",\n      styleClasses: penStyleClasses\n    }\n    return this.send(message)\n  }\n\n  async setTheme(theme: TTheme): Promise<void>\n  {\n    this.#logger.info(\"setTheme\", { theme })\n    await this.initialized.promise\n    this.theme = theme\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"setTheme\",\n      theme: StyleHelper.themeToCSS(theme)\n    }\n    return this.send(message)\n  }\n\n  async export(model: Model, requestedMimeTypes?: string[]): Promise<Model>\n  {\n    this.#logger.info(\"export\", { model, requestedMimeTypes })\n    await this.initialized.promise\n    this.exportDeferred = new DeferredPromise<TExport>()\n    const localModel = model.clone()\n    let mimeTypes: string[] = requestedMimeTypes || []\n    if (!mimeTypes.length) {\n      switch (this.configuration.recognition.type) {\n        case \"MATH\":\n          mimeTypes = this.configuration.recognition.math.mimeTypes\n          break\n        case \"TEXT\":\n          mimeTypes = this.configuration.recognition.text.mimeTypes\n          break\n        default:\n          throw new Error(`Recognition type \"${ this.configuration.recognition.type }\" is unknown.\\n Possible types are:\\n -MATH\\n -TEXT`)\n      }\n    }\n\n    if (!mimeTypes.length) {\n      return Promise.reject(new Error(`Export failed, no mimeTypes define in recognition ${ this.configuration.recognition.type } configuration`))\n    }\n\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"export\",\n      partId: this.currentPartId,\n      mimeTypes\n    }\n    await this.send(message)\n    const exports: TExport = await this.exportDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeExport(exports)\n    this.#logger.debug(\"export\", { model: localModel })\n    return localModel\n  }\n\n  async import(model: Model, data: Blob, mimeType?: string): Promise<Model>\n  {\n    this.#logger.info(\"import\", { data, mimeType })\n    await this.initialized.promise\n    const localModel = model.clone()\n    const chunkSize = this.configuration.server.websocket.fileChunkSize\n    const importFileId = Math.random().toString(10).substring(2, 6)\n    this.importDeferred = new DeferredPromise<TExport>()\n    const readBlob = (blob: Blob): Promise<string | never> =>\n    {\n      const fileReader = new FileReader()\n      return new Promise((resolve, reject) =>\n      {\n        fileReader.onloadend = (ev) => resolve(ev.target?.result as string)\n        fileReader.onerror = () => reject()\n        fileReader.readAsText(blob)\n      })\n    }\n\n    const importFileMessage: TRecognizerWebSocketSSRMessage = {\n      type: \"importFile\",\n      importFileId,\n      mimeType\n    }\n    await this.send(importFileMessage)\n    for (let i = 0; i < data.size; i += chunkSize) {\n      const blobPart = data.slice(i, i + chunkSize, data.type)\n      const partFileString = await readBlob(blobPart)\n      const fileChuckMessage: TRecognizerWebSocketSSRMessage = {\n        type: \"fileChunk\",\n        importFileId,\n        data: partFileString,\n        lastChunk: i + chunkSize > data.size\n      }\n      await this.send(fileChuckMessage)\n    }\n    const exports = await this.importDeferred?.promise\n    this.importDeferred = undefined\n    localModel.mergeExport(exports)\n    return localModel\n  }\n\n  async resize(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"resize\", { model })\n    await this.initialized.promise\n    this.resizeDeferred = new DeferredPromise<void>()\n    const localModel = model.clone()\n    this.viewSizeHeight = localModel.height\n    this.viewSizeWidth = localModel.width\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"changeViewSize\",\n      height: this.viewSizeHeight,\n      width: this.viewSizeWidth,\n    }\n    await this.send(message)\n    await this.resizeDeferred?.promise\n    return localModel\n  }\n\n  async importPointEvents(strokes: Stroke[]): Promise<TExport>\n  {\n    this.#logger.info(\"importPointsEvents\", { strokes })\n    await this.initialized.promise\n    this.importPointEventsDeferred = new DeferredPromise<TExport>()\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"pointerEvents\",\n      events: strokes.map(s => s.formatToSend())\n    }\n    await this.send(message)\n    return this.importPointEventsDeferred?.promise\n  }\n\n  async convert(model: Model, conversionState?: TConverstionState): Promise<Model>\n  {\n    this.#logger.info(\"convert\", { model, conversionState })\n    await this.initialized.promise\n    this.convertDeferred = new DeferredPromise<TExport>()\n    const localModel = model.clone()\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"convert\",\n      conversionState\n    }\n    await this.send(message)\n    const myExportConverted: TExport = await this.convertDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeConvert(myExportConverted)\n    this.#logger.debug(\"convert\", { model: localModel })\n    return localModel\n  }\n\n  async waitForIdle(): Promise<void>\n  {\n    await this.initialized.promise\n    this.waitForIdleDeferred = new DeferredPromise<void>()\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"waitForIdle\",\n    }\n    await this.send(message)\n    return this.waitForIdleDeferred?.promise\n  }\n\n  async undo(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"undo\", { model })\n    await this.initialized.promise\n    const localModel = model.clone()\n    this.undoDeferred = new DeferredPromise<TExport>()\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"undo\",\n    }\n    await this.send(message)\n    const undoExports = await this.undoDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeExport(undoExports)\n    this.#logger.debug(\"undo\", { model: localModel })\n    this.undoDeferred = undefined\n    return localModel\n  }\n\n  async redo(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"redo\", { model })\n    await this.initialized.promise\n    const localModel = model.clone()\n    this.redoDeferred = new DeferredPromise<TExport>()\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"redo\",\n    }\n    await this.send(message)\n    const redoExports = await this.redoDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeExport(redoExports)\n    this.#logger.debug(\"redo\", { model: redoExports })\n    this.redoDeferred = undefined\n    return localModel\n  }\n\n  async clear(model: Model): Promise<Model>\n  {\n    this.#logger.info(\"clear\", { model })\n    await this.initialized.promise\n    const localModel = model.clone()\n    localModel.modificationDate = Date.now()\n    this.clearDeferred = new DeferredPromise<TExport>()\n    const message: TRecognizerWebSocketSSRMessage = {\n      type: \"clear\",\n    }\n    await this.send(message)\n    const clearExports = await this.clearDeferred?.promise\n    localModel.updatePositionReceived()\n    localModel.mergeExport(clearExports)\n    this.clearDeferred = undefined\n    this.#logger.info(\"clear\", { model: localModel })\n    return localModel\n  }\n\n  close(code: number, reason: string): void\n  {\n    if (this.socket.readyState === this.socket.OPEN || this.socket.readyState === this.socket.CONNECTING) {\n      this.#logger.info(\"close\", { code, reason })\n      this.socket.removeEventListener(\"close\", this.closeCallback)\n      this.socket.removeEventListener(\"message\", this.messageCallback)\n      this.socket.removeEventListener(\"open\", this.openCallback)\n      this.socket.close(code, reason)\n    }\n  }\n\n  destroy(): void\n  {\n    this.#logger.info(\"destroy\")\n    this.connected = undefined\n    this.ackDeferred = undefined\n    this.addStrokeDeferred = undefined\n    this.exportDeferred = undefined\n    this.convertDeferred = undefined\n    this.importDeferred = undefined\n    this.importPointEventsDeferred = undefined\n    this.waitForIdleDeferred = undefined\n    this.resizeDeferred = undefined\n    this.undoDeferred = undefined\n    this.redoDeferred = undefined\n    this.clearDeferred = undefined\n    if (this.socket) {\n      this.socket.removeEventListener(\"close\", this.closeCallback)\n      this.socket.removeEventListener(\"message\", this.messageCallback)\n      this.socket.removeEventListener(\"open\", this.openCallback)\n      this.close(1000, \"Recognizer destroyed\")\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../../logger\"\nimport { TPoint, TCanvasShapeEllipseSymbol, TCanvasShapeLineSymbol, TCanvasShapeTableSymbol, TSymbol } from \"../../symbol\"\n\n/**\n * @group Renderer\n */\nexport class CanvasRendererShape\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RENDERER)\n\n  symbols = {\n    table: \"table\",\n    ellipse: \"ellipse\",\n    line: \"line\"\n  }\n\n  protected phi(angle: number): number\n  {\n    let returnedAngle = ((angle + Math.PI) % (Math.PI * 2)) - Math.PI\n    if (returnedAngle < -Math.PI) {\n      returnedAngle += Math.PI * 2\n    }\n    this.#logger.debug(\"phi\", { angle, returnedAngle })\n    return returnedAngle\n  }\n\n  protected drawEllipseArc(context2D: CanvasRenderingContext2D, shapeEllipse: TCanvasShapeEllipseSymbol): TPoint[]\n  {\n    this.#logger.debug(\"drawEllipseArc\", { context2D, shapeEllipse })\n    const { centerPoint, maxRadius, minRadius, orientation, startAngle, sweepAngle } = shapeEllipse\n    const angleStep = 0.02\n    const z1 = Math.cos(orientation) * maxRadius\n    const z2 = Math.cos(orientation) * minRadius\n    const z3 = Math.sin(orientation) * maxRadius\n    const z4 = Math.sin(orientation) * minRadius\n    const n = Math.floor(Math.abs(sweepAngle) / angleStep)\n    const boundariesPoints = []\n    context2D.save()\n    try {\n      context2D.beginPath()\n      for (let i = 0; i <= n; i++) {\n        const angle = startAngle + ((i / n) * sweepAngle)\n        const alpha = Math.atan2(Math.sin(angle) / minRadius, Math.cos(angle) / maxRadius)\n        const cosAlpha = Math.cos(alpha)\n        const sinAlpha = Math.sin(alpha)\n        const x = (centerPoint.x + (z1 * cosAlpha)) - (z4 * sinAlpha)\n        const y = (centerPoint.y + (z2 * sinAlpha)) + (z3 * cosAlpha)\n        if (i === 0) {\n          context2D.moveTo(x, y)\n        } else {\n          context2D.lineTo(x, y)\n        }\n        if (i === 0 || i === n) {\n          boundariesPoints.push({ x, y })\n        }\n      }\n      context2D.stroke()\n    } catch(error) {\n      this.#logger.error(\"drawEllipseArc\", { error })\n    } finally {\n      context2D.restore()\n    }\n    return boundariesPoints\n  }\n\n  protected drawLine(context2D: CanvasRenderingContext2D, p1: TPoint, p2: TPoint)\n  {\n    this.#logger.debug(\"drawLine\", { context2D, p1, p2 })\n    context2D.save()\n    try {\n      context2D.beginPath()\n      context2D.moveTo(p1.x, p1.y)\n      context2D.lineTo(p2.x, p2.y)\n      context2D.stroke()\n    } catch(error) {\n      this.#logger.error(\"drawLine\", { error })\n    } finally {\n      context2D.restore()\n    }\n  }\n\n  protected drawArrowHead(context2D: CanvasRenderingContext2D, headPoint: TPoint, angle: number, length: number)\n  {\n    this.#logger.debug(\"drawArrowHead\", { context2D, headPoint, angle, length })\n    const alpha = this.phi(angle + (Math.PI * (7 / 8)))\n    const beta = this.phi(angle - (Math.PI * (7 / 8)))\n    context2D.save()\n    try {\n      context2D.fillStyle = context2D.strokeStyle\n\n      context2D.moveTo(headPoint.x, headPoint.y)\n      context2D.beginPath()\n      context2D.lineTo(headPoint.x + (length * Math.cos(alpha)), headPoint.y + (length * Math.sin(alpha)))\n      context2D.lineTo(headPoint.x + (length * Math.cos(beta)), headPoint.y + (length * Math.sin(beta)))\n      context2D.lineTo(headPoint.x, headPoint.y)\n      context2D.fill()\n    } catch(error) {\n      this.#logger.error(\"drawArrowHead\", { error })\n    } finally {\n      context2D.restore()\n    }\n  }\n\n  protected drawShapeEllipse(context2D: CanvasRenderingContext2D, shapeEllipse: TCanvasShapeEllipseSymbol)\n  {\n    this.#logger.debug(\"drawShapeEllipse\", { context2D, shapeEllipse })\n    const points = this.drawEllipseArc(context2D, shapeEllipse)\n\n    if (shapeEllipse?.beginDecoration === \"ARROW_HEAD\") {\n      this.drawArrowHead(context2D, points[0], shapeEllipse.beginTangentAngle, 12.0)\n    }\n    if (shapeEllipse?.endDecoration === \"ARROW_HEAD\") {\n      this.drawArrowHead(context2D, points[1], shapeEllipse.endTangentAngle, 12.0)\n    }\n  }\n\n  protected drawShapeLine(context2D: CanvasRenderingContext2D, shapeLine: TCanvasShapeLineSymbol)\n  {\n    this.#logger.debug(\"drawShapeLine\", { context2D, shapeLine })\n    this.drawLine(context2D, shapeLine.firstPoint, shapeLine.lastPoint)\n    if (shapeLine.beginDecoration === \"ARROW_HEAD\") {\n      this.drawArrowHead(context2D, shapeLine.firstPoint, shapeLine.beginTangentAngle, 12.0)\n    }\n    if (shapeLine.endDecoration === \"ARROW_HEAD\") {\n      this.drawArrowHead(context2D, shapeLine.lastPoint, shapeLine.endTangentAngle, 12.0)\n    }\n  }\n\n  draw(context2D: CanvasRenderingContext2D, symbol: TSymbol)\n  {\n    this.#logger.info(\"draw\", { context2D, symbol })\n    context2D.save()\n    context2D.lineWidth = symbol.style.width as number\n    context2D.strokeStyle = symbol.style.color as string\n\n    switch (symbol.type) {\n      case this.symbols.table: {\n        const tableSymbols = symbol as TCanvasShapeTableSymbol\n        tableSymbols.lines.forEach(line => this.drawLine(context2D, line.p1, line.p2))\n        break\n      }\n      case this.symbols.ellipse: {\n        this.drawShapeEllipse(context2D, symbol as TCanvasShapeEllipseSymbol)\n        break\n      }\n      case this.symbols.line: {\n        this.drawShapeLine(context2D, symbol as TCanvasShapeLineSymbol)\n        break\n      }\n      default:\n        this.#logger.warn(\"draw\", `${ symbol.type } not implemented`)\n        break\n    }\n  }\n\n}\n","import { LoggerCategory, LoggerManager } from \"../../logger\"\nimport { Stroke, TPointer } from \"../../symbol\"\nimport { computeAngleAxeRadian, computeLinksPointers, computeMiddlePointer } from \"../../utils\"\n\n/**\n * @group Renderer\n */\nexport class CanvasRendererStroke\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RENDERER)\n\n  protected renderArc(context2d: CanvasRenderingContext2D, center: TPointer, radius: number): void\n  {\n    this.#logger.debug(\"renderArc\", { context2d, center, radius })\n    context2d.arc(center.x, center.y, radius, 0, Math.PI * 2, true)\n  }\n\n  protected renderLine(context2d: CanvasRenderingContext2D, begin: TPointer, end: TPointer, width: number): void\n  {\n    this.#logger.debug(\"renderLine\", { context2d, begin, end, width })\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, end), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(begin, end), width)\n\n    context2d.moveTo(linkPoints1[0].x, linkPoints1[0].y)\n    context2d.lineTo(linkPoints2[0].x, linkPoints2[0].y)\n    context2d.lineTo(linkPoints2[1].x, linkPoints2[1].y)\n    context2d.lineTo(linkPoints1[1].x, linkPoints1[1].y)\n  }\n\n  protected renderFinal(context2d: CanvasRenderingContext2D, begin: TPointer, end: TPointer, width: number): void\n  {\n    this.#logger.debug(\"renderFinal\", { context2d, begin, end, width })\n    const ARCSPLIT = 6\n    const angle = computeAngleAxeRadian(begin, end)\n    const linkPoints = computeLinksPointers(end, angle, width)\n    context2d.moveTo(linkPoints[0].x, linkPoints[0].y)\n    for (let i = 1; i <= ARCSPLIT; i++) {\n      const newAngle = angle - ((i * Math.PI) / ARCSPLIT)\n      context2d.lineTo(end.x - ((end.p * width) * Math.sin(newAngle)), end.y + (end.p * width * Math.cos(newAngle)))\n    }\n  }\n\n  protected renderQuadratic(context2d: CanvasRenderingContext2D, begin: TPointer, end: TPointer, ctrl: TPointer, width: number): void\n  {\n    this.#logger.debug(\"renderQuadratic\", { context2d, begin, end, ctrl, width })\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, ctrl), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(ctrl, end), width)\n    const linkPoints3 = computeLinksPointers(ctrl, computeAngleAxeRadian(begin, end), width)\n\n    context2d.moveTo(linkPoints1[0].x, linkPoints1[0].y)\n    context2d.quadraticCurveTo(linkPoints3[0].x, linkPoints3[0].y, linkPoints2[0].x, linkPoints2[0].y)\n    context2d.lineTo(linkPoints2[1].x, linkPoints2[1].y)\n    context2d.quadraticCurveTo(linkPoints3[1].x, linkPoints3[1].y, linkPoints1[1].x, linkPoints1[1].y)\n  }\n\n  draw(context2d: CanvasRenderingContext2D, stroke: Stroke): void\n  {\n    this.#logger.info(\"draw\", { context2d, stroke })\n    const NUMBER_POINTS = stroke.pointers.length\n    const NUMBER_QUADRATICS = NUMBER_POINTS - 2\n    const width = (stroke.style.width as number) > 0 ? (stroke.style.width as number) : context2d.lineWidth\n    const color = (stroke.style.color as string) ? (stroke.style.color as string) : context2d.strokeStyle\n    const firstPoint = stroke.pointers[0] as TPointer\n\n    context2d.save()\n    try {\n      context2d.beginPath()\n      if (NUMBER_POINTS < 3) {\n        this.renderArc(context2d, firstPoint, width * 0.6)\n      } else {\n        this.renderArc(context2d, firstPoint, width * firstPoint.p)\n        const secondPoint: TPointer = computeMiddlePointer(firstPoint, stroke.pointers[1])\n        this.renderLine(context2d, firstPoint, secondPoint, width)\n\n        // Possibility to try this (the start looks better when the ink is large)\n        // var first = computeMiddlePoint(stroke.pointers[0], stroke.pointers[1]);\n        // context2d.arc(first.x, first.y, width * first.p, 0, Math.PI * 2, true);\n\n        for (let i = 0; i < NUMBER_QUADRATICS; i++) {\n          const begin: TPointer = computeMiddlePointer(stroke.pointers[i], stroke.pointers[i + 1])\n          const end: TPointer = computeMiddlePointer(stroke.pointers[i + 1], stroke.pointers[i + 2])\n          const ctrl: TPointer = stroke.pointers[i + 1]\n          this.renderQuadratic(context2d, begin, end, ctrl, width)\n        }\n        const beginLine: TPointer = computeMiddlePointer(stroke.pointers[NUMBER_POINTS - 2], stroke.pointers[NUMBER_POINTS - 1])\n        const endLine: TPointer = stroke.pointers[NUMBER_POINTS - 1]\n        this.renderLine(context2d, beginLine, endLine, width)\n\n        const beginFinal: TPointer = stroke.pointers[NUMBER_POINTS - 2]\n        const endFinal: TPointer = stroke.pointers[NUMBER_POINTS - 1]\n        this.renderFinal(context2d, beginFinal, endFinal, width)\n      }\n      context2d.closePath()\n      if (color !== undefined) {\n        context2d.fillStyle = color\n        context2d.fill()\n      }\n      context2d.save()\n    }\n    catch (error) {\n      this.#logger.error(\"draw\", { error })\n    }\n    finally {\n      context2d.restore()\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../../logger\"\nimport { TSymbol, TCanvasTextSymbol, TCanvasTextUnderlineSymbol, TCanvasUnderLineSymbol, TPoint } from \"../../symbol\"\n\n/**\n * @group Renderer\n */\nexport class CanvasRendererText\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RENDERER)\n\n  symbols = {\n    char: \"char\",\n    string: \"string\",\n    textLine: \"textLine\"\n  }\n\n  protected drawUnderline(context2D: CanvasRenderingContext2D, textUnderline: TCanvasTextUnderlineSymbol, underline: TCanvasUnderLineSymbol)\n  {\n    this.#logger.debug(\"#drawUnderline\", { context2D, textUnderline, underline })\n    context2D.save()\n    try {\n      const delta = textUnderline.data.width / textUnderline.label.length\n      const p1: TPoint = {\n        x: textUnderline.data.topLeftPoint.x + (underline.data.firstCharacter * delta),\n        y: textUnderline.data.topLeftPoint.y + textUnderline.data.height\n      }\n      const p2: TPoint = {\n        x: textUnderline.data.topLeftPoint.x + (underline.data.lastCharacter * delta),\n        y: textUnderline.data.topLeftPoint.y + textUnderline.data.height\n      }\n      context2D.beginPath()\n      context2D.moveTo(p1.x, p1.y)\n      context2D.lineTo(p2.x, p2.y)\n      context2D.stroke()\n    } catch(error) {\n      this.#logger.error(\"#drawUnderline\", { error })\n    } finally {\n      context2D.restore()\n    }\n  }\n\n  protected drawText(context2D: CanvasRenderingContext2D, text: TCanvasTextSymbol)\n  {\n    this.#logger.debug(\"#drawText\", { context2D, text })\n    context2D.save()\n    try {\n      context2D.font = `${ text.data.textHeight }px serif`\n      context2D.textAlign = (text.data.justificationType === \"CENTER\") ? \"center\" : \"left\"\n      context2D.textBaseline = \"bottom\"\n      context2D.fillStyle = context2D.strokeStyle\n      context2D.fillText(text.label, text.data.topLeftPoint.x, (text.data.topLeftPoint.y + text.data.height))\n    } catch(error) {\n      this.#logger.error(\"#drawText\", { error })\n    } finally {\n      context2D.restore()\n    }\n  }\n\n  protected drawTextLine(context2D: CanvasRenderingContext2D, textUnderline: TCanvasTextUnderlineSymbol)\n  {\n    this.#logger.debug(\"#drawTextLine\", { context2D, textUnderline })\n    this.drawText(context2D, textUnderline)\n    textUnderline.underlineList.forEach((underline) =>\n    {\n      this.drawUnderline(context2D, textUnderline, underline)\n    })\n  }\n\n  draw(context2D: CanvasRenderingContext2D, symbol: TSymbol)\n  {\n    this.#logger.info(\"draw\", { context2D, symbol })\n    context2D.lineWidth = (symbol.style.width as number)\n    context2D.strokeStyle = (symbol.style.color as string)\n    switch (symbol.type) {\n      case this.symbols.char:\n      case this.symbols.string:\n        this.drawText(context2D, symbol as TCanvasTextSymbol)\n        break\n      case this.symbols.textLine:\n        this.drawTextLine(context2D, symbol as TCanvasTextUnderlineSymbol)\n        break\n      default:\n        this.#logger.warn(\"draw\", `${symbol.type} not implemented`)\n        break\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../../logger\"\nimport { Model } from \"../../model\"\nimport { Stroke, TSymbol } from \"../../symbol\"\nimport { TRendererConfiguration } from \"../RendererConfiguration\"\nimport { CanvasRendererShape } from \"./CanvasRendererShape\"\nimport { CanvasRendererStroke } from \"./CanvasRendererStroke\"\nimport { CanvasRendererText } from \"./CanvasRendererText\"\n\n/**\n * @group Renderer\n */\nexport class CanvasRenderer\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RENDERER)\n  configuration: Omit<TRendererConfiguration, \"guides\">\n  strokeRenderer: CanvasRendererStroke\n  shapeRenderer: CanvasRendererShape\n  textRenderer: CanvasRendererText\n  context!: {\n    parent: HTMLElement\n    renderingCanvas: HTMLCanvasElement\n    renderingCanvasContext: CanvasRenderingContext2D\n    capturingCanvas: HTMLCanvasElement\n    capturingCanvasContext: CanvasRenderingContext2D\n  }\n\n  constructor(config: Omit<TRendererConfiguration, \"guides\">)\n  {\n    this.#logger.info(\"constructor\", { config })\n    this.configuration = config\n    this.strokeRenderer = new CanvasRendererStroke()\n    this.shapeRenderer = new CanvasRendererShape()\n    this.textRenderer = new CanvasRendererText()\n  }\n\n  protected createCanvas(type: string): HTMLCanvasElement\n  {\n    this.#logger.debug(\"createCanvas\", { type })\n    const canvas: HTMLCanvasElement = document.createElement(\"canvas\")\n    canvas.id = type\n    canvas.classList.add(type)\n    canvas.classList.add(\"ms-canvas\")\n    return canvas\n  }\n\n  protected resizeContent(): void\n  {\n    const pixelRatio: number = window.devicePixelRatio\n    const elements: HTMLCanvasElement[] = [this.context.renderingCanvas, this.context.capturingCanvas]\n    elements.forEach((canvas) =>\n    {\n      const domElement = canvas.parentNode as HTMLElement\n      const width = Math.max(this.configuration.minWidth, domElement.clientWidth)\n      const height = Math.max(this.configuration.minHeight, domElement.clientHeight)\n      canvas.width = width * pixelRatio\n      canvas.height = height * pixelRatio\n      canvas.getContext(\"2d\")?.scale(pixelRatio, pixelRatio)\n      canvas.style.width = `${ width }px`\n      canvas.style.height = `${ height }px`\n    })\n  }\n\n  protected drawSymbol(context2D: CanvasRenderingContext2D, symbol: TSymbol)\n  {\n    this.#logger.debug(\"drawSymbol\", { symbol })\n    if (symbol.type === \"stroke\") {\n      const stroke = symbol as Stroke\n      if (stroke.pointerType !== \"eraser\") {\n        this.strokeRenderer.draw(context2D, stroke)\n      }\n    } else if (Object.keys(this.textRenderer.symbols).includes(symbol.type)) {\n      this.textRenderer.draw(context2D, symbol)\n    } else if (Object.keys(this.shapeRenderer.symbols).includes(symbol.type)) {\n      this.shapeRenderer.draw(context2D, symbol)\n    } else {\n      this.#logger.warn(\"drawSymbol\", `symbol type unknow: ${symbol.type}`)\n    }\n  }\n\n  init(element: HTMLElement, guide?: { x?: number, y?: number } ): void\n  {\n    this.#logger.info(\"init\", { element })\n    const renderingCanvas: HTMLCanvasElement = this.createCanvas(\"ms-rendering-canvas\")\n    renderingCanvas.setAttribute(\"data-layer\", \"MODEL\")\n    if (guide) {\n      renderingCanvas.style.backgroundSize = `${guide.x || 1}px ${guide.y || 1}px`\n    }\n    element.appendChild(renderingCanvas)\n\n    const capturingCanvas: HTMLCanvasElement = this.createCanvas(\"ms-capture-canvas\")\n    capturingCanvas.setAttribute(\"data-layer\", \"CAPTURE\")\n    element.appendChild(capturingCanvas)\n\n    this.context = {\n      parent: element,\n      renderingCanvas,\n      renderingCanvasContext: renderingCanvas.getContext(\"2d\") as CanvasRenderingContext2D,\n      capturingCanvas,\n      capturingCanvasContext: capturingCanvas.getContext(\"2d\") as CanvasRenderingContext2D\n    }\n\n    this.resizeContent()\n  }\n\n  drawModel(model: Model): void\n  {\n    this.#logger.info(\"drawModel\", { model })\n    this.context.renderingCanvasContext?.clearRect(0, 0, this.context.renderingCanvas.width, this.context.renderingCanvas.height)\n    model.symbols.forEach(symbol => this.drawSymbol(this.context.renderingCanvasContext, symbol))\n    this.context.capturingCanvasContext.clearRect(0, 0, this.context.capturingCanvas.width, this.context.capturingCanvas.height)\n  }\n\n  drawPendingStroke(stroke: Stroke | undefined): void\n  {\n    this.#logger.info(\"drawPendingStroke\", { stroke })\n    this.context.capturingCanvasContext.clearRect(0, 0, this.context.capturingCanvas.width, this.context.capturingCanvas.height)\n    if (stroke && stroke?.pointerType !== \"eraser\") {\n      this.strokeRenderer.draw(this.context.capturingCanvasContext, stroke)\n    }\n  }\n\n  resize(model: Model): void\n  {\n    this.#logger.info(\"resize\", { model })\n    this.resizeContent()\n    this.drawModel(model)\n  }\n\n  destroy(): void\n  {\n    this.#logger.info(\"destroy\")\n    if (this.context.parent) {\n      this.context.parent.innerHTML = \"\"\n    }\n  }\n}\n","\n/**\n * @group Renderer\n */\nexport const SVGRendererConst =\n{\n  arrowHeadStartMarker: \"arrow-head-start\",\n  arrowHeadEndMaker: \"arrow-head-end\",\n  selectionFilterId: \"selection-filter\",\n  removalFilterId: \"removal-filter\",\n  crossMarker: \"cross-marker\",\n  noSelection: \"pointer-events: none; -webkit-touch-callout: none; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;\",\n}","import { TBox, TPoint } from \"../../symbol\"\n\nconst XMLNS = \"http://www.w3.org/2000/svg\"\n/**\n * @group Renderer\n */\nexport class SVGBuilder\n{\n  static createLayer(boundingBox: TBox, attrs: { [key: string]: string } = {}): SVGSVGElement\n  {\n    const svgEl = document.createElementNS(XMLNS, \"svg\")\n    svgEl.setAttribute(\"width\", `${ boundingBox.width }px`)\n    svgEl.setAttribute(\"height\", `${ boundingBox.height }px`)\n    svgEl.setAttribute(\"viewBox\", `${boundingBox.x}, ${boundingBox.y}, ${boundingBox. width }, ${ boundingBox.height }`)\n    Object.keys(attrs).forEach(k =>\n    {\n      svgEl.setAttribute(k, attrs[k])\n    })\n    return svgEl\n  }\n\n  static createFilter(id: string, attrs: { [key: string]: string } = {}): SVGFilterElement\n  {\n    const filter = document.createElementNS(XMLNS, \"filter\")\n    filter.id = id\n    Object.keys(attrs).forEach(k =>\n    {\n      filter.setAttribute(k, attrs[k])\n    })\n    return filter\n  }\n\n  static createDefs(): SVGDefsElement\n  {\n    return document.createElementNS(XMLNS, \"defs\")\n  }\n\n  static createMarker(id: string, attrs: { [key: string]: string } = {}): SVGMarkerElement\n  {\n    const marker = document.createElementNS(XMLNS, \"marker\")\n    marker.setAttribute(\"id\", id)\n    Object.keys(attrs).forEach(k =>\n    {\n      marker.setAttribute(k, attrs[k])\n    })\n    return marker\n  }\n\n  static createComponentTransfert(): SVGFEComponentTransferElement\n  {\n    return document.createElementNS(XMLNS, \"feComponentTransfer\")\n  }\n\n  static createDropShadow({ dx = 0, dy = 0, deviation = 0, color = \"#3e68ff\", opacity = 1 }): SVGFEDropShadowElement\n  {\n    const shadow = document.createElementNS(XMLNS, \"feDropShadow\")\n    shadow.setAttribute(\"dx\", dx.toString())\n    shadow.setAttribute(\"dy\", dy.toString())\n    shadow.setAttribute(\"stdDeviation\", deviation.toString())\n    shadow.setAttribute(\"flood-color\", color)\n    shadow.setAttribute(\"flood-opacity\", opacity.toString())\n    return shadow\n  }\n\n  static createTransfertFunctionTable(type: \"feFuncA\" | \"feFuncB\" | \"feFuncG\" | \"feFuncR\", values: string): SVGFEFuncAElement\n  {\n    const feFunc = document.createElementNS(XMLNS, type)\n    feFunc.setAttribute(\"type\", \"table\")\n    feFunc.setAttribute(\"tableValues\", values)\n    return feFunc\n  }\n\n  static createGroup(attrs: { [key: string]: string } = {}): SVGGElement\n  {\n    const groupEl = document.createElementNS(XMLNS, \"g\")\n    Object.keys(attrs).forEach(k =>\n    {\n      groupEl.setAttribute(k, attrs[k])\n    })\n    return groupEl\n  }\n\n  static createLine(p1: TPoint, p2: TPoint, attrs: { [key: string]: string } = {}): SVGLineElement\n  {\n    const lineEl = document.createElementNS(XMLNS, \"line\")\n    lineEl.setAttribute(\"x1\", p1.x.toString())\n    lineEl.setAttribute(\"y1\", p1.y.toString())\n    lineEl.setAttribute(\"x2\", p2.x.toString())\n    lineEl.setAttribute(\"y2\", p2.y.toString())\n    Object.keys(attrs).forEach(k =>\n    {\n      lineEl.setAttribute(k, attrs[k])\n    })\n    return lineEl\n  }\n\n  static createCircle(p: TPoint, r: number, attrs: { [key: string]: string } = {}): SVGCircleElement\n  {\n    const circleEl = document.createElementNS(XMLNS, \"circle\")\n    circleEl.setAttribute(\"cx\", p.x.toString())\n    circleEl.setAttribute(\"cy\", p.y.toString())\n    circleEl.setAttribute(\"r\", r.toString())\n    Object.keys(attrs).forEach(k =>\n    {\n      circleEl.setAttribute(k, attrs[k])\n    })\n    return circleEl\n  }\n\n  static createPath(attrs: { [key: string]: string } = {}): SVGPathElement\n  {\n    const pathEl = document.createElementNS(XMLNS, \"path\")\n    Object.keys(attrs).forEach(k =>\n    {\n      pathEl.setAttribute(k, attrs[k])\n    })\n    return pathEl\n  }\n\n  static createPolygon(points: number[], attrs: { [key: string]: string } = {}): SVGPolylineElement\n  {\n    const polygonEl = document.createElementNS(XMLNS, \"polygon\")\n    polygonEl.setAttribute(\"points\", points.join(\",\"))\n    Object.keys(attrs).forEach(k =>\n    {\n      polygonEl.setAttribute(k, attrs[k])\n    })\n    return polygonEl\n  }\n\n  static createRect(box: TBox, attrs: { [key: string]: string } = {}): SVGRectElement\n  {\n    const rectEl = document.createElementNS(XMLNS, \"rect\")\n    rectEl.setAttribute(\"x\", box.x.toString())\n    rectEl.setAttribute(\"y\", box.y.toString())\n    rectEl.setAttribute(\"width\", box.width.toString())\n    rectEl.setAttribute(\"height\", box.height.toString())\n    Object.keys(attrs).forEach(k =>\n    {\n      rectEl.setAttribute(k, attrs[k])\n    })\n    return rectEl\n  }\n\n  static createTSpan(text: string, attrs: { [key: string]: string } = {}): SVGTSpanElement\n  {\n    const tSpanEl = document.createElementNS(XMLNS, \"tspan\")\n    tSpanEl.textContent = text\n    Object.keys(attrs).forEach(k =>\n    {\n      tSpanEl.setAttribute(k, attrs[k])\n    })\n    return tSpanEl\n  }\n\n  static createForeignObject(box: TBox, node: HTMLElement, attrs: { [key: string]: string } = {}): SVGForeignObjectElement\n  {\n    const objEl = document.createElementNS(XMLNS, \"foreignObject\")\n    objEl.setAttribute(\"x\", box.x.toString())\n    objEl.setAttribute(\"y\", box.y.toString())\n    objEl.setAttribute(\"width\", box.width.toString())\n    objEl.setAttribute(\"height\", box.height.toString())\n    Object.keys(attrs).forEach(k =>\n    {\n      objEl.setAttribute(k, attrs[k])\n    })\n    objEl.appendChild(node)\n    return objEl\n  }\n\n  static createText(p: TPoint, text: string, attrs: { [key: string]: string } = {}): SVGTextElement\n  {\n    const textEl = document.createElementNS(XMLNS, \"text\")\n    textEl.textContent = text\n    textEl.setAttribute(\"x\", p.x.toString())\n    textEl.setAttribute(\"y\", p.y.toString())\n    Object.keys(attrs).forEach(k =>\n    {\n      textEl.setAttribute(k, attrs[k])\n    })\n    return textEl\n  }\n}\n","import { EdgeDecoration, EdgeKind, IIEdgeArc, IIEdgeLine, IIEdgePolyLine, TIIEdge } from \"../../symbol\"\nimport { DefaultStyle } from \"../../style\"\nimport { SVGRendererConst } from \"./SVGRendererConst\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class SVGRendererEdgeUtil\n{\n  static getLinePath(line: IIEdgeLine): string\n  {\n    return `M ${ line.start.x } ${ line.start.y } L ${ line.end.x } ${ line.end.y }`\n  }\n\n  static getPolyLinePath(line: IIEdgePolyLine): string\n  {\n    return `M ${ line.vertices[0].x } ${ line.vertices[0].y } ${ line.vertices.map(p => `L ${ p.x } ${ p.y }`).join(\" \") }`\n  }\n\n  static getArcPath(arc: IIEdgeArc): string\n  {\n    return `M ${ arc.vertices[0].x } ${ arc.vertices[0].y } Q ${ arc.vertices.map(p => `${ p.x } ${ p.y }`).join(\" \") }`\n  }\n\n  static getSVGPath(edge: TIIEdge): string\n  {\n    switch (edge.kind) {\n      case EdgeKind.Line:\n        return SVGRendererEdgeUtil.getLinePath(edge)\n      case EdgeKind.PolyEdge:\n        return SVGRendererEdgeUtil.getPolyLinePath(edge)\n      case EdgeKind.Arc:\n        return SVGRendererEdgeUtil.getArcPath(edge)\n      default:\n        throw new Error(`Can't getSVGPath for edge cause kind is unknow: \"${ JSON.stringify(edge) }\"`)\n    }\n  }\n\n  static getSVGElement(edge: TIIEdge): SVGGraphicsElement\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": edge.id,\n      \"type\": edge.type,\n      \"kind\": edge.kind,\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n    }\n    if (edge.selected) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.selectionFilterId })`\n    }\n    if (edge.deleting) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.removalFilterId })`\n    }\n    const group = SVGBuilder.createGroup(attrs)\n\n    const pathAttrs: { [key: string]: string } = {\n      \"fill\": \"transparent\",\n      \"stroke\": edge.style.color || DefaultStyle.color!,\n      \"stroke-width\": (edge.style.width || DefaultStyle.width).toString(),\n      \"d\": SVGRendererEdgeUtil.getSVGPath(edge),\n    }\n    if (edge.style.opacity) {\n      pathAttrs[\"opacity\"] = edge.style.opacity.toString()\n    }\n\n    if (edge.startDecoration === EdgeDecoration.Arrow) {\n      pathAttrs[\"marker-start\"] = `url(#${ SVGRendererConst.arrowHeadStartMarker })`\n    }\n    if (edge.endDecoration === EdgeDecoration.Arrow) {\n      pathAttrs[\"marker-end\"] = `url(#${ SVGRendererConst.arrowHeadEndMaker })`\n    }\n    group.appendChild(SVGBuilder.createPath(pathAttrs))\n    return group\n  }\n\n\n}","import { IIEraser, TPointer } from \"../../symbol\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class SVGRendererEraserUtil\n{\n  static getSVGPath(eraser: IIEraser): string\n  {\n    if (eraser.pointers.length < 1) return \"\"\n\n    const firstPoint = eraser.pointers.at(0) as TPointer\n\n    const startPath = `M ${ firstPoint.x } ${ firstPoint.y }`\n\n    if (eraser.pointers.length === 1) {\n      const strokeWith = eraser.style.width || 4\n      return `${startPath} L ${ firstPoint.x  + strokeWith / 2 } ${ firstPoint.y }`\n    }\n\n    const middlePoints = eraser.pointers.slice(1)\n\n    return middlePoints.reduce((acc, point) => {\n      return `${ acc } L ${ point.x } ${ point.y }`\n    }, startPath)\n  }\n\n  static getSVGElement(eraser: IIEraser): SVGPathElement\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": eraser.id,\n      \"type\": \"eraser\",\n      \"stroke-width\": \"12\",\n      \"stroke\": \"grey\",\n      \"opacity\": \"0.2\",\n      \"shadowBlur\": \"5\",\n      \"stroke-linecap\": \"round\",\n      \"fill\": \"transparent\",\n      \"d\": SVGRendererEraserUtil.getSVGPath(eraser)\n    }\n    return SVGBuilder.createPath(attrs)\n  }\n\n}","import { DecoratorKind, IIDecorator, RecognizedKind, SymbolType, TBox, TIISymbol } from \"../../symbol\"\nimport { DefaultStyle } from \"../../style\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class SVGRendererDecoratorUtil\n{\n  static getSVGElement(decorator: IIDecorator, symbol: TIISymbol): SVGGeometryElement | undefined\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": decorator.id,\n      \"type\": \"decorator\",\n      \"kind\": decorator.kind,\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n    }\n    if (decorator.style.opacity) {\n      attrs[\"opacity\"] = decorator.style.opacity.toString()\n    }\n    if (symbol.deleting) {\n      attrs[\"opacity\"] = ((decorator.style.opacity || 1) * 0.5).toString()\n    }\n\n    let element: SVGGeometryElement | undefined\n\n    switch (decorator.kind) {\n      case DecoratorKind.Highlight: {\n        attrs[\"opacity\"] = symbol.deleting ? \"0.25\" : \"0.5\"\n        attrs[\"stroke\"] = \"transparent\"\n        attrs[\"fill\"] = decorator.style.color || DefaultStyle.color!\n        const boundingBox: TBox = {\n          x: symbol.bounds.x - +(symbol.style.width || DefaultStyle.width),\n          y: symbol.bounds.y - +(symbol.style.width || DefaultStyle.width),\n          height: symbol.bounds.height + +(symbol.style.width || DefaultStyle.width) * 2,\n          width: symbol.bounds.width + +(symbol.style.width || DefaultStyle.width) * 2,\n        }\n        element = SVGBuilder.createRect(boundingBox, attrs)\n        break\n      }\n      case DecoratorKind.Surround: {\n        attrs[\"fill\"] = \"transparent\"\n        attrs[\"stroke\"] = decorator.style.color || DefaultStyle.color!\n        attrs[\"stroke-width\"] = (decorator.style.width || DefaultStyle.width).toString()\n        const boundingBox: TBox = {\n          x: symbol.bounds.x - +(symbol.style.width || DefaultStyle.width),\n          y: symbol.bounds.y - +(symbol.style.width || DefaultStyle.width),\n          height: symbol.bounds.height + +(symbol.style.width || DefaultStyle.width) * 2,\n          width: symbol.bounds.width + +(symbol.style.width || DefaultStyle.width) * 2,\n        }\n        element = SVGBuilder.createRect(boundingBox, attrs)\n        break\n      }\n      case DecoratorKind.Strikethrough: {\n        attrs[\"fill\"] = \"transparent\"\n        attrs[\"stroke\"] = decorator.style.color || DefaultStyle.color!\n        attrs[\"stroke-width\"] = (decorator.style.width || DefaultStyle.width).toString()\n        const p1 = {\n          x: symbol.bounds.xMin,\n          y: symbol.bounds.yMid\n        }\n        const p2 = {\n          x: symbol.bounds.xMax,\n          y: symbol.bounds.yMid\n        }\n        if (symbol.type === SymbolType.Recognized && symbol.kind === RecognizedKind.Text) {\n          p1.y = symbol.baseline - symbol.xHeight / 2\n          p2.y = symbol.baseline - symbol.xHeight / 2\n        }\n        element = SVGBuilder.createLine(p1, p2, attrs)\n        break\n      }\n      case DecoratorKind.Underline: {\n        attrs[\"fill\"] = \"transparent\"\n        attrs[\"stroke\"] = decorator.style.color || DefaultStyle.color!\n        attrs[\"stroke-width\"] = (decorator.style.width || DefaultStyle.width).toString()\n        const p1 = {\n          x: symbol.bounds.xMin,\n          y: symbol.bounds.yMax + +(symbol.style.width || DefaultStyle.width)\n        }\n        const p2 = {\n          x: symbol.bounds.xMax,\n          y: symbol.bounds.yMax + +(symbol.style.width || DefaultStyle.width)\n        }\n        if (symbol.type === SymbolType.Recognized && symbol.kind === RecognizedKind.Text) {\n          p1.y = symbol.baseline + symbol.xHeight / 2\n          p2.y = symbol.baseline + symbol.xHeight / 2\n        }\n        element = SVGBuilder.createLine(p1, p2, attrs)\n        break\n      }\n    }\n\n    return element\n  }\n}","import { IIShapeCircle, IIShapeEllipse, IIShapePolygon, ShapeKind, TIIShape } from \"../../symbol\"\nimport { DefaultStyle } from \"../../style\"\nimport { convertRadianToDegree } from \"../../utils\"\nimport { SVGRendererConst } from \"./SVGRendererConst\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class SVGRendererShapeUtil\n{\n  static getPolygonePath(polygon: IIShapePolygon): string\n  {\n    return `M ${polygon.points[0].x} ${polygon.points[0].y} ${polygon.points.slice(1).map(p => `L ${p.x} ${p.y}`).join(\" \")} Z`\n  }\n\n  static getCirclePath(circle: IIShapeCircle): string\n  {\n    return `M ${circle.center.x - circle.radius} ${circle.center.y} a ${circle.radius} ${circle.radius} 0 1 1 ${circle.radius * 2} 0 a ${circle.radius} ${circle.radius} 0 1 1 -${circle.radius * 2} 0 Z`\n  }\n\n  static getEllipsePath(ellipse: IIShapeEllipse): string\n  {\n    return `M ${ellipse.center.x - ellipse.radiusX} ${ellipse.center.y} a ${ellipse.radiusX} ${ellipse.radiusY} 0 1 1 ${ellipse.radiusX * 2} 0 a ${ellipse.radiusX} ${ellipse.radiusY} 0 1 1 -${ellipse.radiusX * 2} 0 Z`\n  }\n\n  static getSVGPath(shape: TIIShape): string\n  {\n    switch(shape.kind) {\n      case ShapeKind.Polygon:\n        return SVGRendererShapeUtil.getPolygonePath(shape as IIShapePolygon)\n      case ShapeKind.Circle:\n        return SVGRendererShapeUtil.getCirclePath(shape as IIShapeCircle)\n      case ShapeKind.Ellipse:\n        return SVGRendererShapeUtil.getEllipsePath(shape as IIShapeEllipse)\n      default:\n        throw new Error(`Can't getSVGPath for shape cause kind is unknow: \"${ JSON.stringify(shape) }\"`)\n    }\n  }\n\n  static getSVGElement(shape: TIIShape): SVGGraphicsElement\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": shape.id,\n      \"type\": shape.type,\n      \"kind\": shape.kind,\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n    }\n    if (shape.selected) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.selectionFilterId })`\n    }\n    if (shape.deleting) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.removalFilterId })`\n    }\n\n    const group = SVGBuilder.createGroup(attrs)\n\n    const pathAttrs: { [key: string]: string } = {\n      \"fill\": shape.style.fill || \"transparent\",\n      \"stroke\": shape.style.color || DefaultStyle.color!,\n      \"stroke-width\": (shape.style.width || DefaultStyle.width).toString(),\n      \"d\": SVGRendererShapeUtil.getSVGPath(shape),\n    }\n    if (shape.style.opacity) {\n      pathAttrs[\"opacity\"] = shape.style.opacity.toString()\n    }\n    if (shape.kind === ShapeKind.Ellipse) {\n      pathAttrs.transform = `rotate(${ convertRadianToDegree(shape.orientation) }, ${shape.center.x}, ${shape.center.y})`\n    }\n\n    group.appendChild(SVGBuilder.createPath(pathAttrs))\n\n    return group\n  }\n}","import { DecoratorKind, IIStroke, TPointer } from \"../../symbol\"\nimport { DefaultStyle } from \"../../style\"\nimport { computeAngleAxeRadian, computeLinksPointers, computeMiddlePointer } from \"../../utils\"\nimport { SVGRendererDecoratorUtil } from \"./SVGRendererDecoratorUtil\"\nimport { SVGRendererConst } from \"./SVGRendererConst\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class SVGRendererStrokeUtil\n{\n\n  protected static getArcPath(center: TPointer, radius: number): string\n  {\n    const svgPath = [\n      `M ${ center.x } ${ center.y }`,\n      `m ${ -radius } 0`,\n      `a ${ radius } ${ radius } 0 1 0 ${ radius * 2 } 0`,\n      `a ${ radius } ${ radius } 0 1 0 ${ -(radius * 2) } 0`\n    ].join(\" \")\n    return svgPath\n  }\n\n  protected static getLinePath(begin: TPointer, end: TPointer, width: number): string\n  {\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, end), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(begin, end), width)\n    const svgPath = [\n      `M ${ linkPoints1[0].x } ${ linkPoints1[0].y }`,\n      `L ${ linkPoints2[0].x } ${ linkPoints2[0].y }`,\n      `L ${ linkPoints2[1].x } ${ linkPoints2[1].y }`,\n      `L ${ linkPoints1[1].x } ${ linkPoints1[1].y }`\n    ].join(\" \")\n    return svgPath\n  }\n\n  protected static getFinalPath(begin: TPointer, end: TPointer, width: number): string\n  {\n    const ARCSPLIT = 6\n    const angle = computeAngleAxeRadian(begin, end)\n    const linkPoints = computeLinksPointers(end, angle, width)\n    const parts = [`M ${ linkPoints[0].x } ${ linkPoints[0].y }`]\n    for (let i = 1; i <= ARCSPLIT; i++) {\n      const newAngle = angle - (i * (Math.PI / ARCSPLIT))\n      const x = +(end.x - (end.p * width * Math.sin(newAngle))).toFixed(3)\n      const y = +(end.y + (end.p * width * Math.cos(newAngle))).toFixed(3)\n      parts.push(`L ${ x } ${ y }`)\n    }\n    const svgPath = parts.join(\" \")\n    return svgPath\n  }\n\n  protected static getQuadraticPath(begin: TPointer, end: TPointer, central: TPointer, width: number): string\n  {\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, central), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(central, end), width)\n    const linkPoints3 = computeLinksPointers(central, computeAngleAxeRadian(begin, end), width)\n    const svgPath = [\n      `M ${ linkPoints1[0].x } ${ linkPoints1[0].y }`,\n      `Q ${ linkPoints3[0].x } ${ linkPoints3[0].y } ${ linkPoints2[0].x } ${ linkPoints2[0].y }`,\n      `L ${ linkPoints2[1].x } ${ linkPoints2[1].y }`,\n      `Q ${ linkPoints3[1].x } ${ linkPoints3[1].y } ${ linkPoints1[1].x } ${ linkPoints1[1].y }`\n    ].join(\" \")\n    return svgPath\n  }\n\n  static getSVGPath(stroke: IIStroke): string\n  {\n    const STROKE_LENGTH = stroke.pointers.length\n    if (!STROKE_LENGTH) return \"\"\n    const STROKE_WIDTH = (stroke.style.width as number)\n    const NB_QUADRATICS = STROKE_LENGTH - 2\n    const firstPoint = stroke.pointers[0]\n\n    const parts = []\n    if (STROKE_LENGTH < 3) {\n      parts.push(this.getArcPath(firstPoint, STROKE_WIDTH * 0.6))\n    } else {\n      parts.push(this.getArcPath(firstPoint, STROKE_WIDTH * firstPoint.p))\n      parts.push(this.getLinePath(firstPoint, computeMiddlePointer(firstPoint, stroke.pointers[1]), STROKE_WIDTH))\n\n      for (let i = 0; i < NB_QUADRATICS; i++) {\n        const begin = computeMiddlePointer(stroke.pointers[i], stroke.pointers[i + 1])\n        const end = computeMiddlePointer(stroke.pointers[i + 1], stroke.pointers[i + 2])\n        const central = stroke.pointers[i + 1]\n        parts.push(this.getQuadraticPath(begin, end, central, STROKE_WIDTH)\n        )\n      }\n      const beforeLastPoint = stroke.pointers[STROKE_LENGTH - 2]\n      const lastPoint = stroke.pointers[STROKE_LENGTH - 1]\n      parts.push(this.getLinePath(computeMiddlePointer(beforeLastPoint, lastPoint), lastPoint, STROKE_WIDTH))\n      parts.push(this.getFinalPath(beforeLastPoint, lastPoint, STROKE_WIDTH))\n    }\n    return parts.join(\" \")\n  }\n\n  static getSVGElement(stroke: IIStroke): SVGGraphicsElement\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": stroke.id,\n      \"type\": \"stroke\",\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n    }\n    if (stroke.selected) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.selectionFilterId })`\n    }\n    if (stroke.deleting) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.removalFilterId })`\n    }\n\n    const strokeGroup = SVGBuilder.createGroup(attrs)\n\n    const strokeAttrs: { [key: string]: string } = {\n      \"fill\": stroke.style.color || DefaultStyle.color!,\n      \"stroke-width\": stroke.style.width.toString(),\n      \"d\": SVGRendererStrokeUtil.getSVGPath(stroke)\n    }\n    if (stroke.style.opacity) {\n      strokeAttrs.opacity = stroke.style.opacity.toString()\n    }\n    strokeGroup.append(SVGBuilder.createPath(strokeAttrs))\n\n    stroke.decorators.forEach(d =>\n    {\n      const deco = SVGRendererDecoratorUtil.getSVGElement(d, stroke)\n      if (deco) {\n        if (d.kind === DecoratorKind.Highlight) {\n          strokeGroup.prepend(deco)\n        }\n        else {\n          strokeGroup.append(deco)\n        }\n      }\n    })\n\n    return strokeGroup\n  }\n\n}","import { DecoratorKind, IIText } from \"../../symbol\"\nimport { SVGRendererDecoratorUtil } from \"./SVGRendererDecoratorUtil\"\nimport { SVGRendererConst } from \"./SVGRendererConst\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class SVGRendererTextUtil\n{\n  static getSVGElement(text: IIText): SVGGraphicsElement\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": text.id,\n      \"type\": text.type,\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      \"style\": SVGRendererConst.noSelection,\n    }\n    if (text.style.opacity) {\n      attrs.opacity = text.style.opacity.toString()\n    }\n    if (text.rotation) {\n      attrs.transform = `rotate(${ text.rotation.degree }, ${ text.rotation.center.x }, ${ text.rotation.center.y })`\n    }\n    if (text.selected) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.selectionFilterId })`\n    }\n    if (text.deleting) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.removalFilterId })`\n    }\n\n    const textGroup = SVGBuilder.createGroup(attrs)\n\n    const textElement = SVGBuilder.createText(text.point, \"\")\n\n    text.chars.forEach(c =>\n    {\n      const attrs: { [key: string]: string } = {\n        id: c.id,\n        fill: c.color,\n        \"font-size\": `${ c.fontSize }px`,\n        \"font-weight\": c.fontWeight.toString(),\n      }\n      textElement.appendChild(SVGBuilder.createTSpan(c.label, attrs))\n    })\n    textGroup.append(textElement)\n\n    text.decorators.forEach(d =>\n    {\n      const deco = SVGRendererDecoratorUtil.getSVGElement(d, text)\n      if (deco) {\n        if (d.kind === DecoratorKind.Highlight) {\n          textGroup.prepend(deco)\n        }\n        else {\n          textGroup.append(deco)\n        }\n      }\n    })\n\n    return textGroup\n  }\n}","import { DecoratorKind, RecognizedKind, TIIRecognized } from \"../../symbol\"\nimport { DefaultStyle } from \"../../style\"\nimport { SVGRendererDecoratorUtil } from \"./SVGRendererDecoratorUtil\"\nimport { SVGRendererStrokeUtil } from \"./SVGRendererStrokeUtil\"\nimport { SVGRendererConst } from \"./SVGRendererConst\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class SVGRendererRecognizedUtil\n{\n  static getSVGElement(recognizedSymbol: TIIRecognized): SVGGraphicsElement\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": recognizedSymbol.id,\n      \"type\": recognizedSymbol.type,\n      \"kind\": recognizedSymbol.kind,\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      \"fill\": recognizedSymbol.style.color || DefaultStyle.color,\n      \"stroke-width\": (recognizedSymbol.style.width || DefaultStyle.width).toString(),\n    }\n    if (recognizedSymbol.style.opacity) {\n      attrs[\"opacity\"] = recognizedSymbol.style.opacity.toString()\n    }\n    if (recognizedSymbol.selected) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.selectionFilterId })`\n    }\n    if (recognizedSymbol.deleting) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.removalFilterId })`\n    }\n\n    const groupEl = SVGBuilder.createGroup(attrs)\n\n    recognizedSymbol.strokes.forEach(s =>\n    {\n      groupEl.append(SVGRendererStrokeUtil.getSVGElement(s))\n    })\n\n    if (recognizedSymbol.kind === RecognizedKind.Text) {\n      recognizedSymbol.decorators.forEach(d =>\n      {\n        const deco = SVGRendererDecoratorUtil.getSVGElement(d, recognizedSymbol)\n        if (deco) {\n          if (d.kind === DecoratorKind.Highlight) {\n            groupEl.prepend(deco)\n          }\n          else {\n            groupEl.append(deco)\n          }\n        }\n      })\n    }\n\n    return groupEl\n  }\n\n}","import { DecoratorKind, IIEraser, IISymbolGroup, SymbolType, TIISymbol } from \"../../symbol\"\nimport { DefaultStyle } from \"../../style\"\nimport { SVGRendererDecoratorUtil } from \"./SVGRendererDecoratorUtil\"\nimport { SVGRendererEdgeUtil } from \"./SVGRendererEdgeUtil\"\nimport { SVGRendererShapeUtil } from \"./SVGRendererShapeUtil\"\nimport { SVGRendererStrokeUtil } from \"./SVGRendererStrokeUtil\"\nimport { SVGRendererConst } from \"./SVGRendererConst\"\nimport { SVGBuilder } from \"./SVGBuilder\"\nimport { SVGRendererTextUtil } from \"./SVGRendererTextUtil\"\nimport { SVGRendererRecognizedUtil } from \"./SVGRendererRecognizedUtil\"\n\n/**\n * @group Renderer\n */\nexport class SVGRendererGroupUtil\n{\n\n  static getChildElement(symbol: TIISymbol | IIEraser): SVGGraphicsElement | undefined\n  {\n    let element: SVGGraphicsElement | undefined\n    switch (symbol.type) {\n      case SymbolType.Stroke:\n        element = SVGRendererStrokeUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Shape:\n        element = SVGRendererShapeUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Edge:\n        element = SVGRendererEdgeUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Text:\n        element = SVGRendererTextUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Group:\n        element = SVGRendererGroupUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Recognized:\n        element = SVGRendererRecognizedUtil.getSVGElement(symbol)\n        break\n    }\n    return element\n  }\n\n  static getSVGElement(symbolGroup: IISymbolGroup): SVGGraphicsElement\n  {\n    const attrs: { [key: string]: string } = {\n      \"id\": symbolGroup.id,\n      \"type\": \"group\",\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      \"fill\": symbolGroup.style.color || DefaultStyle.color!,\n      \"stroke-width\": (symbolGroup.style.width || DefaultStyle.width).toString(),\n    }\n    if (symbolGroup.style.opacity) {\n      attrs[\"opacity\"] = symbolGroup.style.opacity.toString()\n    }\n    if (symbolGroup.selected) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.selectionFilterId })`\n    }\n    if (symbolGroup.deleting) {\n      attrs[\"filter\"] = `url(#${ SVGRendererConst.removalFilterId })`\n    }\n\n    const groupEl = SVGBuilder.createGroup(attrs)\n\n    symbolGroup.children.forEach(sym =>\n    {\n      groupEl.append(SVGRendererGroupUtil.getChildElement(sym)!)\n    })\n\n    symbolGroup.decorators.forEach(d =>\n    {\n      const deco = SVGRendererDecoratorUtil.getSVGElement(d, symbolGroup)\n      if (deco) {\n        if (d.kind === DecoratorKind.Highlight) {\n          groupEl.prepend(deco)\n        }\n        else {\n          groupEl.append(deco)\n        }\n      }\n    })\n\n    return groupEl\n  }\n\n}","import { SvgElementRole } from \"../../Constants\"\nimport { getClosestPoints } from \"../../utils\"\nimport { LoggerCategory, LoggerManager } from \"../../logger\"\nimport { TIISymbol, TPoint, TBox, Box, IIEraser, SymbolType } from \"../../symbol\"\nimport { TIIRendererConfiguration } from \"../RendererConfiguration\"\nimport { SVGRendererConst } from \"./SVGRendererConst\"\nimport { SVGRendererEdgeUtil } from \"./SVGRendererEdgeUtil\"\nimport { SVGRendererEraserUtil } from \"./SVGRendererEraserUtil\"\nimport { SVGRendererGroupUtil } from \"./SVGRendererGroupUtil\"\nimport { SVGRendererShapeUtil } from \"./SVGRendererShapeUtil\"\nimport { SVGRendererStrokeUtil } from \"./SVGRendererStrokeUtil\"\nimport { SVGRendererTextUtil } from \"./SVGRendererTextUtil\"\nimport { SVGRendererRecognizedUtil } from \"./SVGRendererRecognizedUtil\"\nimport { SVGBuilder } from \"./SVGBuilder\"\n\n/**\n * @group Renderer\n */\nexport class SVGRenderer {\n  #logger = LoggerManager.getLogger(LoggerCategory.RENDERER)\n  groupGuidesId = \"guides-wrapper\"\n\n  configuration: TIIRendererConfiguration\n  parent!: HTMLElement\n  layer!: SVGSVGElement\n  definitionGroup!: SVGGElement\n\n  verticalGuides: number[] = []\n  horizontalGuides: number[] = []\n\n  constructor(configuration: TIIRendererConfiguration) {\n    this.#logger.info(\"constructor\", { configuration })\n    this.configuration = configuration\n  }\n\n  protected initLayer(): void {\n    const width = Math.max(this.configuration.minWidth, this.parent.clientWidth)\n    const height = Math.max(this.configuration.minHeight, this.parent.clientHeight)\n    this.layer = SVGBuilder.createLayer({ x: 0, y: 0, width, height })\n    this.layer.style.setProperty(\"height\", \"auto\")\n    this.layer.style.setProperty(\"width\", \"auto\")\n    this.layer.appendChild(this.createSVGTools())\n    this.parent.style.setProperty(\"overflow\", \"auto\")\n    this.parent.appendChild(this.layer)\n  }\n\n  protected createDefs(): SVGDefsElement {\n    const defs = SVGBuilder.createDefs()\n\n    const SIZE = 5\n    const REFX = SIZE - 1, REFY = SIZE / 2\n    const arrowHeadMarkerAttrs = {\n      style: SVGRendererConst.noSelection,\n      fill: \"context-stroke\",\n      markerWidth: SIZE.toString(),\n      markerHeight: SIZE.toString(),\n      refX: REFX.toString(),\n      refY: REFY.toString(),\n    }\n\n    const arrowHeadStart = SVGBuilder.createMarker(SVGRendererConst.arrowHeadStartMarker, { ...arrowHeadMarkerAttrs, orient: \"auto-start-reverse\" })\n    arrowHeadStart.appendChild(SVGBuilder.createPolygon([0, 0, SIZE, REFY, 0, SIZE], arrowHeadMarkerAttrs))\n    defs.appendChild(arrowHeadStart)\n\n    const arrowHeadEnd = SVGBuilder.createMarker(SVGRendererConst.arrowHeadEndMaker, { ...arrowHeadMarkerAttrs, orient: \"auto\" })\n    arrowHeadEnd.appendChild(SVGBuilder.createPolygon([0, 0, SIZE, REFY, 0, SIZE], arrowHeadMarkerAttrs))\n    defs.appendChild(arrowHeadEnd)\n\n    const crossMarkerAttrs = {\n      style: SVGRendererConst.noSelection,\n      markerWidth: \"5\",\n      markerHeight: \"5\",\n      refX: \"0\",\n      refY: \"0\",\n      viewBox: \"-5 -5 10 10\"\n    }\n    const cross = SVGBuilder.createMarker(SVGRendererConst.crossMarker, crossMarkerAttrs)\n    cross.appendChild(SVGBuilder.createPath({ d: \"M -4,-4 L 4,4 M -4,4 L 4,-4\", stroke: \"white\", \"stroke-width\": \"3\" }))\n    cross.appendChild(SVGBuilder.createPath({ d: \"M -4,-4 L 4,4 M -4,4 L 4,-4\", stroke: \"context-stroke\", \"stroke-width\": \"2\" }))\n    defs.appendChild(cross)\n\n    return defs\n  }\n\n  protected createFilters(): SVGGElement {\n    const filtersGroup = SVGBuilder.createGroup({ id: \"definition-group\" })\n    const removalFilter = SVGBuilder.createFilter(SVGRendererConst.removalFilterId, { filterUnits: \"userSpaceOnUse\" })\n    const bfeComponentTransfer = SVGBuilder.createComponentTransfert()\n    const bfeFuncA = SVGBuilder.createTransfertFunctionTable(\"feFuncA\", \"0 0.25\")\n    bfeComponentTransfer.appendChild(bfeFuncA)\n    removalFilter.appendChild(bfeComponentTransfer)\n    filtersGroup.appendChild(removalFilter)\n\n    const selectionFilter = SVGBuilder.createFilter(SVGRendererConst.selectionFilterId, { filterUnits: \"userSpaceOnUse\" })\n    selectionFilter.appendChild(SVGBuilder.createDropShadow({ dx: -1, dy: -1, deviation: 1 }))\n    filtersGroup.appendChild(selectionFilter)\n\n    return filtersGroup\n  }\n\n  protected drawGuides(): void {\n    this.verticalGuides = []\n    this.horizontalGuides = []\n    const height = Number(this.layer.getAttribute(\"height\")?.replace(\"px\", \"\"))\n    const width = Number(this.layer.getAttribute(\"width\")?.replace(\"px\", \"\"))\n    const offSet = this.configuration.guides.gap\n    const subOffSet = this.configuration.guides.gap / 5\n    const attrs = {\n      id: this.groupGuidesId,\n      stroke: \"grey\",\n      opacity: \"0.5\",\n      style: SVGRendererConst.noSelection,\n      role: SvgElementRole.Guide\n    }\n    const guidesGroup = SVGBuilder.createGroup(attrs)\n    switch (this.configuration.guides.type) {\n      case \"line\":\n        for (let y = offSet; y < height; y += offSet) {\n          const begin: TPoint = { x: offSet, y }\n          const end: TPoint = { x: width - offSet, y }\n          this.horizontalGuides.push(y)\n          const svgLine = SVGBuilder.createLine(begin, end, { \"stroke-width\": \"1\", style: SVGRendererConst.noSelection })\n          guidesGroup.appendChild(svgLine)\n        }\n        break\n      case \"grid\":\n        for (let y = 0; y < height; y += offSet) {\n          const begin: TPoint = { x: 0, y }\n          const end: TPoint = { x: width, y }\n          const svgLine = SVGBuilder.createLine(begin, end, { \"stroke-width\": \"1\", style: SVGRendererConst.noSelection })\n          guidesGroup.appendChild(svgLine)\n          this.horizontalGuides.push(y)\n          for (let subY = y + subOffSet; subY < y + offSet; subY += subOffSet) {\n            this.horizontalGuides.push(subY)\n            const svgLine = SVGBuilder.createLine({ x: 0, y: subY }, { x: width, y: subY }, { \"stroke-width\": \"0.25\", style: SVGRendererConst.noSelection })\n            guidesGroup.appendChild(svgLine)\n          }\n        }\n        for (let x = 0; x < width; x += offSet) {\n          const begin: TPoint = { x, y: 0 }\n          const end: TPoint = { x, y: height }\n          const svgLine = SVGBuilder.createLine(begin, end, { \"stroke-width\": \"1\", style: SVGRendererConst.noSelection })\n          guidesGroup.appendChild(svgLine)\n          this.verticalGuides.push(x)\n          for (let subX = x + subOffSet; subX < x + offSet; subX += subOffSet) {\n            this.verticalGuides.push(subX)\n            const svgLine = SVGBuilder.createLine({ x: subX, y: 0 }, { x: subX, y: height }, { \"stroke-width\": \"0.25\", style: SVGRendererConst.noSelection })\n            guidesGroup.appendChild(svgLine)\n          }\n        }\n        break\n      case \"point\":\n        for (let x = offSet; x < width; x += offSet) {\n          this.verticalGuides.push(x)\n          for (let y = offSet; y < height; y += offSet) {\n            this.horizontalGuides.push(y)\n            const svgPoint = SVGBuilder.createCircle({ x, y }, 1)\n            guidesGroup.appendChild(svgPoint)\n          }\n        }\n        break\n      default:\n        this.#logger.error(\"drawGuides\", `Guide type unknown: ${this.configuration.guides.type}`)\n        break\n    }\n    this.horizontalGuides = [...new Set(this.horizontalGuides)]\n    this.verticalGuides = [...new Set(this.verticalGuides)]\n    this.definitionGroup.appendChild(guidesGroup)\n  }\n\n  protected removeGuides(): void {\n    this.verticalGuides = []\n    this.horizontalGuides = []\n    this.layer.querySelector(`#${this.groupGuidesId}`)?.remove()\n  }\n\n  protected createSVGTools(): SVGGElement {\n    this.definitionGroup = SVGBuilder.createGroup({ id: \"definition-group\" })\n    this.definitionGroup.appendChild(this.createDefs())\n    this.definitionGroup.appendChild(this.createFilters())\n    if (this.configuration.guides.enable) {\n      this.drawGuides()\n    }\n    return this.definitionGroup\n  }\n\n  init(element: HTMLElement): void {\n    this.#logger.info(\"init\", { element })\n    this.parent = element\n    this.parent.oncontextmenu = () => false\n    this.initLayer()\n  }\n\n  getAttribute(id: string, name: string): string | undefined | null {\n    const element = this.layer.querySelector(`#${id}`) as HTMLElement | null\n    return element?.getAttribute(name)\n  }\n\n  setAttribute(id: string, name: string, value: string): void {\n    const element = this.layer.querySelector(`#${id}`) as HTMLElement | null\n    element?.setAttribute(name, value)\n  }\n\n  buildElementFromSymbol(symbol: TIISymbol | IIEraser): SVGGraphicsElement | undefined {\n    let element: SVGGraphicsElement | undefined\n    switch (symbol.type) {\n      case SymbolType.Stroke:\n        element = SVGRendererStrokeUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Eraser:\n        element = SVGRendererEraserUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Shape:\n        element = SVGRendererShapeUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Edge:\n        element = SVGRendererEdgeUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Text:\n        element = SVGRendererTextUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Group:\n        element = SVGRendererGroupUtil.getSVGElement(symbol)\n        break\n      case SymbolType.Recognized:\n        element = SVGRendererRecognizedUtil.getSVGElement(symbol)\n        break\n      default:\n        this.#logger.error(\"buildElementFromSymbol\", `symbol unknow: \"${JSON.stringify(symbol)}\"`)\n    }\n    return element\n  }\n\n  prependElement(el: Element): void {\n    this.layer.prepend(el)\n  }\n\n  changeOrderSymbol(symbolToMove: TIISymbol, position: \"first\" | \"last\" | \"forward\" | \"backward\"): void {\n    const moveEl = this.layer.querySelector(`#${symbolToMove.id}`)\n    if (!moveEl) return\n    switch (position) {\n      case \"first\":\n        this.definitionGroup.insertAdjacentElement(\"afterend\", moveEl)\n        break\n      case \"last\":\n        this.layer.insertAdjacentElement(\"beforeend\", moveEl)\n        break\n      case \"forward\":\n        moveEl.nextElementSibling?.insertAdjacentElement(\"afterend\", moveEl)\n        break\n      case \"backward\":\n        if (moveEl.previousElementSibling !== this.definitionGroup) {\n          moveEl.previousElementSibling?.insertAdjacentElement(\"beforebegin\", moveEl)\n        }\n        break\n    }\n  }\n\n  appendElement(el: Element): void {\n    this.layer.appendChild(el)\n  }\n\n  removeElement(id: string): void {\n    this.#logger.debug(\"Element\", { id })\n    const oldStroke = this.layer.querySelector(`#${id}`)\n    if (oldStroke) {\n      oldStroke.remove()\n    }\n  }\n\n  drawSymbol(symbol: TIISymbol | IIEraser): SVGGraphicsElement | undefined {\n    this.#logger.debug(\"drawSymbol\", { symbol })\n    const oldNode = this.layer.querySelector(`#${symbol?.id}`)\n    const svgEl = this.buildElementFromSymbol(symbol)\n\n    if (svgEl) {\n      if (oldNode) {\n        oldNode.replaceWith(svgEl)\n      }\n      else {\n        this.layer.appendChild(svgEl)\n      }\n    }\n    return svgEl\n  }\n\n  replaceSymbol(id: string, symbols: TIISymbol[]): SVGGraphicsElement[] | undefined {\n    this.#logger.debug(\"drawSymbol\", { symbols })\n    const oldNode = this.layer.querySelector(`#${id}`)\n    const elements = symbols.map(s => this.buildElementFromSymbol(s)).filter(x => !!x) as SVGGraphicsElement[]\n\n    if (elements.length) {\n      if (oldNode) {\n        elements.forEach(e => oldNode.insertAdjacentElement(\"beforebegin\", e))\n        oldNode.remove()\n      }\n      else {\n        elements.forEach(e => this.layer.appendChild(e))\n      }\n    }\n    return elements\n  }\n\n  removeSymbol(id: string): void {\n    this.#logger.debug(\"removeSymbol\", { id })\n    this.removeElement(id)\n  }\n\n  drawCircle(point: TPoint, radius: number, attrs: { [key: string]: string } = {}): void {\n    this.#logger.info(\"drawCircle\", { point, radius, attrs })\n    this.layer.appendChild(SVGBuilder.createCircle(point, radius, attrs))\n  }\n\n  drawRect(box: TBox, attrs: { [key: string]: string } = {}): void {\n    this.#logger.info(\"drawRect\", { box, attrs })\n    this.layer.appendChild(SVGBuilder.createRect(box, attrs))\n  }\n\n  drawLine(p1: TPoint, p2: TPoint, attrs: { [key: string]: string } = {}): void {\n    this.#logger.info(\"drawLine\", { p1, p2, attrs })\n    this.layer.appendChild(SVGBuilder.createLine(p1, p2, attrs))\n  }\n\n  drawConnectionBetweenBox(id: string, box1: TBox, box2: TBox, position: \"corners\" | \"sides\", attrs?: { [key: string]: string }): void {\n    let points1: TPoint[] = new Box(box1).corners\n    let points2: TPoint[] = new Box(box2).corners\n    if (position === \"sides\") {\n      points1 = new Box(box1).side\n      points2 = new Box(box2).side\n    }\n    const { p1, p2 } = getClosestPoints(points1, points2)\n    const attrsLine = {\n      id,\n      fill: \"transparent\",\n      style: SVGRendererConst.noSelection,\n      ...attrs\n    }\n    this.drawLine(p1, p2, attrsLine)\n  }\n\n  resize(height: number, width: number): void {\n    this.#logger.info(\"resize\", { height, width })\n    this.layer.setAttribute(\"width\", `${width}px`)\n    this.layer.setAttribute(\"height\", `${height}px`)\n    this.layer.setAttribute(\"viewBox\", `0, 0, ${width}, ${height}`)\n    this.removeGuides()\n    if (this.configuration.guides.enable) {\n      this.drawGuides()\n    }\n  }\n\n  getElementById(id: string): SVGGraphicsElement | null {\n    return this.layer.querySelector(`#${id}`) as SVGGraphicsElement | null\n  }\n\n  getElements({ tagName, attrs }: { tagName?: string, attrs?: { [key: string]: string } }): NodeListOf<Element> {\n    this.#logger.info(\"getElements\", { tagName, attrs })\n    let query = tagName || \"*\"\n    if (attrs) {\n      Object.keys(attrs).forEach(k => {\n        query += `[${k}=${attrs[k]}]`\n      })\n    }\n    return this.layer.querySelectorAll(query)\n  }\n\n  clearElements({ tagName, attrs }: { tagName?: string, attrs?: { [key: string]: string } }): void {\n    this.#logger.info(\"clearElements\", { tagName, attrs })\n    this.getElements({ tagName, attrs })\n      .forEach(e => e.remove())\n  }\n\n  clear(): void {\n    this.#logger.info(\"clear\")\n    if (this.layer) {\n      while (this.layer.firstChild) {\n        this.layer.firstChild.remove()\n      }\n      this.layer.appendChild(this.createSVGTools())\n    }\n  }\n\n  destroy(): void {\n    if (this.layer) {\n      this.layer.remove()\n    }\n  }\n}","import { TPointer, TStroke } from \"../../symbol\"\nimport { computeAngleAxeRadian, computeLinksPointers, computeMiddlePointer } from \"../../utils\"\n\n/**\n * @group Renderer\n */\nexport class SVGStroker\n{\n\n  protected getArcPath(center: TPointer, radius: number): string\n  {\n    const svgPath = [\n      `M ${ center.x },${ center.y }`,\n      `m ${ -radius },0`,\n      `a ${ radius },${ radius } 0 1 0 ${ radius * 2 },0`,\n      `a ${ radius },${ radius } 0 1 0 ${ -(radius * 2) },0`\n    ].join(\" \")\n    return svgPath\n  }\n\n  protected getLinePath(begin: TPointer, end: TPointer, width: number): string\n  {\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, end), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(begin, end), width)\n    const svgPath = [\n      `M ${ linkPoints1[0].x },${ linkPoints1[0].y }`,\n      `L ${ linkPoints2[0].x },${ linkPoints2[0].y }`,\n      `L ${ linkPoints2[1].x },${ linkPoints2[1].y }`,\n      `L ${ linkPoints1[1].x },${ linkPoints1[1].y }`\n    ].join(\" \")\n    return svgPath\n  }\n\n  protected getFinalPath(begin: TPointer, end: TPointer, width: number): string\n  {\n    const ARCSPLIT = 6\n    const angle = computeAngleAxeRadian(begin, end)\n    const linkPoints = computeLinksPointers(end, angle, width)\n    const parts = [`M ${ linkPoints[0].x },${ linkPoints[0].y }`]\n    for (let i = 1; i <= ARCSPLIT; i++) {\n      const newAngle = angle - (i * (Math.PI / ARCSPLIT))\n      parts.push(`L ${ end.x - (end.p * width * Math.sin(newAngle)) },${ end.y + (end.p * width * Math.cos(newAngle)) }`)\n    }\n    const svgPath = parts.join(\" \")\n    return svgPath\n  }\n\n  protected getQuadraticPath(begin: TPointer, end: TPointer, central: TPointer, width: number): string\n  {\n    const linkPoints1 = computeLinksPointers(begin, computeAngleAxeRadian(begin, central), width)\n    const linkPoints2 = computeLinksPointers(end, computeAngleAxeRadian(central, end), width)\n    const linkPoints3 = computeLinksPointers(central, computeAngleAxeRadian(begin, end), width)\n    const svgPath = [\n      `M ${ linkPoints1[0].x },${ linkPoints1[0].y }`,\n      `Q ${ linkPoints3[0].x },${ linkPoints3[0].y } ${ linkPoints2[0].x },${ linkPoints2[0].y }`,\n      `L ${ linkPoints2[1].x },${ linkPoints2[1].y }`,\n      `Q ${ linkPoints3[1].x },${ linkPoints3[1].y } ${ linkPoints1[1].x },${ linkPoints1[1].y }`\n    ].join(\" \")\n    return svgPath\n  }\n\n  protected buildSVGPath(stroke: TStroke): string\n  {\n    const STROKE_LENGTH = stroke.pointers.length\n    const STROKE_WIDTH = (stroke.style.width as number)\n    const NB_QUADRATICS = STROKE_LENGTH - 2\n    const firstPoint = stroke.pointers[0]\n\n    const parts = []\n    if (STROKE_LENGTH < 3) {\n      parts.push(this.getArcPath(firstPoint, STROKE_WIDTH * 0.6))\n    } else {\n      parts.push(this.getArcPath(firstPoint, STROKE_WIDTH * firstPoint.p))\n      parts.push(this.getLinePath(firstPoint, computeMiddlePointer(firstPoint, stroke.pointers[1]), STROKE_WIDTH))\n\n      for (let i = 0; i < NB_QUADRATICS; i++) {\n        const begin = computeMiddlePointer(stroke.pointers[i], stroke.pointers[i + 1])\n        const end = computeMiddlePointer(stroke.pointers[i + 1], stroke.pointers[i + 2])\n        const central = stroke.pointers[i + 1]\n        parts.push(this.getQuadraticPath(begin, end, central, STROKE_WIDTH)\n        )\n      }\n      const beforeLastPoint = stroke.pointers[STROKE_LENGTH - 2]\n      const lastPoint = stroke.pointers[STROKE_LENGTH - 1]\n      parts.push(this.getLinePath(computeMiddlePointer(beforeLastPoint, lastPoint), lastPoint, STROKE_WIDTH))\n      parts.push(this.getFinalPath(beforeLastPoint, lastPoint, STROKE_WIDTH))\n    }\n    return parts.join(\" \")\n  }\n\n  drawStroke(svgElement: SVGElement, stroke: TStroke, attrs?: { name: string, value: string }[]): void\n  {\n    const svgPathElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\")\n    svgPathElement.classList.add(\"pending-stroke\")\n    svgPathElement.setAttribute(\"id\", stroke.id)\n    svgPathElement.setAttribute(\"type\", stroke.pointerType)\n    attrs?.forEach(a =>\n    {\n      svgPathElement.setAttribute(a.name, a.value)\n    })\n    const svgPath = this.buildSVGPath(stroke)\n    svgPathElement.setAttribute(\"d\", `${ svgPath }Z`)\n    svgElement.appendChild(svgPathElement)\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../../logger\"\nimport { Model } from \"../../model\"\nimport { TStroke } from \"../../symbol\"\nimport { TRendererConfiguration } from \"../RendererConfiguration\"\nimport { TUpdatePatch, TUpdatePatchAppendChild, TUpdatePatchInsertBefore, TUpdatePatchRemoveAttribut, TUpdatePatchRemoveChild, TUpdatePatchRemoveElement, TUpdatePatchReplaceAll, TUpdatePatchReplaceELement, TUpdatePatchSetAttribut } from \"../../recognizer\"\nimport { SVGStroker } from \"./SVGStroker\"\n\n/**\n * @group Renderer\n */\nexport class InteractiveInkSSRSVGRenderer\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.RENDERER)\n\n  config: TRendererConfiguration\n  stroker: SVGStroker\n  context!: {\n    parent: HTMLElement\n  }\n\n  constructor(config: TRendererConfiguration)\n  {\n    this.#logger.info(\"constructor\", { config })\n    this.config = config\n    this.stroker = new SVGStroker()\n  }\n\n  init(element: HTMLElement): void\n  {\n    this.#logger.info(\"init\", { element })\n    element.style.fontSize = \"10px\"\n    this.context = {\n      parent: element\n    }\n  }\n\n  protected drawStroke(svgElement: SVGElement, stroke: TStroke)\n  {\n    let style: string\n    if (stroke.pointerType === \"eraser\") {\n      stroke.style.width = 12\n      style = \"fill:grey;stroke:transparent;shadowBlur:5;opacity:0.2;\"\n    } else {\n      style = `fill:${ stroke.style.color };stroke:transparent;`\n    }\n    this.stroker.drawStroke(svgElement, stroke, [{ name: \"style\", value: style }])\n  }\n\n  protected replaceAll(layerName: string, update: TUpdatePatchReplaceAll): void\n  {\n    const oldLayer = this.context.parent.querySelector(`svg[data-layer=\"${ layerName }\"]`) as SVGElement | null\n    oldLayer?.remove()\n    this.context.parent.insertAdjacentHTML(\"beforeend\", update.svg)\n    const layer = this.context.parent.querySelector(`svg[data-layer=\"${ layerName }\"]`) as SVGElement\n    if (layerName === \"MODEL\") {\n      const pendingStrokesGroup = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\")\n      pendingStrokesGroup.id = \"pendingStrokes\"\n      layer.appendChild(pendingStrokesGroup)\n    }\n  }\n\n  protected replaceElement(update: TUpdatePatchReplaceELement): void\n  {\n    const elementToRemove = this.context.parent.querySelector(`#${ update.id }`) as HTMLElement | null\n    if (elementToRemove) {\n      const parent = elementToRemove.parentNode as HTMLElement | null | undefined\n      elementToRemove?.remove()\n      parent?.insertAdjacentHTML(\"beforeend\", update.svg)\n    }\n  }\n\n  protected appendChild(layerName: string, update: TUpdatePatchAppendChild): void\n  {\n    const parentSelector = update.parentId ? `#${ update.parentId }` : `svg[data-layer=\"${ layerName }\"]`\n    const parent = this.context.parent.querySelector(parentSelector) as HTMLElement\n    parent?.insertAdjacentHTML(\"beforeend\", update.svg)\n  }\n\n  protected removeChild(update: TUpdatePatchRemoveChild): void\n  {\n    this.context.parent.querySelector(`#${ update.parentId } > *:nth-child(${ update.index + 1 })`)?.remove()\n  }\n\n  protected removeElement(update: TUpdatePatchRemoveElement): void\n  {\n    const elementToRemove = this.context.parent.querySelector(`#${ update.id }`)\n    if (elementToRemove) {\n      if (update.id.includes(\"s\") || update.id.includes(\"MODEL\")) {\n        elementToRemove.remove()\n      } else {\n        elementToRemove.setAttribute(\"class\", \"removed-stroke\")\n        setTimeout(() =>\n        {\n          elementToRemove?.remove()\n        }, 100)\n      }\n    }\n  }\n\n  protected insertBefore(update: TUpdatePatchInsertBefore): void\n  {\n    const parent = this.context.parent.querySelector(`#${ update.refId }`) as HTMLElement | null\n    parent?.insertAdjacentHTML(\"beforebegin\", update.svg)\n  }\n\n  protected setAttribute(update: TUpdatePatchSetAttribut): void\n  {\n    const selector = update.id ? `#${ update.id }` : \"svg\"\n    const element = this.context.parent.querySelector(selector) as HTMLElement | null\n    element?.setAttribute(update.name, update.value)\n  }\n\n  protected removeAttribute(update: TUpdatePatchRemoveAttribut): void\n  {\n    const selector = update.id ? `#${ update.id }` : \"svg\"\n    const element = this.context.parent.querySelector(selector) as HTMLElement | null\n    element?.removeAttribute(update.name)\n  }\n\n  updateLayer(layerName: string, update: TUpdatePatch): void\n  {\n    this.#logger.info(\"updateLayer\", { layerName, update })\n    switch (update.type) {\n      case \"REPLACE_ALL\":\n        this.replaceAll(layerName, update as TUpdatePatchReplaceAll)\n        break\n      case \"REPLACE_ELEMENT\":\n        this.replaceElement(update as TUpdatePatchReplaceELement)\n        break\n      case \"APPEND_CHILD\":\n        this.appendChild(layerName, update as TUpdatePatchAppendChild)\n        break\n      case \"REMOVE_ELEMENT\":\n        this.removeElement(update as TUpdatePatchRemoveElement)\n        break\n      case \"REMOVE_CHILD\":\n        this.removeChild(update as TUpdatePatchRemoveChild)\n        break\n      case \"INSERT_BEFORE\":\n        this.insertBefore(update as TUpdatePatchInsertBefore)\n        break\n      case \"SET_ATTRIBUTE\":\n        this.setAttribute(update as TUpdatePatchSetAttribut)\n        break\n      case \"REMOVE_ATTRIBUTE\":\n        this.removeAttribute(update as TUpdatePatchRemoveAttribut)\n        break\n      default:\n        this.#logger.warn(\"updateLayer\", `update.type unknow ${update.type}`)\n        break\n    }\n  }\n\n  updatesLayer(layerName: string, updates: TUpdatePatch[]): void\n  {\n    this.#logger.info(\"updatesLayer\", { layerName, updates })\n    updates.forEach(u => this.updateLayer(layerName, u))\n    this.clearPendingStroke()\n  }\n\n  clearPendingStroke(): void\n  {\n    this.#logger.info(\"clearPendingStroke\")\n    const pendingStrokeGroup = this.context.parent.querySelector(\"#pendingStrokes\") as SVGElement\n    if (pendingStrokeGroup) {\n      pendingStrokeGroup.innerHTML = \"\"\n    }\n  }\n\n  drawPendingStroke(stroke: TStroke): void\n  {\n    this.#logger.info(\"drawPendingStroke\", { stroke })\n    if (stroke) {\n      const pendingStrokeGroup = this.context.parent.querySelector(\"#pendingStrokes\") as SVGElement\n      if (pendingStrokeGroup) {\n        const oldStroke = pendingStrokeGroup.querySelector(`#${ stroke?.id }`)\n        if (oldStroke) {\n          oldStroke.remove()\n        }\n        this.drawStroke(pendingStrokeGroup, stroke)\n      }\n    }\n  }\n\n  clearErasingStrokes(): void\n  {\n    const erasingStrokeList = this.context.parent.querySelectorAll(\"[type=eraser]\") as NodeListOf<SVGElement>\n    erasingStrokeList.forEach(erasingStroke => {\n      erasingStroke.remove()\n    })\n  }\n\n  resize(model: Model): void\n  {\n    this.#logger.info(\"resize\", { model })\n    const rect = this.context.parent.getBoundingClientRect()\n    const svgList = this.context.parent.querySelectorAll(\"svg\")\n    const width = Math.max(rect.width, model.width)\n    const height = Math.max(rect.height, model.height)\n    svgList.forEach(svg =>\n    {\n      svg.setAttribute(\"viewBox\", `0 0 ${ width }, ${ height }`)\n      svg.setAttribute(\"width\", `${ width }px`)\n      svg.setAttribute(\"height\", `${ height }px`)\n    })\n  }\n\n  destroy(): void\n  {\n    this.#logger.info(\"destroy\", { context: this.context })\n    if (this.context?.parent) {\n      this.context.parent.querySelectorAll(\"svg\").forEach(n => n.remove())\n    }\n  }\n}","\n/**\n * @group Renderer\n */\nexport type TGuidesConfiguration = {\n  enable: boolean,\n  gap: number\n}\n\n/**\n * @group Renderer\n * @source\n */\nexport const DefaultGuidesConfiguration: TGuidesConfiguration = {\n  enable: true,\n  gap: 50,\n}\n\n/**\n * @group Renderer\n */\nexport type TRendererConfiguration = {\n  minHeight: number\n  minWidth: number\n  guides: TGuidesConfiguration\n}\n\n/**\n * @group Renderer\n * @source\n */\nexport const DefaultRendererConfiguration: TRendererConfiguration = {\n  guides: DefaultGuidesConfiguration,\n  minHeight: 100,\n  minWidth: 100,\n}\n\n/**\n * @group Renderer\n */\nexport type TIIRendererConfiguration = TRendererConfiguration & {\n  guides: TGuidesConfiguration & {\n    type: \"line\" | \"grid\" | \"point\"\n  },\n}\n\n/**\n * @group Renderer\n * @source\n */\nexport const DefaultIIRendererConfiguration: TIIRendererConfiguration = {\n  guides: {\n    enable: true,\n    gap: 50,\n    type: \"point\"\n  },\n  minHeight: 100,\n  minWidth: 100,\n}\n","\n/**\n * @group Grabber\n */\nexport type TListenerConfiguration = {\n  capture: boolean\n  passive: boolean\n}\n\n/**\n * @group Grabber\n * @source\n */\nexport const DefaultListenerConfiguration: TListenerConfiguration = {\n  capture: false,\n  passive: true\n}\n\n/**\n * @group Grabber\n */\nexport type TGrabberConfiguration = {\n  listenerOptions: TListenerConfiguration\n  xyFloatPrecision: number\n  timestampFloatPrecision: number\n  delayLongTouch: number\n}\n\n/**\n * @group Grabber\n * @source\n */\nexport const DefaultGrabberConfiguration: TGrabberConfiguration = {\n  listenerOptions: DefaultListenerConfiguration,\n  xyFloatPrecision: 0,\n  timestampFloatPrecision: 0,\n  delayLongTouch: 500\n}\n","import { TGrabberConfiguration } from \"./GrabberConfiguration\"\nimport { LoggerCategory, LoggerLevel, LoggerManager } from \"../logger\"\nimport { TPointer } from \"../symbol\"\n\nexport type PointerInfo = {\n  clientX: number,\n  clientY: number,\n  isPrimary: boolean,\n  type: string,\n  pointerType: string,\n  target: HTMLElement,\n  pointer: TPointer,\n  button: number,\n  buttons: number\n}\n\n/**\n * @group Grabber\n */\nexport class PointerEventGrabber\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.GRABBER)\n\n  protected configuration: TGrabberConfiguration\n  protected layerCapture!: HTMLElement\n  protected capturing: boolean = false\n  protected pointerType?: string\n  protected prevent = (e: Event) => e.preventDefault()\n\n  onPointerDown?: (info: PointerInfo) => void\n  onPointerMove?: (info: PointerInfo) => void\n  onPointerUp?: (info: PointerInfo) => void\n  onContextMenu?: (info: PointerInfo) => void\n\n  constructor(configuration: TGrabberConfiguration)\n  {\n    this.#logger.info(\"constructor\", { configuration })\n    this.configuration = configuration\n  }\n\n  protected roundFloat(oneFloat: number, requestedFloatPrecision: number): number\n  {\n    if (requestedFloatPrecision >= 0) {\n      const floatPrecision: number = Math.pow(10, requestedFloatPrecision)\n      return Math.round(oneFloat / floatPrecision) * floatPrecision\n    }\n    this.#logger.debug(\"roundFloat\", { oneFloat, requestedFloatPrecision })\n    return oneFloat\n  }\n\n  protected extractPointer(event: MouseEvent | TouchEvent): TPointer\n  {\n    let clientX: number, clientY: number\n    if (\"changedTouches\" in event) {\n      ({ clientX, clientY } = event.changedTouches[0])\n    } else {\n      ({ clientX, clientY } = event)\n    }\n    const rect: DOMRect = this.layerCapture.getBoundingClientRect()\n    const pointer = {\n      x: this.roundFloat(clientX - rect.left - this.layerCapture.clientLeft + this.layerCapture.scrollLeft, this.configuration.xyFloatPrecision),\n      y: this.roundFloat(clientY - rect.top - this.layerCapture.clientTop + this.layerCapture.scrollTop, this.configuration.xyFloatPrecision),\n      t: this.roundFloat(Date.now(), this.configuration.timestampFloatPrecision),\n      p: (event as PointerEvent).pressure,\n    }\n    this.#logger.debug(\"extractPointer\", { event, pointer })\n    return pointer\n  }\n\n  protected getPointerInfos(evt: PointerEvent): PointerInfo\n  {\n    return {\n      clientX: evt.clientX,\n      clientY: evt.clientY,\n      isPrimary: evt.isPrimary,\n      type: evt.type,\n      target: evt.target as HTMLElement,\n      pointerType: evt.pointerType,\n      pointer: this.extractPointer(evt),\n      button: evt.button,\n      buttons: evt.buttons\n    }\n  }\n\n  protected pointerDownHandler = (evt: PointerEvent) =>\n  {\n    const pointerInfo = this.getPointerInfos(evt)\n    this.#logger.debug(\"pointerDownHandler\", pointerInfo)\n\n    // exit if not a left click or multi-touch\n    if (pointerInfo.button !== 0 || evt.buttons !== 1) {\n      return\n    }\n    this.capturing = true\n    this.pointerType = evt.pointerType\n\n    if (this.#logger.level === LoggerLevel.INFO) {\n      this.#logger.info(\"pointerDownHandler\", pointerInfo)\n    }\n\n    if (this.onPointerDown) {\n      this.onPointerDown(pointerInfo)\n    }\n  }\n\n  protected pointerMoveHandler = (evt: PointerEvent) =>\n  {\n    const pointerInfo = this.getPointerInfos(evt)\n    this.#logger.debug(\"pointerMoveHandler\", pointerInfo)\n    if (this.capturing && this.pointerType === evt.pointerType) {\n      if (this.#logger.level === LoggerLevel.INFO) {\n        this.#logger.info(\"pointerMoveHandler\", pointerInfo)\n      }\n      if (this.onPointerMove) {\n        this.onPointerMove(pointerInfo)\n      }\n    }\n  }\n\n  protected pointerUpHandler = (evt: PointerEvent) =>\n  {\n    const pointerInfo = this.getPointerInfos(evt)\n    this.#logger.debug(\"pointerUpHandler\", pointerInfo)\n    if (this.capturing && this.pointerType === evt.pointerType) {\n      if (this.#logger.level === LoggerLevel.INFO) {\n        this.#logger.info(\"pointerUpHandler\", pointerInfo)\n      }\n      this.pointerType = undefined\n      this.capturing = false\n      if (this.onPointerUp) {\n        this.onPointerUp(pointerInfo)\n      }\n    }\n  }\n\n  protected pointerOutHandler = (evt: PointerEvent) =>\n  {\n    const pointerInfo = this.getPointerInfos(evt)\n    this.#logger.debug(\"pointerOutHandler\", pointerInfo)\n    if (this.capturing && this.pointerType === evt.pointerType && !this.layerCapture.contains(evt.target as HTMLElement)) {\n      if (this.#logger.level === LoggerLevel.INFO) {\n        this.#logger.info(\"pointerOutHandler\", pointerInfo)\n      }\n      this.pointerType = undefined\n      this.capturing = false\n      if (this.onPointerUp) {\n        this.onPointerUp(pointerInfo)\n      }\n    }\n  }\n\n  protected contextMenuHandler = (evt: MouseEvent) =>\n  {\n    const pointerInfo = this.getPointerInfos(evt as PointerEvent)\n    this.#logger.debug(\"contextMenuHandler\", pointerInfo)\n    if (evt.target && this.onContextMenu){\n      if (this.#logger.level === LoggerLevel.INFO) {\n        this.#logger.info(\"contextMenuHandler\", pointerInfo)\n      }\n      this.onContextMenu(pointerInfo)\n    }\n  }\n\n  stopPointerEvent(): void\n  {\n    this.capturing = false\n    this.pointerType = undefined\n  }\n\n  attach(layerCapture: HTMLElement)\n  {\n    this.#logger.info(\"attach\", { domElement: layerCapture })\n    if (this.layerCapture) {\n      this.detach()\n    }\n    this.layerCapture = layerCapture\n    // The touch-action CSS property prevents the input from continuing.\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/pointercancel_event\n    this.layerCapture.style.setProperty(\"touch-action\", \"none\")\n    this.layerCapture.addEventListener(\"pointerdown\", this.pointerDownHandler, this.configuration.listenerOptions)\n    this.layerCapture.addEventListener(\"pointermove\", this.pointerMoveHandler, this.configuration.listenerOptions)\n    this.layerCapture.addEventListener(\"pointerup\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.layerCapture.addEventListener(\"pointercancel\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.layerCapture.addEventListener(\"pointerleave\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.layerCapture.addEventListener(\"pointerout\", this.pointerOutHandler, this.configuration.listenerOptions)\n    this.layerCapture.addEventListener(\"contextmenu\", this.contextMenuHandler)\n  }\n\n  detach()\n  {\n    this.#logger.info(\"detach\")\n    this.layerCapture?.style.removeProperty(\"touch-action\")\n    this.layerCapture?.removeEventListener(\"pointerdown\", this.pointerDownHandler, this.configuration.listenerOptions)\n    this.layerCapture?.removeEventListener(\"pointermove\", this.pointerMoveHandler, this.configuration.listenerOptions)\n    this.layerCapture?.removeEventListener(\"pointerup\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.layerCapture?.removeEventListener(\"pointerleave\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.layerCapture?.removeEventListener(\"pointercancel\", this.pointerUpHandler, this.configuration.listenerOptions)\n    this.layerCapture?.removeEventListener(\"pointerout\", this.pointerOutHandler, this.configuration.listenerOptions)\n    this.layerCapture?.removeEventListener(\"contextmenu\", this.contextMenuHandler)\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport\n{\n  TIISymbol,\n  TPointer,\n} from \"../symbol\"\nimport { SVGRenderer } from \"../renderer\"\nimport { TStyle } from \"../style\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { PointerEventGrabber, PointerInfo } from \"../grabber\"\nimport { InkEditor } from \"../editor\"\n\n\n/**\n * @group Manager\n */\nexport abstract class AbstractWriterManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.WRITE)\n  grabber: PointerEventGrabber\n  editor: InteractiveInkEditor | InkEditor\n  currentSymbol?: TIISymbol\n\n  detectGesture: boolean = true\n\n  constructor(editor: InteractiveInkEditor | InkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n    this.grabber = new PointerEventGrabber(editor.configuration.grabber)\n  }\n\n  get renderer(): SVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  attach(layer: HTMLElement): void\n  {\n    this.grabber.attach(layer)\n    this.grabber.onPointerDown = this.start.bind(this)\n    this.grabber.onPointerMove = this.continue.bind(this)\n    this.grabber.onPointerUp = this.end.bind(this)\n  }\n\n  detach(): void\n  {\n    this.grabber.detach()\n  }\n\n  protected abstract createCurrentSymbol(pointer: TPointer, style: TStyle, pointerType: string): TIISymbol\n  protected abstract updateCurrentSymbol(pointer: TPointer): TIISymbol\n\n  start(info: PointerInfo): void\n  {\n    this.#logger.info(\"startWriting\", { info })\n    const localPointer = info.pointer\n    this.currentSymbol = this.createCurrentSymbol(localPointer, this.editor.penStyle, info.pointerType)\n    this.renderer.drawSymbol(this.currentSymbol!)\n  }\n\n  continue(info: PointerInfo): void\n  {\n    this.#logger.info(\"continueWriting\", { info })\n    const localPointer = info.pointer\n    this.currentSymbol = this.updateCurrentSymbol(localPointer)\n    this.renderer.drawSymbol(this.currentSymbol!)\n  }\n\n  abstract end(info: PointerInfo): Promise<void>\n}\n","import { InteractiveInkEditor } from \"../editor\"\nimport { LoggerManager, LoggerCategory } from \"../logger\"\nimport\n{\n  IIModel,\n  TJIIXChar,\n  TJIIXEdgeArc,\n  TJIIXEdgeElement,\n  JIIXEdgeKind,\n  TJIIXEdgeLine,\n  TJIIXEdgePolyEdge,\n  TJIIXExport,\n  TJIIXNodeCircle,\n  TJIIXNodeElement,\n  TJIIXNodeEllipse,\n  JIIXNodeKind,\n  TJIIXNodeParrallelogram,\n  TJIIXNodePolygon,\n  TJIIXNodeRectangle,\n  TJIIXNodeRhombus,\n  TJIIXNodeTriangle,\n  TJIIXTextElement,\n  TJIIXWord\n} from \"../model\"\nimport\n{\n  Box,\n  DecoratorKind,\n  IIDecorator,\n  IIEdgeArc,\n  IIEdgeLine,\n  IIEdgePolyLine,\n  IIShapeCircle,\n  IIShapeEllipse,\n  IIShapePolygon,\n  IIStroke,\n  IIText,\n  SymbolType,\n  TIIEdge,\n  TIIShape,\n  TIISymbol,\n  TIISymbolChar,\n  TPoint\n} from \"../symbol\"\nimport { RecognizedKind } from \"../symbol\"\nimport { computeAngleAxeRadian, computeAverage, convertBoundingBoxMillimeterToPixel, convertMillimeterToPixel, createUUID } from \"../utils\"\n\n/**\n * @group Manager\n */\nexport class IIConversionManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.CONVERTER)\n  editor: InteractiveInkEditor\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get configuration(): { size: number | \"auto\", weight: \"bold\" | \"normal\" | \"auto\" } {\n    return this.editor.configuration.fontStyle\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get rowHeight(): number\n  {\n    return this.editor.configuration.rendering.guides.gap\n  }\n\n  protected computeFontSize(chars: TJIIXChar[]): number\n  {\n    if (chars.some(c => c[\"bounding-box\"])) {\n      const height = convertMillimeterToPixel(computeAverage(chars.map(c => c[\"bounding-box\"]?.height || 1)))\n      return Math.round(Math.round(height * this.rowHeight) / this.rowHeight / 2) * 2\n    }\n    return Math.round(this.rowHeight / 2)\n  }\n\n  buildChar(char: TJIIXChar, strokes: IIStroke[], fontSize: number): TIISymbolChar\n  {\n    const points = char.grid.map(p => ({\n      x: convertMillimeterToPixel(p.x),\n      y: convertMillimeterToPixel(p.y),\n    }))\n    let fontWeight = this.configuration.weight\n    if (fontWeight === \"auto\") {\n      fontWeight = (strokes[0].style.width || 1) > 2 ? \"bold\" : \"normal\"\n    }\n\n    const color = strokes[0].style.color || \"black\"\n    return {\n      id: `text-char-${ createUUID() }`,\n      label: char.label,\n      color,\n      fontSize,\n      fontWeight,\n      bounds: Box.createFromPoints(points)\n    }\n  }\n\n  buildText(word: TJIIXWord, chars: TJIIXChar[], strokes: IIStroke[], size: number | \"auto\"): IIText\n  {\n    const boundingBox = Box.createFromBoxes([convertBoundingBoxMillimeterToPixel(word[\"bounding-box\"])])\n    const charSymbols: TIISymbolChar[] = []\n    const charFontSize = size === \"auto\" ? this.computeFontSize(chars) : size\n\n    chars.forEach(char =>\n    {\n      const charStrokes = strokes.filter(s => char.items?.some(i => i[\"full-id\"] === s.id)) as IIStroke[]\n      if (charStrokes.length) {\n        charSymbols.push(this.buildChar(char, charStrokes, charFontSize))\n      }\n    })\n    const point: TPoint = {\n      x: boundingBox.xMin,\n      y: boundingBox.yMax\n    }\n    const text = new IIText(charSymbols, point, boundingBox, strokes[0].style)\n    const decorators = strokes.flatMap(s => s.decorators)\n    strokes.forEach(s =>\n    {\n      const sym = this.model.getRootSymbol(s.id)\n      if ((sym?.type === SymbolType.Recognized && sym.kind === RecognizedKind.Text) || sym?.type === SymbolType.Group) {\n        const hightlight = sym.decorators.find(d => d.kind === DecoratorKind.Highlight)\n        if (hightlight) decorators.push(hightlight)\n        const strikethrough = sym.decorators.find(d => d.kind === DecoratorKind.Strikethrough)\n        if (strikethrough) decorators.push(strikethrough)\n        const surround = sym.decorators.find(d => d.kind === DecoratorKind.Surround)\n        if (surround) decorators.push(surround)\n        const underline = sym.decorators.find(d => d.kind === DecoratorKind.Underline)\n        if (underline) decorators.push(underline)\n      }\n    })\n    if (decorators.length) {\n      const hightlight = decorators.find(d => d.kind === DecoratorKind.Highlight)\n      if (hightlight) {\n        text.decorators.push(new IIDecorator(DecoratorKind.Highlight, hightlight.style))\n      }\n      const strikethrough = decorators.find(d => d.kind === DecoratorKind.Strikethrough)\n      if (strikethrough) {\n        text.decorators.push(new IIDecorator(DecoratorKind.Strikethrough, strikethrough.style))\n      }\n      const surround = decorators.find(d => d.kind === DecoratorKind.Surround)\n      if (surround) {\n        text.decorators.push(new IIDecorator(DecoratorKind.Surround, surround.style))\n      }\n      const underline = decorators.find(d => d.kind === DecoratorKind.Underline)\n      if (underline) {\n        text.decorators.push(new IIDecorator(DecoratorKind.Underline, underline.style))\n      }\n    }\n\n    return text\n  }\n\n  convertText(text: TJIIXTextElement, strokes: IIStroke[], onlyText: boolean): { symbol: IIText, strokes: IIStroke[] }[] | undefined\n  {\n    if (!text.lines) {\n      throw new Error(\"You need to active configuration.recognition.export.jiix.text.lines = true\")\n    }\n    if (!text.words) {\n      throw new Error(\"You need to active configuration.recognition.export.jiix.text.words = true\")\n    }\n    if (!text.chars) {\n      throw new Error(\"You need to active configuration.recognition.export.jiix.text.chars = true\")\n    }\n    if (!text.chars.some(c => c.items)) {\n      throw new Error(\"You need to active configuration.recognition.export.jiix.strokes = true\")\n    }\n\n    const jiixWords = text.words as TJIIXWord[]\n    const jiixChars = text.chars as TJIIXChar[]\n\n    const result: { symbol: IIText, strokes: IIStroke[] }[] = []\n\n\n    let textFontSize = this.configuration.size\n    if (onlyText && textFontSize === \"auto\") {\n      textFontSize = Math.round(this.computeFontSize(jiixChars.filter(c => c.items?.length)) / 2) * 2\n    }\n    else if (this.configuration.size !== \"auto\") {\n      textFontSize = this.configuration.size * this.rowHeight\n    }\n\n    let isNewLine = false\n    let currentY = convertMillimeterToPixel(text.lines[0][\"baseline-y\"])\n    const leftX = convertMillimeterToPixel(text[\"bounding-box\"]?.x || 0)\n    let currentX = convertMillimeterToPixel(jiixWords[0][\"bounding-box\"]?.x || 0)\n    jiixWords.forEach(word =>\n    {\n      if (word.label === \" \") {\n        currentX += this.editor.texter.getSpaceWidth(result.at(-1)?.symbol.chars[0].fontSize|| (this.rowHeight / 2))\n        return\n      }\n      const wordStrokes = strokes.filter(s => word.items?.some(i => i[\"full-id\"] === s.id)) as IIStroke[]\n      if (wordStrokes.length) {\n        const chars = jiixChars.slice(word[\"first-char\"] as number, (word[\"last-char\"] || 0) + 1)\n        const wordSymbol = this.buildText(word, chars, wordStrokes, textFontSize)\n\n        if (onlyText) {\n          if (isNewLine) {\n            isNewLine = false\n            const nbRow = Math.round((wordSymbol.point.y - currentY) / this.rowHeight) || 1\n            currentY += nbRow * this.rowHeight\n            if (Math.abs(wordSymbol.point.x - leftX) < this.rowHeight) {\n              currentX = leftX\n            }\n            else {\n              currentX = wordSymbol.point.x\n            }\n          }\n          wordSymbol.point.x = currentX\n          wordSymbol.point.y = this.model.roundToLineGuide(currentY)\n        }\n\n        this.editor.texter.setBounds(wordSymbol)\n        currentX += wordSymbol.bounds.width\n        result.push({\n          symbol: wordSymbol,\n          strokes: wordStrokes\n        })\n      }\n      isNewLine = word.label === \"\\n\"\n    })\n\n    return result\n  }\n\n  buildCircle(circle: TJIIXNodeCircle, strokes: IIStroke[]): IIShapeCircle\n  {\n    const center: TPoint = {\n      x: convertMillimeterToPixel(circle.cx),\n      y: convertMillimeterToPixel(circle.cy)\n    }\n    return new IIShapeCircle(center, convertMillimeterToPixel(circle.r), strokes[0]?.style)\n  }\n\n  buildEllipse(ellipse: TJIIXNodeEllipse, strokes: IIStroke[]): IIShapeEllipse\n  {\n    const center: TPoint = {\n      x: convertMillimeterToPixel(ellipse.cx),\n      y: convertMillimeterToPixel(ellipse.cy),\n    }\n    return new IIShapeEllipse(center, convertMillimeterToPixel(ellipse.rx), convertMillimeterToPixel(ellipse.ry), ellipse.orientation, strokes[0]?.style)\n  }\n\n  buildRectangle(rectangle: TJIIXNodeRectangle, strokes: IIStroke[]): IIShapePolygon\n  {\n    const height = convertMillimeterToPixel(rectangle.height)\n    const width = convertMillimeterToPixel(rectangle.width)\n    const x = convertMillimeterToPixel(rectangle.x)\n    const y = convertMillimeterToPixel(rectangle.y)\n    const points: TPoint[] = [\n      { x, y },\n      { x: x + width, y },\n      { x: x + width, y: y + height },\n      { x, y: y + height }\n    ]\n    return new IIShapePolygon(points, strokes[0]?.style)\n  }\n\n  buildPolygon(polygon: TJIIXNodePolygon, strokes: IIStroke[]): IIShapePolygon\n  {\n    const points: TPoint[] = []\n    for (let i = 0; i < polygon.points.length; i += 2) {\n      points.push({\n        x: convertMillimeterToPixel(polygon.points[i]),\n        y: convertMillimeterToPixel(polygon.points[i + 1])\n      })\n    }\n\n    return new IIShapePolygon(points, strokes[0]?.style)\n  }\n\n  buildRhombus(polygon: TJIIXNodeRhombus, strokes: IIStroke[]): IIShapePolygon\n  {\n    const points: TPoint[] = []\n    for (let i = 0; i < polygon.points.length; i += 2) {\n      points.push({\n        x: convertMillimeterToPixel(polygon.points[i]),\n        y: convertMillimeterToPixel(polygon.points[i + 1])\n      })\n    }\n\n    return new IIShapePolygon(points, strokes[0]?.style)\n  }\n\n  buildTriangle(polygon: TJIIXNodeTriangle, strokes: IIStroke[]): IIShapePolygon\n  {\n    const points: TPoint[] = []\n    for (let i = 0; i < polygon.points.length; i += 2) {\n      points.push({\n        x: convertMillimeterToPixel(polygon.points[i]),\n        y: convertMillimeterToPixel(polygon.points[i + 1])\n      })\n    }\n\n    return new IIShapePolygon(points, strokes[0]?.style)\n  }\n\n  buildParallelogram(polygon: TJIIXNodeParrallelogram, strokes: IIStroke[]): IIShapePolygon\n  {\n    const points: TPoint[] = []\n    for (let i = 0; i < polygon.points.length; i += 2) {\n      points.push({\n        x: convertMillimeterToPixel(polygon.points[i]),\n        y: convertMillimeterToPixel(polygon.points[i + 1])\n      })\n    }\n\n    return new IIShapePolygon(points, strokes[0]?.style)\n  }\n\n  convertNode(node: TJIIXNodeElement, strokes: IIStroke[]): { symbol: TIIShape, strokes: IIStroke[] } | undefined\n  {\n    const associatedStroke = strokes.filter(s => node.items?.some(i => i[\"full-id\"] === s.id))\n    if (!associatedStroke.length) return\n\n    const uniqStrokes = associatedStroke.filter((a, i) => associatedStroke.findIndex((s) => a.id === s.id) === i)\n\n    let shape: TIIShape\n    switch (node.kind) {\n      case JIIXNodeKind.Circle:\n        shape = this.buildCircle(node, uniqStrokes)\n        break\n      case JIIXNodeKind.Ellipse:\n        shape = this.buildEllipse(node, uniqStrokes)\n        break\n      case JIIXNodeKind.Rectangle:\n        shape = this.buildRectangle(node, uniqStrokes)\n        break\n      case JIIXNodeKind.Triangle:\n        shape = this.buildTriangle(node, uniqStrokes)\n        break\n      case JIIXNodeKind.Parallelogram:\n        shape = this.buildParallelogram(node, uniqStrokes)\n        break\n      case JIIXNodeKind.Polygon:\n        shape = this.buildPolygon(node, uniqStrokes)\n        break\n      case JIIXNodeKind.Rhombus:\n        shape = this.buildRhombus(node, uniqStrokes)\n        break\n      default:\n        this.#logger.warn(\"convertNode\", `Conversion of Node with kind equal to ${ JSON.stringify(node) } is unknow`)\n        return\n    }\n    return { symbol: shape, strokes: uniqStrokes }\n  }\n\n  buildLine(line: TJIIXEdgeLine, strokes: IIStroke[]): IIEdgeLine\n  {\n    const point1: TPoint = { x: convertMillimeterToPixel(line.x1), y: convertMillimeterToPixel(line.y1) }\n    const point2: TPoint = { x: convertMillimeterToPixel(line.x2), y: convertMillimeterToPixel(line.y2) }\n    const angle = computeAngleAxeRadian(point1, point2)\n\n    if (Math.abs(angle % Math.PI) < 0.1) {\n      // to adjust the line with the horizontal\n      point1.y = +((point1.y + point2.y) / 2).toFixed(3)\n      point2.y = point1.y\n    }\n    else if (Math.abs(angle % (Math.PI / 2)) < 0.1) {\n      // to adjust the line with the vertical\n      point1.x = +((point1.x + point2.x) / 2).toFixed(3)\n      point2.x = point1.x\n    }\n    return new IIEdgeLine(point1, point2, line.p1Decoration, line.p2Decoration, strokes[0]?.style)\n  }\n\n  buildPolyEdge(polyline: TJIIXEdgePolyEdge, strokes: IIStroke[]): IIEdgePolyLine\n  {\n    const start: TPoint = { x: convertMillimeterToPixel(polyline.edges[0].x1), y: convertMillimeterToPixel(polyline.edges[0].y1) }\n    const points = polyline.edges.map(e => ({ x: convertMillimeterToPixel(e.x2), y: convertMillimeterToPixel(e.y2) }))\n    points.unshift(start)\n    for (let index = 0; index < points.length - 1; index++) {\n      const p1 = points[index]\n      const p2 = points[index + 1]\n      const angle = computeAngleAxeRadian(p1, p2)\n      if (Math.abs(angle % Math.PI) < 0.1) {\n        p1.y = +((p1.y + p2.y) / 2).toFixed(3)\n        p2.y = p1.y\n      }\n      else if (Math.abs(angle % (Math.PI / 2)) < 0.1) {\n        p1.x = +((p1.x + p2.x) / 2).toFixed(3)\n        p2.x = p1.x\n      }\n    }\n\n    return new IIEdgePolyLine(points, polyline.edges[0].p1Decoration, polyline.edges.at(-1)!.p2Decoration, strokes[0]?.style)\n  }\n\n  buildArc(arc: TJIIXEdgeArc, strokes: IIStroke[]): IIEdgeArc\n  {\n    const center: TPoint = { x: convertMillimeterToPixel(arc.cx), y: convertMillimeterToPixel(arc.cy) }\n    const radiusX = convertMillimeterToPixel(arc.rx)\n    const radiusY = convertMillimeterToPixel(arc.ry)\n    return new IIEdgeArc(center, arc.startAngle, arc.sweepAngle, radiusX, radiusY, arc.phi, arc.startDecoration, arc.endDecoration, strokes[0]?.style)\n  }\n\n  convertEdge(edge: TJIIXEdgeElement, strokes: IIStroke[]): { symbol: TIIEdge, strokes: IIStroke[] } | undefined\n  {\n    switch (edge.kind) {\n      case JIIXEdgeKind.Line: {\n        const associatedStroke = strokes.filter(s => edge.items?.some(i => i[\"full-id\"] === s.id))\n        if (!associatedStroke.length) return\n        const uniqStrokes = associatedStroke.filter((a, i) => associatedStroke.findIndex((s) => a.id === s.id) === i)\n        const oiEdge = this.buildLine(edge, uniqStrokes)\n        return {\n          symbol: oiEdge,\n          strokes: uniqStrokes\n        }\n      }\n      case JIIXEdgeKind.Arc: {\n        const associatedStroke = strokes.filter(s => edge.items?.some(i => i[\"full-id\"] === s.id))\n        if (!associatedStroke.length) return\n        const uniqStrokes = associatedStroke.filter((a, i) => associatedStroke.findIndex((s) => a.id === s.id) === i)\n        const oiEdge = this.buildArc(edge, uniqStrokes)\n        return {\n          symbol: oiEdge,\n          strokes: uniqStrokes\n        }\n      }\n      case JIIXEdgeKind.PolyEdge: {\n        const associatedStroke = strokes.filter(s => edge.edges.flatMap(e => e.items)?.some(i => i![\"full-id\"] === s.id))\n        if (!associatedStroke.length) return\n        const uniqStrokes = associatedStroke.filter((a, i) => associatedStroke.findIndex((s) => a.id === s.id) === i)\n        const oiEdge = this.buildPolyEdge(edge, uniqStrokes)\n        return {\n          symbol: oiEdge,\n          strokes: uniqStrokes\n        }\n      }\n      default:\n        this.#logger.error(\"convertEdge\", `Conversion of Edge with kind equal to ${ JSON.stringify(edge) } is unknow`)\n        return\n    }\n  }\n\n  async apply(symbols: TIISymbol[] = []): Promise<void>\n  {\n    this.#logger.info(\"convert\")\n    if (!this.model.exports?.[\"application/vnd.myscript.jiix\"]) {\n      await this.editor.export([\"application/vnd.myscript.jiix\"])\n    }\n    this.editor.selector.removeSelectedGroup()\n    const jiix = this.model.exports?.[\"application/vnd.myscript.jiix\"] as TJIIXExport\n    if (jiix?.elements?.length) {\n      const strokesToConvert = this.editor.extractStrokesFromSymbols(symbols.length ? symbols : this.model.symbols)\n\n      const onlyText = !jiix.elements?.some(e => e.type !== \"Text\")\n      const conversionResults: { symbol: TIISymbol, strokes: IIStroke[] }[] = []\n      jiix.elements.forEach(el =>\n      {\n        switch (el.type) {\n          case \"Text\": {\n            const conversion = this.convertText(el, strokesToConvert, onlyText)\n            if (conversion) {\n              conversionResults.push(...conversion)\n            }\n            break\n          }\n          case \"Node\": {\n            const conversion = this.convertNode(el, strokesToConvert)\n            if (conversion) {\n              conversionResults.push(conversion)\n            }\n            break\n          }\n          case \"Edge\": {\n            const conversion = this.convertEdge(el, strokesToConvert)\n            if (conversion) {\n              conversionResults.push(conversion)\n            }\n            break\n          }\n          default: {\n            this.#logger.warn(\"buildConversions\", `Unknow jiix element type: ${ el.type }`)\n          }\n        }\n      })\n\n      this.editor.addSymbols(conversionResults.map(cs => cs.symbol), false)\n      this.editor.removeSymbols(conversionResults.flatMap(cs => cs.strokes.map(s => s.id)), false)\n      this.editor.history.push(this.model, { added: conversionResults.map(c => c.symbol), erased: conversionResults.flatMap(cs => cs.strokes) })\n    }\n  }\n}\n","import { ResizeDirection, SvgElementRole } from \"../Constants\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport\n{\n  Box,\n  EdgeKind,\n  IIStroke,\n  IISymbolGroup,\n  IIText,\n  ShapeKind,\n  SymbolType,\n  TIIEdge,\n  TIIShape,\n  TIISymbol,\n  TPoint,\n  TIIRecognized,\n  RecognizedKind\n} from \"../symbol\"\n\n/**\n * @group Manager\n */\nexport class IIResizeManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.TRANSFORMER)\n  editor: InteractiveInkEditor\n\n  interactElementsGroup?: SVGElement\n  direction!: ResizeDirection\n  boundingBox!: Box\n  transformOrigin!: TPoint\n  keepRatio = false\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  protected applyToStroke(stroke: IIStroke, origin: TPoint, scaleX: number, scaleY: number): IIStroke\n  {\n    this.#logger.debug(\"applyToStroke\", { stroke, origin, scaleX, scaleY })\n    stroke.pointers.forEach(p =>\n    {\n      p.x = +(origin.x + scaleX * (p.x - origin.x)).toFixed(3)\n      p.y = +(origin.y + scaleY * (p.y - origin.y)).toFixed(3)\n    })\n    return stroke\n  }\n\n  protected applyToShape(shape: TIIShape, origin: TPoint, scaleX: number, scaleY: number): TIIShape\n  {\n    this.#logger.debug(\"applyToShape\", { shape, origin, scaleX, scaleY })\n    switch (shape.kind) {\n      case ShapeKind.Ellipse: {\n        const cosPhi = Math.cos(shape.orientation)\n        const sinPhi = Math.sin(shape.orientation)\n        shape.center.x = +(shape.center.x + ((scaleX - 1) * cosPhi + (scaleY - 1) * sinPhi) * (shape.center.x - origin.x)).toFixed(3)\n        shape.center.y = +(shape.center.y + ((scaleX - 1) * -sinPhi + (scaleY - 1) * cosPhi) * (shape.center.y - origin.y)).toFixed(3)\n        shape.radiusX = +(Math.abs(shape.radiusX * (scaleX * cosPhi - scaleY * sinPhi))).toFixed(3)\n        shape.radiusY = +(Math.abs(shape.radiusY * (scaleX * sinPhi + scaleY * cosPhi))).toFixed(3)\n        return shape\n      }\n      case ShapeKind.Circle: {\n        shape.radius = +(shape.radius * (scaleX + scaleY) / 2).toFixed(3)\n        shape.center.x = +(origin.x + scaleX * (shape.center.x - origin.x)).toFixed(3)\n        shape.center.y = +(origin.y + scaleY * (shape.center.y - origin.y)).toFixed(3)\n        return shape\n      }\n      case ShapeKind.Polygon: {\n        shape.points.forEach(p =>\n        {\n          p.x = +(origin.x + scaleX * (p.x - origin.x)).toFixed(3)\n          p.y = +(origin.y + scaleY * (p.y - origin.y)).toFixed(3)\n        })\n        return shape\n      }\n      default:\n        throw new Error(`Can't apply resize on shape, kind unknow: ${ JSON.stringify(shape) }`)\n    }\n  }\n\n  protected applyToEdge(edge: TIIEdge, origin: TPoint, scaleX: number, scaleY: number): TIIEdge\n  {\n    this.#logger.debug(\"applyToEdge\", { edge, origin, scaleX, scaleY })\n    switch (edge.kind) {\n      case EdgeKind.Arc: {\n        const cosPhi = Math.cos(edge.phi)\n        const sinPhi = Math.sin(edge.phi)\n        edge.center.x = +(edge.center.x + ((scaleX - 1) * cosPhi + (scaleY - 1) * sinPhi) * (edge.center.x - origin.x)).toFixed(3)\n        edge.center.y = +(edge.center.y + ((scaleX - 1) * -sinPhi + (scaleY - 1) * cosPhi) * (edge.center.y - origin.y)).toFixed(3)\n        edge.radiusX = +(edge.radiusX * Math.abs(scaleX * cosPhi + scaleY * sinPhi)).toFixed(3)\n        edge.radiusY = +(edge.radiusY * Math.abs(scaleX * sinPhi + scaleY * cosPhi)).toFixed(3)\n\n        if (scaleX < 0) {\n          edge.startAngle = +(Math.PI - edge.startAngle).toFixed(3)\n          edge.sweepAngle *= -1\n        }\n        else if (scaleY < 0) {\n          edge.sweepAngle *= -1\n        }\n        return edge\n      }\n      case EdgeKind.Line: {\n        edge.start.x = +(origin.x + scaleX * (edge.start.x - origin.x)).toFixed(3)\n        edge.start.y = +(origin.y + scaleY * (edge.start.y - origin.y)).toFixed(3)\n        edge.end.x = +(origin.x + scaleX * (edge.end.x - origin.x)).toFixed(3)\n        edge.end.y = +(origin.y + scaleY * (edge.end.y - origin.y)).toFixed(3)\n        return edge\n      }\n      case EdgeKind.PolyEdge: {\n        edge.points.forEach(p =>\n        {\n          p.x = +(origin.x + scaleX * (p.x - origin.x)).toFixed(3)\n          p.y = +(origin.y + scaleY * (p.y - origin.y)).toFixed(3)\n          return p\n        })\n        return edge\n      }\n      default:\n        throw new Error(`Can't apply resize on edge, kind unknow: ${ JSON.stringify(edge) }`)\n    }\n  }\n\n  protected applyOnText(text: IIText, origin: TPoint, scaleX: number, scaleY: number): IIText\n  {\n    text.point.x = +(origin.x + scaleX * (text.point.x - origin.x)).toFixed(3)\n    text.point.y = +(origin.y + scaleY * (text.point.y - origin.y)).toFixed(3)\n\n    text.chars.forEach(c =>\n    {\n      c.fontSize = +(c.fontSize * (scaleX + scaleY) / 2).toFixed(3)\n    })\n    return this.editor.texter.updateBounds(text)\n  }\n\n  protected applyOnGroup(group: IISymbolGroup, origin: TPoint, scaleX: number, scaleY: number): IISymbolGroup\n  {\n    group.children.forEach(s => this.applyToSymbol(s, origin, scaleX, scaleY))\n    return group\n  }\n\n  protected applyOnRecognizedSymbol(recognizedSymbol: TIIRecognized, origin: TPoint, scaleX: number, scaleY: number): TIIRecognized\n  {\n    recognizedSymbol.strokes.forEach(s => this.applyToStroke(s, origin, scaleX, scaleY))\n    if (recognizedSymbol.kind === RecognizedKind.Text) {\n      recognizedSymbol.xHeight *= scaleY\n    }\n    return recognizedSymbol\n  }\n\n  applyToSymbol(symbol: TIISymbol, origin: TPoint, scaleX: number, scaleY: number): TIISymbol\n  {\n    this.#logger.info(\"applyToSymbol\", { symbol, scaleX, scaleY })\n    switch (symbol.type) {\n      case SymbolType.Stroke:\n        return this.applyToStroke(symbol, origin, scaleX, scaleY)\n      case SymbolType.Shape:\n        return this.applyToShape(symbol, origin, scaleX, scaleY)\n      case SymbolType.Edge:\n        return this.applyToEdge(symbol, origin, scaleX, scaleY)\n      case SymbolType.Text:\n        return this.applyOnText(symbol, origin, scaleX, scaleY)\n      case SymbolType.Group:\n        return this.applyOnGroup(symbol, origin, scaleX, scaleY)\n      case SymbolType.Recognized:\n        return this.applyOnRecognizedSymbol(symbol, origin, scaleX, scaleY)\n      default:\n        throw new Error(`Can't apply resize on symbol, type unknow: ${ JSON.stringify(symbol) }`)\n    }\n  }\n\n  setTransformOrigin(id: string, originX: number, originY: number): void\n  {\n    this.editor.renderer.setAttribute(id, \"transform-origin\", `${ originX }px ${ originY }px`)\n  }\n\n  scaleElement(id: string, sx: number, sy: number): void\n  {\n    this.#logger.info(\"scaleElement\", { id, sx, sy })\n    this.editor.renderer.setAttribute(id, \"transform\", `scale(${ sx },${ sy })`)\n  }\n\n  start(target: Element, origin: TPoint): void\n  {\n    this.#logger.info(\"start\", { target })\n    this.interactElementsGroup = (target.closest(`[role=${ SvgElementRole.InteractElementsGroup }]`) as unknown) as SVGGElement\n    this.direction = target.getAttribute(\"resize-direction\") as ResizeDirection\n\n    this.keepRatio = this.model.symbolsSelected.some(s => s.type === SymbolType.Text || (s.type === SymbolType.Shape && (s as TIIShape).kind === ShapeKind.Circle))\n\n    this.transformOrigin = origin\n    this.boundingBox = Box.createFromPoints(this.model.symbolsSelected.flatMap(s => s.vertices))\n    this.setTransformOrigin(this.interactElementsGroup!.id, this.transformOrigin.x, this.transformOrigin.y)\n    this.model.symbolsSelected.forEach(s =>\n    {\n      this.setTransformOrigin(s.id, this.transformOrigin.x, this.transformOrigin.y)\n    })\n  }\n\n  continue(point: TPoint): { scaleX: number, scaleY: number }\n  {\n    this.#logger.info(\"continue\", { point })\n    if (!this.interactElementsGroup) {\n      throw new Error(\"Can't resize, you must call start before\")\n    }\n    const localPoint = point\n    const horizontalResize = [\n      ResizeDirection.East,\n      ResizeDirection.NorthEast,\n      ResizeDirection.SouthEast,\n      ResizeDirection.West,\n      ResizeDirection.NorthWest,\n      ResizeDirection.SouthWest\n    ].includes(this.direction)\n    const verticalResize = [\n      ResizeDirection.North,\n      ResizeDirection.NorthEast,\n      ResizeDirection.NorthWest,\n      ResizeDirection.South,\n      ResizeDirection.SouthEast,\n      ResizeDirection.SouthWest\n    ].includes(this.direction)\n    const { x, y } = this.editor.snaps.snapResize(point, horizontalResize, verticalResize)\n    localPoint.x = x\n    localPoint.y = y\n\n    let deltaX = 0, deltaY = 0\n    if ([ResizeDirection.East, ResizeDirection.NorthEast, ResizeDirection.SouthEast].includes(this.direction)) {\n      deltaX = localPoint.x - this.boundingBox.xMax\n    }\n    else if ([ResizeDirection.West, ResizeDirection.NorthWest, ResizeDirection.SouthWest].includes(this.direction)) {\n      deltaX = this.boundingBox.xMin - localPoint.x\n    }\n\n    if ([ResizeDirection.North, ResizeDirection.NorthEast, ResizeDirection.NorthWest].includes(this.direction)) {\n      deltaY = this.boundingBox.yMin - localPoint.y\n    }\n    else if ([ResizeDirection.South, ResizeDirection.SouthEast, ResizeDirection.SouthWest].includes(this.direction)) {\n      deltaY = localPoint.y - this.boundingBox.yMax\n    }\n\n    let scaleX = this.boundingBox.width ? 1 + (deltaX / this.boundingBox.width) : 1\n    let scaleY = this.boundingBox.height ? 1 + (deltaY / this.boundingBox.height) : 1\n\n    if (this.keepRatio) {\n      if ([ResizeDirection.North, ResizeDirection.South].includes(this.direction)) {\n        scaleX = scaleY\n      }\n      else if ([ResizeDirection.East, ResizeDirection.West].includes(this.direction)) {\n        scaleY = scaleX\n      }\n      else {\n        scaleX = Math.max(scaleX, scaleY)\n        scaleY = scaleX\n      }\n    }\n    this.scaleElement(this.interactElementsGroup.id, scaleX, scaleY)\n    this.model.symbolsSelected.forEach(s =>\n    {\n      this.scaleElement(s.id, scaleX, scaleY)\n    })\n    return {\n      scaleX,\n      scaleY\n    }\n  }\n\n  async end(point: TPoint): Promise<void>\n  {\n    this.#logger.info(\"end\", { point })\n    const { scaleX, scaleY } = this.continue(point)\n    this.editor.snaps.clearSnapToElementLines()\n    const oldSymbols = this.model.symbolsSelected.map(s => s.clone())\n    this.model.symbolsSelected.forEach(s =>\n    {\n      this.applyToSymbol(s, this.transformOrigin, scaleX, scaleY)\n      this.editor.renderer.drawSymbol(s)\n      this.model.updateSymbol(s)\n    })\n\n    const strokesFromSymbols = this.editor.extractStrokesFromSymbols(this.model.symbolsSelected)\n    this.editor.recognizer.transformScale(strokesFromSymbols.map(s => s.id), scaleX, scaleY, this.transformOrigin.x, this.transformOrigin.y)\n    this.editor.history.push(this.model, { scale: [{ symbols: oldSymbols, origin: {...this.transformOrigin}, scaleX, scaleY }] })\n\n    this.interactElementsGroup = undefined\n    this.editor.svgDebugger.apply()\n  }\n}\n","import { SvgElementRole } from \"../Constants\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport\n{\n  Box,\n  EdgeKind,\n  IIStroke,\n  IISymbolGroup,\n  IIText,\n  TIIRecognized,\n  ShapeKind,\n  SymbolType,\n  TIIEdge,\n  TIIShape,\n  TIISymbol,\n  TPoint\n} from \"../symbol\"\nimport { computeAngleRadian, convertDegreeToRadian, convertRadianToDegree, computeRotatedPoint } from \"../utils\"\n\n/**\n * @group Manager\n */\nexport class IIRotationManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.TRANSFORMER)\n  editor: InteractiveInkEditor\n  interactElementsGroup?: SVGElement\n  center!: TPoint\n  origin!: TPoint\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  protected applyToStroke(stroke: IIStroke, center: TPoint, angleRad: number): IIStroke\n  {\n    stroke.pointers.forEach(p =>\n    {\n      const { x, y } = computeRotatedPoint(p, center, angleRad)\n      p.x = x\n      p.y = y\n    })\n    return stroke\n  }\n\n  protected applyToShape(shape: TIIShape, center: TPoint, angleRad: number): TIIShape\n  {\n    switch (shape.kind) {\n      case ShapeKind.Ellipse: {\n        shape.center = computeRotatedPoint(shape.center, center, angleRad)\n        shape.orientation = (shape.orientation + angleRad) % (2 * Math.PI)\n        return shape\n      }\n      case ShapeKind.Circle: {\n        shape.center = computeRotatedPoint(shape.center, center, angleRad)\n        return shape\n      }\n      case ShapeKind.Polygon: {\n        shape.points.forEach(p =>\n        {\n          const { x, y } = computeRotatedPoint(p, center, angleRad)\n          p.x = x\n          p.y = y\n        })\n        return shape\n      }\n      default:\n        throw new Error(`Can't apply rotate on shape, kind unknow: ${ JSON.stringify(shape) }`)\n    }\n  }\n\n  protected applyToEdge(edge: TIIEdge, center: TPoint, angleRad: number): TIIEdge\n  {\n    switch (edge.kind) {\n      case EdgeKind.Arc: {\n        edge.phi = (edge.phi - angleRad) % (2 * Math.PI)\n        edge.center = computeRotatedPoint(edge.center, center, angleRad)\n        return edge\n      }\n      case EdgeKind.Line: {\n        edge.start = computeRotatedPoint(edge.start, center, angleRad)\n        edge.end = computeRotatedPoint(edge.end, center, angleRad)\n        return edge\n      }\n      case EdgeKind.PolyEdge: {\n        edge.points = edge.points.map(p => computeRotatedPoint(p, center, angleRad))\n        return edge\n      }\n      default:\n        throw new Error(`Can't apply rotate on edge, kind unknow: ${ JSON.stringify(edge) }`)\n    }\n    return edge\n  }\n\n  protected applyOnText(text: IIText, center: TPoint, angleRad: number): IIText\n  {\n    text.rotation = {\n      degree: convertRadianToDegree(angleRad) + (text.rotation?.degree || 0),\n      center: center\n    }\n    return this.editor.texter.updateBounds(text)\n  }\n\n  protected applyOnGroup(group: IISymbolGroup, center: TPoint, angleRad: number): IISymbolGroup\n  {\n    group.children.forEach(s => this.applyToSymbol(s, center, angleRad))\n    return group\n  }\n\n  protected applyOnRecognizedSymbol(strokeText: TIIRecognized, center: TPoint, angleRad: number): TIIRecognized\n  {\n    strokeText.strokes.forEach(s => this.applyToStroke(s, center, angleRad))\n    return strokeText\n  }\n\n  applyToSymbol(symbol: TIISymbol, center: TPoint, angleRad: number): TIISymbol\n  {\n    switch (symbol.type) {\n      case SymbolType.Stroke:\n        return this.applyToStroke(symbol, center, angleRad)\n      case SymbolType.Shape:\n        return this.applyToShape(symbol, center, angleRad)\n      case SymbolType.Edge:\n        return this.applyToEdge(symbol, center, angleRad)\n      case SymbolType.Text:\n        return this.applyOnText(symbol, center, angleRad)\n      case SymbolType.Group:\n        return this.applyOnGroup(symbol, center, angleRad)\n      case SymbolType.Recognized:\n        return this.applyOnRecognizedSymbol(symbol, center, angleRad)\n      default:\n        throw new Error(`Can't apply rotate on symbol, type unknow: ${ JSON.stringify(symbol) }`)\n    }\n  }\n\n  setTransformOrigin(id: string, originX: number, originY: number): void\n  {\n    this.editor.renderer.setAttribute(id, \"transform-origin\", `${ originX }px ${ originY }px`)\n  }\n\n  rotateElement(id: string, degree: number): void\n  {\n    this.#logger.info(\"rotateElement\", { id, degree })\n    this.editor.renderer.setAttribute(id, \"transform\", `rotate(${ degree })`)\n  }\n\n  start(target: Element, origin: TPoint): void\n  {\n    this.#logger.info(\"start\", { target })\n    this.interactElementsGroup = (target.closest(`[role=${ SvgElementRole.InteractElementsGroup }]`) as unknown) as SVGGElement\n    const boundingBox = Box.createFromPoints(this.model.symbolsSelected.flatMap(s => s.vertices))\n\n    this.center = {\n      x: boundingBox.xMin + boundingBox.width / 2,\n      y: boundingBox.yMid\n    }\n    this.origin = origin\n    this.setTransformOrigin(this.interactElementsGroup.id, this.center.x, this.center.y)\n    this.model.symbolsSelected.forEach(s =>\n    {\n      this.setTransformOrigin(s.id, this.center.x, this.center.y)\n    })\n  }\n\n  continue(point: TPoint): number\n  {\n    this.#logger.info(\"continue\", { point })\n    if (!this.interactElementsGroup) {\n      throw new Error(\"Can't rotate, you must call start before\")\n    }\n    let angleDegree = Math.round(convertRadianToDegree(computeAngleRadian(this.origin, this.center, point)))\n\n    angleDegree = this.editor.snaps.snapRotation(angleDegree)\n\n    if (point.x - this.center.x < 0) {\n      angleDegree = 360 - angleDegree\n    }\n\n    this.rotateElement(this.interactElementsGroup.id, angleDegree)\n    this.model.symbolsSelected.forEach(s =>\n    {\n      this.rotateElement(s.id, angleDegree)\n    })\n    return angleDegree\n  }\n\n  async end(point: TPoint): Promise<void>\n  {\n    this.#logger.info(\"end\", { point })\n    const angleDegree = this.continue(point)\n    const angleRad = convertDegreeToRadian(angleDegree) % (2 * Math.PI)\n    const oldSymbols = this.model.symbolsSelected.map(s => s.clone())\n    this.model.symbolsSelected.forEach(s =>\n    {\n      this.applyToSymbol(s, this.center, angleRad)\n      this.editor.renderer.drawSymbol(s)\n      this.model.updateSymbol(s)\n    })\n    const strokesFromSymbols = this.editor.extractStrokesFromSymbols(this.model.symbolsSelected)\n    this.editor.recognizer.transformRotate(strokesFromSymbols.map(s => s.id), angleRad, this.center.x, this.center.y)\n    this.editor.history.push(this.model, { rotate: [{ symbols: oldSymbols, angle: angleRad, center: {...this.center}, }] })\n\n    this.interactElementsGroup = undefined\n    this.editor.svgDebugger.apply()\n  }\n}\n","import { ResizeDirection, SELECTION_MARGIN, SvgElementRole } from \"../Constants\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport { Box, IIText, SymbolType, TBox, TIIEdge, TIISymbol, TPoint } from \"../symbol\"\nimport { SVGRenderer, SVGBuilder } from \"../renderer\"\nimport { IIResizeManager } from \"./IIResizeManager\"\nimport { IIRotationManager } from \"./IIRotationManager\"\nimport { IITranslateManager } from \"./IITranslateManager\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { PointerEventGrabber, PointerInfo } from \"../grabber\"\n\n/**\n * @group Manager\n */\nexport class IISelectionManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.SELECTION)\n  grabber: PointerEventGrabber\n  editor: InteractiveInkEditor\n\n  #selectingId = \"selecting-rect\"\n  startSelectionPoint?: TPoint\n  endSelectionPoint?: TPoint\n  selectedGroup?: SVGGElement\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n    this.grabber = new PointerEventGrabber(editor.configuration.grabber)\n    this.grabber.onPointerDown = this.start.bind(this)\n    this.grabber.onPointerMove = this.continue.bind(this)\n    this.grabber.onPointerUp = this.end.bind(this)\n    this.grabber.onContextMenu = this.onContextMenu.bind(this)\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get renderer(): SVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  get rotator(): IIRotationManager\n  {\n    return this.editor.rotator\n  }\n\n  get translator(): IITranslateManager\n  {\n    return this.editor.translator\n  }\n\n  get resizer(): IIResizeManager\n  {\n    return this.editor.resizer\n  }\n\n  get selectionBox(): Box | undefined\n  {\n    if (this.startSelectionPoint && this.endSelectionPoint) {\n      return Box.createFromPoints([this.startSelectionPoint, this.endSelectionPoint])\n    }\n    return\n  }\n\n  attach(layer: HTMLElement): void\n  {\n    this.removeSelectedGroup()\n    this.grabber.attach(layer)\n  }\n\n  detach(): void\n  {\n    this.removeSelectedGroup()\n    this.grabber.detach()\n  }\n\n  drawSelectingRect(box: TBox): void\n  {\n    this.clearSelectingRect()\n    const attrs = {\n      id: this.#selectingId,\n      fill: \"transparent\",\n      stroke: \"grey\",\n      opacity: \"0.25\",\n    }\n    this.renderer.appendElement(SVGBuilder.createRect(box, attrs))\n  }\n\n  clearSelectingRect(): void\n  {\n    this.renderer.clearElements({ attrs: { id: this.#selectingId } })\n  }\n\n  protected getPoint(ev: PointerEvent): TPoint\n  {\n    const { clientLeft, scrollLeft, clientTop, scrollTop } = this.renderer.parent\n    const rect: DOMRect = this.renderer.parent.getBoundingClientRect()\n    return {\n      x: ev.clientX - rect.left - clientLeft + scrollLeft,\n      y: ev.clientY - rect.top - clientTop + scrollTop,\n    }\n  }\n\n  protected createTranslateRect(box: TBox): SVGRectElement\n  {\n    const attrs = {\n      role: SvgElementRole.Translate,\n      style: \"cursor:move\",\n      fill: \"transparent\",\n      stroke: \"transparent\",\n    }\n    const boxWithMarge: TBox = {\n      height: box.height,\n      width: box.width,\n      x: box.x,\n      y: box.y\n    }\n    const translateEl = SVGBuilder.createRect(boxWithMarge, attrs)\n    const handler = (ev: PointerEvent) =>\n    {\n      ev.preventDefault()\n      ev.stopPropagation()\n      this.translator.continue(this.getPoint(ev))\n    }\n    const endHandler = (ev: PointerEvent) =>\n    {\n      ev.preventDefault()\n      ev.stopPropagation()\n      this.translator.end(this.getPoint(ev))\n      this.renderer.layer.removeEventListener(\"pointermove\", handler)\n      this.renderer.layer.removeEventListener(\"pointercancel\", endHandler)\n      this.renderer.layer.removeEventListener(\"pointerleave\", endHandler)\n      this.renderer.layer.removeEventListener(\"pointerup\", endHandler)\n      this.renderer.layer.style.cursor = \"\"\n      this.resetSelectedGroup(this.model.symbolsSelected)\n    }\n\n    translateEl.addEventListener(\"pointerdown\", (ev) =>\n    {\n      if (ev.button !== 0 || ev.buttons !== 1) {\n        return\n      }\n      ev.preventDefault()\n      ev.stopPropagation()\n      this.hideInteractElements()\n      this.translator.start(ev.target as Element, this.getPoint(ev))\n      this.renderer.layer.addEventListener(\"pointermove\", handler)\n      this.renderer.layer.addEventListener(\"pointercancel\", endHandler)\n      this.renderer.layer.addEventListener(\"pointerleave\", endHandler)\n      this.renderer.layer.addEventListener(\"pointerup\", endHandler)\n\n      this.renderer.layer.style.cursor = \"move\"\n    })\n    return translateEl\n  }\n\n  protected createRotateGroup(box: TBox): SVGGElement\n  {\n    const group = SVGBuilder.createGroup({\n      role: SvgElementRole.Rotate,\n      \"vector-effect\": \"non-scaling-size\",\n      \"style\": \"cursor:pointer;\",\n      \"opacity\": \"1\",\n    })\n    const radius = 8\n    const center: TPoint = {\n      x: (box.x + box.width / 2),\n      y: box.y - 4 * SELECTION_MARGIN\n    }\n    const attrs1 = {\n      role: SvgElementRole.Rotate,\n      \"stroke-width\": \"2\",\n      \"stroke\": \"black\",\n      fill: \"white\",\n    }\n    group.appendChild(SVGBuilder.createCircle(center, radius, attrs1))\n\n    const attrs2 = {\n      role: SvgElementRole.Rotate,\n      fill: \"black\",\n    }\n\n    group.appendChild(SVGBuilder.createCircle(center, radius / 2, attrs2))\n    const attrs3 = {\n      role: SvgElementRole.Rotate,\n      stroke: \"black\",\n      \"stroke-width\": \"2\"\n    }\n    group.appendChild(SVGBuilder.createLine({ x: center.x, y: center.y + radius }, { x: center.x, y: box.y - SELECTION_MARGIN }, attrs3))\n\n    const handler = (ev: PointerEvent) =>\n    {\n      ev.preventDefault()\n      ev.stopPropagation()\n      this.rotator.continue(this.getPoint(ev))\n    }\n    const endHandler = (ev: PointerEvent) =>\n    {\n      ev.preventDefault()\n      ev.stopPropagation()\n      this.rotator.end(this.getPoint(ev))\n      this.renderer.layer.removeEventListener(\"pointermove\", handler)\n      this.renderer.layer.removeEventListener(\"pointercancel\", endHandler)\n      this.renderer.layer.removeEventListener(\"pointerleave\", endHandler)\n      this.renderer.layer.removeEventListener(\"pointerup\", endHandler)\n      this.resetSelectedGroup(this.model.symbolsSelected)\n    }\n\n    group.addEventListener(\"pointerdown\", (ev) =>\n    {\n      if (ev.button !== 0 || ev.buttons !== 1) {\n        return\n      }\n      ev.preventDefault()\n      ev.stopPropagation()\n      this.hideInteractElements()\n      this.rotator.start(ev.target as Element, this.getPoint(ev))\n      this.renderer.layer.addEventListener(\"pointermove\", handler)\n      this.renderer.layer.addEventListener(\"pointercancel\", endHandler)\n      this.renderer.layer.addEventListener(\"pointerleave\", endHandler)\n      this.renderer.layer.addEventListener(\"pointerup\", endHandler)\n    })\n    return group\n  }\n\n  protected createResizeGroup(box: TBox): SVGGElement\n  {\n    const group = SVGBuilder.createGroup({\n      role: SvgElementRole.Resize,\n      \"vector-effect\": \"non-scaling-size\",\n      \"stroke-width\": \"4\",\n      \"stroke\": \"#3e68ff\",\n    })\n    const P_NW: TPoint = { x: box.x - SELECTION_MARGIN, y: box.y - SELECTION_MARGIN }\n    const P_NE: TPoint = { x: box.x + box.width + SELECTION_MARGIN, y: box.y - SELECTION_MARGIN }\n    const P_SE: TPoint = { x: box.x + box.width + SELECTION_MARGIN, y: box.y + box.height + SELECTION_MARGIN }\n    const P_SW: TPoint = { x: box.x - SELECTION_MARGIN, y: box.y + box.height + SELECTION_MARGIN }\n\n    const bindEl = (el: SVGElement, transformOrigin: TPoint, cursor: string) =>\n    {\n      const handler = (ev: PointerEvent) =>\n      {\n        ev.preventDefault()\n        ev.stopPropagation()\n        this.resizer.continue(this.getPoint(ev))\n      }\n      const endHandler = (ev: PointerEvent) =>\n      {\n        ev.preventDefault()\n        ev.stopPropagation()\n        this.resizer.end(this.getPoint(ev))\n        this.renderer.layer.removeEventListener(\"pointermove\", handler)\n        this.renderer.layer.removeEventListener(\"pointercancel\", endHandler)\n        this.renderer.layer.removeEventListener(\"pointerleave\", endHandler)\n        this.renderer.layer.removeEventListener(\"pointerup\", endHandler)\n\n        this.renderer.layer.style.cursor = \"\"\n        this.resetSelectedGroup(this.model.symbolsSelected)\n      }\n\n      el.addEventListener(\"pointerdown\", (ev) =>\n      {\n        if (ev.button !== 0 || ev.buttons !== 1) {\n          return\n        }\n        ev.preventDefault()\n        ev.stopPropagation()\n        this.hideInteractElements()\n        this.renderer.layer.style.cursor = cursor\n        this.resizer.start(ev.target as Element, transformOrigin)\n        this.renderer.layer.addEventListener(\"pointermove\", handler)\n        this.renderer.layer.addEventListener(\"pointercancel\", endHandler)\n        this.renderer.layer.addEventListener(\"pointerleave\", endHandler)\n        this.renderer.layer.addEventListener(\"pointerup\", endHandler)\n      })\n    }\n\n    const sideResizeDefs = [\n      { direction: ResizeDirection.North, p1: P_NW, p2: P_NE, transformOrigin: { x: box.x + box.width / 2, y: box.y + box.height } },\n      { direction: ResizeDirection.East, p1: P_NE, p2: P_SE, transformOrigin: { x: box.x, y: box.y + box.height / 2 } },\n      { direction: ResizeDirection.South, p1: P_SW, p2: P_SE, transformOrigin: { x: box.x + box.width / 2, y: box.y } },\n      { direction: ResizeDirection.West, p1: P_NW, p2: P_SW, transformOrigin: { x: box.x + box.width, y: box.y + box.height / 2 } },\n    ]\n    sideResizeDefs.forEach(def =>\n    {\n      const attrs = {\n        role: SvgElementRole.Resize,\n        \"resize-direction\": def.direction,\n        \"transform-origin\": JSON.stringify(def.transformOrigin),\n        style: `cursor:${ def.direction };`\n      }\n      const lineResize = SVGBuilder.createLine(def.p1, def.p2, attrs)\n      bindEl(lineResize, def.transformOrigin, def.direction)\n      group.appendChild(lineResize)\n    })\n    const cornerResizeDefs = [\n      { direction: ResizeDirection.NorthWest, p: P_NW, transformOrigin: { x: box.x + box.width, y: box.y + box.height } },\n      { direction: ResizeDirection.NorthEast, p: P_NE, transformOrigin: { x: box.x, y: box.y + box.height } },\n      { direction: ResizeDirection.SouthEast, p: P_SE, transformOrigin: { x: box.x, y: box.y } },\n      { direction: ResizeDirection.SouthWest, p: P_SW, transformOrigin: { x: box.x + box.width, y: box.y } },\n    ]\n    cornerResizeDefs.forEach(def =>\n    {\n      const attrs = {\n        \"stroke-width\": \"4\",\n        role: SvgElementRole.Resize,\n        \"resize-direction\": def.direction,\n        \"transform-origin\": JSON.stringify(def.transformOrigin),\n        transform: \"scale(1, 1)\",\n        fill: \"white\",\n        style: `cursor:${ def.direction };`\n      }\n      const cornerResize = SVGBuilder.createCircle(def.p, 5, attrs)\n      bindEl(cornerResize, def.transformOrigin, def.direction)\n      group.appendChild(cornerResize)\n    })\n    return group\n  }\n\n  protected createInteractElementsGroup(symbols: TIISymbol[]): SVGGElement | undefined\n  {\n    this.#logger.info(\"createInteractElementsGroup\", { symbols })\n\n    if (!symbols.length) return\n\n    const symbolElementMap = symbols.map(s =>\n    {\n      return {\n        symbol: s,\n        element: this.renderer.getElementById(s.id),\n      }\n    })\n\n    const box1 = Box.createFromBoxes(symbols.map(s =>\n    {\n      return {\n        x: s.bounds.x - (s.style.width || 1),\n        y: s.bounds.y - (s.style.width || 1),\n        height: s.bounds.height + (s.style.width || 1) * 2,\n        width: s.bounds.width + (s.style.width || 1) * 2,\n      }\n    }))\n\n    const box2 = Box.createFromPoints(symbols.flatMap(s => s.vertices))\n    const box = Box.createFromBoxes([box1, box2])\n\n    const attrs = {\n      id: `selected-${ Date.now() }`,\n      role: SvgElementRole.InteractElementsGroup,\n    }\n    const surroundGroup = SVGBuilder.createGroup(attrs)\n    surroundGroup.appendChild(this.createTranslateRect(box))\n    surroundGroup.appendChild(this.createResizeGroup(box))\n    surroundGroup.appendChild(this.createRotateGroup(box))\n    const SURROUND_ATTRS = {\n      style: \"pointer-events: none\",\n      fill: \"transparent\",\n      stroke: \"#3e68ff\",\n      \"stroke-width\": \"1\",\n      \"stroke-dasharray\": \"4\",\n      \"vector-effect\": \"non-scaling-size\",\n      transform: \"rotate(0, 0, 0)\"\n    }\n    symbolElementMap.forEach(s =>\n    {\n      if (s.element) {\n        const bounds: TBox = {\n          x: s.symbol.bounds.x - (s.symbol.style.width || 1),\n          y: s.symbol.bounds.y - (s.symbol.style.width || 1),\n          height: s.symbol.bounds.height + (s.symbol.style.width || 1) * 2,\n          width: s.symbol.bounds.width + (s.symbol.style.width || 1) * 2,\n        }\n        if (s.symbol.type === SymbolType.Text) {\n          const t = s.symbol as IIText\n          SURROUND_ATTRS.transform = `rotate(${ t.rotation?.degree || 0 }, ${ t.rotation?.center.x || 0 }, ${ t.rotation?.center.y || 0 })`\n        }\n        else {\n          SURROUND_ATTRS.transform = \"rotate(0, 0, 0)\"\n        }\n        surroundGroup.prepend(SVGBuilder.createRect(bounds, SURROUND_ATTRS))\n      }\n    })\n    return surroundGroup\n  }\n\n  protected createEdgeResizeGroup(edge: TIIEdge): SVGGElement\n  {\n    const group = SVGBuilder.createGroup({\n      role: SvgElementRole.Resize,\n      \"vector-effect\": \"non-scaling-size\",\n      \"stroke-width\": \"4\",\n      \"stroke\": \"#3e68ff\",\n    })\n\n    const radius = 5\n    const attrs = {\n      role: SvgElementRole.Resize,\n      \"stroke-width\": \"4\",\n      \"stroke\": \"#3e68ff\",\n      fill: \"white\",\n      style: `cursor:grab;`\n    }\n    const bindEl = (el: SVGCircleElement, pointIndex: number) =>\n    {\n      const handler = (ev: PointerEvent) =>\n      {\n        ev.preventDefault()\n        ev.stopPropagation()\n        const point = this.getPoint(ev)\n        const { x, y } = this.editor.snaps.snapResize(point)\n        edge.vertices[pointIndex].x = x\n        edge.vertices[pointIndex].y = y\n        this.model.updateSymbol(edge)\n        this.renderer.drawSymbol(edge)\n      }\n      const endHandler = (ev: PointerEvent) =>\n      {\n        ev.preventDefault()\n        ev.stopPropagation()\n        const point = this.getPoint(ev)\n        const { x, y } = this.editor.snaps.snapResize(point)\n        edge.vertices[pointIndex].x = x\n        edge.vertices[pointIndex].y = y\n        this.renderer.layer.style.cursor = \"\"\n        this.editor.updateSymbol(edge)\n        this.renderer.layer.removeEventListener(\"pointermove\", handler)\n        this.renderer.layer.removeEventListener(\"pointercancel\", endHandler)\n        this.renderer.layer.removeEventListener(\"pointerleave\", endHandler)\n        this.renderer.layer.removeEventListener(\"pointerup\", endHandler)\n        this.editor.snaps.clearSnapToElementLines()\n        this.resetSelectedGroup(this.model.symbolsSelected)\n      }\n\n      el.addEventListener(\"pointerdown\", (ev) =>\n      {\n        if (ev.button !== 0 || ev.buttons !== 1) {\n          return\n        }\n        this.renderer.layer.style.cursor = \"grabbing\"\n        this.hideInteractElements()\n        ev.preventDefault()\n        ev.stopPropagation()\n        this.renderer.layer.addEventListener(\"pointermove\", handler)\n        this.renderer.layer.addEventListener(\"pointercancel\", endHandler)\n        this.renderer.layer.addEventListener(\"pointerleave\", endHandler)\n        this.renderer.layer.addEventListener(\"pointerup\", endHandler)\n      })\n    }\n    edge.vertices.forEach((p, i) =>\n    {\n      const pointEl = SVGBuilder.createCircle(p, radius, attrs)\n      bindEl(pointEl, i)\n      group.appendChild(pointEl)\n    })\n\n    return group\n  }\n\n  protected createInteractEdgeGroup(edge: TIIEdge): SVGGElement | undefined\n  {\n    this.#logger.info(\"createInteractEdgeGroup\", { edge })\n    const attrs = {\n      id: `selected-${ Date.now() }`,\n      role: SvgElementRole.InteractElementsGroup,\n    }\n    const surroundGroup = SVGBuilder.createGroup(attrs)\n    surroundGroup.appendChild(this.createTranslateRect(edge.bounds))\n    surroundGroup.appendChild(this.createEdgeResizeGroup(edge.clone()))\n    return surroundGroup\n  }\n\n  drawSelectedGroup(symbols: TIISymbol[]): void\n  {\n    if (!symbols.length) return\n    if (symbols.length === 1 && symbols[0].type === SymbolType.Edge) {\n      this.selectedGroup = this.createInteractEdgeGroup(symbols[0] as TIIEdge)\n    }\n    else {\n      this.selectedGroup = this.createInteractElementsGroup(symbols)\n    }\n    if (this.selectedGroup) {\n      this.renderer.layer.appendChild(this.selectedGroup)\n      const groupBox = this.selectedGroup.getBBox()\n      this.editor.menu.context.position.x = groupBox.x + groupBox.width / 2 - this.renderer.parent.clientLeft\n      this.editor.menu.context.position.y = groupBox.y + groupBox.height - this.renderer.parent.clientTop\n      this.editor.menu.context.show()\n    }\n    this.editor.menu.update()\n  }\n\n  resetSelectedGroup(symbols: TIISymbol[]): void\n  {\n    this.#logger.info(\"resetSelectedGroup\", { symbols })\n    this.removeSelectedGroup()\n    this.drawSelectedGroup(symbols)\n  }\n\n  removeSelectedGroup(): void\n  {\n    this.#logger.info(\"removeSelectedGroup\")\n    this.editor.menu.context.hide()\n    this.selectedGroup?.remove()\n    this.selectedGroup = undefined\n  }\n\n  hideInteractElements(): void\n  {\n    this.editor.menu.context.hide()\n    const query = `[role=${ SvgElementRole.Resize }],[role=${ SvgElementRole.Rotate }],[role=${ SvgElementRole.Translate }]`\n    this.selectedGroup?.querySelectorAll(query)\n      .forEach(el =>\n      {\n        el.setAttribute(\"visibility\", \"hidden\")\n      })\n  }\n\n  start(info: PointerInfo): void\n  {\n    this.removeSelectedGroup()\n    this.startSelectionPoint = info.pointer\n    this.endSelectionPoint = info.pointer\n    this.drawSelectingRect(this.selectionBox!)\n  }\n\n  continue(info: PointerInfo): TIISymbol[]\n  {\n    if (!this.startSelectionPoint) {\n      throw new Error(\"You need to call startSelectionByBox before\")\n    }\n    this.endSelectionPoint = info.pointer\n    const updatedSymbols: TIISymbol[] = []\n    this.model.symbols.forEach(s =>\n    {\n      if (s.selected !== s.overlaps(this.selectionBox!)) {\n        s.selected = s.overlaps(this.selectionBox!)\n        updatedSymbols.push(s)\n        this.renderer.drawSymbol(s)\n      }\n    })\n    this.drawSelectingRect(this.selectionBox!)\n    return updatedSymbols\n  }\n\n  end(info: PointerInfo): TIISymbol[]\n  {\n    const updatedSymbols = this.continue(info)\n    this.startSelectionPoint = undefined\n    this.endSelectionPoint = undefined\n    this.clearSelectingRect()\n    this.drawSelectedGroup(this.model.symbolsSelected)\n    this.editor.event.emitSelected(this.model.symbolsSelected)\n    this.editor.menu.style.update()\n    return updatedSymbols\n  }\n\n  protected async onContextMenu(info: PointerInfo): Promise<void>\n  {\n    let found = false\n    let currentEl = info.target as HTMLElement | null\n    const symbolTypesAllowed = [SymbolType.Edge.toString(), SymbolType.Shape.toString(), SymbolType.Stroke.toString(), SymbolType.Text.toString()]\n    while (currentEl && currentEl.tagName !== \"svg\" && !found) {\n      if (symbolTypesAllowed.includes(currentEl.getAttribute(\"type\") as string)) {\n        found = true\n      }\n      else {\n        currentEl = currentEl.parentElement\n      }\n    }\n    this.editor.unselectAll()\n    if (currentEl?.id) {\n      this.model.selectSymbol(currentEl.id)\n      this.renderer.drawSymbol(this.model.symbolsSelected[0])\n      this.drawSelectedGroup(this.model.symbolsSelected)\n      this.editor.updateLayerUI()\n    }\n    else {\n      this.editor.menu.context.position.x = info.pointer.x + this.renderer.parent.clientLeft\n      this.editor.menu.context.position.y = info.pointer.y + this.renderer.parent.clientTop\n      this.editor.menu.context.show()\n    }\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport { Box, IIText, SymbolType, TIISymbol, TIISymbolChar } from \"../symbol\"\nimport { SVGRenderer } from \"../renderer\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\n\n/**\n * @group Manager\n */\nexport class IITextManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.CONVERTER)\n  editor: InteractiveInkEditor\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get renderer(): SVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  get rowHeight(): number\n  {\n    return this.editor.configuration.rendering.guides.gap\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  protected drawSymbolHidden(text: IIText): SVGGElement\n  {\n    const clone = text.clone()\n    clone.id = \"text-to-measure\"\n    clone.chars.forEach(c => c.id += \"-to-measure\")\n    clone.decorators = []\n    this.renderer.layer.querySelector(`#${ clone.id }`)?.remove()\n    const el = this.renderer.buildElementFromSymbol(clone)!\n    el.setAttribute(\"visibility\", \"hidden\")\n    this.renderer.prependElement(el)\n    return el\n  }\n\n  setCharsBounds(text: IIText, textGroupEl: SVGGElement): IIText\n  {\n    const textEl = textGroupEl.querySelector(\"text\")\n    if (textEl) {\n      for (let i = 0; i < textEl.getNumberOfChars(); i++) {\n        const char = text.chars.at(i)\n        if (char) {\n          const ext = textEl.getExtentOfChar(i)\n          char.bounds = new Box(ext)\n        }\n      }\n    }\n    return text\n  }\n\n  setBounds(text: IIText): void\n  {\n    const element = this.drawSymbolHidden(text)\n    text.bounds = this.getElementBoundingBox(element)\n    this.setCharsBounds(text, element)\n  }\n\n  getElementBoundingBox(textElement: SVGElement): Box\n  {\n    return new Box(textElement.querySelector(\"text\")!.getBBox({ stroke: true, markers: true, clipped: true, fill: true }))\n  }\n\n  getBoundingBox(text: IIText): Box\n  {\n    const element = this.drawSymbolHidden(text)\n    return this.getElementBoundingBox(element)\n  }\n\n  getSpaceWidth(fontSize: number): number\n  {\n    const boundingBox = new Box({ height: 0, width: 0, x: 0, y: 0 })\n    const charSymbol: TIISymbolChar = {\n      id: `text-char-space`,\n      label: \"-\",\n      color: \"\",\n      fontSize,\n      fontWeight: \"normal\",\n      bounds: boundingBox\n    }\n    return this.getBoundingBox(new IIText([charSymbol], { x: 0, y: 0 }, boundingBox))?.width as number\n  }\n\n  updateBounds(textSymbol: IIText): IIText\n  {\n    this.setBounds(textSymbol)\n    this.model.updateSymbol(textSymbol)\n    return textSymbol\n  }\n\n  moveTextAfter(text: IIText, tx: number): TIISymbol[] | undefined\n  {\n    const row = this.model.getSymbolsByRowOrdered().find(r => r.rowIndex === this.model.getSymbolRowIndex(text))\n    if (row) {\n      const textsAfter = row.symbols.filter(s => s.type === SymbolType.Text && s.bounds.xMid > text.bounds.xMid) as IIText[]\n      textsAfter.forEach(symbol => {\n        symbol.point.x += tx\n        this.updateBounds(symbol)\n        this.model.updateSymbol(symbol)\n        this.renderer.drawSymbol(symbol)\n      })\n      return textsAfter\n    }\n    return\n  }\n}\n","import { SvgElementRole } from \"../Constants\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport\n{\n  EdgeKind,\n  IIStroke,\n  IIText,\n  IISymbolGroup,\n  ShapeKind,\n  SymbolType,\n  TIIEdge,\n  TIIShape,\n  TIISymbol,\n  TPoint,\n  TIIRecognized,\n  RecognizedKind\n} from \"../symbol\"\n\n/**\n * @group Manager\n */\nexport class IITranslateManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.TRANSFORMER)\n  editor: InteractiveInkEditor\n  interactElementsGroup?: SVGElement\n  transformOrigin!: TPoint\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  protected applyToStroke(stroke: IIStroke, tx: number, ty: number): IIStroke\n  {\n    stroke.pointers.forEach(p =>\n    {\n      p.x += tx\n      p.y += ty\n    })\n    return stroke\n  }\n\n  protected applyToShape(shape: TIIShape, tx: number, ty: number): TIIShape\n  {\n    switch (shape.kind) {\n      case ShapeKind.Ellipse:\n      case ShapeKind.Circle: {\n        shape.center.x += tx\n        shape.center.y += ty\n        return shape\n      }\n      case ShapeKind.Polygon: {\n        shape.points.forEach(p =>\n        {\n          p.x += tx\n          p.y += ty\n        })\n        return shape\n      }\n      default:\n        throw new Error(`Can't apply translate on shape, kind unknow: ${ JSON.stringify(shape) }`)\n    }\n  }\n\n  protected applyToEdge(edge: TIIEdge, tx: number, ty: number): TIIEdge\n  {\n    switch (edge.kind) {\n      case EdgeKind.Arc: {\n        edge.center.x += tx\n        edge.center.y += ty\n        return edge\n      }\n      case EdgeKind.Line: {\n        edge.start.x += tx\n        edge.start.y += ty\n        edge.end.x += tx\n        edge.end.y += ty\n        return edge\n      }\n      case EdgeKind.PolyEdge: {\n        edge.points.forEach(p =>\n        {\n          p.x += tx\n          p.y += ty\n        })\n        return edge\n      }\n    }\n\n    return edge\n  }\n\n  protected applyOnText(text: IIText, tx: number, ty: number): IIText\n  {\n    if (text.rotation) {\n      text.rotation.center = { x: text.rotation.center.x + tx, y: text.rotation.center.y + ty }\n    }\n    text.point.x += tx\n    text.point.y += ty\n    return this.editor.texter.updateBounds(text)\n  }\n\n  protected applyOnGroup(group: IISymbolGroup, tx: number, ty: number): IISymbolGroup\n  {\n    group.children.forEach(s => this.applyToSymbol(s, tx, ty))\n    return group\n  }\n\n  protected applyOnRecognizedSymbol(recognizedSymbol: TIIRecognized, tx: number, ty: number): TIIRecognized\n  {\n    recognizedSymbol.strokes.forEach(s => this.applyToStroke(s, tx, ty))\n    if (recognizedSymbol.kind === RecognizedKind.Text) {\n      recognizedSymbol.baseline += ty\n    }\n    return recognizedSymbol\n  }\n\n  applyToSymbol(symbol: TIISymbol, tx: number, ty: number): TIISymbol\n  {\n    this.#logger.info(\"applyToSymbol\", { symbol, tx, ty })\n    switch (symbol.type) {\n      case SymbolType.Stroke:\n        return this.applyToStroke(symbol, tx, ty)\n      case SymbolType.Shape:\n        return this.applyToShape(symbol, tx, ty)\n      case SymbolType.Edge:\n        return this.applyToEdge(symbol, tx, ty)\n      case SymbolType.Text:\n        return this.applyOnText(symbol, tx, ty)\n      case SymbolType.Group:\n        return this.applyOnGroup(symbol, tx, ty)\n      case SymbolType.Recognized:\n        return this.applyOnRecognizedSymbol(symbol, tx, ty)\n      default:\n        throw new Error(`Can't apply translate on symbol, type unknow: ${ JSON.stringify(symbol) }`)\n    }\n  }\n\n  translate(symbols: TIISymbol[], tx: number, ty: number, addToHistory = true): Promise<void>\n  {\n    this.#logger.info(\"translate\", { symbols, tx, ty })\n    symbols.forEach(s =>\n    {\n      this.applyToSymbol(s, tx, ty)\n      this.model.updateSymbol(s)\n      this.editor.renderer.drawSymbol(s)\n    })\n    if (addToHistory) {\n      this.editor.history.push(this.model, { translate: [{ symbols: this.model.symbolsSelected, tx, ty }] })\n    }\n    const strokes = this.editor.extractStrokesFromSymbols(symbols)\n    return this.editor.recognizer.transformTranslate(strokes.map(s => s.id), tx, ty)\n  }\n\n  translateElement(id: string, tx: number, ty: number): void\n  {\n    this.#logger.info(\"translateElement\", { id, tx, ty })\n    this.editor.renderer.setAttribute(id, \"transform\", `translate(${ tx },${ ty })`)\n  }\n\n  start(target: Element, origin: TPoint): void\n  {\n    this.#logger.info(\"start\", { origin })\n    this.interactElementsGroup = (target.closest(`[role=${ SvgElementRole.InteractElementsGroup }]`) as unknown) as SVGGElement\n    this.transformOrigin = origin\n  }\n\n  continue(point: TPoint): { tx: number, ty: number }\n  {\n    this.#logger.info(\"continue\", { point })\n    if (!this.interactElementsGroup) {\n      throw new Error(\"Can't translate, you must call start before\")\n    }\n\n    let tx = point.x - this.transformOrigin.x\n    let ty = point.y - this.transformOrigin.y\n\n    const nudge = this.editor.snaps.snapTranslate(tx, ty)\n    tx = nudge.x\n    ty = nudge.y\n\n    this.translateElement(this.interactElementsGroup.id as string, tx, ty)\n    this.model.symbolsSelected.forEach(s =>\n    {\n      this.translateElement(s.id as string, tx, ty)\n    })\n    return {\n      tx,\n      ty\n    }\n  }\n\n  async end(point: TPoint): Promise<void>\n  {\n    this.#logger.info(\"end\", { point })\n    const { tx, ty } = this.continue(point)\n    this.editor.snaps.clearSnapToElementLines()\n    this.translate(this.model.symbolsSelected, tx, ty)\n\n    this.interactElementsGroup = undefined\n    this.editor.svgDebugger.apply()\n  }\n\n}\n","import { SELECTION_MARGIN, EditorWriteTool } from \"../Constants\"\nimport { TGesture } from \"../gesture\"\nimport { IIModel } from \"../model\"\nimport\n{\n  EdgeDecoration,\n  EdgeKind,\n  IIEdgeLine,\n  IIShapePolygon,\n  IIShapeCircle,\n  IIShapeEllipse,\n  IIStroke,\n  SymbolType,\n  TIIEdge,\n  TIISymbol,\n  TPoint,\n  TPointer\n} from \"../symbol\"\nimport { RecognizerWebSocket } from \"../recognizer\"\nimport { SVGRenderer } from \"../renderer\"\nimport { TStyle } from \"../style\"\nimport { IIHistoryManager } from \"../history\"\nimport { IIGestureManager } from \"../gesture/IIGestureManager\"\nimport { IISnapManager } from \"../snap/IISnapManager\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { PointerInfo } from \"../grabber\"\nimport { AbstractWriterManager } from \"./AbstractWriterManager\"\n\n\n/**\n * @group Manager\n */\nexport class IIWriterManager extends AbstractWriterManager\n{\n  #tool: EditorWriteTool = EditorWriteTool.Pencil\n  detectGesture: boolean = true\n  editor: InteractiveInkEditor\n  currentSymbolOrigin?: TPoint\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    super(editor)\n    this.editor = editor\n  }\n\n  get tool(): EditorWriteTool\n  {\n    return this.#tool\n  }\n  set tool(wt: EditorWriteTool)\n  {\n    this.#tool = wt\n    if (wt !== EditorWriteTool.Pencil) {\n      this.editor.layers.root.classList.add(\"shape\")\n    }\n    else {\n      this.editor.layers.root.classList.remove(\"shape\")\n    }\n    this.editor.unselectAll()\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get renderer(): SVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  get history(): IIHistoryManager\n  {\n    return this.editor.history\n  }\n\n  get gestureManager(): IIGestureManager\n  {\n    return this.editor.gesture\n  }\n\n  get snaps(): IISnapManager\n  {\n    return this.editor.snaps\n  }\n\n  get recognizer(): RecognizerWebSocket\n  {\n    return this.editor.recognizer\n  }\n\n  attach(layer: HTMLElement): void\n  {\n    this.grabber.attach(layer)\n    this.grabber.onPointerDown = this.start.bind(this)\n    this.grabber.onPointerMove = this.continue.bind(this)\n    this.grabber.onPointerUp = this.end.bind(this)\n  }\n\n  detach(): void\n  {\n    this.grabber.detach()\n  }\n\n  protected needContextLessGesture(stroke: IIStroke): boolean\n  {\n    const strokeBoundsWithMargin = this.editor.getSymbolsBounds([stroke], 2 * SELECTION_MARGIN)\n    return this.detectGesture && this.model.symbols.some(s =>\n    {\n      switch (s.type) {\n        case SymbolType.Recognized:\n        case SymbolType.Stroke:\n          return false\n        case SymbolType.Group:\n          if (s.containsOnlyStroke()) {\n            return false\n          }\n          else {\n            return s.bounds.overlaps(strokeBoundsWithMargin)\n          }\n        default:\n          return s.bounds.overlaps(strokeBoundsWithMargin)\n      }\n    })\n  }\n\n  protected createCurrentSymbol(pointer: TPointer, style: TStyle, pointerType: string): TIISymbol\n  {\n    switch (this.tool) {\n      case EditorWriteTool.Pencil:\n        this.model.currentSymbol = new IIStroke(style, pointerType)\n        break\n      case EditorWriteTool.Rectangle:\n        this.model.currentSymbol = IIShapePolygon.createRectangleBetweenPoints(pointer, pointer, style)\n        break\n      case EditorWriteTool.Triangle:\n        this.model.currentSymbol = IIShapePolygon.createTriangleBetweenPoints(pointer, pointer, style)\n        break\n      case EditorWriteTool.Parallelogram:\n        this.model.currentSymbol = IIShapePolygon.createParallelogramBetweenPoints(pointer, pointer, style)\n        break\n      case EditorWriteTool.Rhombus:\n        this.model.currentSymbol = IIShapePolygon.createRhombusBetweenPoints(pointer, pointer, style)\n        break\n      case EditorWriteTool.Circle:\n        this.model.currentSymbol = IIShapeCircle.createBetweenPoints(pointer, pointer, style)\n        break\n      case EditorWriteTool.Ellipse:\n        this.model.currentSymbol = IIShapeEllipse.createBetweenPoints(pointer, pointer, style)\n        break\n      case EditorWriteTool.Line:\n      case EditorWriteTool.Arrow:\n      case EditorWriteTool.DoubleArrow: {\n        let startDecoration, endDecoration\n        if (this.tool === EditorWriteTool.Arrow) {\n          endDecoration = EdgeDecoration.Arrow\n        }\n        else if (this.tool === EditorWriteTool.DoubleArrow) {\n          startDecoration = EdgeDecoration.Arrow\n          endDecoration = EdgeDecoration.Arrow\n        }\n        this.model.currentSymbol = new IIEdgeLine(pointer, pointer, startDecoration, endDecoration, style)\n        break\n      }\n      default:\n        throw new Error(`Can't create symbol, tool is unknow: \"${ this.tool }\"`)\n    }\n    return this.updateCurrentSymbol(pointer)\n  }\n\n  protected updateCurrentSymbolShape(pointer: TPointer): void\n  {\n    switch (this.tool) {\n      case EditorWriteTool.Rectangle:\n        IIShapePolygon.updateRectangleBetweenPoints(this.model.currentSymbol as IIShapePolygon, this.currentSymbolOrigin!, pointer)\n        break\n      case EditorWriteTool.Triangle:\n        IIShapePolygon.updateTriangleBetweenPoints(this.model.currentSymbol as IIShapePolygon, this.currentSymbolOrigin!, pointer)\n        break\n      case EditorWriteTool.Parallelogram:\n        IIShapePolygon.updateParallelogramBetweenPoints(this.model.currentSymbol as IIShapePolygon, this.currentSymbolOrigin!, pointer)\n        break\n      case EditorWriteTool.Rhombus:\n        IIShapePolygon.updateRhombusBetweenPoints(this.model.currentSymbol as IIShapePolygon, this.currentSymbolOrigin!, pointer)\n        break\n      case EditorWriteTool.Circle:\n        IIShapeCircle.updateBetweenPoints(this.model.currentSymbol as IIShapeCircle, this.currentSymbolOrigin!, pointer)\n        break\n      case EditorWriteTool.Ellipse:\n        IIShapeEllipse.updateBetweenPoints(this.model.currentSymbol as IIShapeEllipse, this.currentSymbolOrigin!, pointer)\n        break\n    }\n  }\n\n  protected updateCurrentSymbolEdge(pointer: TPointer): void\n  {\n    const edge = this.model.currentSymbol as TIIEdge\n    switch (edge.kind) {\n      case EdgeKind.Line:\n        edge.end = pointer\n        break\n    }\n  }\n\n  protected updateCurrentSymbol(pointer: TPointer): TIISymbol\n  {\n    if (!this.model.currentSymbol) {\n      throw new Error(\"Can't update current symbol because currentSymbol is undefined\")\n    }\n\n    switch (this.model.currentSymbol.type) {\n      case SymbolType.Stroke:\n        this.model.currentSymbol!.addPointer(pointer)\n        break\n      case SymbolType.Shape:\n        this.updateCurrentSymbolShape(pointer)\n        break\n      case SymbolType.Edge:\n        this.updateCurrentSymbolEdge(pointer)\n        break\n    }\n    return this.model.currentSymbol\n  }\n\n  start(info: PointerInfo): void\n  {\n    const localPointer = info.pointer\n    if (this.tool !== EditorWriteTool.Pencil) {\n      const { x, y } = this.snaps.snapResize(localPointer)\n      localPointer.x = x\n      localPointer.y = y\n    }\n    this.currentSymbolOrigin = localPointer\n    this.createCurrentSymbol(localPointer, this.editor.penStyle, info.pointerType)\n    this.renderer.drawSymbol(this.model.currentSymbol!)\n  }\n\n  continue(info: PointerInfo): void\n  {\n    const localPointer = info.pointer\n    if (this.tool !== EditorWriteTool.Pencil) {\n      const { x, y } = this.snaps.snapResize(localPointer)\n      localPointer.x = x\n      localPointer.y = y\n    }\n    this.updateCurrentSymbol(localPointer)\n    this.renderer.drawSymbol(this.model.currentSymbol!)\n  }\n\n  protected async interactWithBackend(stroke: IIStroke): Promise<void>\n  {\n    const localStroke = stroke.clone()\n    let gestureFromContextLess: TGesture | undefined\n    if (this.needContextLessGesture(stroke)) {\n      gestureFromContextLess = await this.gestureManager.getGestureFromContextLess(localStroke)\n    }\n    if (gestureFromContextLess) {\n      this.history.pop()\n      this.recognizer.addStrokes([localStroke], this.detectGesture)\n      await this.gestureManager.apply(localStroke, gestureFromContextLess)\n    }\n    else {\n      const gesture = await this.recognizer.addStrokes([localStroke], this.detectGesture)\n      if (gesture) {\n        this.history.pop()\n        await this.gestureManager.apply(localStroke, gesture)\n      }\n    }\n  }\n\n  async end(info: PointerInfo): Promise<void>\n  {\n    const localPointer = info.pointer\n    if (this.tool !== EditorWriteTool.Pencil) {\n      const { x, y } = this.snaps.snapResize(localPointer)\n      localPointer.x = x\n      localPointer.y = y\n    }\n    const localSymbol = this.updateCurrentSymbol(localPointer)\n    this.model.currentSymbol = undefined\n    this.currentSymbolOrigin = undefined\n    this.snaps.clearSnapToElementLines()\n\n    this.renderer.drawSymbol(localSymbol!)\n    this.model.addSymbol(localSymbol)\n    this.history.push(this.model, { added: [localSymbol] })\n\n    if (localSymbol.type === SymbolType.Stroke) {\n      await this.interactWithBackend(localSymbol)\n    }\n  }\n}\n","import { LoggerManager, LoggerCategory } from \"../logger\"\nimport { IIModel, JIIXEdgeKind } from \"../model\"\nimport { Box, IIText, SymbolType, TBox, TIISymbol } from \"../symbol\"\nimport { SVGRenderer, SVGRendererConst, SVGBuilder } from \"../renderer\"\nimport { convertBoundingBoxMillimeterToPixel, createUUID } from \"../utils\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\n\n/**\n * @group Manager\n */\nexport class IIDebugSVGManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.SVGDEBUG)\n  #snapPointsVisibility = false\n  #verticesVisibility = false\n  #boundingBoxVisibility = false\n  #recognitionBoxVisibility = false\n  #recognitionItemBoxVisibility = false\n\n  editor: InteractiveInkEditor\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get renderer(): SVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  get snapPointsVisibility(): boolean\n  {\n    return this.#snapPointsVisibility\n  }\n  set snapPointsVisibility(show: boolean)\n  {\n    this.#snapPointsVisibility = show\n    this.debugSnapPoints()\n  }\n\n  get verticesVisibility(): boolean\n  {\n    return this.#verticesVisibility\n  }\n  set verticesVisibility(show: boolean)\n  {\n    this.#verticesVisibility = show\n    this.debugVertices()\n  }\n\n  get boundingBoxVisibility(): boolean\n  {\n    return this.#boundingBoxVisibility\n  }\n  set boundingBoxVisibility(show: boolean)\n  {\n    this.#boundingBoxVisibility = show\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    this.#boundingBoxVisibility ? this.showBoundingBox() : this.hideBoundingBox()\n  }\n\n  get recognitionBoxVisibility(): boolean\n  {\n    return this.#recognitionBoxVisibility\n  }\n  set recognitionBoxVisibility(show: boolean)\n  {\n    this.#recognitionBoxVisibility = show\n    this.debugRecognitionBox()\n  }\n\n  get recognitionItemBoxVisibility(): boolean\n  {\n    return this.#recognitionItemBoxVisibility\n  }\n  set recognitionItemBoxVisibility(show: boolean)\n  {\n    this.#recognitionItemBoxVisibility = show\n    this.debugRecognitionItemBox()\n  }\n\n  protected showSnapPoints(): void\n  {\n    this.#logger.info(\"showSnapPoints\")\n    if (this.model.currentSymbol) {\n      this.model.currentSymbol.snapPoints.forEach(p => this.renderer.drawCircle(p, 2, { fill: \"blue\", \"debug\": \"snap-points\" }))\n    }\n    this.model.symbols.forEach(s => s.snapPoints.forEach(p => this.renderer.drawCircle(p, 2, { fill: \"blue\", \"debug\": \"snap-points\" })))\n  }\n  protected hideSnapPoints(): void\n  {\n    this.#logger.info(\"hideSnapPoints\")\n    this.renderer.clearElements({ attrs: { \"debug\": \"snap-points\" } })\n  }\n  debugSnapPoints(): void\n  {\n    this.hideSnapPoints()\n    if (this.snapPointsVisibility) {\n      this.showSnapPoints()\n    }\n  }\n\n  protected showVertices(): void\n  {\n    this.#logger.info(\"showVertices\")\n    if (this.model.currentSymbol) {\n      this.model.currentSymbol.vertices.forEach(p => this.renderer.drawCircle(p, 2, { fill: \"red\", \"debug\": \"vertices\" }))\n    }\n    this.model.symbols.forEach(s => s.vertices.forEach(p => this.renderer.drawCircle(p, 2, { fill: \"red\", \"debug\": \"vertices\" })))\n  }\n  protected hideVertices(): void\n  {\n    this.#logger.info(\"hideVertices\")\n    this.renderer.clearElements({ attrs: { \"debug\": \"vertices\" } })\n  }\n  debugVertices(): void\n  {\n    this.hideVertices()\n    if (this.verticesVisibility) {\n      this.showVertices()\n    }\n  }\n\n  protected drawBoundingBox(symbols: TIISymbol[]): void\n  {\n    const symbolAttrs = {\n      style: \"pointer-events: none\",\n      fill: \"transparent\",\n      stroke: \"red\",\n      \"stroke-width\": \"1\",\n      \"stroke-dasharray\": \"5 5\",\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"debug\": \"bounding-box\"\n    }\n    const charAttrs = {\n      style: \"pointer-events: none\",\n      fill: \"transparent\",\n      stroke: \"orange\",\n      \"stroke-width\": \"1\",\n      \"stroke-dasharray\": \"0 5 0\",\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"debug\": \"bounding-box\"\n    }\n    symbols.forEach(s =>\n    {\n      const symEl = this.renderer.getElementById(s.id)\n      if (symEl) {\n        if (s.type === SymbolType.Text) {\n          const text = s as IIText\n          let transform: string = \"\"\n          if (text.rotation) {\n            transform = `rotate(${ text.rotation.degree }, ${ text.rotation.center.x }, ${ text.rotation.center.y })`\n          }\n          text.chars.forEach(c =>\n          {\n            const ca = {\n              ...charAttrs,\n              char: c.label,\n              transform\n            }\n            symEl.insertAdjacentElement(\"beforebegin\", SVGBuilder.createRect(c.bounds, ca))\n          })\n          const sa = {\n            ...symbolAttrs,\n            symbol: s.id,\n            transform\n          }\n          symEl.insertAdjacentElement(\"beforebegin\", SVGBuilder.createRect(s.bounds, sa))\n        }\n        else {\n          const sa = {\n            ...symbolAttrs,\n            symbol: s.id,\n          }\n          symEl.insertAdjacentElement(\"beforebegin\", SVGBuilder.createRect(s.bounds, sa))\n        }\n      }\n    })\n  }\n  protected showBoundingBox(): void\n  {\n    this.#logger.info(\"showBoundingBox\")\n    if (this.model.currentSymbol) {\n      this.drawBoundingBox([this.model.currentSymbol])\n    }\n    this.drawBoundingBox(this.model.symbols)\n  }\n  protected hideBoundingBox(): void\n  {\n    this.#logger.info(\"hideBoundingBox\")\n    this.renderer.clearElements({ attrs: { \"debug\": \"bounding-box\" } })\n  }\n  debugBoundingBox(): void\n  {\n    this.hideBoundingBox()\n    if (this.boundingBoxVisibility) {\n      this.showBoundingBox()\n    }\n  }\n\n  protected drawRecognitionBox(box: TBox, infos?: string[]): void\n  {\n    const COLOR = \"green\"\n    const TEXT_HEIGHT = 20\n    const recognitionGroup = SVGBuilder.createGroup({ \"debug\": \"recognition-box\" })\n\n    const rect = SVGBuilder.createRect(box, { fill: \"transparent\", stroke: COLOR, style: SVGRendererConst.noSelection })\n    recognitionGroup.appendChild(rect)\n\n    const infosGroup = SVGBuilder.createGroup({ id: `infos-group-${ createUUID() }` })\n    const infoX = box.x + box.width\n    let infoY = box.y + TEXT_HEIGHT / 2\n    infos?.forEach(w =>\n    {\n      infosGroup.appendChild(SVGBuilder.createText({ x: infoX, y: infoY }, w, { stroke: COLOR, style: SVGRendererConst.noSelection }))\n      infoY += TEXT_HEIGHT\n    })\n    recognitionGroup.appendChild(infosGroup)\n    this.renderer.layer.appendChild(recognitionGroup)\n\n    const infosGroupBox = infosGroup.getBBox()\n    const rectBox = {\n      width: infosGroupBox.width + 10,\n      height: infosGroupBox.height + 10,\n      x: infosGroupBox.x - 5,\n      y: infosGroupBox.y - 5,\n    }\n    const rectTranslate = SVGBuilder.createRect(rectBox, { fill: \"white\", style: \"cursor:move\", stroke: COLOR })\n    infosGroup.prepend(rectTranslate)\n\n    const translateEl = (e: PointerEvent) =>\n    {\n      e.preventDefault()\n      e.stopPropagation()\n      const originX = Number(this.renderer.getAttribute(infosGroup.id, \"originX\"))\n      const originY = Number(this.renderer.getAttribute(infosGroup.id, \"originY\"))\n      const tx = e.clientX - originX\n      const ty = e.clientY - originY\n      this.renderer.setAttribute(infosGroup.id, \"transform\", `translate(${ tx },${ ty })`)\n      const newRectBox = {\n        width: rectBox.width,\n        height: rectBox.height,\n        x: rectBox.x + tx,\n        y: rectBox.y + ty,\n      }\n      this.renderer.removeSymbol(`connection-${ infosGroup.id }`)\n      this.renderer.drawConnectionBetweenBox(`connection-${ infosGroup.id }`, box, newRectBox, \"corners\", { stroke: COLOR, debug: \"recognition-box-link\" })\n    }\n\n    rectTranslate.addEventListener(\"pointerdown\", e =>\n    {\n      e.preventDefault()\n      e.stopPropagation()\n      if (!this.renderer.getAttribute(infosGroup.id, \"originX\")) {\n        this.renderer.setAttribute(infosGroup.id, \"originX\", e.clientX.toString())\n        this.renderer.setAttribute(infosGroup.id, \"originY\", e.clientY.toString())\n      }\n      this.renderer.layer.addEventListener(\"pointermove\", translateEl)\n      this.renderer.layer.addEventListener(\"pointerup\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n      this.renderer.layer.addEventListener(\"pointerleave\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n      this.renderer.layer.addEventListener(\"pointercancel\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n    })\n  }\n\n  protected async showRecognitionBox(): Promise<void>\n  {\n    this.#logger.info(\"showRecognitionBox\")\n    await this.editor.export([\"application/vnd.myscript.jiix\"])\n    const jiix = this.model.exports?.[\"application/vnd.myscript.jiix\"]\n    this.#logger.debug(\"showRecognitionBox\", { jiix })\n    if (jiix) {\n      if (!jiix[\"bounding-box\"]) {\n        this.#logger.warn(\"drawRecognitionBox\", \"You must to enabled configuration.recognition.exports[\\\"bounding-box\\\"]\")\n        return\n      }\n      jiix.elements?.forEach(el =>\n      {\n        switch (el.type) {\n          case \"Node\": {\n            if (el[\"bounding-box\"]) {\n              const box = convertBoundingBoxMillimeterToPixel(el[\"bounding-box\"])\n              const hideProperties = [\"bounding-box\", \"items\", \"id\"]\n              const infos = Object.keys(el).filter(k => !hideProperties.includes(k)).map(k => `${ k }: ${ JSON.stringify(el[k as keyof typeof el]) }`)\n              this.drawRecognitionBox(box, infos)\n            }\n            break\n          }\n          case \"Text\": {\n            el.words?.forEach(w =>\n            {\n              if (w?.[\"bounding-box\"]) {\n                const box = convertBoundingBoxMillimeterToPixel(w[\"bounding-box\"])\n                this.drawRecognitionBox(box, [`type: ${ el.type }`, `candidates: ${ JSON.stringify(w.candidates || []) }`])\n              }\n            })\n            break\n          }\n          case \"Edge\": {\n            if (el.kind === JIIXEdgeKind.PolyEdge) {\n              const infos = [\n                `type: ${ el.type }`,\n                `kind: ${ el.kind }`,\n              ]\n              el.edges.forEach((e, i) =>\n              {\n                let inf = `edge-${ i }: [{ x1: ${ e.x1 }, y2: ${ e.y1 } },{ x2: ${ e.x2 }, y2: ${ e.y2 } }]`\n                if (e.p1Decoration) {\n                  inf += `, p1Decoration: ${ e.p1Decoration }`\n                }\n                if (e.p2Decoration) {\n                  inf += `, p2Decoration: ${ e.p2Decoration }`\n                }\n                infos.push(inf)\n              })\n              const box = convertBoundingBoxMillimeterToPixel(Box.createFromBoxes(el.edges.map(e => e[\"bounding-box\"] as TBox)))\n              this.drawRecognitionBox(box, infos)\n            }\n            else if (el[\"bounding-box\"]) {\n              const box = convertBoundingBoxMillimeterToPixel(el[\"bounding-box\"])\n              const hideProperties = [\"bounding-box\", \"items\", \"id\", \"ports\", \"connected\"]\n              const infos = Object.keys(el).filter(k => !hideProperties.includes(k)).map(k => `${ k }: ${ JSON.stringify(el[k as keyof typeof el]) }`)\n              this.drawRecognitionBox(box, infos)\n            }\n            break\n          }\n          default: {\n            this.#logger.warn(\"drawRecognitionBox\", `Unknow jiix element type: ${ el.type }`)\n            break\n          }\n        }\n      })\n    }\n  }\n  protected clearRecognitionBox(): void\n  {\n    this.#logger.info(\"clearRecognitionBox\")\n    this.renderer.clearElements({ attrs: { \"debug\": \"recognition-box\" } })\n    this.renderer.clearElements({ attrs: { \"debug\": \"recognition-box-link\" } })\n  }\n  async debugRecognitionBox(): Promise<void>\n  {\n    this.clearRecognitionBox()\n    if (this.#recognitionBoxVisibility) {\n      this.showRecognitionBox()\n    }\n  }\n\n  protected drawRecognitionItemBox(box: TBox, label?: string, chars?: string[]): void\n  {\n    const COLOR = \"blue\"\n    const CHAR_SIZE = 14\n\n    const recognitionItemGroup = SVGBuilder.createGroup({ \"debug\": \"recognition-item-box\" })\n    const rect = SVGBuilder.createRect(box, { fill: \"transparent\", stroke: COLOR, style: SVGRendererConst.noSelection })\n    recognitionItemGroup.appendChild(rect)\n\n    const charX = box.x\n    let charY = box.y - CHAR_SIZE\n\n    const charsGroup = SVGBuilder.createGroup({ id: `chars-group-${ createUUID() }` })\n    if (label) {\n      charsGroup.appendChild(SVGBuilder.createText({ x: charX, y: charY }, `label: ${ label }`, { fill: COLOR, \"font-size\": CHAR_SIZE.toString(), style: SVGRendererConst.noSelection }))\n    }\n    if (chars?.length) {\n      charY += CHAR_SIZE\n      charsGroup.appendChild(SVGBuilder.createText({ x: charX, y: charY }, `[${ chars.join(\", \") }]`, { fill: COLOR, \"font-size\": CHAR_SIZE.toString(), style: SVGRendererConst.noSelection }))\n    }\n\n    recognitionItemGroup.appendChild(charsGroup)\n    this.renderer.layer.appendChild(recognitionItemGroup)\n\n    const charsGroupBox = charsGroup.getBBox()\n    const rectBox = {\n      width: charsGroupBox.width + 10,\n      height: charsGroupBox.height + 10,\n      x: charsGroupBox.x - 5,\n      y: charsGroupBox.y - 5,\n    }\n    const rectTranslate = SVGBuilder.createRect(rectBox, { fill: \"white\", style: \"cursor:move\", stroke: COLOR })\n    charsGroup.prepend(rectTranslate)\n\n    const translateEl = (e: PointerEvent) =>\n    {\n      e.preventDefault()\n      e.stopPropagation()\n      const originX = Number(this.renderer.getAttribute(charsGroup.id, \"originX\"))\n      const originY = Number(this.renderer.getAttribute(charsGroup.id, \"originY\"))\n      const tx = e.clientX - originX\n      const ty = e.clientY - originY\n      this.renderer.setAttribute(charsGroup.id, \"transform\", `translate(${ tx },${ ty })`)\n      const newRectBox = {\n        width: rectBox.width,\n        height: rectBox.height,\n        x: rectBox.x + tx,\n        y: rectBox.y + ty,\n      }\n      this.renderer.removeSymbol(`connection-${ charsGroup.id }`)\n      this.renderer.drawConnectionBetweenBox(`connection-${ charsGroup.id }`, box, newRectBox, \"corners\", { stroke: COLOR, debug: \"recognition-item-box-link\" })\n    }\n\n    rectTranslate.addEventListener(\"pointerdown\", e =>\n    {\n      e.preventDefault()\n      e.stopPropagation()\n      if (!this.renderer.getAttribute(charsGroup.id, \"originX\")) {\n        this.renderer.setAttribute(charsGroup.id, \"originX\", e.clientX.toString())\n        this.renderer.setAttribute(charsGroup.id, \"originY\", e.clientY.toString())\n      }\n      this.renderer.layer.addEventListener(\"pointermove\", translateEl)\n    })\n    this.renderer.layer.addEventListener(\"pointerup\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n    this.renderer.layer.addEventListener(\"pointerleave\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n    this.renderer.layer.addEventListener(\"pointercancel\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n\n  }\n  protected async showRecognitionItemBox(): Promise<void>\n  {\n    this.#logger.info(\"showRecognitionBoxItem\")\n    await this.editor.export([\"application/vnd.myscript.jiix\"])\n    const jiix = this.model.exports?.[\"application/vnd.myscript.jiix\"]\n    this.#logger.debug(\"showRecognitionBoxItem\", { jiix })\n    if (jiix) {\n      jiix.elements?.forEach(el =>\n      {\n        switch (el.type) {\n          case \"Text\": {\n            el.chars?.forEach(c =>\n            {\n              if (c?.[\"bounding-box\"]) {\n                const box = convertBoundingBoxMillimeterToPixel(c[\"bounding-box\"])\n                this.drawRecognitionItemBox(box, c.label, c.candidates)\n              }\n            })\n            break\n          }\n          case \"Node\": {\n            if (el?.[\"bounding-box\"]) {\n              const box = convertBoundingBoxMillimeterToPixel(el[\"bounding-box\"])\n              this.drawRecognitionItemBox(box, el.kind)\n            }\n            break\n          }\n          case \"Edge\": {\n            if (el.kind === JIIXEdgeKind.PolyEdge) {\n              el.edges.forEach(e =>\n              {\n                const box = convertBoundingBoxMillimeterToPixel(e[\"bounding-box\"])\n                this.drawRecognitionItemBox(box, e.kind)\n              })\n            }\n            else if (el[\"bounding-box\"]) {\n              const box = convertBoundingBoxMillimeterToPixel(el[\"bounding-box\"])\n              this.drawRecognitionItemBox(box, el.kind)\n            }\n            break\n          }\n          default:\n            this.#logger.warn(\"drawRecognitionBoxItem\", `Unknow jiix element type: ${ el.type }`)\n            break\n        }\n      })\n    }\n  }\n  protected clearRecognitionItemBox(): void\n  {\n    this.#logger.info(\"clearRecognitionBoxItem\")\n    this.renderer.clearElements({ attrs: { \"debug\": \"recognition-item-box\" } })\n    this.renderer.clearElements({ attrs: { \"debug\": \"recognition-item-box-link\" } })\n  }\n  async debugRecognitionItemBox(): Promise<void>\n  {\n    this.clearRecognitionItemBox()\n    if (this.#recognitionItemBoxVisibility) {\n      this.showRecognitionItemBox()\n    }\n  }\n\n  apply(): void\n  {\n    this.debugBoundingBox()\n    this.debugVertices()\n    this.debugSnapPoints()\n    this.debugRecognitionBox()\n    this.debugRecognitionItemBox()\n  }\n}\n","import { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { PointerEventGrabber, PointerInfo } from \"../grabber\"\nimport { SVGRenderer } from \"../renderer\"\n\n/**\n * @group Manager\n */\nexport class IIMoveManager\n{\n  grabber: PointerEventGrabber\n  editor: InteractiveInkEditor\n\n  origin?: {\n    left: number,\n    top: number,\n    x: number,\n    y: number\n  }\n\n  constructor(editor: InteractiveInkEditor)\n  {\n    this.editor = editor\n    this.grabber = new PointerEventGrabber(editor.configuration.grabber)\n  }\n\n  get renderer(): SVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  attach(layer: HTMLElement): void\n  {\n    this.grabber.attach(layer)\n    this.grabber.onPointerDown = this.start.bind(this)\n    this.grabber.onPointerMove = this.continue.bind(this)\n    this.grabber.onPointerUp = this.end.bind(this)\n  }\n\n  detach(): void\n  {\n    this.grabber.detach()\n  }\n\n  start(info: PointerInfo): void\n  {\n    this.origin = {\n      left: this.renderer.parent.scrollLeft,\n      top: this.renderer.parent.scrollTop,\n      x: info.clientX,\n      y: info.clientY,\n    }\n  }\n\n  continue(info: PointerInfo): void\n  {\n    if (!this.origin) {\n      throw new Error(\"Can't move cause origin is undefined\")\n    }\n    const dx = info.clientX - this.origin.x\n    const dy = info.clientY - this.origin.y\n\n    this.renderer.parent.scrollTop = this.origin.top - dy\n    this.renderer.parent.scrollLeft = this.origin.left - dx\n  }\n\n  end(info: PointerInfo): void\n  {\n    this.continue(info)\n    this.origin = undefined\n  }\n}\n","import { LoggerManager, LoggerCategory } from \"../logger\"\nimport { IModel } from \"../model\"\nimport { Box, IIStroke, IIText, SymbolType, TBox, TIISymbol } from \"../symbol\"\nimport { SVGRenderer, SVGRendererConst, SVGBuilder } from \"../renderer\"\nimport { createUUID } from \"../utils\"\nimport { InkEditor } from \"../editor\"\n\n/**\n * @group Manager\n */\nexport class IDebugSVGManager {\n  #logger = LoggerManager.getLogger(LoggerCategory.SVGDEBUG)\n  #recognitionBoxVisibility = false\n  #recognitionBoxItemsVisibility = false\n\n  editor: InkEditor\n\n  constructor(editor: InkEditor) {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get model(): IModel {\n    return this.editor.model\n  }\n\n  get renderer(): SVGRenderer {\n    return this.editor.renderer\n  }\n\n  get recognitionBoxVisibility(): boolean {\n    return this.#recognitionBoxVisibility\n  }\n\n  set recognitionBoxVisibility(show: boolean) {\n    this.#recognitionBoxVisibility = show\n    this.debugRecognitionBox()\n  }\n\n  get recognitionBoxItemsVisibility(): boolean {\n    return this.#recognitionBoxItemsVisibility\n  }\n\n  set recognitionBoxItemsVisibility(show: boolean) {\n    this.#recognitionBoxItemsVisibility = show\n    this.debugRecognitionBoxItems()\n  }\n\n  protected drawBoundingBox(symbols: TIISymbol[]): void {\n    const symbolAttrs = {\n      style: \"pointer-events: none\",\n      fill: \"transparent\",\n      stroke: \"red\",\n      \"stroke-width\": \"1\",\n      \"stroke-dasharray\": \"5 5\",\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"debug\": \"bounding-box\"\n    }\n    const charAttrs = {\n      style: \"pointer-events: none\",\n      fill: \"transparent\",\n      stroke: \"orange\",\n      \"stroke-width\": \"1\",\n      \"stroke-dasharray\": \"0 5 0\",\n      \"vector-effect\": \"non-scaling-stroke\",\n      \"debug\": \"bounding-box\"\n    }\n    symbols.forEach(s => {\n      const symEl = this.renderer.getElementById(s.id)\n      if (symEl) {\n        if (s.type === SymbolType.Text) {\n          const text = s as IIText\n          let transform: string = \"\"\n          if (text.rotation) {\n            transform = `rotate(${text.rotation.degree}, ${text.rotation.center.x}, ${text.rotation.center.y})`\n          }\n          text.chars.forEach(c => {\n            const ca = {\n              ...charAttrs,\n              char: c.label,\n              transform\n            }\n            symEl.insertAdjacentElement(\"beforebegin\", SVGBuilder.createRect(c.bounds, ca))\n          })\n          const sa = {\n            ...symbolAttrs,\n            symbol: s.id,\n            transform\n          }\n          symEl.insertAdjacentElement(\"beforebegin\", SVGBuilder.createRect(s.bounds, sa))\n        }\n        else {\n          const sa = {\n            ...symbolAttrs,\n            symbol: s.id,\n          }\n          symEl.insertAdjacentElement(\"beforebegin\", SVGBuilder.createRect(s.bounds, sa))\n        }\n      }\n    })\n  }\n\n  protected drawRecognitionBox(box: TBox, infos: string[], color: string , debugAttr: string): void {\n    const TEXT_HEIGHT = 20\n    const recognitionGroup = SVGBuilder.createGroup({ \"debug\": debugAttr, \"opacity\": debugAttr === \"recognition-box-items\" ? \"0.8\" : \"1\" })\n    const rectAttr = {\n      fill: \"transparent\",\n      stroke: color,\n      style: SVGRendererConst.noSelection,\n      \"stroke-dasharray\": debugAttr === \"recognition-box-items\" ? \"1 5 10\" : \"\" ,\n    }\n    const rect = SVGBuilder.createRect(box, rectAttr)\n    recognitionGroup.appendChild(rect)\n\n    const infosGroup = SVGBuilder.createGroup({ id: `infos-group-${createUUID()}` })\n    const infoX = box.x + box.width\n    let infoY = box.y + TEXT_HEIGHT / 2\n    infos?.forEach(w => {\n      infosGroup.appendChild(SVGBuilder.createText({ x: infoX, y: infoY }, w, { stroke: color, style: SVGRendererConst.noSelection }))\n      infoY += TEXT_HEIGHT\n    })\n    recognitionGroup.appendChild(infosGroup)\n    this.renderer.layer.appendChild(recognitionGroup)\n\n    const infosGroupBox = infosGroup.getBBox()\n    const rectBox = {\n      width: infosGroupBox.width + 10,\n      height: infosGroupBox.height + 10,\n      x: infosGroupBox.x - 5,\n      y: infosGroupBox.y - 5,\n    }\n\n    const rectTranslate = SVGBuilder.createRect(rectBox, { ...rectAttr, fill: \"white\", style: \"cursor:move\" })\n    infosGroup.prepend(rectTranslate)\n\n    const translateEl = (e: PointerEvent) => {\n      e.preventDefault()\n      e.stopPropagation()\n      const originX = Number(this.renderer.getAttribute(infosGroup.id, \"originX\"))\n      const originY = Number(this.renderer.getAttribute(infosGroup.id, \"originY\"))\n      const tx = e.clientX - originX\n      const ty = e.clientY - originY\n      this.renderer.setAttribute(infosGroup.id, \"transform\", `translate(${tx},${ty})`)\n      const newRectBox = {\n        width: rectBox.width,\n        height: rectBox.height,\n        x: rectBox.x + tx,\n        y: rectBox.y + ty,\n      }\n      this.renderer.removeSymbol(`connection-${infosGroup.id}`)\n      this.renderer.drawConnectionBetweenBox(`connection-${infosGroup.id}`, box, newRectBox, \"sides\", { stroke: color, debug: debugAttr })\n    }\n\n    rectTranslate.addEventListener(\"pointerdown\", e => {\n      e.preventDefault()\n      e.stopPropagation()\n      if (!this.renderer.getAttribute(infosGroup.id, \"originX\")) {\n        this.renderer.setAttribute(infosGroup.id, \"originX\", e.clientX.toString())\n        this.renderer.setAttribute(infosGroup.id, \"originY\", e.clientY.toString())\n      }\n      this.renderer.layer.addEventListener(\"pointermove\", translateEl)\n      this.renderer.layer.addEventListener(\"pointerup\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n      this.renderer.layer.addEventListener(\"pointerleave\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n      this.renderer.layer.addEventListener(\"pointercancel\", () => this.renderer.layer.removeEventListener(\"pointermove\", translateEl))\n    })\n  }\n\n  protected buildInfos(obj: object, currentPath = \"\"): string[] {\n    const infos: string[] = []\n    Object.keys(obj).forEach((key) => {\n      const value = obj[key as keyof typeof obj]\n      const localPath = currentPath ? `${currentPath}.${key}` : key\n      switch (typeof value) {\n        case \"object\":\n          infos.push(...this.buildInfos(value, localPath))\n          break\n        default:\n          infos.push(`${localPath}: ${JSON.stringify(value)}`)\n          break\n      }\n    })\n    return infos\n  }\n\n  protected async showRecognitionBox(): Promise<void> {\n    this.#logger.info(\"showRecognitionBox\")\n    let jiix = this.model.exports?.[\"application/vnd.myscript.jiix\"]\n    if (!jiix) {\n      const exports = await this.editor.recognizer.send(this.model.strokes, [\"application/vnd.myscript.jiix\"])\n      jiix = exports[\"application/vnd.myscript.jiix\"]!\n    }\n    this.#logger.debug(\"showRecognitionBox\", { jiix })\n    if (jiix) {\n      jiix.elements?.forEach(el => {\n        switch (el.type) {\n          case \"Drawing\":\n          case \"Shape\": {\n            const associatedStrokes: IIStroke[] = []\n            el.range?.forEach(r => {\n              associatedStrokes.push(...this.model.strokes.slice(r.from.stroke, r.to.stroke + 1))\n            })\n            const box = Box.createFromBoxes(associatedStrokes.map(s => s.bounds))\n            let infos: string[] = [`type: ${el.type}`]\n            infos.push(...this.buildInfos(el))\n            const hideProperties = [\"bounding-box\", \"primitives\", \"range\", \"candidates\"]\n            infos = infos.filter(i => !hideProperties.some(h => i.indexOf(h) > -1))\n            const color = el.type === \"Shape\" ? \"orange\" : \"green\"\n            this.drawRecognitionBox(box, infos, color, \"recognition-box\")\n            break\n          }\n          case \"Text\": {\n            const associatedStrokes: IIStroke[] = []\n            el.range?.forEach(r => {\n              associatedStrokes.push(...this.model.strokes.slice(r.from.stroke, r.to.stroke + 1))\n            })\n            const box = Box.createFromBoxes(associatedStrokes.map(s => s.bounds))\n            this.drawRecognitionBox(box, [`type: ${el.type}`, `label: ${JSON.stringify(el.label || [])}`], \"blue\", \"recognition-box\")\n            break\n          }\n          case \"Math\": {\n            const associatedStrokes: IIStroke[] = []\n            el.range?.forEach(r => {\n              associatedStrokes.push(...this.model.strokes.slice(r.from.stroke, r.to.stroke + 1))\n            })\n            const box = Box.createFromBoxes(associatedStrokes.map(s => s.bounds))\n            let infos: string[] = [`type: ${el.type}`]\n            infos.push(...this.buildInfos(el))\n            const hideProperties = [\"bounding-box\", \"primitives\", \"range\", \"candidates\"]\n            infos = infos.filter(i => !hideProperties.some(h => i.indexOf(h) > -1))\n            this.drawRecognitionBox(box, infos, \"red\", \"recognition-box\")\n            break\n          }\n          default: {\n            this.#logger.warn(\"drawRecognitionBox\", `Unknow jiix element type: ${el.type}`)\n            break\n          }\n        }\n      })\n    }\n  }\n\n  protected async showRecognitionBoxItems(): Promise<void> {\n    this.#logger.info(\"showRecognitionBoxItems\")\n    let jiix = this.model.exports?.[\"application/vnd.myscript.jiix\"]\n    if (!jiix) {\n      const exports = await this.editor.recognizer.send(this.model.strokes, [\"application/vnd.myscript.jiix\"])\n      jiix = exports[\"application/vnd.myscript.jiix\"]!\n    }\n    this.#logger.debug(\"showRecognitionBoxItems\", { jiix })\n    if (jiix) {\n      jiix.elements?.forEach(el => {\n        switch (el.type) {\n          case \"Shape\": {\n            el.elements.forEach(e => {\n              const associatedStrokes: IIStroke[] = []\n              e.range?.forEach(r => {\n                associatedStrokes.push(...this.model.strokes.slice(r.from.stroke, r.to.stroke + 1))\n              })\n              const box = Box.createFromBoxes(associatedStrokes.map(s => s.bounds))\n              let infos: string[] = [`type: ${el.type}`]\n              infos.push(...this.buildInfos(e))\n              const hideProperties = [\"bounding-box\", \"primitives\", \"range\", \"candidates\"]\n              infos = infos.filter(i => !hideProperties.some(h => i.indexOf(h) > -1))\n              this.drawRecognitionBox(box, infos, \"#ce922a\", \"recognition-box-items\")\n            })\n            break\n          }\n          case \"Math\":\n          case \"Text\": {\n            el.lines?.forEach(e => {\n              e.spans?.forEach(s => {\n                const associatedStrokes: IIStroke[] = []\n                s.range.forEach(r => {\n                  associatedStrokes.push(...this.model.strokes.slice(r.from.stroke, r.to.stroke + 1))\n                })\n                const color = s.type === \"Math\" ? \"#ff6565\" : \"#099df7\"\n                const box = Box.createFromBoxes(associatedStrokes.map(s => s.bounds))\n                this.drawRecognitionBox(box, [`type: ${s.type}`, `label: ${JSON.stringify(s.label || [])}`], color, \"recognition-box-items\")\n              })\n            })\n            break\n          }\n\n          default: {\n            this.#logger.warn(\"drawRecognitionBox\", `Unknow jiix element type: ${el.type}`)\n            break\n          }\n        }\n      })\n    }\n  }\n\n  protected clearRecognitionBox(): void {\n    this.#logger.info(\"clearRecognitionBox\")\n    this.renderer.clearElements({ attrs: { \"debug\": \"recognition-box\" } })\n  }\n\n  protected clearRecognitionBoxItems(): void {\n    this.#logger.info(\"clearRecognitionBoxItems\")\n    this.renderer.clearElements({ attrs: { \"debug\": \"recognition-box-items\" } })\n  }\n\n  async debugRecognitionBox(): Promise<void> {\n    this.clearRecognitionBox()\n    if (this.#recognitionBoxVisibility) {\n      this.showRecognitionBox()\n    }\n  }\n\n  async debugRecognitionBoxItems(): Promise<void> {\n    this.clearRecognitionBoxItems()\n    if (this.#recognitionBoxItemsVisibility) {\n      this.showRecognitionBoxItems()\n    }\n  }\n\n  apply(): void {\n    this.debugRecognitionBox()\n    this.debugRecognitionBoxItems()\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIEraser, TSegment } from \"../symbol\"\nimport { SVGRenderer } from \"../renderer\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { PointerEventGrabber, PointerInfo } from \"../grabber\"\nimport { InkEditor } from \"../editor\"\n\n/**\n * @group Manager\n */\nexport class EraseManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.WRITE)\n  grabber: PointerEventGrabber\n  editor: InteractiveInkEditor | InkEditor\n\n  currentEraser?: IIEraser\n\n  constructor(editor: InteractiveInkEditor | InkEditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n    this.grabber = new PointerEventGrabber(editor.configuration.grabber)\n  }\n\n  get renderer(): SVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  attach(layer: HTMLElement): void\n  {\n    this.grabber.attach(layer)\n    this.grabber.onPointerDown = this.start.bind(this)\n    this.grabber.onPointerMove = this.continue.bind(this)\n    this.grabber.onPointerUp = this.end.bind(this)\n  }\n\n  detach(): void\n  {\n    this.grabber.detach()\n  }\n\n  start(info: PointerInfo): void\n  {\n    this.#logger.info(\"startErase\", { info })\n    this.currentEraser = new IIEraser()\n    this.currentEraser.pointers.push(info.pointer)\n    this.renderer.drawSymbol(this.currentEraser!)\n  }\n\n  continue(info: PointerInfo): void\n  {\n    this.#logger.info(\"continueErase\", { info })\n    if (!this.currentEraser) {\n      throw new Error(\"Can't update current eraser because currentEraser is undefined\")\n    }\n    this.currentEraser.pointers.push(info.pointer)\n    this.renderer.drawSymbol(this.currentEraser)\n    const lastSeg: TSegment = {\n      p1: this.currentEraser.pointers.at(-1)!,\n      p2: this.currentEraser.pointers.at(-2)!\n    }\n    if (this.editor instanceof InteractiveInkEditor) {\n      this.editor.model.symbols.forEach(s =>\n      {\n        if (s.isIntersected(lastSeg)) {\n          s.deleting = true\n          this.renderer.drawSymbol(s)\n        }\n      })\n    }\n    else {\n      this.editor.model.strokes.forEach(s =>\n      {\n        if (s.isIntersected(lastSeg)) {\n          s.deleting = true\n          this.renderer.drawSymbol(s)\n        }\n      })\n    }\n  }\n\n  async end(info: PointerInfo): Promise<void>\n  {\n    this.#logger.info(\"finishErasing\", { info })\n    this.continue(info)\n\n    this.renderer.removeSymbol(this.currentEraser!.id)\n    if (this.editor instanceof InteractiveInkEditor) {\n      this.editor.removeSymbols(this.editor.model.symbolsToDelete.map(s => s.id))\n    }\n    else {\n      this.editor.removeStrokes(this.editor.model.strokesToDelete.map(s => s.id))\n    }\n    this.currentEraser = undefined\n  }\n}\n","/**\n * @group History\n */\nexport type THistoryContext = {\n  canUndo: boolean\n  canRedo: boolean\n  empty: boolean\n  stackIndex: number\n  possibleUndoCount: number\n}\n\n/**\n * @group History\n */\nexport const getInitialHistoryContext = (): THistoryContext => {\n  return {\n    stackIndex: 0,\n    possibleUndoCount: 0,\n    canRedo: false,\n    canUndo: false,\n    empty: true,\n  }\n}\n","import { EditorEvent } from \"../editor/EditorEvent\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { Model } from \"../model\"\nimport { THistoryConfiguration } from \"./HistoryConfiguration\"\nimport { THistoryContext, getInitialHistoryContext } from \"./HistoryContext\"\n\n/**\n * @group History\n */\nexport class HistoryManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.HISTORY)\n\n  configuration: THistoryConfiguration\n  event: EditorEvent\n  context: THistoryContext\n  stack: Model[]\n\n  constructor(configuration: THistoryConfiguration, event: EditorEvent)\n  {\n    this.#logger.info(\"constructor\", { configuration })\n    this.configuration = configuration\n    this.event = event\n    this.context = getInitialHistoryContext()\n    this.stack = []\n  }\n\n  private updateContext(): void\n  {\n    this.context.canRedo = this.stack.length - 1 > this.context.stackIndex\n    this.context.canUndo = this.context.stackIndex > 0\n    this.context.empty = this.stack[this.context.stackIndex].symbols.length === 0\n  }\n\n  push(model: Model): void\n  {\n    this.#logger.info(\"push\", { model })\n    if (this.context.stackIndex + 1 < this.stack.length) {\n      this.stack.splice(this.context.stackIndex + 1)\n    }\n\n    this.stack.push(model.clone())\n    this.context.stackIndex = this.stack.length - 1\n\n    if (this.stack.length > this.configuration.maxStackSize) {\n      this.stack.shift()\n      this.context.stackIndex--\n    }\n\n    this.updateContext()\n    this.event.emitChanged(this.context)\n  }\n\n  updateStack(model: Model): void\n  {\n    this.#logger.info(\"updateStack\", { model })\n    const index = this.stack.findIndex(m => m.modificationDate === model.modificationDate)\n    if (index > -1) {\n      this.stack.splice(index, 1, model.clone())\n    }\n    this.updateContext()\n    this.event.emitChanged(this.context)\n  }\n\n  undo(): Model\n  {\n    this.#logger.info(\"undo\")\n    if (this.context.canUndo) {\n      this.context.stackIndex--\n      this.updateContext()\n      this.event.emitChanged(this.context)\n    }\n    const previousModel = this.stack[this.context.stackIndex].clone()\n    this.#logger.debug(\"undo\", previousModel)\n    return previousModel\n  }\n\n  redo(): Model\n  {\n    this.#logger.info(\"redo\")\n    if (this.context.canRedo) {\n      this.context.stackIndex++\n      this.updateContext()\n      this.event.emitChanged(this.context)\n    }\n    const nextModel = this.stack[this.context.stackIndex].clone()\n    this.#logger.debug(\"redo\", nextModel)\n    return nextModel\n  }\n}\n","import { EditorEvent } from \"../editor/EditorEvent\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport { IIDecorator, IIStroke, TIISymbol, TPoint } from \"../symbol\"\nimport { TStyle } from \"../style\"\nimport { MatrixTransform, TMatrixTransform } from \"../transform\"\nimport { THistoryContext, getInitialHistoryContext } from \"./HistoryContext\"\nimport { PartialDeep } from \"../utils\"\nimport { THistoryConfiguration } from \"./HistoryConfiguration\"\n\n/**\n * @group History\n */\nexport type TIIHistoryChanges = {\n  added?: TIISymbol[]\n  updated?: TIISymbol[]\n  erased?: TIISymbol[]\n  replaced?: { oldSymbols: TIISymbol[], newSymbols: TIISymbol[] }\n  matrix?: { symbols: TIISymbol[], matrix: TMatrixTransform }\n  translate?: { symbols: TIISymbol[], tx: number, ty: number }[]\n  scale?: { symbols: TIISymbol[], scaleX: number, scaleY: number, origin: TPoint }[]\n  rotate?: { symbols: TIISymbol[], angle: number, center: TPoint }[]\n  style?: { symbols: TIISymbol[], style?: PartialDeep<TStyle>, fontSize?: number }\n  order?: { symbols: TIISymbol[], position: \"first\" | \"last\" | \"forward\" | \"backward\" }\n  decorator?: { symbol: TIISymbol, decorator: IIDecorator, added: boolean }[]\n  group?: { symbols: TIISymbol[] }\n  ungroup?: { group: TIISymbol }\n}\n\n/**\n * @group History\n * @remarks used to send messages to the backend on undo or redo\n */\nexport type TIIHistoryBackendChanges = {\n  added?: IIStroke[]\n  erased?: IIStroke[]\n  replaced?: { oldStrokes: IIStroke[], newStrokes: IIStroke[] }\n  matrix?: { strokes: IIStroke[], matrix: TMatrixTransform },\n  translate?: { strokes: IIStroke[], tx: number, ty: number }[]\n  scale?: { strokes: IIStroke[], scaleX: number, scaleY: number, origin: TPoint }[]\n  rotate?: { strokes: IIStroke[], angle: number, center: TPoint }[]\n}\n\n/**\n * @group History\n */\nexport type TIIHistoryStackItem = {\n  changes: TIIHistoryChanges\n  model: IIModel\n}\n\n/**\n * @group History\n */\nexport class IIHistoryManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.HISTORY)\n\n  configuration: THistoryConfiguration\n  event: EditorEvent\n  context: THistoryContext\n  stack: TIIHistoryStackItem[]\n\n  constructor(configuration: THistoryConfiguration, event: EditorEvent)\n  {\n    this.#logger.info(\"constructor\", { configuration })\n    this.configuration = configuration\n    this.event = event\n    this.context = getInitialHistoryContext()\n    this.stack = []\n  }\n\n  private updateContext(): void\n  {\n    this.context.canRedo = this.stack.length - 1 > this.context.stackIndex\n    this.context.canUndo = this.context.stackIndex > 0\n    this.context.empty = this.stack[this.context.stackIndex].model.symbols.length === 0\n  }\n\n  isChangesEmpty(changes: TIIHistoryChanges): boolean\n  {\n    return !(\n      changes.added?.length ||\n      changes.updated?.length ||\n      changes.erased?.length ||\n      changes.replaced?.oldSymbols.length ||\n      changes.matrix?.symbols.length ||\n      changes.translate?.length ||\n      changes.rotate?.length ||\n      changes.scale?.length ||\n      changes.style?.symbols?.length ||\n      changes.order?.symbols?.length ||\n      changes.decorator?.length ||\n      changes.group?.symbols.length ||\n      changes.ungroup?.group\n    )\n  }\n\n  init(model: IIModel): void\n  {\n    this.stack.push({ model: model.clone(), changes: {} })\n    this.event.emitChanged(this.context)\n  }\n\n  push(model: IIModel, changes: TIIHistoryChanges): void\n  {\n    this.#logger.info(\"push\", { model, changes })\n    if (this.isChangesEmpty(changes)) return\n\n    if (this.context.stackIndex + 1 < this.stack.length) {\n      this.stack.splice(this.context.stackIndex + 1)\n    }\n\n    this.stack.push({ model: model.clone(), changes })\n    this.context.stackIndex = this.stack.length - 1\n\n    if (this.stack.length > this.configuration.maxStackSize) {\n      this.stack.shift()\n      this.context.stackIndex--\n    }\n\n    this.updateContext()\n    this.event.emitChanged(this.context)\n  }\n\n  update(model: IIModel): void\n  {\n    this.#logger.info(\"pop\")\n    const stackIdx = this.stack.findIndex(s => s.model.modificationDate === model.modificationDate)\n    if (stackIdx > -1) {\n      this.stack[stackIdx].model = model\n      this.updateContext()\n    }\n  }\n\n  pop(): void\n  {\n    this.#logger.info(\"pop\")\n    this.stack.pop()\n    this.context.stackIndex = this.stack.length - 1\n    this.updateContext()\n  }\n\n  protected reverseChanges(changes: TIIHistoryChanges): TIIHistoryChanges\n  {\n    const reversedChanges: TIIHistoryChanges = {}\n    if (changes.added) {\n      reversedChanges.erased = changes.added\n    }\n    if (changes.erased) {\n      reversedChanges.added = changes.erased\n    }\n    if (changes.replaced) {\n      reversedChanges.replaced = {\n        newSymbols: changes.replaced.oldSymbols,\n        oldSymbols: changes.replaced.newSymbols\n      }\n    }\n    if (changes.matrix) {\n      reversedChanges.matrix = {\n        symbols: changes.matrix.symbols,\n        matrix: new MatrixTransform(changes.matrix.matrix.xx, changes.matrix.matrix.yx, changes.matrix.matrix.xy, changes.matrix.matrix.yy, changes.matrix.matrix.tx, changes.matrix.matrix.ty).invert()\n      }\n    }\n    if (changes.translate?.length) {\n      reversedChanges.translate = changes.translate.map(tr =>\n      {\n        return {\n          symbols: tr.symbols,\n          tx: -tr.tx,\n          ty: -tr.ty,\n        }\n      })\n    }\n    if (changes.rotate?.length) {\n      reversedChanges.rotate = changes.rotate.map(tr =>\n      {\n        return {\n          symbols: tr.symbols,\n          angle: 2 * Math.PI - tr.angle,\n          center: tr.center\n        }\n      })\n    }\n    if (changes.scale?.length) {\n      reversedChanges.scale = changes.scale.map(tr =>\n      {\n        return {\n          symbols: tr.symbols,\n          origin: tr.origin,\n          scaleX: 1 / tr.scaleX,\n          scaleY: 1 / tr.scaleY\n        }\n      })\n    }\n\n    return reversedChanges\n  }\n\n  undo(): TIIHistoryStackItem\n  {\n    this.#logger.info(\"undo\")\n    const currentStackItem = this.stack[this.context.stackIndex]\n    if (this.context.canUndo) {\n      this.context.stackIndex--\n      this.updateContext()\n      this.event.emitChanged(this.context)\n    }\n    const previousStackItem = this.stack[this.context.stackIndex]\n    this.#logger.debug(\"undo\", previousStackItem)\n    return {\n      model: previousStackItem.model,\n      changes: this.reverseChanges(currentStackItem.changes)\n    }\n  }\n\n  redo(): TIIHistoryStackItem\n  {\n    this.#logger.info(\"redo\")\n    if (this.context.canRedo) {\n      this.context.stackIndex++\n      this.updateContext()\n      this.event.emitChanged(this.context)\n    }\n    const nextStackItem = this.stack[this.context.stackIndex]\n    this.#logger.debug(\"redo\", nextStackItem)\n    return nextStackItem\n  }\n\n  clear(): void\n  {\n    this.context = getInitialHistoryContext()\n    this.stack = []\n  }\n}","import { EditorEvent } from \"../editor/EditorEvent\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IModel } from \"../model\"\nimport { IIStroke, TIISymbol } from \"../symbol\"\nimport { THistoryContext, getInitialHistoryContext } from \"./HistoryContext\"\nimport { THistoryConfiguration } from \"./HistoryConfiguration\"\n\n/**\n * @group History\n */\nexport type TIHistoryChanges = {\n  added?: TIISymbol[]\n  removed?: TIISymbol[]\n}\n\n/**\n * @group History\n * @remarks used to send messages to the backend on undo or redo\n */\nexport type TIHistoryBackendChanges = {\n  added?: IIStroke[]\n  removed?: IIStroke[]\n}\n\n/**\n * @group History\n */\nexport type TIHistoryStackItem = {\n  changes: TIHistoryChanges\n  model: IModel\n}\n\n/**\n * @group History\n */\nexport class IHistoryManager {\n  #logger = LoggerManager.getLogger(LoggerCategory.HISTORY)\n\n  configuration: THistoryConfiguration\n  event: EditorEvent\n  context: THistoryContext\n  stack: TIHistoryStackItem[]\n\n  constructor(configuration: THistoryConfiguration, event: EditorEvent) {\n    this.#logger.info(\"constructor\", { configuration })\n    this.configuration = configuration\n    this.event = event\n    this.context = getInitialHistoryContext()\n    this.stack = []\n  }\n\n  private updateContext(): void {\n    this.context.canRedo = this.stack.length - 1 > this.context.stackIndex\n    this.context.canUndo = this.context.stackIndex > 0\n    this.context.empty = this.stack[this.context.stackIndex].model.strokes.length === 0\n  }\n\n  updateModelStack(model: IModel): void {\n    this.#logger.info(\"updateModelStack\", { model })\n    const stackIdx = this.stack.findIndex(s => s.model.modificationDate === model.modificationDate)\n    if (stackIdx > -1) {\n      this.stack[stackIdx].model = model.clone()\n      this.updateContext()\n    }\n    this.updateContext()\n    this.event.emitChanged(this.context)\n  }\n\n  isChangesEmpty(changes: TIHistoryChanges): boolean {\n    return !(\n      changes.added?.length ||\n      changes.removed?.length\n    )\n  }\n\n  init(model: IModel): void {\n    this.stack.push({ model: model.clone(), changes: {} })\n    this.event.emitChanged(this.context)\n  }\n\n  push(model: IModel, changes: TIHistoryChanges): void {\n    this.#logger.info(\"push\", { model, changes })\n    if (this.isChangesEmpty(changes)) return\n\n    if (this.context.stackIndex + 1 < this.stack.length) {\n      this.stack.splice(this.context.stackIndex + 1)\n    }\n\n    this.stack.push({ model: model.clone(), changes })\n    this.context.stackIndex = this.stack.length - 1\n\n    if (this.stack.length > this.configuration.maxStackSize) {\n      this.stack.shift()\n      this.context.stackIndex--\n    }\n\n    this.updateContext()\n    this.event.emitChanged(this.context)\n  }\n\n  pop(): void {\n    this.#logger.info(\"pop\")\n    this.stack.pop()\n    this.context.stackIndex = this.stack.length - 1\n    this.updateContext()\n  }\n\n  protected reverseChanges(changes: TIHistoryChanges): TIHistoryChanges {\n    const reversedChanges: TIHistoryChanges = {}\n    if (changes.added) {\n      reversedChanges.removed = changes.added\n    }\n    if (changes.removed) {\n      reversedChanges.added = changes.removed\n    }\n    return reversedChanges\n  }\n\n  undo(): TIHistoryStackItem {\n    this.#logger.info(\"undo\")\n    const currentStackItem = this.stack[this.context.stackIndex]\n    if (this.context.canUndo) {\n      this.context.stackIndex--\n      this.updateContext()\n      this.event.emitChanged(this.context)\n    }\n    const previousStackItem = this.stack[this.context.stackIndex]\n    this.#logger.debug(\"undo\", previousStackItem)\n    return {\n      model: previousStackItem.model,\n      changes: this.reverseChanges(currentStackItem.changes)\n    }\n  }\n\n  redo(): TIHistoryStackItem {\n    this.#logger.info(\"redo\")\n    if (this.context.canRedo) {\n      this.context.stackIndex++\n      this.updateContext()\n      this.event.emitChanged(this.context)\n    }\n    const nextStackItem = this.stack[this.context.stackIndex]\n    this.#logger.debug(\"redo\", nextStackItem)\n    return nextStackItem\n  }\n\n  clear(): void {\n    this.context = getInitialHistoryContext()\n    this.stack = []\n  }\n}\n","\n/**\n * @group History\n */\nexport type THistoryConfiguration = {\n  maxStackSize: number\n}\n\n/**\n * @group History\n * @source\n */\nexport const DefaultHistoryConfiguration: THistoryConfiguration = {\n  maxStackSize: 100\n}\n","import ArrowDown from \"../assets/svg/nav-arrow-down.svg\"\n\n/**\n * @group Menu\n */\nexport type TMenuItem = {\n  id: string,\n  label: string,\n  type: \"button\" | \"checkbox\" | \"select\" | \"list\" | \"colors\"\n  disabled?: boolean\n}\n\n/**\n * @group Menu\n */\nexport type TMenuItemButton = TMenuItem & {\n  type: \"button\"\n  icon?: string\n  callback: () => void\n}\n\n/**\n * @group Menu\n */\nexport type TMenuItemButtonList = TMenuItem & {\n  type: \"list\"\n  initValue: string,\n  values: { label: string, value: string }[]\n  callback: (value: string) => void\n}\n\n/**\n * @group Menu\n */\nexport type TMenuItemColorList = TMenuItem & {\n  type: \"colors\"\n  initValue: string,\n  values: string[]\n  fill: boolean\n  callback: (value: string) => void\n}\n\n/**\n * @group Menu\n */\nexport type TMenuItemBoolean = TMenuItem & {\n  type: \"checkbox\",\n  initValue: boolean | \"indeterminate\",\n  callback: (value: boolean) => void\n}\n\n/**\n * @group Menu\n */\nexport type TMenuItemSelect = TMenuItem & {\n  type: \"select\",\n  initValue: string,\n  values: { label: string, value: string }[]\n  callback: (value: string) => void\n}\n\n/**\n * @group Menu\n */\nexport abstract class IIMenu\n{\n  thicknessList = [\n    { label: \"S\", value: 1 },\n    { label: \"M\", value: 2 },\n    { label: \"L\", value: 4 },\n    { label: \"XL\", value: 8 },\n  ]\n\n  fontSizeList = [\n    { label: \"Auto\", value: \"auto\" },\n    { label: \"S\", value: 0.5 },\n    { label: \"M\", value: 0.75 },\n    { label: \"L\", value: 1 },\n  ]\n\n  fontWeightList = [\n    { label: \"Auto\", value: \"auto\" },\n    { label: \"Normal\", value: \"normal\" },\n    { label: \"Bold\", value: \"bold\" },\n  ]\n\n  colors = [\n    \"#000000\", \"#808080\", \"#ffffff\", \"transparent\",\n    \"#ff0000\", \"#ff6400\", \"#ffc800\", \"#ffff00\",\n    \"#0000ff\", \"#0064ff\", \"#00c8ff\", \"#00ffff\",\n    \"#008000\", \"#00af00\", \"#00e100\", \"#00ff00\"\n  ]\n\n  protected createWrapCollapsible(el: Node, title: string): HTMLDivElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.classList.add(\"collapsible-wrapper\")\n    const head = document.createElement(\"div\")\n    head.classList.add(\"collapsible-header\")\n    head.textContent = title\n    const btn = document.createElement(\"span\")\n    btn.classList.add(\"collapsible-header-icon\")\n    btn.innerHTML = ArrowDown\n    head.appendChild(btn)\n    head.style.setProperty(\"pointer\", \"cursor\")\n    const content = document.createElement(\"div\")\n    content.classList.add(\"collapsible-content\")\n    head.addEventListener(\"pointerup\", () => wrapper.classList.toggle(\"active\"))\n    wrapper.appendChild(head)\n    content.appendChild(el)\n    wrapper.appendChild(content)\n    return wrapper\n  }\n\n  protected createMenuItemBoolean(item: TMenuItemBoolean): HTMLDivElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.classList.add(\"ms-menu-item\", item.type)\n    const labelEl = document.createElement(\"span\")\n    labelEl.textContent = item.label\n    wrapper.appendChild(labelEl)\n    const checkbox = document.createElement(\"input\")\n    checkbox.id = item.id\n    checkbox.setAttribute(\"type\", \"checkbox\")\n    if (item.disabled) {\n      checkbox.disabled = true\n    }\n    if (item.initValue === \"indeterminate\") {\n      checkbox.indeterminate = true\n    } else {\n      checkbox.checked = item.initValue\n    }\n    checkbox.addEventListener(\"change\", (e) => item.callback((e.target as HTMLInputElement).checked))\n    wrapper.appendChild(checkbox)\n    return wrapper\n  }\n\n  protected createMenuItemSelect(item: TMenuItemSelect): HTMLDivElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.classList.add(\"ms-menu-item\", item.type)\n    const labelEl = document.createElement(\"span\")\n    labelEl.textContent = item.label\n    wrapper.appendChild(labelEl)\n    const select = document.createElement(\"select\")\n    select.id = item.id\n    if (item.disabled) {\n      select.disabled = true\n    }\n    item.values.forEach(v =>\n    {\n      const selected = v.value === item.initValue\n      const opt = new Option(v.label, v.value.toString(), selected, selected)\n      select.appendChild(opt)\n    })\n    select.addEventListener(\"change\", (e) => item.callback((e.target as HTMLInputElement).value))\n    wrapper.appendChild(select)\n    return wrapper\n  }\n\n  protected createMenuItemButton(item: TMenuItemButton): HTMLElement\n  {\n    const btn = document.createElement(\"button\")\n    btn.classList.add(\"ms-menu-item\", \"ms-menu-button\")\n    btn.innerHTML = item.icon || item.label\n    btn.addEventListener(\"pointerup\", item.callback)\n    return btn\n  }\n\n  protected createMenuItemButtonList(item: TMenuItemButtonList): HTMLElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.classList.add(\"ms-menu-item\", item.type)\n    wrapper.id = item.id\n    const labelEl = document.createElement(\"span\")\n    labelEl.textContent = item.label\n    wrapper.appendChild(labelEl)\n    item.values.forEach((v) =>\n    {\n      const btn = document.createElement(\"button\")\n      if (item.disabled) {\n        btn.disabled = true\n      }\n      btn.id = `${item.id}-${ v.value }-btn`\n      if (item.initValue === v.value) {\n        btn.classList.add(\"active\")\n      }\n      btn.textContent = v.label\n      btn.addEventListener(\"pointerup\", () =>\n      {\n        item.callback(v.value)\n        wrapper.querySelectorAll(\"*\").forEach(e => e.classList.remove(\"active\"))\n        btn.classList.add(\"active\")\n      })\n      wrapper.appendChild(btn)\n    })\n    return wrapper\n  }\n\n  protected createMenuItemColorList(item: TMenuItemColorList): HTMLDivElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.classList.add(\"ms-menu-item\", item.type)\n    wrapper.id = item.id\n    const labelEl = document.createElement(\"span\")\n    labelEl.textContent = item.label\n    wrapper.appendChild(labelEl)\n    wrapper.appendChild(this.createColorList(item))\n    return wrapper\n  }\n\n  protected createColorList(item: TMenuItemColorList): HTMLDivElement\n  {\n    const list = document.createElement(\"div\")\n    list.id = `${ item.id }-list`\n    list.classList.add(\"ms-menu-row\", \"color-list\")\n    item.values.forEach((color) =>\n    {\n      const btn = document.createElement(\"button\")\n      if (item.disabled) {\n        btn.disabled = true\n      }\n      btn.id = `${ item.id }-${ color.replace(\"#\", \"\") }-btn`\n      btn.classList.add(\"ms-menu-button\", \"square\")\n      const colorEl = document.createElement(\"div\")\n      colorEl.classList.add(\"color\")\n      if (item.fill) {\n        colorEl.style.setProperty(\"background-color\", color)\n        colorEl.style.setProperty(\"border\", \"1px solid lightgrey\")\n      } else {\n        colorEl.style.setProperty(\"background-color\", \"transparent\")\n        colorEl.style.setProperty(\"border\", `3px solid ${ color }`)\n      }\n      if (color === \"#ffffff\") {\n        colorEl.style.setProperty(\"border\", \"1px solid black\")\n      }\n      if (color === \"transparent\") {\n        colorEl.style.setProperty(\"background-image\", \"linear-gradient(45deg, #AAA 10%, transparent 20%, #AAA 30%, transparent 40%, #AAA 50%, transparent 60%, #AAA 70%, transparent 80%, #AAA 90%, transparent 100%)\")\n      }\n      if (item.initValue === color) {\n        btn.classList.add(\"active\")\n      }\n      btn.appendChild(colorEl)\n      btn.addEventListener(\"pointerup\", (e) =>\n      {\n        e.preventDefault()\n        e.stopPropagation()\n        item.callback(color)\n        list.querySelectorAll(\"*\").forEach(e => e.classList.remove(\"active\"))\n        btn.classList.add(\"active\")\n      })\n      list!.appendChild(btn)\n    })\n    return list\n  }\n\n  protected createMenuItem(item: TMenuItem): HTMLElement\n  {\n    switch (item.type) {\n      case \"checkbox\":\n        return this.createMenuItemBoolean(item as TMenuItemBoolean)\n      case \"select\":\n        return this.createMenuItemSelect(item as TMenuItemSelect)\n      case \"list\":\n        return this.createMenuItemButtonList(item as TMenuItemButtonList)\n      case \"colors\":\n        return this.createMenuItemColorList(item as TMenuItemColorList)\n      case \"button\":\n      default:\n        return this.createMenuItemButton(item as TMenuItemButton)\n    }\n  }\n\n  abstract render(domElement: HTMLElement): void\n\n  abstract update(): void\n\n  abstract show(): void\n\n  abstract hide(): void\n\n  abstract destroy(): void\n}\n","\n/**\n * @group Gesture\n * @summary List all authorized gestures\n */\nexport type TGestureType = \"UNDERLINE\" | \"SCRATCH\" | \"JOIN\" | \"INSERT\" | \"STRIKETHROUGH\" | \"SURROUND\"\n\n/**\n * @group Gesture\n * @remarks\n *  when gestureType = \"INSERT\", subStrokes represent the two parts\n *  when gestureType = \"SCRATCH\", subStrokes represent the part to substract at the stroke corresponding fullStrokeId\n */\nexport type TGesture = {\n  gestureType: TGestureType\n  gestureStrokeId: string\n  strokeIds: string[]\n  strokeBeforeIds: string[]\n  strokeAfterIds: string[]\n  subStrokes?: { fullStrokeId: string, x: number[], y: number[] }[]\n}\n\n/**\n * @group Gesture\n * @summary\n * List all action allowed on surround detected\n * @remarks\n * only usable in the case of offscreen\n */\nexport enum SurroundAction\n{\n  Select = \"select\",\n  Surround = \"surround\",\n  Highlight = \"highlight\"\n}\n\n/**\n * @group Gesture\n * @summary\n * List all action allowed on strikeThrough detected\n * @remarks\n * only usable in the case of offscreen\n */\nexport enum StrikeThroughAction\n{\n  Erase = \"erase\",\n  Draw = \"draw\"\n}\n\n/**\n * @group Gesture\n * @summary\n * List all action allowed on split detected\n * @remarks\n * only usable in the case of offscreen\n */\nexport enum InsertAction\n{\n  /**\n   * @remarks Add line break on gesture place\n   */\n  LineBreak = \"line-break\",\n  /**\n   * @remarks Insert place in gesture place\n   */\n  Insert = \"insert\"\n}\n","import { InsertAction, StrikeThroughAction, SurroundAction } from \"./Gesture\"\n\n/**\n * @group Gesture\n * @source\n */\nexport type TGestureConfiguration = {\n  surround: SurroundAction\n  strikeThrough: StrikeThroughAction\n  insert: InsertAction\n}\n\n/**\n * @group Gesture\n * @source\n */\nexport const DefaultGestureConfiguration: TGestureConfiguration = {\n  surround: SurroundAction.Select,\n  strikeThrough: StrikeThroughAction.Draw,\n  insert: InsertAction.LineBreak\n}\n","import { EditorTool } from \"../Constants\"\nimport { LoggerManager, LoggerCategory } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport\n{\n  IIDecorator,\n  IIStroke,\n  SymbolType,\n  IIText,\n  DecoratorKind,\n  IISymbolGroup,\n  TIISymbol,\n  Box,\n  TPoint,\n  IIRecognizedText,\n  RecognizedKind,\n} from \"../symbol\"\nimport { RecognizerWebSocket } from \"../recognizer\"\nimport { SVGRenderer } from \"../renderer\"\nimport { IIHistoryManager, TIIHistoryChanges } from \"../history\"\nimport { computeAverage, isBetween, PartialDeep } from \"../utils\"\nimport { IITranslateManager } from \"../manager/IITranslateManager\"\nimport { IITextManager } from \"../manager/IITextManager\"\nimport { InteractiveInkEditor } from \"../editor\"\nimport { InsertAction, StrikeThroughAction, SurroundAction, TGesture } from \"./Gesture\"\nimport { DefaultGestureConfiguration, TGestureConfiguration } from \"./GestureConfiguration\"\n\n/**\n * @group Gesture\n */\nexport class IIGestureManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.GESTURE)\n\n  insertAction: InsertAction = InsertAction.LineBreak\n  surroundAction: SurroundAction = SurroundAction.Select\n  strikeThroughAction: StrikeThroughAction = StrikeThroughAction.Draw\n  editor: InteractiveInkEditor\n\n  constructor(editor: InteractiveInkEditor, gestureAction?: PartialDeep<TGestureConfiguration>)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n    this.surroundAction = gestureAction?.surround || DefaultGestureConfiguration.surround\n    this.strikeThroughAction = gestureAction?.strikeThrough || DefaultGestureConfiguration.strikeThrough\n    this.insertAction = gestureAction?.insert || DefaultGestureConfiguration.insert\n  }\n\n  get renderer(): SVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  get recognizer(): RecognizerWebSocket\n  {\n    return this.editor.recognizer\n  }\n\n  get translator(): IITranslateManager\n  {\n    return this.editor.translator\n  }\n\n  get texter(): IITextManager\n  {\n    return this.editor.texter\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get history(): IIHistoryManager\n  {\n    return this.editor.history\n  }\n\n  get rowHeight(): number\n  {\n    return this.editor.configuration.rendering.guides.gap\n  }\n\n  get strokeSpaceWidth(): number\n  {\n    return this.editor.configuration.rendering.guides.gap * 2\n  }\n\n  async applySurroundGesture(gestureStroke: IIStroke, gesture: TGesture): Promise<void>\n  {\n    this.#logger.info(\"applySurroundGesture\", { gestureStroke, gesture })\n    const changes: TIIHistoryChanges = {}\n    const ids = this.model.symbols.filter(s => gestureStroke.bounds.contains(s.bounds)).map(s => s.id)\n    switch (this.surroundAction) {\n      case SurroundAction.Select: {\n        if (ids.length) {\n          this.editor.tool = EditorTool.Select\n          this.editor.select(ids)\n        }\n        break\n      }\n      case SurroundAction.Highlight: {\n        const symbolIds: string[] = []\n        changes.decorator = []\n        ids.forEach(id =>\n        {\n          const sym = this.model.getRootSymbol(id)\n          if (sym && [SymbolType.Group, SymbolType.Stroke, SymbolType.Text, SymbolType.Recognized].includes(sym.type) && !symbolIds.includes(sym.id)) {\n            const symWithDec = sym as (IIText | IIStroke | IISymbolGroup | IIRecognizedText)\n            const highlight = new IIDecorator(DecoratorKind.Highlight, this.editor.penStyle)\n            const index = symWithDec.decorators.findIndex(d => d.kind === DecoratorKind.Highlight)\n            const added = index === -1\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            added ? symWithDec.decorators.push(highlight) : symWithDec.decorators.splice(index, 1)\n            this.model.updateSymbol(symWithDec)\n            this.renderer.drawSymbol(symWithDec)\n            symbolIds.push(symWithDec.id)\n            changes.decorator!.push({ symbol: symWithDec, decorator: highlight, added })\n          }\n        })\n        if (changes.decorator.length) {\n          this.history.push(this.model, changes)\n        }\n        break\n      }\n      case SurroundAction.Surround: {\n        const symbolIds: string[] = []\n        changes.decorator = []\n        ids.forEach(id =>\n        {\n          const sym = this.model.getRootSymbol(id)\n          if (sym && [SymbolType.Group, SymbolType.Stroke, SymbolType.Text, SymbolType.Recognized].includes(sym.type) && !symbolIds.includes(sym.id)) {\n            const symWithDec = sym as (IIText | IIStroke | IISymbolGroup | IIRecognizedText)\n            const surround = new IIDecorator(DecoratorKind.Surround, this.editor.penStyle)\n            const index = symWithDec.decorators.findIndex(d => d.kind === DecoratorKind.Surround)\n            const added = index === -1\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            added ? symWithDec.decorators.push(surround) : symWithDec.decorators.splice(index, 1)\n            this.model.updateSymbol(symWithDec)\n            this.renderer.drawSymbol(symWithDec)\n            changes.decorator!.push({ symbol: symWithDec, decorator: surround, added })\n            symbolIds.push(symWithDec.id)\n          }\n        })\n        this.history.push(this.model, changes)\n        break\n      }\n      default:\n        this.#logger.error(\"applySurroundGesture\", `Unknow surroundAction: ${ this.surroundAction }, values allowed are: ${ SurroundAction.Highlight }, ${ SurroundAction.Select }, ${ SurroundAction.Surround }`)\n        break\n    }\n    return\n  }\n\n  protected computeScratchOnStrokes(gesture: TGesture, stroke: IIStroke): IIStroke[]\n  {\n    const newStrokes: IIStroke[] = []\n    const partPointersToRemove = gesture.subStrokes?.find(ss => ss.fullStrokeId === stroke.id)\n    if (partPointersToRemove) {\n      const strokePartToErase = new IIStroke()\n      partPointersToRemove.x.forEach((x, i) => strokePartToErase.addPointer({ x, y: partPointersToRemove.y[i], p: 1, t: 1 }))\n      const subStrokes = IIStroke.substract(stroke, strokePartToErase)\n      if (subStrokes.before && subStrokes.before.pointers.length > 1) newStrokes.push(subStrokes.before)\n      if (subStrokes.after && subStrokes.after.pointers.length > 1) newStrokes.push(subStrokes.after)\n    }\n    return newStrokes\n  }\n\n  protected computeScratchOnText(gestureStroke: IIStroke, textSymbol: IIText): IIText | undefined\n  {\n    const charsToRemove = textSymbol.getCharsOverlaps(gestureStroke.pointers)\n    if (textSymbol.chars.length == charsToRemove.length) {\n      return\n    }\n    else {\n      charsToRemove.forEach(c =>\n      {\n        const cIndex = textSymbol.chars.findIndex(c1 => c1.id === c.id)\n        textSymbol.chars.splice(cIndex, 1)\n      })\n      this.texter.updateBounds(textSymbol)\n      return textSymbol\n    }\n  }\n\n  protected computeScratchOnSymbol(gestureStroke: IIStroke, gesture: TGesture, symbol: TIISymbol): { erased?: boolean, replaced?: TIISymbol[] }\n  {\n    switch (symbol.type) {\n      case SymbolType.Stroke: {\n        const strokesScratchedResult = this.computeScratchOnStrokes(gesture, symbol)\n        if (strokesScratchedResult.length) {\n          return {\n            replaced: strokesScratchedResult\n          }\n        }\n        else {\n          return { erased: true }\n        }\n      }\n      case SymbolType.Recognized: {\n        if (symbol.kind === RecognizedKind.Text) {\n          const childrenNotTouch = symbol.strokes.filter(s => !gestureStroke.bounds.overlaps(s.bounds))\n          const childrenTouch = symbol.strokes.filter(s => gestureStroke.bounds.overlaps(s.bounds))\n          const results = childrenTouch.map(s =>\n          {\n            return {\n              symbol: s,\n              result: this.computeScratchOnStrokes(gesture, s)\n            }\n          })\n          if (childrenNotTouch.length === 0 && results.every(r => r.result.length === 0)) {\n            return { erased: true }\n          }\n          else {\n            const strokesToConserve: IIStroke[] = childrenNotTouch.concat(...results.flatMap(r => r.result))\n            const strokeText = new IIRecognizedText(strokesToConserve, { baseline: symbol.baseline, xHeight: symbol.xHeight }, symbol.style)\n            strokeText.decorators = symbol.decorators\n            return {\n              replaced: [strokeText]\n            }\n          }\n        }\n        return {}\n      }\n      case SymbolType.Group: {\n        const childrenNotTouch = symbol.children.filter(s => !gestureStroke.bounds.overlaps(s.bounds))\n        const childrenTouch = symbol.children.filter(s => gestureStroke.bounds.overlaps(s.bounds))\n        const results = childrenTouch.map(s =>\n        {\n          return {\n            symbol: s,\n            result: this.computeScratchOnSymbol(gestureStroke, gesture, s)\n          }\n        })\n        if (childrenNotTouch.length === 0 && results.every(r => r.result.erased)) {\n          return { erased: true }\n        }\n        else {\n          const symbolsGroup: TIISymbol[] = childrenNotTouch\n          results.forEach(r =>\n          {\n            if (r.result.replaced) {\n              symbolsGroup.push(...r.result.replaced)\n            }\n          })\n          const newGroup = new IISymbolGroup(symbolsGroup, symbol.style)\n          newGroup.decorators = symbol.decorators\n          return {\n            replaced: [newGroup]\n          }\n        }\n      }\n      case SymbolType.Text: {\n        const textScratchedResult = this.computeScratchOnText(gestureStroke, symbol)\n        if (textScratchedResult) {\n          return {\n            replaced: [textScratchedResult]\n          }\n        }\n        else {\n          return {\n            erased: true\n          }\n        }\n      }\n      case SymbolType.Shape:\n      case SymbolType.Edge: {\n        return {\n          erased: true\n        }\n      }\n    }\n  }\n\n  async applyScratch(gestureStroke: IIStroke, gesture: TGesture): Promise<void>\n  {\n    this.#logger.debug(\"applyScratchGesture\", { gestureStroke, gesture })\n    if (!gesture.strokeIds.length) {\n      this.#logger.warn(\"applyScratchGesture\", \"Unable to apply underline because there are no strokes\")\n      return\n    }\n    const symbolsToUpdate: TIISymbol[] = []\n    const symbolsToErase: TIISymbol[] = []\n    const symbolsToReplace: { oldSymbols: TIISymbol[], newSymbols: TIISymbol[] } = { oldSymbols: [], newSymbols: [] }\n\n    gesture.strokeIds.forEach(id =>\n    {\n      const sym = this.model.getRootSymbol(id)\n      if (sym && !symbolsToErase.some(s => s.id === sym.id) && !symbolsToReplace.oldSymbols.some(s => s.id === sym.id)) {\n        const result = this.computeScratchOnSymbol(gestureStroke, gesture, sym)\n        if (result.erased) symbolsToErase.push(sym)\n        else if (result.replaced) {\n          symbolsToReplace.newSymbols.push(...result.replaced)\n          symbolsToReplace.oldSymbols.push(sym)\n        }\n      }\n    })\n\n    const promises: Promise<void | TIISymbol[]>[] = []\n    const changes: TIIHistoryChanges = {}\n    if (symbolsToUpdate.length) {\n      promises.push(this.editor.updateSymbols(symbolsToUpdate, false))\n      changes.updated = symbolsToUpdate\n    }\n\n    if (symbolsToErase.length) {\n      promises.push(this.editor.removeSymbols(symbolsToErase.map(s => s.id), false))\n      changes.erased = symbolsToErase\n    }\n\n    if (symbolsToReplace.newSymbols.length) {\n      changes.replaced = symbolsToReplace\n      promises.push(this.editor.replaceSymbols(symbolsToReplace.oldSymbols, symbolsToReplace.newSymbols, false))\n    }\n\n    this.history.push(this.model, changes)\n    await Promise.all(promises)\n  }\n\n  async applyJoinGesture(gestureStroke: IIStroke, gesture: TGesture): Promise<void>\n  {\n    this.#logger.debug(\"applyJoinGesture\", { gestureStroke, gesture })\n\n    const symbolsAbove = this.model.symbols.filter(s => this.model.isSymbolAbove(gestureStroke, s))\n    const symbolsRow = this.model.symbols.filter(s => gestureStroke.id !== s.id && this.model.isSymbolInRow(gestureStroke, s))\n\n    const symbolsBeforeGestureInRow = symbolsRow.filter(s => s.bounds.xMax <= gestureStroke.bounds.xMid)\n    const symbolsOnGestureInRow = symbolsRow.filter(s => s.bounds.xMax > gestureStroke.bounds.xMid && s.bounds.xMin <= gestureStroke.bounds.xMid)\n    const symbolsAfterGestureInRow = symbolsRow.filter(s => s.bounds.xMin > gestureStroke.bounds.xMid)\n    const symbolsBelow = this.model.symbols.filter(s => this.model.isSymbolBelow(gestureStroke, s))\n\n    const changes: TIIHistoryChanges = {}\n    const translate: { symbols: TIISymbol[], tx: number, ty: number }[] = []\n    if (symbolsOnGestureInRow.length) {\n      const symbolToJoin = symbolsOnGestureInRow[0]\n      if (symbolToJoin?.type === SymbolType.Group) {\n        const children = symbolToJoin.children.map(c => c.clone())\n        const childBefore = children.filter(c => c.bounds.xMid <= gestureStroke.bounds.xMid)\n        const childAfter = children.filter(c => c.bounds.xMid > gestureStroke.bounds.xMid)\n        if (childBefore.length && childAfter.length) {\n          const tx = Math.max(...childBefore.map(c => c.bounds.xMax)) - Math.min(...childAfter.map(c => c.bounds.xMin))\n          childAfter.forEach(c => this.translator.applyToSymbol(c, tx, 0))\n          const newGroup = new IISymbolGroup(children, symbolToJoin.style)\n          newGroup.decorators = symbolToJoin.decorators.map(d => d.clone())\n          changes.replaced = {\n            oldSymbols: [symbolToJoin],\n            newSymbols: [newGroup]\n          }\n          if (symbolsAfterGestureInRow.length) {\n            translate.push({ symbols: symbolsAfterGestureInRow, tx, ty: 0 })\n          }\n        }\n        else if (symbolsAfterGestureInRow.length) {\n          const tx = symbolToJoin.bounds.xMax - Math.min(...symbolsAfterGestureInRow.map(s => s.bounds.xMin))\n          translate.push({ symbols: symbolsAfterGestureInRow, tx, ty: 0 })\n        }\n      }\n      else if (symbolToJoin?.type === SymbolType.Recognized) {\n        const strokeText = symbolToJoin.clone()\n        const childBefore = strokeText.strokes.filter(c => c.bounds.xMid <= gestureStroke.bounds.xMid)\n        const childAfter = strokeText.strokes.filter(c => c.bounds.xMid > gestureStroke.bounds.xMid)\n        if (childBefore.length && childAfter.length) {\n          const tx = Math.max(...childBefore.map(c => c.bounds.xMax)) - Math.min(...childAfter.map(c => c.bounds.xMin))\n          childAfter.forEach(c => this.translator.applyToSymbol(c, tx, 0))\n          changes.replaced = {\n            oldSymbols: [symbolToJoin],\n            newSymbols: [strokeText]\n          }\n          if (symbolsAfterGestureInRow.length) {\n            translate.push({ symbols: symbolsAfterGestureInRow, tx, ty: 0 })\n          }\n        }\n        else if (symbolsAfterGestureInRow.length) {\n          const tx = symbolToJoin.bounds.xMax - Math.min(...symbolsAfterGestureInRow.map(s => s.bounds.xMin))\n          translate.push({ symbols: symbolsAfterGestureInRow, tx, ty: 0 })\n        }\n      }\n    }\n    else if (symbolsBeforeGestureInRow.length && symbolsAfterGestureInRow.length) {\n      const lastSymbBefore = this.model.getLastSymbol(symbolsBeforeGestureInRow)!\n      const firstSymbolAfter = this.model.getFirstSymbol(symbolsAfterGestureInRow)!\n\n      const lastXBefore = Math.max(...symbolsBeforeGestureInRow.map(s => s.bounds.xMax))\n      const firstXAfter = Math.min(...symbolsAfterGestureInRow.map(s => s.bounds.xMin))\n      const translateX = lastXBefore - firstXAfter\n\n      const lastSymbBeforeClone = lastSymbBefore.clone()\n      const firstSymbolAfterClone = firstSymbolAfter.clone()\n      this.translator.applyToSymbol(firstSymbolAfterClone, translateX, 0)\n      const symbolsToGroup = lastSymbBefore.type === SymbolType.Group ? (lastSymbBeforeClone as IISymbolGroup).children : [lastSymbBeforeClone]\n      symbolsToGroup.push(...(firstSymbolAfterClone.type === SymbolType.Group ? (firstSymbolAfterClone as IISymbolGroup).children : [firstSymbolAfterClone]))\n\n      if (symbolsToGroup.every(s => s.type === SymbolType.Text)) {\n        const texts = symbolsToGroup as IIText[]\n        const text = new IIText(texts.flatMap(s => s.chars), texts[0].point, Box.createFromBoxes(texts.map(t => t.bounds)))\n        this.texter.setBounds(text)\n        changes.replaced = {\n          oldSymbols: [lastSymbBefore, firstSymbolAfter],\n          newSymbols: [text]\n        }\n      }\n      else if (symbolsToGroup.every(s => s.type === SymbolType.Recognized)) {\n        const strokeTexts = symbolsToGroup as IIRecognizedText[]\n        const strokeText = new IIRecognizedText(strokeTexts.flatMap(s => s.strokes), strokeTexts[0], strokeTexts[0].style)\n        changes.replaced = {\n          oldSymbols: [lastSymbBefore, firstSymbolAfter],\n          newSymbols: [strokeText]\n        }\n      }\n      else {\n        const group = new IISymbolGroup(symbolsToGroup, lastSymbBefore.style)\n        if ([SymbolType.Group, SymbolType.Stroke, SymbolType.Text, SymbolType.Recognized].includes(lastSymbBefore.type)) {\n          (lastSymbBefore as IIStroke).decorators.forEach(d =>\n          {\n            group.decorators.push(new IIDecorator(d.kind, d.style))\n          })\n        }\n        if ([SymbolType.Group, SymbolType.Stroke, SymbolType.Text, SymbolType.Recognized].includes(firstSymbolAfter.type)) {\n          (firstSymbolAfter as IIStroke).decorators.forEach(d =>\n          {\n            if (!group.decorators.some(d1 => d1.kind == d.kind)) {\n              group.decorators.push(new IIDecorator(d.kind, d.style))\n            }\n          })\n        }\n\n        changes.replaced = {\n          oldSymbols: [lastSymbBefore, firstSymbolAfter],\n          newSymbols: [group]\n        }\n      }\n\n      const rest = symbolsAfterGestureInRow.filter(s => s.id !== firstSymbolAfter.id)\n      if (rest.length) {\n        translate.push({ symbols: rest, tx: translateX, ty: 0 })\n      }\n    }\n    else if (symbolsBeforeGestureInRow.length) {\n      const lastSymbolBeforeGesture = this.model.getLastSymbol(symbolsBeforeGestureInRow)!\n      const firstSymbolAfterGesture = this.model.getFirstSymbol(symbolsBelow)\n      if (firstSymbolAfterGesture) {\n        if (this.model.roundToLineGuide(lastSymbolBeforeGesture.bounds.yMid) >= this.model.roundToLineGuide(firstSymbolAfterGesture.bounds.yMid - this.rowHeight)) {\n          const symbolInNextRow = symbolsBelow.filter(s => this.model.isSymbolInRow(firstSymbolAfterGesture, s))\n          if (symbolInNextRow.length) {\n            const translateX = lastSymbolBeforeGesture.bounds.xMax + this.strokeSpaceWidth - firstSymbolAfterGesture.bounds.xMin\n            translate.push({ symbols: symbolInNextRow, tx: translateX, ty: -this.rowHeight })\n          }\n          const symbolsAfterNextRow = symbolsBelow.filter(s => this.model.isSymbolBelow(firstSymbolAfterGesture, s))\n          if (symbolsAfterNextRow.length) {\n            translate.push({ symbols: symbolsAfterNextRow, tx: 0, ty: -this.rowHeight })\n          }\n        }\n      }\n      else {\n        translate.push({ symbols: symbolsBelow, tx: 0, ty: -this.rowHeight })\n      }\n    }\n    else if (symbolsAfterGestureInRow.length) {\n      const firstSymbolAfterGesture = this.model.getFirstSymbol(symbolsAfterGestureInRow)!\n      const lastSymbolAbove = this.model.getLastSymbol(symbolsAbove)\n      if (lastSymbolAbove) {\n        if (this.model.roundToLineGuide(lastSymbolAbove.bounds.yMid) >= this.model.roundToLineGuide(firstSymbolAfterGesture.bounds.yMid - this.rowHeight)) {\n          const translateX = lastSymbolAbove.bounds.xMax + this.strokeSpaceWidth - firstSymbolAfterGesture.bounds.xMin\n          translate.push({ symbols: symbolsAfterGestureInRow, tx: translateX, ty: -this.rowHeight })\n        }\n        else {\n          translate.push({ symbols: symbolsAfterGestureInRow, tx: 0, ty: -this.rowHeight })\n        }\n\n        if (symbolsBelow.length) {\n          translate.push({ symbols: symbolsBelow, tx: 0, ty: -this.rowHeight })\n        }\n      }\n      else {\n        translate.push({ symbols: symbolsAfterGestureInRow.concat(...symbolsBelow), tx: 0, ty: -this.rowHeight })\n      }\n\n    }\n    if (changes.replaced?.oldSymbols.length) {\n      this.editor.replaceSymbols(changes.replaced.oldSymbols, changes.replaced.newSymbols, false)\n    }\n    if (translate.length) {\n      changes.translate = translate\n      Promise.all(translate.map(tr => this.translator.translate(tr.symbols, tr.tx, tr.ty, false)))\n    }\n    this.history.push(this.model, changes)\n  }\n\n  protected createStrokesFromGestureSubStroke(strokeOrigin: IIStroke, subStrokes: { x: number[], y: number[] }[]): IIStroke[]\n  {\n    const strokes: IIStroke[] = []\n    if (subStrokes[0]) {\n      const subStroke = new IIStroke(strokeOrigin.style)\n      subStrokes![0].x.forEach((x, i) =>\n      {\n        subStroke.pointers.push({\n          x,\n          y: subStrokes![0].y[i],\n          p: strokeOrigin.pointers.at(i)?.p || 1,\n          t: strokeOrigin.pointers.at(i)?.t || Math.max(...subStroke.pointers.map(p => p.t + 20))\n        })\n      })\n      strokes.push(subStroke)\n    }\n    if (subStrokes[1]) {\n      const subStroke = new IIStroke(strokeOrigin.style)\n      subStrokes[1].x.forEach((x, i) =>\n      {\n        subStroke.pointers.push({\n          x,\n          y: subStrokes![1].y[i],\n          p: strokeOrigin.pointers.at(subStroke.pointers.length + i)?.p || 1,\n          t: strokeOrigin.pointers.at(subStroke.pointers.length + i)?.t || Math.max(...subStroke.pointers.map(p => p.t + 20))\n        })\n      })\n      strokes.push(subStroke)\n    }\n    return strokes\n  }\n\n  protected computeSplitStroke(strokeOrigin: IIStroke, subStrokes: { x: number[], y: number[] }[]): { before?: IIStroke, after?: IIStroke }\n  {\n    let after: IIStroke | undefined\n    const newStrokes = this.createStrokesFromGestureSubStroke(strokeOrigin, subStrokes)\n\n    if (newStrokes[1]) {\n      after = newStrokes[1]\n      this.translator.applyToSymbol(after, this.strokeSpaceWidth, 0)\n    }\n    return {\n      before: newStrokes[0],\n      after\n    }\n  }\n\n  protected computeSplitStrokeInGroup(gestureStroke: IIStroke, group: IISymbolGroup, subStrokes: { fullStrokeId: string, x: number[], y: number[] }[]): IISymbolGroup[]\n  {\n    const newGroups: IISymbolGroup[] = []\n    const symbolsBefore: TIISymbol[] = []\n    const symbolsAfter: TIISymbol[] = []\n\n    const strokeIdToSplit = subStrokes[0].fullStrokeId\n\n    group.children.forEach(gs =>\n    {\n      if (gs.id === strokeIdToSplit) {\n        const subStroke = this.computeSplitStroke(gs as IIStroke, subStrokes)\n        if (subStroke.before) {\n          symbolsBefore.push(subStroke.before)\n        }\n        if (subStroke.after) {\n          symbolsAfter.push(subStroke.after)\n        }\n      }\n      else if (gs.bounds.xMid < gestureStroke.bounds.xMid) {\n        symbolsBefore.push(gs)\n      }\n      else if (gs.bounds.xMid > gestureStroke.bounds.xMid) {\n        this.translator.applyToSymbol(gs, this.strokeSpaceWidth, 0)\n        symbolsAfter.push(gs)\n      }\n    })\n\n    if (symbolsBefore.length) {\n      newGroups.push(new IISymbolGroup(symbolsBefore, group.style))\n    }\n    if (symbolsAfter.length) {\n      newGroups.push(new IISymbolGroup(symbolsAfter, group.style))\n    }\n    return newGroups\n  }\n\n  protected computeChangesOnSplitStroke(gestureStroke: IIStroke, strokeIdToSplit: string, subStrokes: { fullStrokeId: string, x: number[], y: number[] }[]): TIIHistoryChanges\n  {\n    const translate: { symbols: TIISymbol[], tx: number, ty: number }[] = []\n    const replaced: { oldSymbols: TIISymbol[], newSymbols: TIISymbol[] } = { oldSymbols: [], newSymbols: [] }\n\n    const symbolsAfterGestureInRow = this.model.symbols.filter(s => gestureStroke.id !== s.id && this.model.isSymbolInRow(gestureStroke, s) && gestureStroke.bounds.xMid < s.bounds.xMin)\n\n    const symbolToSplit = this.model.getRootSymbol(strokeIdToSplit)\n    if (symbolToSplit?.type === SymbolType.Group) {\n      const newGroups = this.computeSplitStrokeInGroup(gestureStroke, symbolToSplit, subStrokes)\n      replaced.newSymbols.push(...newGroups)\n      replaced.oldSymbols.push(symbolToSplit)\n    }\n    else if (symbolToSplit?.type === SymbolType.Stroke) {\n      const newStrokes = this.computeSplitStroke(symbolToSplit, subStrokes)\n      if (newStrokes.before) {\n        replaced.newSymbols.push(newStrokes.before)\n      }\n      if (newStrokes.after) {\n        replaced.newSymbols.push(newStrokes.after)\n      }\n      replaced.oldSymbols.push(symbolToSplit)\n    }\n    else if (symbolToSplit?.type === SymbolType.Recognized) {\n      const strokesToSplit = symbolToSplit.strokes.find(s => s.id === strokeIdToSplit)!\n      const strokesBefore = symbolToSplit.strokes.filter(s => s.id !== strokeIdToSplit && s.bounds.xMid < gestureStroke.bounds.xMid)\n      const strokesAfter = symbolToSplit.strokes.filter(s => s.id !== strokeIdToSplit && s.bounds.xMid > gestureStroke.bounds.xMid)\n      const newStrokes = this.computeSplitStroke(strokesToSplit, subStrokes)\n      if (newStrokes.before) {\n        replaced.newSymbols.push(...strokesBefore, newStrokes.before)\n      }\n      if (newStrokes.after) {\n        replaced.newSymbols.push(newStrokes.after, ...strokesAfter)\n      }\n      replaced.oldSymbols.push(symbolToSplit)\n    }\n    if (symbolsAfterGestureInRow.length) {\n      translate.push({ symbols: symbolsAfterGestureInRow, tx: this.strokeSpaceWidth, ty: 0 })\n    }\n\n    return {\n      translate,\n      replaced\n    }\n  }\n\n  protected computeChangesOnSplitGroup(gestureStroke: IIStroke, groupToSplit: IISymbolGroup): TIIHistoryChanges\n  {\n    const translate: { symbols: TIISymbol[], tx: number, ty: number }[] = []\n    const replaced: { oldSymbols: TIISymbol[], newSymbols: TIISymbol[] } = { oldSymbols: [], newSymbols: [] }\n\n    const symbolsAfterGestureInRow = this.model.symbols.filter(s => gestureStroke.id !== s.id && this.model.isSymbolInRow(gestureStroke, s) && gestureStroke.bounds.xMid < s.bounds.xMin)\n\n    const groupSymbolsBefore = groupToSplit.children.filter(s => s.bounds.xMid <= gestureStroke.bounds.xMid)\n    const groupsSymbolsAfter = groupToSplit.children.filter(s => s.bounds.xMid > gestureStroke.bounds.xMid)\n\n    replaced.oldSymbols.push(groupToSplit)\n    if (groupSymbolsBefore.length) {\n      const groupBefore = new IISymbolGroup(groupSymbolsBefore.map(s => s.clone()), groupToSplit.style)\n      groupBefore.decorators = groupToSplit.decorators.map(d => new IIDecorator(d.kind, d.style))\n      replaced.newSymbols.push(groupBefore)\n    }\n    if (groupsSymbolsAfter.length) {\n      const grouAfter = new IISymbolGroup(groupsSymbolsAfter.map(s => s.clone()), groupToSplit.style)\n      grouAfter.decorators = groupToSplit.decorators.map(d => new IIDecorator(d.kind, d.style))\n      this.translator.applyToSymbol(grouAfter, this.strokeSpaceWidth, 0)\n      replaced.newSymbols.push(grouAfter)\n    }\n    if (symbolsAfterGestureInRow?.length) {\n      translate.push({ symbols: symbolsAfterGestureInRow.filter(s => s.id !== groupToSplit.id), tx: this.strokeSpaceWidth, ty: 0 })\n    }\n\n    return {\n      translate,\n      replaced\n    }\n  }\n\n  protected computeChangesOnSplitStrokeText(gestureStroke: IIStroke, strokeTextToSplit: IIRecognizedText): TIIHistoryChanges\n  {\n    const translate: { symbols: TIISymbol[], tx: number, ty: number }[] = []\n    const replaced: { oldSymbols: TIISymbol[], newSymbols: TIISymbol[] } = { oldSymbols: [], newSymbols: [] }\n\n    const symbolsAfterGestureInRow = this.model.symbols.filter(s => gestureStroke.id !== s.id && this.model.isSymbolInRow(gestureStroke, s) && gestureStroke.bounds.xMid < s.bounds.xMin)\n\n    const strokesBefore = strokeTextToSplit.strokes.filter(s => s.bounds.xMid <= gestureStroke.bounds.xMid)\n    const strokesAfter = strokeTextToSplit.strokes.filter(s => s.bounds.xMid > gestureStroke.bounds.xMid)\n\n    replaced.oldSymbols.push(strokeTextToSplit)\n    if (strokesBefore.length) {\n      const strokeTextBefore = new IIRecognizedText(strokesBefore.map(s => s.clone()), strokeTextToSplit, strokeTextToSplit.style)\n      strokeTextBefore.decorators = strokeTextToSplit.decorators.map(d => new IIDecorator(d.kind, d.style))\n      replaced.newSymbols.push(strokeTextBefore)\n    }\n    if (strokesAfter.length) {\n      const strokeTextAfter = new IIRecognizedText(strokesAfter.map(s => s.clone()), strokeTextToSplit, strokeTextToSplit.style)\n      strokeTextAfter.decorators = strokeTextToSplit.decorators.map(d => new IIDecorator(d.kind, d.style))\n      this.translator.applyToSymbol(strokeTextAfter, this.strokeSpaceWidth, 0)\n      replaced.newSymbols.push(strokeTextAfter)\n    }\n    if (symbolsAfterGestureInRow?.length) {\n      translate.push({ symbols: symbolsAfterGestureInRow.filter(s => s.id !== strokeTextToSplit.id), tx: this.strokeSpaceWidth, ty: 0 })\n    }\n\n    return {\n      translate,\n      replaced\n    }\n  }\n\n  protected computeChangesOnSplitText(gestureStroke: IIStroke, textToSplit: IIText): TIIHistoryChanges\n  {\n    const translate: { symbols: TIISymbol[], tx: number, ty: number }[] = []\n    const replaced: { oldSymbols: TIISymbol[], newSymbols: TIISymbol[] } = { oldSymbols: [], newSymbols: [] }\n\n    const symbolsAfterGestureInRow = this.model.symbols.filter(s => gestureStroke.id !== s.id && this.model.isSymbolInRow(gestureStroke, s) && gestureStroke.bounds.xMid < s.bounds.xMin)\n\n    const charsBefore = textToSplit.chars.filter(c => c.bounds.x + c.bounds.width / 2 <= gestureStroke.bounds.xMid)\n    const charsAfter = textToSplit.chars.filter(c => c.bounds.x + c.bounds.width / 2 > gestureStroke.bounds.xMid)\n    const newTexts: IIText[] = []\n    if (charsBefore.length && charsAfter.length) {\n      const textBefore = new IIText(charsBefore, textToSplit.point, Box.createFromBoxes(charsBefore.map(c => c.bounds)))\n      this.texter.setBounds(textBefore)\n      newTexts.push(textBefore)\n      const pointAfter: TPoint = {\n        x: textBefore.point.x + textBefore.bounds.width + this.texter.getSpaceWidth(computeAverage(textBefore.chars.map(c => c.fontSize))),\n        y: textBefore.point.y\n      }\n      const textAfter = new IIText(charsAfter, pointAfter, Box.createFromBoxes(charsAfter.map(c => c.bounds)))\n      this.texter.setBounds(textAfter)\n      newTexts.push(textAfter)\n      replaced.newSymbols = newTexts\n      replaced.oldSymbols = [textToSplit]\n    }\n    if (symbolsAfterGestureInRow?.length) {\n      translate.push({ symbols: symbolsAfterGestureInRow.filter(s => s.id !== gestureStroke.id), tx: this.strokeSpaceWidth, ty: 0 })\n    }\n\n    return {\n      translate,\n      replaced\n    }\n  }\n\n  async applyInsertGesture(gestureStroke: IIStroke, gesture: TGesture): Promise<void>\n  {\n    this.#logger.debug(\"applyInsertGesture\", { gestureStroke, gesture })\n\n    const symbolsRow = this.model.symbols.filter(s => gestureStroke.id !== s.id && this.model.isSymbolInRow(gestureStroke, s))\n    const textToSplit = symbolsRow.find(s => s.type === SymbolType.Text && isBetween(gestureStroke.bounds.xMid, s.bounds.xMin, s.bounds.xMax)) as IIText | undefined\n    const groupToSplit = symbolsRow.find(s => s.type === SymbolType.Group && isBetween(gestureStroke.bounds.xMid, s.bounds.xMin, s.bounds.xMax)) as IISymbolGroup | undefined\n    const strokeTextToSplit = symbolsRow.find(s => s.type === SymbolType.Recognized && isBetween(gestureStroke.bounds.xMid, s.bounds.xMin, s.bounds.xMax)) as IIRecognizedText | undefined\n\n    const symbolsBeforeGestureInRow = symbolsRow.filter(s => gestureStroke.bounds.xMid > s.bounds.xMax)\n    const symbolsAfterGestureInRow = symbolsRow.filter(s => gestureStroke.bounds.xMid < s.bounds.xMin)\n\n    const symbolsBelow = this.model.symbols.filter(s => this.model.isSymbolBelow(gestureStroke, s))\n\n\n    let changes: TIIHistoryChanges | undefined\n    if (gesture.strokeIds.length && gesture.subStrokes?.length) {\n      changes = this.computeChangesOnSplitStroke(gestureStroke, gesture.strokeIds[0], gesture.subStrokes)\n    }\n    else if (groupToSplit) {\n      changes = this.computeChangesOnSplitGroup(gestureStroke, groupToSplit)\n    }\n    else if (textToSplit) {\n      changes = this.computeChangesOnSplitText(gestureStroke, textToSplit)\n    }\n    else if (strokeTextToSplit) {\n      changes = this.computeChangesOnSplitStrokeText(gestureStroke, strokeTextToSplit)\n    }\n    else if (symbolsAfterGestureInRow.length) {\n      const translate: { symbols: TIISymbol[], tx: number, ty: number }[] = []\n      let translateX = 0\n      if (symbolsBeforeGestureInRow.length) {\n        translateX = Math.min(...symbolsBeforeGestureInRow.map(s => s.bounds.xMin)) - Math.min(...symbolsAfterGestureInRow.map(s => s.bounds.xMin))\n      }\n\n      switch (this.insertAction) {\n        case InsertAction.LineBreak:\n          translate.push({ symbols: symbolsAfterGestureInRow, tx: translateX, ty: this.rowHeight })\n          if (symbolsBelow.length) {\n            translate.push({ symbols: symbolsBelow, tx: 0, ty: this.rowHeight })\n          }\n          break\n        case InsertAction.Insert:\n          translate.push({ symbols: symbolsAfterGestureInRow, tx: this.strokeSpaceWidth * 2, ty: 0 })\n          break\n      }\n      changes = { translate }\n    }\n    else if (symbolsBeforeGestureInRow.length && symbolsBelow.length && this.insertAction === InsertAction.LineBreak) {\n      changes = { translate: [{ symbols: symbolsBelow, tx: 0, ty: this.rowHeight }] }\n    }\n\n    if (changes) {\n      const promises: Promise<void>[] = []\n      if (changes.translate?.length) {\n        promises.push(...changes.translate.map(tr => this.translator.translate(tr.symbols, tr.tx, tr.ty, false)))\n      }\n      if (changes.replaced?.newSymbols.length) {\n        promises.push(this.editor.replaceSymbols(changes.replaced.oldSymbols, changes.replaced.newSymbols, false))\n      }\n      this.history.push(this.model, changes)\n      await Promise.all(promises)\n    }\n  }\n\n  async applyUnderlineGesture(gestureStroke: IIStroke, gesture: TGesture): Promise<void>\n  {\n    this.#logger.debug(\"applyUnderlineGesture\", { gestureStroke, gesture })\n    if (!gesture.strokeIds.length) {\n      this.#logger.warn(\"applyUnderlineGesture\", \"Unable to apply underline because there are no strokes\")\n      return\n    }\n\n    const changes: TIIHistoryChanges = { decorator: [] }\n    const symbolIds: string[] = []\n    gesture.strokeIds.forEach(id =>\n    {\n      const sym = this.model.getRootSymbol(id)\n      if (sym && [SymbolType.Group, SymbolType.Stroke, SymbolType.Text, SymbolType.Recognized].includes(sym.type) && !symbolIds.includes(sym.id)) {\n        const symWithDec = sym as (IIText | IIStroke | IISymbolGroup | IIRecognizedText)\n        const underline = new IIDecorator(DecoratorKind.Underline, this.editor.penStyle)\n        const index = symWithDec.decorators.findIndex(d => d.kind === DecoratorKind.Underline)\n        const added = index === -1\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        added ? symWithDec.decorators.push(underline) : symWithDec.decorators.splice(index, 1)\n        this.model.updateSymbol(symWithDec)\n        this.renderer.drawSymbol(symWithDec)\n        changes.decorator?.push({ symbol: symWithDec, decorator: underline, added })\n        symbolIds.push(symWithDec.id)\n      }\n    })\n    if (changes.decorator?.length) {\n      this.history.push(this.model, changes)\n    }\n  }\n\n  async applyStrikeThroughGesture(gestureStroke: IIStroke, gesture: TGesture): Promise<void | TIISymbol[]>\n  {\n    this.#logger.debug(\"applyStrikeThroughGesture\", { gestureStroke, gesture })\n    if (!gesture.strokeIds.length) {\n      this.#logger.warn(\"applyStrikeThroughGesture\", \"Unable to apply strikethrough because there are no strokes\")\n      return\n    }\n    switch (this.strikeThroughAction) {\n      case StrikeThroughAction.Draw: {\n        const changes: TIIHistoryChanges = { decorator: [] }\n        const symbolIds: string[] = []\n        gesture.strokeIds.forEach(id =>\n        {\n          const symbol = this.model.getRootSymbol(id)\n          if (symbol && [SymbolType.Group, SymbolType.Stroke, SymbolType.Text, SymbolType.Recognized].includes(symbol.type) && !symbolIds.includes(symbol.id)) {\n            const symWithDec = symbol as (IIText | IIStroke | IISymbolGroup | IIRecognizedText)\n            const strikethrough = new IIDecorator(DecoratorKind.Strikethrough, this.editor.penStyle)\n            const index = symWithDec.decorators.findIndex(d => d.kind === DecoratorKind.Strikethrough)\n            const added = index === -1\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            added ? symWithDec.decorators.push(strikethrough) : symWithDec.decorators.splice(index, 1)\n            this.model.updateSymbol(symWithDec)\n            this.renderer.drawSymbol(symWithDec)\n            changes.decorator?.push({ symbol: symWithDec, decorator: strikethrough, added })\n            symbolIds.push(symWithDec.id)\n          }\n        })\n        if (changes.decorator?.length) {\n          this.history.push(this.model, changes)\n        }\n        break\n      }\n      case StrikeThroughAction.Erase: {\n        return this.editor.removeSymbols(gesture.strokeIds)\n      }\n      default:\n        this.#logger.warn(\"#applyStrikeThroughGesture\", `Unknow OnStrikeThrough: ${ this.strikeThroughAction }, values allowed are: ${ StrikeThroughAction.Draw }, ${ StrikeThroughAction.Erase }`)\n        break\n    }\n  }\n\n  async apply(gestureStroke: IIStroke, gesture: TGesture): Promise<void>\n  {\n    this.#logger.info(\"apply\", { gestureStroke, gesture })\n    this.editor.updateSymbolsStyle([gestureStroke.id], { opacity: (gestureStroke.style.opacity || 1) / 2 }, false)\n    await this.editor.removeSymbol(gestureStroke.id, false)\n    await this.editor.synchronizeStrokesWithJIIX()\n    switch (gesture.gestureType) {\n      case \"UNDERLINE\":\n        await this.applyUnderlineGesture(gestureStroke, gesture)\n        break\n      case \"SCRATCH\":\n        await this.applyScratch(gestureStroke, gesture)\n        break\n      case \"JOIN\":\n        await this.applyJoinGesture(gestureStroke, gesture)\n        break\n      case \"INSERT\":\n        await this.applyInsertGesture(gestureStroke, gesture)\n        break\n      case \"STRIKETHROUGH\":\n        await this.applyStrikeThroughGesture(gestureStroke, gesture)\n        break\n      case \"SURROUND\":\n        await this.applySurroundGesture(gestureStroke, gesture)\n        break\n      default:\n        this.#logger.warn(\"apply\", `Gesture unknow: ${ gesture.gestureType }`)\n        break\n    }\n    this.editor.event.emitGestured({ gestureType: gesture.gestureType, stroke: gestureStroke })\n    this.editor.svgDebugger.apply()\n    return Promise.resolve()\n  }\n\n  async getGestureFromContextLess(gestureStroke: IIStroke): Promise<TGesture | undefined>\n  {\n    const gesture = await this.recognizer.recognizeGesture(gestureStroke)\n    if (!gesture) return\n    switch (gesture.gestureType) {\n      case \"surround\": {\n        const hasSymbolsToSurrond = this.model.symbols.some(s =>\n        {\n          if (s.id !== gestureStroke.id && gestureStroke.bounds.contains(s.bounds)) {\n            return this.surroundAction === SurroundAction.Select || [SymbolType.Group, SymbolType.Stroke, SymbolType.Text].includes(s.type)\n          }\n          return false\n        })\n        if (hasSymbolsToSurrond) {\n          return {\n            gestureType: \"SURROUND\",\n            gestureStrokeId: gestureStroke.id,\n            strokeAfterIds: [],\n            strokeBeforeIds: [],\n            strokeIds: [],\n          }\n        }\n        return\n      }\n      case \"left-right\":\n      case \"right-left\": {\n        const symbolsToUnderline = this.model.symbols.filter(s =>\n        {\n          return s.id !== gestureStroke.id && [SymbolType.Text, SymbolType.Stroke, SymbolType.Group].includes(s.type) &&\n            isBetween(s.bounds.xMid, gestureStroke.bounds.xMin, gestureStroke.bounds.xMax) &&\n            isBetween(gestureStroke.bounds.yMid, s.bounds.y + s.bounds.height * 3 / 4, s.bounds.y + s.bounds.height * 5 / 4)\n        })\n        if (symbolsToUnderline.length) {\n          return {\n            gestureType: \"UNDERLINE\",\n            gestureStrokeId: gestureStroke.id,\n            strokeAfterIds: [],\n            strokeBeforeIds: [],\n            strokeIds: symbolsToUnderline.map(s => s.id),\n          }\n        }\n        const symbolsToStrikeThrough = this.model.symbols.filter(s =>\n        {\n          return s.id !== gestureStroke.id && [SymbolType.Text, SymbolType.Stroke, SymbolType.Group].includes(s.type) &&\n            isBetween(s.bounds.xMid, gestureStroke.bounds.xMin, gestureStroke.bounds.xMax) &&\n            isBetween(gestureStroke.bounds.yMid, s.bounds.y + s.bounds.height / 4, s.bounds.y + s.bounds.height * 3 / 4)\n        })\n        if (symbolsToStrikeThrough.length) {\n          return {\n            gestureType: \"STRIKETHROUGH\",\n            gestureStrokeId: gestureStroke.id,\n            strokeAfterIds: [],\n            strokeBeforeIds: [],\n            strokeIds: symbolsToStrikeThrough.map(s => s.id),\n          }\n        }\n        return\n      }\n      case \"scratch\": {\n        const symbolsToErase = this.model.symbols.filter(s =>\n        {\n          return s.id !== gestureStroke.id &&\n            (\n              gestureStroke.bounds.overlaps(s.bounds) && [SymbolType.Stroke, SymbolType.Text, SymbolType.Group].includes(s.type) ||\n              gestureStroke.bounds.contains(s.bounds) && [SymbolType.Shape, SymbolType.Edge].includes(s.type)\n            )\n        })\n\n        if (symbolsToErase.length) {\n          return {\n            gestureType: \"SCRATCH\",\n            gestureStrokeId: gestureStroke.id,\n            strokeAfterIds: [],\n            strokeBeforeIds: [],\n            strokeIds: symbolsToErase.map(s => s.id),\n          }\n        }\n        return\n      }\n      case \"bottom-top\": {\n        const hasSymbolsInRow = this.model.symbols.some(s =>\n          s.id !== gestureStroke.id &&\n          [SymbolType.Text, SymbolType.Stroke, SymbolType.Group].includes(s.type) &&\n          isBetween(s.bounds.yMid, gestureStroke.bounds.yMin, gestureStroke.bounds.yMax)\n        )\n        if (hasSymbolsInRow) {\n          return {\n            gestureType: \"JOIN\",\n            gestureStrokeId: gestureStroke.id,\n            strokeAfterIds: [],\n            strokeBeforeIds: [],\n            strokeIds: [],\n          }\n        }\n        return\n      }\n      case \"top-bottom\": {\n        const hasSymbolsInRow = this.model.symbols.some(s =>\n          s.id !== gestureStroke.id &&\n          [SymbolType.Text, SymbolType.Stroke, SymbolType.Group].includes(s.type) &&\n          isBetween(s.bounds.yMid, gestureStroke.bounds.yMin, gestureStroke.bounds.yMax)\n        )\n        if (hasSymbolsInRow) {\n          return {\n            gestureType: \"INSERT\",\n            gestureStrokeId: gestureStroke.id,\n            strokeAfterIds: [],\n            strokeBeforeIds: [],\n            strokeIds: [],\n          }\n        }\n        return\n      }\n      case \"none\":\n      default:\n        return\n    }\n  }\n}\n","/**\n * @group Menu\n */\nexport type TSubMenuParam =\n{\n  trigger: HTMLElement,\n  menuTitle?: string,\n  subMenu: HTMLElement,\n  position: \"top\" | \"left\" | \"right\" | \"right-top\" | \"bottom\" | \"bottom-left\" | \"bottom-right\"\n}\n\n/**\n * @group Menu\n */\nexport class IIMenuSub {\n  element: HTMLDivElement\n  content: HTMLElement\n\n  constructor(param : TSubMenuParam) {\n    this.element = document.createElement(\"div\")\n    this.element.classList.add(\"sub-menu\")\n    this.element.appendChild(param.trigger)\n    this.content = document.createElement(\"div\")\n    if(param.menuTitle) {\n      const menuTitleElement = document.createElement(\"h3\")\n      menuTitleElement.classList.add(\"ms-menu-title\")\n      menuTitleElement.textContent = param.menuTitle\n      this.content.appendChild(menuTitleElement)\n    }\n    this.content.classList.add(\"sub-menu-content\", param.position)\n    this.content.appendChild(param.subMenu)\n    this.element.appendChild(this.content)\n\n    param.trigger.addEventListener(\"pointerdown\", () => this.toggle())\n    document.addEventListener(\"pointerdown\", (e) => {\n      if (!this.element.contains(e.target as HTMLElement)) {\n        this.close()\n      }\n    })\n  }\n\n  open(): void {\n    this.content.classList.add(\"open\")\n  }\n\n  close(): void {\n    this.content.classList.remove(\"open\")\n  }\n\n  toggle(): void {\n    this.content.classList.toggle(\"open\")\n  }\n\n  unwrap(): void {\n    this.content.classList.remove(\"sub-menu-content\")\n    this.element.insertAdjacentElement(\"beforebegin\", this.content)\n    this.element.style.display = \"none\"\n  }\n\n  wrap(): void {\n    this.content.classList.add(\"sub-menu-content\")\n    this.element.appendChild(this.content)\n    this.element.style.display = \"block\"\n  }\n\n}\n","import menuIcon from \"../assets/svg/menu.svg\"\nimport languageIcon from \"../assets/svg/language.svg\"\nimport trashIcon from \"../assets/svg/trash.svg\"\nimport undoIcon from \"../assets/svg/undo.svg\"\nimport redoIcon from \"../assets/svg/redo.svg\"\nimport translateIcon from \"../assets/svg/translate.svg\"\nimport gestureIcon from \"../assets/svg/spock-hand-gesture.svg\"\nimport guideIcon from \"../assets/svg/orthogonal-view.svg\"\nimport snapIcon from \"../assets/svg/arrow-to-dot.svg\"\nimport debugIcon from \"../assets/svg/wolf.svg\"\nimport downloadIcon from \"../assets/svg/download.svg\"\nimport uploadIcon from \"../assets/svg/upload.svg\"\nimport { EditorTool, EditorWriteTool } from \"../Constants\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport { IIMenu, TMenuItemBoolean, TMenuItemButton, TMenuItemButtonList, TMenuItemSelect } from \"./IIMenu\"\nimport { TIISymbol } from \"../symbol\"\nimport { InsertAction, StrikeThroughAction, SurroundAction } from \"../gesture\"\nimport { IIMenuSub, TSubMenuParam } from \"./IIMenuSub\"\nimport { getAvailableLanguageList, PartialDeep } from \"../utils\"\nimport { InteractiveInkEditor } from \"../editor\"\n\n/**\n * @group Menu\n */\nexport class IIMenuAction extends IIMenu\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.MENU)\n\n  editor: InteractiveInkEditor\n  id: string\n  wrapper?: HTMLElement\n  menuLanguage!: IIMenuSub\n  menuClear?: HTMLButtonElement\n  menuUndo?: HTMLButtonElement\n  menuRedo?: HTMLButtonElement\n  menuConvert?: HTMLButtonElement\n\n  guideGaps = [\n    { label: \"S\", value: \"25\" },\n    { label: \"M\", value: \"50\" },\n    { label: \"L\", value: \"100\" },\n    { label: \"XL\", value: \"150\" },\n  ]\n\n  constructor(editor: InteractiveInkEditor, id = \"ms-menu-action\")\n  {\n    super()\n    this.id = id\n    this.editor = editor\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get isMobile(): boolean\n  {\n    return this.editor.renderer.parent.clientWidth < 700\n  }\n\n  protected createMenuClear(): HTMLElement\n  {\n    this.menuClear = document.createElement(\"button\")\n    this.menuClear.id = `${ this.id }-clear`\n    this.menuClear.classList.add(\"ms-menu-button\", \"square\")\n    this.menuClear.innerHTML = trashIcon\n    this.menuClear.addEventListener(\"pointerup\", () =>\n    {\n      this.#logger.info(`${ this.id }.clear`)\n      this.editor.clear()\n    })\n    return this.menuClear\n  }\n\n  protected createMenuLanguage(): HTMLElement\n  {\n    const triggerBtn = document.createElement(\"button\")\n    triggerBtn.id = `${ this.id }-language-trigger`\n    triggerBtn.classList.add(\"ms-menu-button\", \"square\")\n    triggerBtn.innerHTML = languageIcon\n\n    const select = document.createElement(\"select\")\n    select.classList.add(\"select-language\")\n    select.id = `${ this.id }-language`\n    getAvailableLanguageList(this.editor.configuration)\n      .then(json =>\n      {\n        const languages = json.result as { [key: string]: string }\n        Object.keys(languages).forEach(key =>\n        {\n          const selected = key === this.editor.configuration.recognition.lang\n          const opt = new Option(languages[key], key, selected, selected)\n          select.appendChild(opt)\n        })\n      })\n    select.addEventListener(\"change\", (e) =>\n    {\n      this.#logger.info(`${ this.id }.selectLanguage`)\n      const value = (e.target as HTMLInputElement).value\n      this.editor.changeLanguage(value)\n    })\n    const params: TSubMenuParam = {\n      trigger: triggerBtn,\n      subMenu: select,\n      position: \"bottom-right\"\n    }\n    this.menuLanguage = new IIMenuSub(params)\n    return this.menuLanguage.element\n  }\n\n  protected createMenuUndo(): HTMLElement\n  {\n    this.menuUndo = document.createElement(\"button\")\n    this.menuUndo.id = `${ this.id }-undo`\n    this.menuUndo.classList.add(\"ms-menu-button\", \"square\")\n    this.menuUndo.innerHTML = undoIcon\n    this.menuUndo.addEventListener(\"pointerup\", async () =>\n    {\n      this.#logger.info(`${ this.id }.undo`)\n      await this.editor.undo()\n    })\n    return this.menuUndo\n  }\n\n  protected createMenuRedo(): HTMLElement\n  {\n    this.menuRedo = document.createElement(\"button\")\n    this.menuRedo.id = `${ this.id }-redo`\n    this.menuRedo.classList.add(\"ms-menu-button\", \"square\")\n    this.menuRedo.innerHTML = redoIcon\n    this.menuRedo.addEventListener(\"pointerup\", async () =>\n    {\n      this.#logger.info(`${ this.id }.redo`)\n      await this.editor.redo()\n    })\n    return this.menuRedo\n  }\n\n  protected createMenuConvert(): HTMLElement\n  {\n    this.menuConvert = document.createElement(\"button\")\n    this.menuConvert.id = `${ this.id }-convert`\n    this.menuConvert.classList.add(\"ms-menu-button\", \"square\")\n    this.menuConvert.innerHTML = translateIcon\n    this.menuConvert.addEventListener(\"pointerup\", () =>\n    {\n      this.#logger.info(`${ this.id }.convert`)\n      this.editor.convert()\n    })\n    return this.menuConvert\n  }\n\n  protected createMenuGesture(): HTMLDivElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-gesture`\n    trigger.classList.add(\"ms-menu-button\", \"square\")\n    trigger.innerHTML = gestureIcon\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n\n    const surroundActionValues: { label: string, value: string }[] = []\n    for (const key in SurroundAction) {\n      const value = SurroundAction[key as keyof typeof SurroundAction]\n      surroundActionValues.push({ label: key, value })\n    }\n    const strikeThroughActionValues: { label: string, value: string }[] = []\n    for (const key in StrikeThroughAction) {\n      const value = StrikeThroughAction[key as keyof typeof StrikeThroughAction]\n      strikeThroughActionValues.push({ label: key, value })\n    }\n    const splitActionValues: { label: string, value: string }[] = []\n    for (const key in InsertAction) {\n      const value = InsertAction[key as keyof typeof InsertAction]\n      splitActionValues.push({ label: key, value })\n    }\n    const menuItems: (TMenuItemBoolean | TMenuItemSelect)[] = [\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-gesture-detect`,\n        label: \"Detect gesture\",\n        initValue: this.editor.writer.detectGesture,\n        callback: (value) =>\n        {\n          this.#logger.info(`${ this.id }.gesture-detect`, { value })\n          this.editor.writer.detectGesture = value\n          this.editor.tool = EditorTool.Write\n          this.editor.writer.tool = EditorWriteTool.Pencil\n        }\n      },\n      {\n        type: \"select\",\n        id: `${ this.id }-gesture-surround`,\n        label: \"On surround\",\n        values: surroundActionValues,\n        initValue: this.editor.gesture.surroundAction,\n        callback: (value) =>\n        {\n          this.#logger.info(`${ this.id }.gesture-surround`, { value })\n          this.editor.gesture.surroundAction = value as SurroundAction\n          this.editor.tool = EditorTool.Write\n          this.editor.writer.tool = EditorWriteTool.Pencil\n        }\n      },\n      {\n        type: \"select\",\n        id: `${ this.id }-gesture-strikethrough`,\n        label: \"On strikethrough\",\n        values: strikeThroughActionValues,\n        initValue: this.editor.gesture.strikeThroughAction,\n        callback: (value) =>\n        {\n          this.#logger.info(`${ this.id }.gesture-strikethrough`, { value })\n          this.editor.gesture.strikeThroughAction = value as StrikeThroughAction\n          this.editor.tool = EditorTool.Write\n          this.editor.writer.tool = EditorWriteTool.Pencil\n        }\n      },\n      {\n        type: \"select\",\n        id: `${ this.id }-gesture-insert`,\n        label: \"On insert\",\n        values: splitActionValues,\n        initValue: this.editor.gesture.insertAction,\n        callback: (value) =>\n        {\n          this.#logger.info(`${ this.id }.gesture-InsertAction`, { value })\n          this.editor.gesture.insertAction = value as InsertAction\n          this.editor.tool = EditorTool.Write\n          this.editor.writer.tool = EditorWriteTool.Pencil\n        }\n      },\n    ]\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      menuTitle: \"Gesture\",\n      subMenu: subMenuWrapper,\n      position: \"right-top\"\n    }\n    return new IIMenuSub(params).element\n  }\n\n  protected createMenuGuide(): HTMLDivElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-guide`\n    trigger.classList.add(\"ms-menu-button\", \"square\")\n    trigger.innerHTML = guideIcon\n\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n\n    const menuItems: (TMenuItemBoolean | TMenuItemSelect | TMenuItemButtonList)[] = [\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-guide-enable`,\n        label: \"Show guide\",\n        initValue: this.editor.configuration.rendering.guides.enable,\n        callback: (value) =>\n        {\n          this.#logger.info(`${ this.id }.guide-enable`, { value })\n          this.editor.configuration.rendering.guides.enable = value as boolean\n          this.editor.renderingConfiguration = this.editor.configuration.rendering\n        }\n      },\n      {\n        type: \"select\",\n        id: `${ this.id }-guide-type`,\n        label: \"Guide style\",\n        values: [\n          { label: \"Line\", value: \"line\" },\n          { label: \"Grid\", value: \"grid\" },\n          { label: \"Point\", value: \"point\" },\n        ],\n        initValue: this.editor.configuration.rendering.guides.type,\n        callback: (value) =>\n        {\n          this.#logger.info(`${ this.id }.guide-type`, { value })\n          this.editor.configuration.rendering.guides.type = value as (\"line\" | \"grid\" | \"point\")\n          this.editor.renderingConfiguration = this.editor.configuration.rendering\n        }\n      },\n      {\n        type: \"list\",\n        id: `${ this.id }-guide-size`,\n        label: \"Guide style\",\n        values: this.guideGaps,\n        initValue: this.editor.configuration.rendering.guides.gap.toString(),\n        callback: (value) =>\n        {\n          this.#logger.info(`${ this.id }.guide-size`, { value })\n          this.editor.configuration.rendering.guides.gap = +value\n          this.editor.renderingConfiguration = this.editor.configuration.rendering\n        }\n      },\n    ]\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      menuTitle: \"Guide\",\n      subMenu: subMenuWrapper,\n      position: \"right-top\"\n    }\n    return new IIMenuSub(params).element\n  }\n\n  protected createMenuSnap(): HTMLDivElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-snap`\n    trigger.classList.add(\"ms-menu-button\", \"square\")\n    trigger.innerHTML = snapIcon\n\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n\n    const menuItems: (TMenuItemBoolean | TMenuItemSelect)[] = [\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-snap-to-guide`,\n        label: \"Snap to guide\",\n        initValue: this.editor.snaps.configuration.guide,\n        callback: (value) => this.editor.snaps.configuration.guide = value\n      },\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-snap-to-element`,\n        label: \"Snap to element\",\n        initValue: this.editor.snaps.configuration.symbol,\n        callback: (value) => this.editor.snaps.configuration.symbol = value\n      },\n      {\n        type: \"select\",\n        id: `${ this.id }-snap-angle`,\n        label: \"Snap angle\",\n        values: [\n          { label: \"None\", value: \"0\" },\n          { label: \"10°\", value: \"10\" },\n          { label: \"30°\", value: \"30\" },\n          { label: \"45°\", value: \"45\" },\n          { label: \"90°\", value: \"90\" },\n          { label: \"180°\", value: \"180\" },\n        ],\n        initValue: this.editor.snaps.configuration.angle.toString(),\n        callback: (angle) => this.editor.snaps.configuration.angle = +angle\n      },\n    ]\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      menuTitle: \"Snap\",\n      subMenu: subMenuWrapper,\n      position: \"right-top\"\n    }\n    return new IIMenuSub(params).element\n  }\n\n  protected createMenuDebug(): HTMLDivElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-debug`\n    trigger.classList.add(\"ms-menu-button\", \"square\")\n    trigger.innerHTML = debugIcon\n\n    const menuItems: TMenuItemBoolean[] = [\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-debug-bounding-box`,\n        label: \"Show bounding box\",\n        initValue: this.editor.svgDebugger.boundingBoxVisibility,\n        callback: (debug) => this.editor.svgDebugger.boundingBoxVisibility = debug\n      },\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-debug-recognition-box`,\n        label: \"Show recognition box\",\n        initValue: this.editor.svgDebugger.recognitionBoxVisibility,\n        callback: (debug) => this.editor.svgDebugger.recognitionBoxVisibility = debug\n      },\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-debug-bounding-item-box`,\n        label: \"Show recognition item box\",\n        initValue: this.editor.svgDebugger.recognitionItemBoxVisibility,\n        callback: (debug) => this.editor.svgDebugger.recognitionItemBoxVisibility = debug\n      },\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-debug-snap-points`,\n        label: \"Show snap points\",\n        initValue: this.editor.svgDebugger.snapPointsVisibility,\n        callback: (debug) => this.editor.svgDebugger.snapPointsVisibility = debug\n      },\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-debug-vertices`,\n        label: \"Show vertices\",\n        initValue: this.editor.svgDebugger.verticesVisibility,\n        callback: (debug) => this.editor.svgDebugger.verticesVisibility = debug\n      },\n    ]\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      menuTitle: \"Debug\",\n      subMenu: subMenuWrapper,\n      position: \"right-top\"\n    }\n    return new IIMenuSub(params).element\n  }\n\n  protected createMenuExport(): HTMLElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-export`\n    trigger.classList.add(\"ms-menu-button\", \"square\")\n    trigger.innerHTML = downloadIcon\n\n    const menuItems: TMenuItemButton[] = [\n      {\n        type: \"button\",\n        id: `${ this.id }-export-json`,\n        label: \"json\",\n        callback: () =>\n        {\n          this.editor.downloadAsJson()\n        }\n      },\n      {\n        type: \"button\",\n        id: `${ this.id }-export-svg`,\n        label: \"svg\",\n        callback: () =>\n        {\n          this.editor.downloadAsSVG()\n        }\n      },\n      {\n        type: \"button\",\n        id: `${ this.id }-export-png`,\n        label: \"png\",\n        callback: () =>\n        {\n          this.editor.downloadAsPNG()\n        }\n      },\n    ]\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      menuTitle: \"Export\",\n      subMenu: subMenuWrapper,\n      position: \"right-top\"\n    }\n    return new IIMenuSub(params).element\n  }\n\n  protected async readFileAsText(file: File): Promise<string>\n  {\n    return new Promise((resolve, reject) =>\n    {\n      const reader = new FileReader()\n      reader.onerror = reject;\n      reader.onload = () => {\n        resolve(reader.result as string)\n      }\n      if (file) {\n        reader.readAsText(file)\n      }\n    })\n  }\n\n  protected createMenuImport(): HTMLElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-import`\n    trigger.classList.add(\"ms-menu-button\", \"square\")\n    trigger.innerHTML = uploadIcon\n\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n\n    const importInput = document.createElement(\"input\")\n    importInput.type = \"file\"\n    importInput.accept = \".json\"\n    importInput.multiple = false\n    importInput.addEventListener(\"change\", () => {\n      importBtn.disabled = !importInput.files?.length\n    })\n\n    subMenuWrapper.appendChild(importInput)\n    const importBtn = document.createElement(\"button\")\n    importBtn.classList.add(\"ms-menu-button\")\n    importBtn.innerText = \"Import\"\n    importBtn.disabled = true\n    subMenuWrapper.appendChild(importBtn)\n    importBtn.addEventListener(\"pointerup\", async (e) =>\n    {\n      e.preventDefault()\n      e.stopPropagation()\n      if (importInput.files?.length) {\n        const fileString = await this.readFileAsText(importInput.files[0])\n        const symbols = JSON.parse(fileString) as PartialDeep<TIISymbol>[]\n        await this.editor.createSymbols(symbols)\n        importInput.value = \"\"\n        importBtn.disabled = true\n      }\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      menuTitle: \"Import\",\n      subMenu: subMenuWrapper,\n      position: \"right-top\"\n    }\n    return new IIMenuSub(params).element\n  }\n\n  protected unselectAll(): void\n  {\n    this.wrapper?.querySelectorAll(\"*\").forEach(e => e.classList.remove(\"active\"))\n  }\n\n  protected closeAllSubMenu(): void\n  {\n    this.wrapper?.querySelectorAll(\".open\").forEach(e => e.classList.remove(\"open\"))\n  }\n\n  render(layer: HTMLElement): void\n  {\n    if (this.editor.configuration.menu.action.enable) {\n      const menuTrigger = document.createElement(\"button\")\n      menuTrigger.id = this.id\n      menuTrigger.classList.add(\"ms-menu-button\", \"square\")\n      menuTrigger.innerHTML = menuIcon\n\n      const subMenuWrapper = document.createElement(\"div\")\n      subMenuWrapper.classList.add(\"ms-menu-colmun\")\n      subMenuWrapper.appendChild(this.createMenuGesture())\n      subMenuWrapper.appendChild(this.createMenuGuide())\n      subMenuWrapper.appendChild(this.createMenuSnap())\n      subMenuWrapper.appendChild(this.createMenuDebug())\n      subMenuWrapper.appendChild(this.createMenuImport())\n      subMenuWrapper.appendChild(this.createMenuExport())\n\n      this.wrapper = document.createElement(\"div\")\n      this.wrapper.classList.add(\"ms-menu\", \"ms-menu-top-left\", \"ms-menu-row\")\n      this.wrapper.appendChild(new IIMenuSub({ trigger: menuTrigger, subMenu: subMenuWrapper, position: \"bottom\" }).element)\n      this.wrapper.appendChild(this.createMenuLanguage())\n      this.wrapper.appendChild(this.createMenuClear())\n      this.wrapper.appendChild(this.createMenuUndo())\n      this.wrapper.appendChild(this.createMenuRedo())\n      this.wrapper.appendChild(this.createMenuConvert())\n\n      layer.appendChild(this.wrapper)\n      this.update()\n      this.show()\n    }\n  }\n\n  update(): void\n  {\n    if (this.menuLanguage) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      this.isMobile ? this.menuLanguage.wrap() : this.menuLanguage.unwrap()\n    }\n    if (this.menuClear) {\n      this.menuClear.disabled = this.editor.history.context.empty\n    }\n    if (this.menuUndo) {\n      this.menuUndo.disabled = !this.editor.history.context.canUndo\n    }\n    if (this.menuRedo) {\n      this.menuRedo.disabled = !this.editor.history.context.canRedo\n    }\n    if (this.menuConvert) {\n      this.menuConvert.disabled = !this.editor.extractStrokesFromSymbols(this.model.symbols).length\n    }\n  }\n\n  show(): void\n  {\n    if (this.wrapper) {\n      this.wrapper.style.visibility = \"visible\"\n    }\n  }\n\n  hide(): void\n  {\n    if (this.wrapper) {\n      this.wrapper.style.visibility = \"hidden\"\n    }\n  }\n\n  destroy(): void\n  {\n    if (this.wrapper) {\n      while (this.wrapper.lastChild) {\n        this.wrapper.removeChild(this.wrapper.lastChild)\n      }\n      this.wrapper.remove()\n      this.wrapper = undefined\n      this.menuClear = undefined\n      this.menuUndo = undefined\n      this.menuRedo = undefined\n      this.menuConvert = undefined\n    }\n  }\n}\n","import pencilIcon from \"../assets/svg/edit-pencil.svg\"\nimport cursorIcon from \"../assets/svg/frame-select.svg\"\nimport eraseIcon from \"../assets/svg/erase.svg\"\nimport handIcon from \"../assets/svg/drag-hand-gesture.svg\"\nimport rectangleIcon from \"../assets/svg/rectangle.svg\"\nimport rhombusIcon from \"../assets/svg/rhombus.svg\"\nimport circleIcon from \"../assets/svg/circle.svg\"\nimport ellipseIcon from \"../assets/svg/ellipse.svg\"\nimport triangleIcon from \"../assets/svg/triangle.svg\"\nimport lineIcon from \"../assets/svg/linear.svg\"\nimport arrowIcon from \"../assets/svg/linear-arrow.svg\"\nimport doubleArrowIcon from \"../assets/svg/linear-double-arrow.svg\"\nimport { EditorTool, EditorWriteTool } from \"../Constants\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIMenu } from \"./IIMenu\"\nimport { IIMenuSub } from \"./IIMenuSub\"\nimport { TSubMenuParam } from \"./IIMenuSub\"\nimport { InteractiveInkEditor } from \"../editor\"\n\n/**\n * @group Menu\n */\nexport class IIMenuTool extends IIMenu\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.MENU)\n\n  editor: InteractiveInkEditor\n  id: string\n  wrapper?: HTMLDivElement\n  writeBtn?: HTMLButtonElement\n  menuSelect?: HTMLButtonElement\n  menuMove?: HTMLButtonElement\n  menuErase?: HTMLButtonElement\n  menuShape?: HTMLButtonElement\n  subMenuShape?: {\n    rectangle: HTMLButtonElement,\n    circle: HTMLButtonElement,\n    triangle: HTMLButtonElement,\n    ellipse: HTMLButtonElement\n    rhombus: HTMLButtonElement\n  }\n  menuEdge?: HTMLButtonElement\n  subMenuEdge?: {\n    line: HTMLButtonElement,\n    arrow: HTMLButtonElement,\n    doubleArrow: HTMLButtonElement,\n  }\n\n  constructor(editor: InteractiveInkEditor, id = \"ms-menu-tool\")\n  {\n    super()\n    this.id = id\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  protected createMenuWrite(): HTMLElement\n  {\n    this.writeBtn = document.createElement(\"button\")\n    this.writeBtn.id = `${this.id}-write-pencil`\n    this.writeBtn.classList.add(\"ms-menu-button\", \"square\")\n    this.writeBtn.innerHTML = pencilIcon\n    this.writeBtn.addEventListener(\"pointerup\", () =>\n    {\n      this.unselectAll()\n      this.writeBtn!.classList.add(\"active\")\n      this.editor.tool = EditorTool.Write\n      this.editor.writer.tool = EditorWriteTool.Pencil\n    })\n    return this.writeBtn\n  }\n\n  protected createMenuMove(): HTMLElement\n  {\n    this.menuMove = document.createElement(\"button\")\n    this.menuMove.id = `${this.id}-move`\n    this.menuMove.classList.add(\"ms-menu-button\", \"square\")\n    this.menuMove.innerHTML = handIcon\n    this.menuMove.addEventListener(\"pointerup\", () =>\n    {\n      this.unselectAll()\n      this.menuMove!.classList.add(\"active\")\n      this.editor.tool = EditorTool.Move\n    })\n    return this.menuMove\n  }\n\n  protected createMenuSelect(): HTMLElement\n  {\n    this.menuSelect = document.createElement(\"button\")\n    this.menuSelect.id = `${this.id}-select`\n    this.menuSelect.classList.add(\"ms-menu-button\", \"square\")\n    this.menuSelect.innerHTML = cursorIcon\n    this.menuSelect.addEventListener(\"pointerup\", () =>\n    {\n      this.unselectAll()\n      this.menuSelect!.classList.add(\"active\")\n      this.editor.tool = EditorTool.Select\n    })\n    return this.menuSelect\n  }\n\n  protected createMenuErase(): HTMLElement\n  {\n    this.menuErase = document.createElement(\"button\")\n    this.menuErase.id = `${this.id}-erase`\n    this.menuErase.classList.add(\"ms-menu-button\", \"square\")\n    this.menuErase.innerHTML = eraseIcon\n    this.menuErase.addEventListener(\"pointerup\", () =>\n    {\n      this.unselectAll()\n      this.menuErase!.classList.add(\"active\")\n      this.editor.tool = EditorTool.Erase\n    })\n    return this.menuErase\n  }\n\n  protected createShapeSubMenu(icon: string, tool: EditorWriteTool): HTMLButtonElement\n  {\n    const subMenuShape = document.createElement(\"button\")\n    subMenuShape.id = `${this.id}-write-shape-${tool}`\n    subMenuShape.classList.add(\"ms-menu-button\", \"square\")\n    subMenuShape.innerHTML = icon\n    subMenuShape.addEventListener(\"pointerup\", () =>\n    {\n      this.unselectAll()\n      this.editor.tool = EditorTool.Write\n      this.editor.writer.tool = tool\n      subMenuShape.classList.add(\"active\")\n      this.menuShape!.innerHTML = icon\n      this.menuShape!.classList.add(\"active\")\n      const subMenuContent = this.menuShape!.nextSibling\n      if (subMenuContent) {\n        (subMenuContent as HTMLElement).classList.remove(\"open\")\n      }\n    })\n    return subMenuShape\n  }\n\n  protected createMenuShape(): HTMLElement\n  {\n    this.menuShape = document.createElement(\"button\")\n    this.menuShape.id = `${this.id}-write-shape`\n    this.menuShape.classList.add(\"ms-menu-button\", \"square\")\n    this.menuShape.innerHTML = rectangleIcon\n    this.subMenuShape = {\n      circle: this.createShapeSubMenu(circleIcon, EditorWriteTool.Circle),\n      rectangle: this.createShapeSubMenu(rectangleIcon, EditorWriteTool.Rectangle),\n      triangle: this.createShapeSubMenu(triangleIcon, EditorWriteTool.Triangle),\n      ellipse: this.createShapeSubMenu(ellipseIcon, EditorWriteTool.Ellipse),\n      rhombus: this.createShapeSubMenu(rhombusIcon, EditorWriteTool.Rhombus),\n    }\n    const subMenuContent = document.createElement(\"div\")\n    subMenuContent.id = `${this.id}-write-shape-list`\n    subMenuContent.classList.add(\"ms-menu-row\", \"sub-menu-content-shape\")\n    subMenuContent.appendChild(this.subMenuShape.rectangle)\n    subMenuContent.appendChild(this.subMenuShape.circle)\n    subMenuContent.appendChild(this.subMenuShape.ellipse)\n    subMenuContent.appendChild(this.subMenuShape.triangle)\n    subMenuContent.appendChild(this.subMenuShape.rhombus)\n\n    const params: TSubMenuParam = {\n      trigger: this.menuShape,\n      subMenu: subMenuContent,\n      position: \"top\"\n    }\n\n    return new IIMenuSub(params).element\n  }\n\n  protected createEdgeSubMenu(square: string, tool: EditorWriteTool): HTMLButtonElement\n  {\n    const subMenuEdge = document.createElement(\"button\")\n    subMenuEdge.id = `${this.id}-write-edge-${tool}`\n    subMenuEdge.classList.add(\"ms-menu-button\", \"square\")\n    subMenuEdge.innerHTML = square\n    subMenuEdge.addEventListener(\"pointerup\", () =>\n    {\n      this.unselectAll()\n      this.editor.tool = EditorTool.Write\n      this.editor.writer.tool = tool\n      subMenuEdge.classList.add(\"active\")\n      this.menuEdge!.innerHTML = square\n      this.menuEdge!.classList.add(\"active\")\n      const subMenuContent = this.menuEdge!.nextSibling\n      if (subMenuContent) {\n        (subMenuContent as HTMLElement).classList.remove(\"open\")\n      }\n    })\n    return subMenuEdge\n  }\n\n  protected createMenuEdge(): HTMLElement\n  {\n    this.menuEdge = document.createElement(\"button\")\n    this.menuEdge.id = `${this.id}-write-edge`\n    this.menuEdge.classList.add(\"ms-menu-button\", \"square\")\n    this.menuEdge.innerHTML = lineIcon\n    this.subMenuEdge = {\n      line: this.createEdgeSubMenu(lineIcon, EditorWriteTool.Line),\n      arrow: this.createEdgeSubMenu(arrowIcon, EditorWriteTool.Arrow),\n      doubleArrow: this.createEdgeSubMenu(doubleArrowIcon, EditorWriteTool.DoubleArrow),\n    }\n    const subMenuContent = document.createElement(\"div\")\n    subMenuContent.id = `${this.id}-write-edge-list`\n    subMenuContent.classList.add(\"ms-menu-row\", \"sub-menu-content-edge\")\n    subMenuContent.appendChild(this.subMenuEdge.line)\n    subMenuContent.appendChild(this.subMenuEdge.arrow)\n    subMenuContent.appendChild(this.subMenuEdge.doubleArrow)\n\n    const params: TSubMenuParam = {\n      trigger: this.menuEdge,\n      subMenu: subMenuContent,\n      position: \"top\"\n    }\n\n    return new IIMenuSub(params).element\n  }\n\n  protected unselectAll(): void\n  {\n    this.wrapper?.querySelectorAll(\"*\").forEach(e => e.classList.remove(\"active\"))\n  }\n\n  update(): void\n  {\n    this.unselectAll()\n    switch (this.editor.tool) {\n      case EditorTool.Erase:\n        this.menuErase?.classList.add(\"active\")\n        break;\n      case EditorTool.Move:\n        this.menuMove?.classList.add(\"active\")\n        break;\n      case EditorTool.Select:\n        this.menuSelect?.classList.add(\"active\")\n        break;\n      case EditorTool.Write:\n        switch (this.editor.writer.tool) {\n          case EditorWriteTool.Circle:\n            this.menuShape?.classList.add(\"active\")\n            this.subMenuShape?.circle?.classList.add(\"active\")\n            break;\n          case EditorWriteTool.Ellipse:\n            this.menuShape?.classList.add(\"active\")\n            this.subMenuShape?.ellipse?.classList.add(\"active\")\n            break;\n          case EditorWriteTool.Triangle:\n            this.menuShape?.classList.add(\"active\")\n            this.subMenuShape?.triangle?.classList.add(\"active\")\n            break;\n          case EditorWriteTool.Rectangle:\n            this.menuShape?.classList.add(\"active\")\n            this.subMenuShape?.rectangle?.classList.add(\"active\")\n            break;\n          case EditorWriteTool.Line:\n            this.menuEdge?.classList.add(\"active\")\n            this.subMenuEdge?.line?.classList.add(\"active\")\n            break;\n          case EditorWriteTool.Arrow:\n            this.menuEdge?.classList.add(\"active\")\n            this.subMenuEdge?.arrow?.classList.add(\"active\")\n            break;\n          case EditorWriteTool.DoubleArrow:\n            this.menuEdge?.classList.add(\"active\")\n            this.subMenuEdge?.doubleArrow?.classList.add(\"active\")\n            break;\n          default:\n            this.writeBtn?.classList.add(\"active\")\n            break;\n        }\n        break;\n    }\n  }\n\n  render(layer: HTMLElement): void\n  {\n    if (this.editor.configuration.menu.tool.enable) {\n      this.wrapper = document.createElement(\"div\")\n      this.wrapper.classList.add(\"ms-menu\", \"ms-menu-bottom\", \"ms-menu-row\")\n\n      this.wrapper.appendChild(this.createMenuWrite())\n      this.wrapper.appendChild(this.createMenuMove())\n      this.wrapper.appendChild(this.createMenuSelect())\n      this.wrapper.appendChild(this.createMenuErase())\n      this.wrapper.appendChild(this.createMenuEdge())\n      this.wrapper.appendChild(this.createMenuShape())\n\n      layer.appendChild(this.wrapper)\n      this.update()\n      this.show()\n    }\n  }\n\n  show(): void\n  {\n    if (this.wrapper) {\n      this.wrapper.style.visibility = \"visible\"\n    }\n  }\n\n  hide(): void\n  {\n    if (this.wrapper) {\n      this.wrapper.style.visibility = \"hidden\"\n    }\n  }\n\n  destroy(): void\n  {\n    if (this.wrapper) {\n      while (this.wrapper.lastChild) {\n        this.wrapper.removeChild(this.wrapper.lastChild)\n      }\n      this.wrapper.remove()\n      this.writeBtn = undefined\n      this.menuSelect = undefined\n      this.menuMove = undefined\n      this.menuErase = undefined\n      this.menuShape = undefined\n      this.subMenuShape = undefined\n      this.menuEdge = undefined\n      this.subMenuEdge = undefined\n      this.wrapper = undefined\n    }\n  }\n}\n","import styleIcon from \"../assets/svg/palette.svg\"\nimport { EditorTool, EditorWriteTool } from \"../Constants\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport { SymbolType, TIISymbol } from \"../symbol\"\nimport { IIMenu, TMenuItemColorList } from \"./IIMenu\"\nimport { IIMenuSub } from \"./IIMenuSub\"\nimport { TSubMenuParam } from \"./IIMenuSub\"\nimport { InteractiveInkEditor } from \"../editor\"\n\n/**\n * @group Menu\n */\nexport class IIMenuStyle extends IIMenu\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.MENU)\n\n  editor: InteractiveInkEditor\n  id: string\n  wrapper?: HTMLDivElement\n  subMenu?: IIMenuSub\n  triggerBtn?: HTMLButtonElement\n  menuColorStroke?: HTMLDivElement\n  menuColorFill?: HTMLDivElement\n  menuThickness?: HTMLDivElement\n  menuFontSize?: HTMLDivElement\n  menuFontWeight?: HTMLDivElement\n  menuStrokeOpacity?: HTMLDivElement\n\n  constructor(editor: InteractiveInkEditor, id = \"ms-menu-style\")\n  {\n    super()\n    this.id = id\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get symbolsSelected(): TIISymbol[]\n  {\n    return this.model.symbolsSelected\n  }\n\n  get writeShape(): boolean\n  {\n    return ![EditorWriteTool.Arrow, EditorWriteTool.DoubleArrow, EditorWriteTool.Line, EditorWriteTool.Pencil].includes(this.editor.writer.tool)\n  }\n\n  get rowHeight(): number\n  {\n    return this.editor.configuration.rendering.guides.gap\n  }\n\n  get isMobile(): boolean\n  {\n    return this.editor.renderer.parent.clientWidth < 700\n  }\n\n  protected createMenuStroke(): HTMLDivElement\n  {\n    const symbolsStyles = this.symbolsSelected.map(s => s.style)\n    const hasUniqColor = symbolsStyles.length && symbolsStyles.every(st => st.color === symbolsStyles[0]?.color)\n    const color = hasUniqColor && symbolsStyles[0]?.color ? symbolsStyles[0]?.color : this.editor.penStyle.color as string\n    const menuColorStrokeDef: TMenuItemColorList = {\n      type: \"colors\",\n      label: \"Colors\",\n      id: `${ this.id }-color`,\n      fill: false,\n      values: this.colors,\n      initValue: color,\n      callback: (color) =>\n      {\n        this.editor.penStyle = { color }\n        this.editor.updateSymbolsStyle(this.symbolsSelected.map(s => s.id), { color })\n      },\n    }\n    const menuColor = this.createColorList(menuColorStrokeDef)\n    this.menuColorStroke = this.createWrapCollapsible(menuColor, \"Colors\")\n    this.menuColorStroke.id = `${ this.id }-color`\n    return this.menuColorStroke\n  }\n\n  protected createMenuColorFill(): HTMLDivElement\n  {\n    const symbolsStyles = this.symbolsSelected.map(s => s.style)\n    const hasUniqColor = symbolsStyles.length && symbolsStyles.every(st => st.color === symbolsStyles[0]?.color)\n    const color = hasUniqColor && symbolsStyles[0].color ? symbolsStyles[0].color : this.editor.penStyle.color as string\n    const menuColorStrokeDef: TMenuItemColorList = {\n      type: \"colors\",\n      label: \"Fill\",\n      id: `${ this.id }-fill`,\n      fill: true,\n      values: this.colors,\n      initValue: color,\n      callback: (fill) =>\n      {\n        this.editor.penStyle = { fill }\n        this.editor.updateSymbolsStyle(this.symbolsSelected.map(s => s.id), { fill })\n      },\n    }\n    const menuColor = this.createColorList(menuColorStrokeDef)\n    this.menuColorFill = this.createWrapCollapsible(menuColor, \"Fill\")\n    this.menuColorFill.id = `${ this.id }-fill`\n    return this.menuColorFill\n  }\n\n  protected createMenuThickness(): HTMLDivElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.id = `${ this.id }-thickness-list`\n    wrapper.classList.add(\"ms-menu-row\", \"thickness-list\")\n\n    const symbolsStyles = this.symbolsSelected.map(s => s.style)\n    const hasUniqWidth = symbolsStyles.length && symbolsStyles.every(st => st.width === symbolsStyles[0].width)\n    const width = hasUniqWidth ? symbolsStyles[0].width : this.editor.penStyle.width\n\n    this.thicknessList.forEach((size) =>\n    {\n      const btn = document.createElement(\"button\")\n      btn.id = `${ this.id }-thickness-${ size.label }-btn`\n      btn.classList.add(\"ms-menu-button\", \"square\")\n      btn.textContent = size.label\n      if (width === size.value) {\n        btn.classList.add(\"active\")\n      }\n      btn.addEventListener(\"pointerup\", (e) =>\n      {\n        e.preventDefault()\n        e.stopPropagation()\n        this.editor.penStyle = { width: size.value }\n        wrapper.querySelectorAll(\"*\").forEach(e => e.classList.remove(\"active\"))\n        btn.classList.add(\"active\")\n        if (this.symbolsSelected.length) {\n          this.editor.updateSymbolsStyle(this.symbolsSelected.map(s => s.id), { width: size.value })\n          this.editor.selector.resetSelectedGroup(this.symbolsSelected)\n        }\n      })\n      wrapper.appendChild(btn)\n    })\n    this.menuThickness = this.createWrapCollapsible(wrapper, \"Thickness\")\n    this.menuThickness.id = `${ this.id }-thickness`\n    return this.menuThickness\n  }\n\n  protected createMenuFontSize(): HTMLDivElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.id = `${ this.id }-font-size-list`\n    wrapper.classList.add(\"ms-menu-row\", \"font-size-list\")\n\n    this.fontSizeList.forEach((size) =>\n    {\n      const btn = document.createElement(\"button\")\n      btn.id = `${ this.id }-font-size-${ size.label }-btn`\n      btn.classList.add(\"ms-menu-button\", \"square\")\n      btn.textContent = size.label\n      if (this.editor.configuration.fontStyle.size === size.value) {\n        btn.classList.add(\"active\")\n      }\n      btn.addEventListener(\"pointerup\", (e) =>\n      {\n        e.preventDefault()\n        e.stopPropagation()\n        wrapper.querySelectorAll(\"*\").forEach(e => e.classList.remove(\"active\"))\n        btn.classList.add(\"active\")\n        if (size.value === \"auto\") {\n          this.editor.configuration.fontStyle.size = \"auto\"\n        }\n        else {\n          const fontSize = (size.value as number)\n          this.editor.configuration.fontStyle.size = fontSize\n          const textSymbols = this.symbolsSelected.filter(s => s.type === SymbolType.Text || (s.type === SymbolType.Group && s.extractText().length))\n          this.editor.updateTextFontStyle(textSymbols.map(s => s.id), { fontSize: fontSize * this.rowHeight })\n          this.editor.selector.resetSelectedGroup(this.symbolsSelected)\n        }\n      })\n      wrapper.appendChild(btn)\n    })\n    this.menuFontSize = this.createWrapCollapsible(wrapper, \"Font size\")\n    this.menuFontSize.id = `${ this.id }-font-size`\n    return this.menuFontSize\n  }\n\n  protected createMenuFontWeight(): HTMLDivElement\n  {\n    const wrapper = document.createElement(\"div\")\n    wrapper.id = `${ this.id }-font-weight-list`\n    wrapper.classList.add(\"ms-menu-row\", \"font-weight-list\")\n\n    this.fontWeightList.forEach((weight) =>\n    {\n      const btn = document.createElement(\"button\")\n      btn.id = `${ this.id }-font-weight-${ weight.label }-btn`\n      btn.classList.add(\"ms-menu-button\", \"center\")\n      btn.textContent = weight.label\n      if (this.editor.configuration.fontStyle.weight === weight.value) {\n        btn.classList.add(\"active\")\n      }\n      btn.addEventListener(\"pointerup\", (e) =>\n      {\n        e.preventDefault()\n        e.stopPropagation()\n        wrapper.querySelectorAll(\"*\").forEach(e => e.classList.remove(\"active\"))\n        btn.classList.add(\"active\")\n        this.editor.configuration.fontStyle.weight = weight.value as \"auto\" | \"normal\" | \"bold\"\n        if (this.editor.configuration.fontStyle.weight !== \"auto\") {\n          const textSymbols = this.symbolsSelected.filter(s => s.type === SymbolType.Text || (s.type === SymbolType.Group && s.extractText().length))\n          this.editor.updateTextFontStyle(textSymbols.map(s => s.id), { fontWeight: this.editor.configuration.fontStyle.weight })\n          this.editor.selector.resetSelectedGroup(this.symbolsSelected)\n        }\n      })\n      wrapper.appendChild(btn)\n    })\n    this.menuFontWeight = this.createWrapCollapsible(wrapper, \"Font weight\")\n    this.menuFontWeight.id = `${ this.id }-font-weight`\n    return this.menuFontWeight\n  }\n\n  protected createMenuOpacity(): HTMLDivElement\n  {\n    const symbolsStyles = this.symbolsSelected.map(s => s.style)\n    const hasUniqOpacity = symbolsStyles.length && symbolsStyles.every(st => st.opacity === symbolsStyles[0]?.opacity)\n    const currentOpacity = (hasUniqOpacity && symbolsStyles[0]?.opacity ? symbolsStyles[0]?.opacity : (this.editor.penStyle.opacity || 1)) * 100 as number\n\n    const wrapper = document.createElement(\"div\")\n    wrapper.id = `${ this.id }-opacity-input-wrapper`\n    const input = document.createElement(\"input\")\n    input.id = `${ this.id }-opacity-input`\n    input.setAttribute(\"name\", `opacity`)\n    input.setAttribute(\"type\", \"range\")\n    input.setAttribute(\"step\", \"1\")\n    input.setAttribute(\"min\", \"1\")\n    input.setAttribute(\"max\", \"100\")\n    wrapper.appendChild(input)\n\n    const output = document.createElement(\"output\")\n    output.setAttribute(\"for\", `opacity`)\n    output.innerHTML = currentOpacity ? `${ currentOpacity }` : \"-\"\n    wrapper.appendChild(output)\n\n    if (currentOpacity) {\n      input.setAttribute(\"value\", currentOpacity.toString())\n    }\n    input.addEventListener(\"input\", (evt) =>\n    {\n      const value = (evt.target as HTMLInputElement).value as unknown as number\n      output.innerHTML = `${ value }%`\n      this.editor.penStyle = { opacity: value / 100 }\n      if (this.symbolsSelected.length) {\n        this.editor.updateSymbolsStyle(this.symbolsSelected.map(s => s.id), { opacity: value / 100 })\n      }\n    })\n    this.menuStrokeOpacity = this.createWrapCollapsible(wrapper, \"Opacity\")\n    this.menuStrokeOpacity.id = `${ this.id }-opacity`\n    return this.menuStrokeOpacity\n  }\n\n  render(layer: HTMLElement): void\n  {\n    if (this.editor.configuration.menu.style.enable) {\n      this.triggerBtn = document.createElement(\"button\")\n      this.triggerBtn.id = this.id\n      this.triggerBtn.classList.add(\"ms-menu-button\", \"square\")\n      this.triggerBtn.innerHTML = styleIcon\n\n      const subMenuContent = document.createElement(\"div\")\n      subMenuContent.classList.add(\"ms-menu-colmun\")\n      subMenuContent.appendChild(this.createMenuStroke())\n      subMenuContent.appendChild(this.createMenuColorFill())\n      subMenuContent.appendChild(this.createMenuThickness())\n      subMenuContent.appendChild(this.createMenuFontSize())\n      subMenuContent.appendChild(this.createMenuFontWeight())\n      subMenuContent.appendChild(this.createMenuOpacity())\n\n      const params: TSubMenuParam = {\n        trigger: this.triggerBtn,\n        subMenu: subMenuContent,\n        position: \"bottom-left\",\n      }\n      this.subMenu = new IIMenuSub(params)\n\n      this.wrapper = document.createElement(\"div\")\n      this.wrapper.classList.add(\"ms-menu\", \"ms-menu-top-right\")\n      this.wrapper.appendChild(this.subMenu.element)\n      layer.appendChild(this.wrapper)\n      this.update()\n    }\n  }\n\n  update(): void\n  {\n    if (this.subMenu) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      this.isMobile ? this.subMenu.wrap() : this.subMenu.unwrap()\n    }\n\n    if (this.editor.tool === EditorTool.Write) {\n      this.show()\n      if (this.menuColorStroke) {\n        this.menuColorStroke.style.display = \"block\"\n      }\n      if (this.menuColorFill) {\n        this.menuColorFill.style.display = this.writeShape ? \"block\" : \"none\"\n      }\n      if (this.menuThickness) {\n        this.menuThickness.style.display = \"block\"\n      }\n      if (this.menuFontSize) {\n        this.menuFontSize.style.display = \"block\"\n      }\n      if (this.menuFontWeight) {\n        this.menuFontWeight.style.display = \"block\"\n      }\n      if (this.menuStrokeOpacity) {\n        this.menuStrokeOpacity.style.display = \"block\"\n      }\n    }\n    else if (this.editor.tool === EditorTool.Select) {\n      this.show()\n      if (this.menuColorStroke) {\n        this.menuColorStroke.style.display = \"block\"\n      }\n      if (this.menuColorFill) {\n        const shapeSelected = this.model.symbolsSelected.length && this.model.symbolsSelected.some(s => s.type === SymbolType.Shape)\n        this.menuColorFill.style.display = shapeSelected ? \"block\" : \"none\"\n      }\n      if (this.menuThickness) {\n        this.menuThickness.style.display = \"block\"\n      }\n      if (this.menuFontSize) {\n        this.menuFontSize.style.display = \"block\"\n      }\n      if (this.menuFontWeight) {\n        this.menuFontWeight.style.display = \"block\"\n      }\n      if (this.menuStrokeOpacity) {\n        this.menuStrokeOpacity.style.display = \"block\"\n      }\n    }\n    else {\n      this.hide()\n    }\n  }\n\n  show(): void\n  {\n    if (this.wrapper) {\n      this.wrapper.style.visibility = \"visible\"\n    }\n  }\n\n  hide(): void\n  {\n    if (this.wrapper) {\n      this.wrapper.style.visibility = \"hidden\"\n    }\n  }\n\n  destroy(): void\n  {\n    if (this.wrapper) {\n      while (this.wrapper.lastChild) {\n        this.wrapper.removeChild(this.wrapper.lastChild)\n      }\n      this.wrapper.remove()\n      this.wrapper = undefined\n      this.subMenu = undefined\n      this.triggerBtn = undefined\n      this.menuColorStroke = undefined\n      this.menuColorFill = undefined\n      this.menuThickness = undefined\n      this.menuFontSize = undefined\n      this.menuFontWeight = undefined\n      this.menuStrokeOpacity = undefined\n    }\n  }\n}\n","import ArrowDown from \"../assets/svg/nav-arrow-down.svg\"\nimport { SELECTION_MARGIN } from \"../Constants\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { DecoratorKind, IIDecorator, IIRecognizedText, IIStroke, IISymbolGroup, IIText, RecognizedKind, SymbolType, TIISymbol } from \"../symbol\"\nimport { IIMenu, TMenuItemBoolean, TMenuItemButton, TMenuItemColorList } from \"./IIMenu\"\nimport { createUUID } from \"../utils\"\nimport { IIMenuSub, TSubMenuParam } from \"./IIMenuSub\"\nimport { InteractiveInkEditor } from \"../editor\"\n/**\n * @group Menu\n */\nexport class IIMenuContext extends IIMenu\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.MENU)\n  editor: InteractiveInkEditor\n  id: string\n  wrapper?: HTMLElement\n  editMenu?: HTMLDivElement\n  editInput?: HTMLInputElement\n  editSaveBtn?: HTMLButtonElement\n  reorderMenu?: HTMLDivElement\n  decoratorMenu?: HTMLDivElement\n  menuExport?: HTMLDivElement\n  duplicateBtn?: HTMLButtonElement\n  groupBtn?: HTMLButtonElement\n  convertBtn?: HTMLButtonElement\n  removeBtn?: HTMLButtonElement\n\n  position: {\n    x: number,\n    y: number,\n    scrollTop: number,\n    scrollLeft: number\n  }\n\n  constructor(editor: InteractiveInkEditor, id = \"ms-menu-context\")\n  {\n    super()\n    this.id = id\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n    this.position = { x: 0, y: 0, scrollLeft: 0, scrollTop: 0 }\n  }\n\n  get symbolsSelected(): TIISymbol[]\n  {\n    return this.editor.model.symbolsSelected\n  }\n\n  get haveSymbolsSelected(): boolean\n  {\n    return this.symbolsSelected.length > 0\n  }\n\n  get symbolsDecorable(): (IIStroke | IIText | IISymbolGroup | IIRecognizedText)[]\n  {\n    return this.symbolsSelected.filter(s => [SymbolType.Stroke, SymbolType.Text, SymbolType.Group].includes(s.type) || (s.type === SymbolType.Recognized && s.kind === RecognizedKind.Text)) as (IIStroke | IIText | IISymbolGroup | IIRecognizedText)[]\n  }\n\n  get showDecorator(): boolean\n  {\n    return this.symbolsDecorable.length > 0\n  }\n\n  protected createMenuEdit(): HTMLElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-edit-trigger`\n    trigger.classList.add(\"ms-menu-button\")\n    const label = document.createElement(\"span\")\n    label.innerText = \"Edit\"\n    trigger.appendChild(label)\n    const icon = document.createElement(\"span\")\n    icon.style.setProperty(\"width\", \"32px\")\n    icon.style.setProperty(\"transform\", \"rotate(270deg)\")\n    icon.innerHTML = ArrowDown\n    trigger.appendChild(icon)\n\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n    this.editInput = document.createElement(\"input\")\n    subMenuWrapper.appendChild(this.editInput)\n    this.editSaveBtn = document.createElement(\"button\")\n    this.editSaveBtn.classList.add(\"ms-menu-button\")\n    this.editSaveBtn.innerText = \"Save\"\n    subMenuWrapper.appendChild(this.editSaveBtn)\n    this.editSaveBtn.addEventListener(\"pointerdown\", async (e) =>\n    {\n      e.stopPropagation()\n      const textSymbol = this.editor.model.symbolsSelected.find(s => s.type === SymbolType.Text) as IIText\n      if (textSymbol) {\n        const firstChar = textSymbol.chars[0]\n        textSymbol.chars = []\n        for (let i = 0; i < this.editInput!.value.length; i++) {\n          textSymbol.chars.push({\n            label: this.editInput!.value.charAt(i),\n            id: createUUID(),\n            color: firstChar.color,\n            fontSize: firstChar.fontSize,\n            fontWeight: firstChar.fontWeight,\n            bounds: firstChar.bounds\n          })\n        }\n        await this.editor.updateSymbol(textSymbol)\n        this.editor.selector.resetSelectedGroup([textSymbol])\n      }\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      subMenu: subMenuWrapper,\n      position: \"right\"\n    }\n    this.editMenu = new IIMenuSub(params).element\n\n    return this.editMenu\n  }\n\n  protected createMenuDuplicate(): HTMLElement\n  {\n    this.duplicateBtn = document.createElement(\"button\")\n    this.duplicateBtn.id = `${ this.id }-duplicate`\n    this.duplicateBtn.textContent = \"Duplicate\"\n    this.duplicateBtn.classList.add(\"ms-menu-button\")\n    this.duplicateBtn.addEventListener(\"pointerup\", async () =>\n    {\n      const symbolsToDuplicate = this.symbolsSelected\n\n      const updateDeepIdInGroup = (gr: IISymbolGroup) =>\n      {\n        gr.children.forEach(s =>\n        {\n          s.id = s.id.slice(0, -36) + `-${ createUUID() }`\n          switch (s.type) {\n            case SymbolType.Group:\n              updateDeepIdInGroup(s)\n              break\n            case SymbolType.Recognized:\n              s.strokes.forEach(s => s.id = s.id.slice(0, -36) + `-${ createUUID() }`)\n              break\n          }\n        })\n      }\n      const duplicatedSymbols = symbolsToDuplicate.map(s =>\n      {\n        const clone = s.clone()\n        while (this.editor.model.symbols.find(s => s.id === clone.id)) {\n          clone.id = clone.id.slice(0, -36) + `-${ createUUID() }`\n          if (clone.type === SymbolType.Group) {\n            updateDeepIdInGroup(clone)\n          }\n          else if (clone.type === SymbolType.Recognized) {\n            clone.strokes.forEach(s => s.id = s.id.slice(0, -36) + `-${ createUUID() }`)\n          }\n        }\n        clone.selected = true\n        this.editor.translator.applyToSymbol(clone, SELECTION_MARGIN, SELECTION_MARGIN)\n        return clone\n      })\n\n      this.editor.unselectAll()\n      await this.editor.addSymbols(duplicatedSymbols)\n      this.editor.selector.drawSelectedGroup(duplicatedSymbols)\n    })\n    return this.duplicateBtn\n  }\n\n  protected createMenuGroup(): HTMLElement\n  {\n    this.groupBtn = document.createElement(\"button\")\n    this.groupBtn.id = `${ this.id }-duplicate`\n    this.groupBtn.textContent = \"Group\"\n    this.groupBtn.classList.add(\"ms-menu-button\")\n    this.groupBtn.addEventListener(\"pointerup\", async () =>\n    {\n      if (this.symbolsSelected.length === 1 && this.symbolsSelected[0].type === SymbolType.Group) {\n        const symbols = this.editor.ungroupSymbol(this.symbolsSelected[0] as IISymbolGroup)\n        this.editor.select(symbols.map(s => s.id))\n      }\n      else {\n        const symbols = this.symbolsSelected.slice()\n        this.editor.unselectAll()\n        const group = this.editor.groupSymbols(symbols)\n        group.selected = true\n        this.editor.select([group.id])\n      }\n    })\n    return this.groupBtn\n  }\n\n  protected createMenuConvert(): HTMLElement\n  {\n    this.convertBtn = document.createElement(\"button\")\n    this.convertBtn.id = `${ this.id }-convert`\n    this.convertBtn.textContent = \"Convert\"\n    this.convertBtn.classList.add(\"ms-menu-button\")\n    this.convertBtn.addEventListener(\"pointerup\", () => this.editor.convertSymbols(this.symbolsSelected))\n    return this.convertBtn\n  }\n\n  protected createMenuRemove(): HTMLButtonElement\n  {\n    this.removeBtn = document.createElement(\"button\")\n    this.removeBtn.id = `${ this.id }-remove`\n    this.removeBtn.textContent = \"Remove\"\n    this.removeBtn.classList.add(\"ms-menu-button\")\n    this.removeBtn.addEventListener(\"pointerup\", async () =>\n    {\n      this.editor.selector.removeSelectedGroup()\n      await this.editor.removeSymbols(this.symbolsSelected.map(s => s.id))\n    })\n    return this.removeBtn\n  }\n\n  protected createMenuReorder(): HTMLElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-reorder`\n    trigger.classList.add(\"ms-menu-button\")\n    const label = document.createElement(\"span\")\n    label.innerText = \"Reorder\"\n    trigger.appendChild(label)\n    const icon = document.createElement(\"span\")\n    icon.style.setProperty(\"width\", \"32px\")\n    icon.style.setProperty(\"transform\", \"rotate(270deg)\")\n    icon.innerHTML = ArrowDown\n    trigger.appendChild(icon)\n\n    const menuItems: TMenuItemButton[] = [\n      {\n        type: \"button\",\n        id: `${ this.id }-reorder-first`,\n        label: \"Bring to front\",\n        callback: () =>\n        {\n          this.editor.changeOrderSymbols(this.symbolsSelected, \"last\")\n          this.editor.selector.resetSelectedGroup(this.symbolsSelected)\n        }\n      },\n      {\n        type: \"button\",\n        id: `${ this.id }-reorder-forward`,\n        label: \"Bring forward\",\n        callback: () =>\n        {\n          this.editor.changeOrderSymbols(this.symbolsSelected, \"forward\")\n          this.editor.selector.resetSelectedGroup(this.symbolsSelected)\n        }\n      },\n      {\n        type: \"button\",\n        id: `${ this.id }-reorder-backward`,\n        label: \"Send backward\",\n        callback: () =>\n        {\n          this.editor.changeOrderSymbols(this.symbolsSelected, \"backward\")\n          this.editor.selector.resetSelectedGroup(this.symbolsSelected)\n        }\n      },\n      {\n        type: \"button\",\n        id: `${ this.id }-reorder-last`,\n        label: \"Send to back\",\n        callback: () =>\n        {\n          this.editor.changeOrderSymbols(this.symbolsSelected.slice().reverse(), \"first\")\n          this.editor.selector.resetSelectedGroup(this.symbolsSelected)\n        }\n      },\n    ]\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      subMenu: subMenuWrapper,\n      position: \"right\"\n    }\n    this.reorderMenu = new IIMenuSub(params).element\n    return this.reorderMenu\n  }\n\n  protected createDecoratorSubMenu(label: string, kind: DecoratorKind): HTMLElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-decorator-${ kind }`\n    trigger.classList.add(\"ms-menu-button\")\n    const labelEL = document.createElement(\"span\")\n    labelEL.innerText = label\n    trigger.appendChild(labelEL)\n    const icon = document.createElement(\"span\")\n    icon.style.setProperty(\"width\", \"32px\")\n    icon.style.setProperty(\"transform\", \"rotate(270deg)\")\n    icon.innerHTML = ArrowDown\n    trigger.appendChild(icon)\n\n    const menuItems: (TMenuItemBoolean | TMenuItemColorList)[] = [\n      {\n        type: \"checkbox\",\n        id: `${ this.id }-decorator-${ kind }-enable`,\n        label: \"Enable\",\n        initValue: false,\n        callback: (enable) =>\n        {\n          this.symbolsDecorable.forEach(s =>\n          {\n            if (enable) {\n              if (!s.decorators.some(d => d.kind === kind)) {\n                s.decorators.push(new IIDecorator(kind, this.editor.penStyle))\n              }\n            }\n            else {\n              const decoIndex = s.decorators.findIndex(d => d.kind === kind)\n              if (decoIndex > -1) {\n                s.decorators.splice(decoIndex, 1)\n              }\n            }\n            this.editor.model.updateSymbol(s)\n            this.editor.renderer.drawSymbol(s)\n          })\n\n          document.querySelectorAll(`#${ this.id }-decorator-${ kind }-color button`).forEach(b =>\n          {\n            (b as HTMLButtonElement).disabled = !enable\n            b.classList.remove(\"active\")\n          })\n          if (enable) {\n            document.querySelector(`#${ this.id }-decorator-${ kind }-color button`)?.classList.add(\"active\")\n          }\n        }\n      },\n      {\n        type: \"colors\",\n        label: \"Colors\",\n        id: `${ this.id }-decorator-${ kind }-color`,\n        fill: false,\n        values: this.colors.filter((_c, i) => !(i % 4)),\n        initValue: this.colors[0],\n        disabled: true,\n        callback: (color) =>\n        {\n          this.symbolsDecorable.forEach(s =>\n          {\n            const deco = s.decorators.find(d => d.kind === kind)\n            if (deco) {\n              deco.style.color = color\n              this.editor.model.updateSymbol(s)\n              this.editor.renderer.drawSymbol(s)\n            }\n          })\n        },\n      }\n    ]\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      subMenu: subMenuWrapper,\n      position: \"right\"\n    }\n    return this.decoratorMenu = new IIMenuSub(params).element\n  }\n\n  protected createMenuDecorator(): HTMLElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-decorator`\n    trigger.classList.add(\"ms-menu-button\")\n    const label = document.createElement(\"span\")\n    label.innerText = \"Decorator\"\n    trigger.appendChild(label)\n    const icon = document.createElement(\"span\")\n    icon.style.setProperty(\"width\", \"32px\")\n    icon.style.setProperty(\"transform\", \"rotate(270deg)\")\n    icon.innerHTML = ArrowDown\n    trigger.appendChild(icon)\n\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n    subMenuWrapper.appendChild(this.createDecoratorSubMenu(\"Hightlight\", DecoratorKind.Highlight))\n    subMenuWrapper.appendChild(this.createDecoratorSubMenu(\"Surround\", DecoratorKind.Surround))\n    subMenuWrapper.appendChild(this.createDecoratorSubMenu(\"Underline\", DecoratorKind.Underline))\n    subMenuWrapper.appendChild(this.createDecoratorSubMenu(\"Strikethrough\", DecoratorKind.Strikethrough))\n\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      subMenu: subMenuWrapper,\n      position: \"right\"\n    }\n    this.decoratorMenu = new IIMenuSub(params).element\n    return this.decoratorMenu\n  }\n\n  protected createMenuExport(): HTMLElement\n  {\n    const trigger = document.createElement(\"button\")\n    trigger.id = `${ this.id }-export`\n    trigger.classList.add(\"ms-menu-button\")\n    const label = document.createElement(\"span\")\n    label.innerText = \"Export\"\n    trigger.appendChild(label)\n    const icon = document.createElement(\"span\")\n    icon.style.setProperty(\"width\", \"32px\")\n    icon.style.setProperty(\"transform\", \"rotate(270deg)\")\n    icon.innerHTML = ArrowDown\n    trigger.appendChild(icon)\n\n    const menuItems: TMenuItemButton[] = [\n      {\n        type: \"button\",\n        id: `${ this.id }-export-json`,\n        label: \"json\",\n        callback: () => this.editor.downloadAsJson(this.haveSymbolsSelected)\n      },\n      {\n        type: \"button\",\n        id: `${ this.id }-export-svg`,\n        label: \"svg\",\n        callback: () => this.editor.downloadAsSVG(this.haveSymbolsSelected)\n      },\n      {\n        type: \"button\",\n        id: `${ this.id }-export-png`,\n        label: \"png\",\n        callback: () => this.editor.downloadAsPNG(this.haveSymbolsSelected)\n      },\n    ]\n    const subMenuWrapper = document.createElement(\"div\")\n    subMenuWrapper.classList.add(\"ms-menu-colmun\")\n    menuItems.forEach(i =>\n    {\n      subMenuWrapper.appendChild(this.createMenuItem(i))\n    })\n    const params: TSubMenuParam = {\n      trigger: trigger,\n      subMenu: subMenuWrapper,\n      position: \"right\"\n    }\n    this.menuExport = new IIMenuSub(params).element\n    return this.menuExport\n  }\n\n  protected createMenuSelectAll(): HTMLElement\n  {\n    const btn = document.createElement(\"button\")\n    btn.id = `${ this.id }-duplicate`\n    btn.textContent = \"Select all\"\n    btn.classList.add(\"ms-menu-button\")\n    btn.addEventListener(\"pointerup\", async () => this.editor.selectAll())\n    return btn\n  }\n\n  protected updateDecoratorSubMenu(): void\n  {\n    if (this.showDecorator) {\n      this.decoratorMenu?.style.removeProperty(\"display\")\n\n      Object.values(DecoratorKind).forEach(kind =>\n      {\n        const checkbox = document.getElementById(`${ this.id }-decorator-${ kind }-enable`) as HTMLInputElement\n        if (checkbox) {\n          document.querySelectorAll(`#${ this.id }-decorator-${ kind }-color button`).forEach(e => e.classList.remove(\"active\"))\n          const decos = this.symbolsDecorable.flatMap(s => s.decorators).filter(d => d.kind === kind)\n\n          if (decos.length && decos.every(d => d.style.color === decos[0].style.color)) {\n            const btnToActivate = document.getElementById(`${ this.id }-decorator-${ kind }-color-${ decos[0].style.color?.replace(\"#\", \"\") }-btn`)\n            btnToActivate?.classList.add(\"active\")\n          }\n\n          if (this.symbolsDecorable.filter(s => s.decorators.some(d => d.kind === kind)).length === this.symbolsDecorable.length) {\n            checkbox.checked = true\n\n            document.querySelectorAll(`#${ this.id }-decorator-${ kind }-color button`).forEach(b =>\n            {\n              (b as HTMLButtonElement).disabled = false\n            })\n            checkbox.indeterminate = false\n          }\n          else if (this.symbolsDecorable.filter(s => !s.decorators.some(d => d.kind === kind)).length === this.symbolsDecorable.length) {\n            checkbox.checked = false\n            document.querySelectorAll(`#${ this.id }-decorator-${ kind }-color button`).forEach(b =>\n            {\n              (b as HTMLButtonElement).disabled = true\n            })\n            checkbox.indeterminate = false\n          }\n          else {\n            checkbox.setAttribute(\"indeterminate\", \"true\")\n            checkbox.indeterminate = true\n            document.querySelectorAll(`#${ this.id }-decorator-${ kind }-color button`).forEach(b =>\n            {\n              (b as HTMLButtonElement).disabled = false\n            })\n          }\n        }\n\n      })\n    }\n    else {\n      this.decoratorMenu?.style.setProperty(\"display\", \"none\")\n    }\n  }\n\n  protected updateGroupMenu(): void\n  {\n    if (this.groupBtn && this.haveSymbolsSelected) {\n      this.groupBtn.style.removeProperty(\"display\")\n      if (this.symbolsSelected.length === 1 && this.symbolsSelected[0].type === SymbolType.Group) {\n        this.groupBtn.textContent = \"UnGroup\"\n      }\n      else {\n        this.groupBtn.textContent = \"Group\"\n      }\n    }\n    else {\n      this.groupBtn?.style.setProperty(\"display\", \"none\")\n    }\n  }\n\n  update(): void\n  {\n    this.wrapper?.style.setProperty(\"left\", `${ this.position.x - this.position.scrollLeft }px`)\n    this.wrapper?.style.setProperty(\"top\", `${ this.position.y - this.position.scrollTop }px`)\n\n    if (this.haveSymbolsSelected) {\n      const textSymbol = this.editor.model.symbolsSelected.find(s => s.type === SymbolType.Text)\n      if (this.editMenu && this.editInput && this.editor.model.symbolsSelected.length === 1 && textSymbol) {\n        this.editMenu.style.removeProperty(\"display\")\n        this.editInput.value = (textSymbol as IIText).label\n      }\n      else {\n        this.editMenu?.style.setProperty(\"display\", \"none\")\n      }\n\n      if (this.editor.extractStrokesFromSymbols(this.symbolsSelected).length) {\n        this.convertBtn?.style.removeProperty(\"display\")\n      }\n      else {\n        this.convertBtn?.style.setProperty(\"display\", \"none\")\n      }\n\n\n      this.reorderMenu?.style.removeProperty(\"display\")\n      this.duplicateBtn?.style.removeProperty(\"display\")\n      this.removeBtn?.style.removeProperty(\"display\")\n      this.menuExport?.style.removeProperty(\"display\")\n    }\n    else {\n      this.editMenu?.style.setProperty(\"display\", \"none\")\n      this.convertBtn?.style.setProperty(\"display\", \"none\")\n      this.reorderMenu?.style.setProperty(\"display\", \"none\")\n      this.duplicateBtn?.style.setProperty(\"display\", \"none\")\n      this.removeBtn?.style.setProperty(\"display\", \"none\")\n      this.menuExport?.style.setProperty(\"display\", \"none\")\n    }\n    this.updateDecoratorSubMenu()\n    this.updateGroupMenu()\n  }\n\n  render(layer: HTMLElement): void\n  {\n    this.wrapper = document.createElement(\"div\")\n    this.wrapper.id = `${ this.id }-wrapper`\n    this.wrapper.classList.add(\"ms-menu\", \"ms-menu-context\")\n    this.wrapper.appendChild(this.createMenuEdit())\n    this.wrapper.appendChild(this.createMenuDecorator())\n    this.wrapper.appendChild(this.createMenuReorder())\n    this.wrapper.appendChild(this.createMenuExport())\n    this.wrapper.appendChild(this.createMenuConvert())\n    this.wrapper.appendChild(this.createMenuGroup())\n    this.wrapper.appendChild(this.createMenuDuplicate())\n    this.wrapper.appendChild(this.createMenuRemove())\n    this.wrapper.appendChild(this.createMenuSelectAll())\n    this.wrapper.style.setProperty(\"display\", \"none\")\n    layer.appendChild(this.wrapper)\n\n    this.editor.layers.rendering.addEventListener(\"scroll\", () =>\n    {\n      this.position.scrollLeft = this.editor.layers.rendering.scrollLeft || 0\n      this.position.scrollTop = this.editor.layers.rendering.scrollTop || 0\n      this.update()\n    })\n  }\n\n  show(): void\n  {\n    this.update()\n    this.wrapper?.style.setProperty(\"display\", \"block\")\n  }\n\n  hide(): void\n  {\n    this.wrapper?.style.setProperty(\"display\", \"none\")\n  }\n\n  destroy(): void\n  {\n    while (this.wrapper?.lastChild) {\n      this.wrapper.removeChild(this.wrapper.lastChild)\n    }\n    this.wrapper?.remove()\n  }\n}\n","\n/**\n * @group Menu\n */\nexport type TMenuConfiguration = {\n  enable: boolean,\n  style: {\n    enable: boolean,\n  }\n  tool: {\n    enable: boolean,\n  }\n  action: {\n    enable: boolean,\n  }\n  context: {\n    enable: boolean,\n  }\n}\n\n/**\n * @group Menu\n * @source\n */\nexport const DefaultMenuConfiguration: TMenuConfiguration = {\n  enable: true,\n  style: {\n    enable: true\n  },\n  tool: {\n    enable: true\n  },\n  action: {\n    enable: true\n  },\n  context: {\n    enable: true\n  },\n}\n","import style from \"./menu.css\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { InteractiveInkEditor } from \"../editor\"\nimport { IIMenuAction } from \"./IIMenuAction\"\nimport { IIMenuTool } from \"./IIMenuTool\"\nimport { IIMenuContext } from \"./IIMenuContext\"\nimport { IIMenuStyle } from \"./IIMenuStyle\"\n\n/**\n * @group Manager\n */\nexport class IIMenuManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.MENU)\n  editor: InteractiveInkEditor\n  layer?: HTMLElement\n  action: IIMenuAction\n  tool: IIMenuTool\n  context: IIMenuContext\n  style: IIMenuStyle\n\n  constructor(editor: InteractiveInkEditor, custom?: { style?: IIMenuStyle, tool?: IIMenuTool, action?: IIMenuAction, context?: IIMenuContext })\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n\n    if (custom?.style) {\n      const CustomMenuStyle = custom.style as unknown as typeof IIMenuStyle\n      this.style = new CustomMenuStyle(this.editor)\n    }\n    else {\n      this.style = new IIMenuStyle(this.editor)\n    }\n    if (custom?.tool) {\n      const CustomMenuTool = custom.tool as unknown as typeof IIMenuTool\n      this.tool = new CustomMenuTool(this.editor)\n    }\n    else {\n      this.tool = new IIMenuTool(this.editor)\n    }\n    if (custom?.action) {\n      const CustomMenuAction = custom.action as unknown as typeof IIMenuAction\n      this.action = new CustomMenuAction(this.editor)\n    }\n    else {\n      this.action = new IIMenuAction(this.editor)\n    }\n    if (custom?.context) {\n      const CustomMenuAction = custom.context as unknown as typeof IIMenuContext\n      this.context = new CustomMenuAction(this.editor)\n    }\n    else {\n      this.context = new IIMenuContext(this.editor)\n    }\n  }\n\n  render(layer: HTMLElement): void\n  {\n    if (this.editor.configuration.menu.enable) {\n      this.layer = layer\n\n      const styleElement = document.createElement(\"style\")\n      styleElement.appendChild(document.createTextNode(style as string))\n      this.layer.prepend(styleElement)\n\n      if (this.editor.configuration.menu.action.enable) {\n        this.action.render(this.layer)\n      }\n      if (this.editor.configuration.menu.style.enable) {\n        this.style.render(this.layer)\n      }\n      if (this.editor.configuration.menu.tool.enable) {\n        this.tool.render(this.layer)\n      }\n      if (this.editor.configuration.menu.context.enable) {\n        this.context.render(this.layer)\n      }\n    }\n  }\n\n  update(): void\n  {\n    this.action.update()\n    this.tool.update()\n    this.style.update()\n  }\n\n  show(): void\n  {\n    this.action.show()\n    this.tool.show()\n    this.style.show()\n  }\n\n  hide(): void\n  {\n    this.action.hide()\n    this.tool.hide()\n    this.style.hide()\n  }\n\n  destroy(): void\n  {\n    this.action.destroy()\n    this.tool.destroy()\n    this.style.destroy()\n  }\n}\n","import { PartialDeep } from \"../utils\"\n\n/**\n * @group Snap\n */\nexport type TSnapConfiguration = {\n  guide: boolean\n  symbol: boolean\n  angle: number\n}\n\n/**\n * @group Snap\n * @source\n */\nexport const DefaultSnapConfiguration: TSnapConfiguration = {\n  guide: true,\n  symbol: true,\n  angle: 0\n}\n\n/**\n * @group Snap\n */\nexport class SnapConfiguration implements TSnapConfiguration\n{\n  guide: boolean\n  symbol: boolean\n  angle: number\n\n  constructor(config? : PartialDeep<TSnapConfiguration>)\n  {\n    this.symbol = config?.symbol !== undefined ? config.symbol : DefaultSnapConfiguration.symbol\n    this.guide = config?.guide !== undefined ? config.guide : DefaultSnapConfiguration.guide\n    this.angle = config?.angle !== undefined ? config.angle : DefaultSnapConfiguration.angle\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { IIModel } from \"../model\"\nimport { Box, TPoint, TSegment } from \"../symbol\"\nimport { SVGRenderer } from \"../renderer\"\nimport { SVGRendererConst } from \"../renderer/svg/SVGRendererConst\"\nimport { InteractiveInkEditor } from \"../editor/InteractiveInkEditor\"\nimport { PartialDeep } from \"../utils\"\nimport { SnapConfiguration, TSnapConfiguration } from \"./IISnapConfiguration\"\n\n/**\n * @group Snap\n */\nexport type TSnapNudge = TPoint\n\n/**\n * @group Snap\n */\nexport type TSnapLineInfos = {\n  nudge: TSnapNudge,\n  verticales: TSegment[]\n  horizontales: TSegment[]\n}\n\n/**\n * @group Snap\n */\nexport class IISnapManager\n{\n  #logger = LoggerManager.getLogger(LoggerCategory.CONVERTER)\n  editor: InteractiveInkEditor\n  configuration: SnapConfiguration\n\n  constructor(editor: InteractiveInkEditor, config?: PartialDeep<TSnapConfiguration>)\n  {\n    this.#logger.info(\"constructor\")\n    this.editor = editor\n    this.configuration = new SnapConfiguration(config)\n  }\n\n  get model(): IIModel\n  {\n    return this.editor.model\n  }\n\n  get renderer(): SVGRenderer\n  {\n    return this.editor.renderer\n  }\n\n  get selectionSnapPoints(): TPoint[]\n  {\n    return Box.createFromPoints(this.model.symbolsSelected.flatMap(s => s.snapPoints)).snapPoints\n  }\n\n  get otherSnapPoints(): TPoint[]\n  {\n    const selectSymbolIds = this.model.symbolsSelected.map(s => s.id)\n    return this.model.symbols.filter(s => !selectSymbolIds.includes(s.id)).flatMap(s => s.snapPoints)\n  }\n\n  get snapThreshold(): number\n  {\n    return this.editor.configuration.rendering.guides.gap / 2\n  }\n\n  protected getNearestVerticalGuide(x: number): number\n  {\n    if (this.renderer.verticalGuides.length) {\n      return this.renderer.verticalGuides.reduce((prev, curr) =>\n      {\n        return (Math.abs(curr - x) < Math.abs(prev - x) ? curr : prev)\n      })\n    }\n    return x\n  }\n\n  protected getNearestHorizontalGuide(y: number): number\n  {\n    if (this.renderer.horizontalGuides.length) {\n      return this.renderer.horizontalGuides.reduce((prev, curr) =>\n      {\n        return (Math.abs(curr - y) < Math.abs(prev - y) ? curr : prev)\n      })\n    }\n    return y\n  }\n\n  protected getGuidePointToSnap(point: TPoint): TPoint\n  {\n    return {\n      x: this.getNearestVerticalGuide(point.x),\n      y: this.getNearestHorizontalGuide(point.y)\n    }\n  }\n\n  drawSnapToElementLines(lines: TSegment[]): void\n  {\n    const attrs = {\n      role: \"snap-to-element\",\n      fill: \"transparent\",\n      stroke: \"blue\",\n      \"stroke-width\": \"2\",\n      style: SVGRendererConst.noSelection,\n      \"marker-start\": `url(#${ SVGRendererConst.crossMarker })`,\n      \"marker-end\": `url(#${ SVGRendererConst.crossMarker })`\n    }\n    lines.forEach(seg =>\n    {\n      this.renderer.drawLine(seg.p1, seg.p2, attrs)\n    })\n  }\n\n  clearSnapToElementLines(): void\n  {\n    this.renderer.clearElements({ attrs: { role: \"snap-to-element\" } })\n  }\n\n  protected getSnapLinesInfos(sourcePoints: TPoint[], targetPoints: TPoint[]): TSnapLineInfos\n  {\n    const infos: TSnapLineInfos = {\n      nudge: {\n        x: Infinity,\n        y: Infinity\n      },\n      verticales: [],\n      horizontales: [],\n    }\n    if (!sourcePoints.length || !targetPoints.length) return infos\n\n    sourcePoints.forEach(p1 =>\n    {\n      targetPoints.forEach(p2 =>\n      {\n        if (this.snapThreshold > Math.abs(p2.x - p1.x)) {\n          if (Math.abs(infos.nudge.x) > Math.abs(p2.x - p1.x)) {\n            infos.nudge.x = p2.x - p1.x\n            infos.verticales = [{ p1: { ...p1 }, p2 }]\n          }\n          else if (infos.nudge.x === p2.x - p1.x) {\n            infos.verticales.push({ p1: { ...p1 }, p2 })\n          }\n        }\n        if (this.snapThreshold > Math.abs(p2.y - p1.y)) {\n          if (Math.abs(infos.nudge.y) > Math.abs(p2.y - p1.y)) {\n            infos.nudge.y = p2.y - p1.y\n            infos.horizontales = [{ p1: { ...p1 }, p2 }]\n          }\n          else if (infos.nudge.y === p2.y - p1.y) {\n            infos.horizontales.push({ p1: { ...p1 }, p2 })\n          }\n        }\n      })\n    })\n\n    return infos\n  }\n\n  snapResize(point: TPoint, horizontal = true, vertical = true): TPoint\n  {\n    this.clearSnapToElementLines()\n    if (!this.configuration.symbol && !this.configuration.guide) return point\n\n    let localPoint: TPoint = {\n      x: Infinity,\n      y: Infinity\n    }\n    if (this.configuration.guide) {\n      localPoint = this.getGuidePointToSnap(point)\n    }\n    const snapLines: TSegment[] = []\n\n    if (this.configuration.symbol) {\n      const snapLinesInfos = this.getSnapLinesInfos([point], this.otherSnapPoints)\n      if (horizontal && Math.abs(snapLinesInfos.nudge.x) <= Math.abs(point.x - localPoint.x)) {\n        localPoint.x = point.x + snapLinesInfos.nudge.x\n        snapLines.push(...snapLinesInfos.verticales)\n      }\n      if (vertical && Math.abs(snapLinesInfos.nudge.y) <= Math.abs(point.y - localPoint.y)) {\n        localPoint.y = point.y + snapLinesInfos.nudge.y\n        snapLines.push(...snapLinesInfos.horizontales)\n      }\n    }\n\n    if (localPoint.x === Infinity) localPoint.x = point.x\n    if (localPoint.y === Infinity) localPoint.y = point.y\n\n    snapLines.forEach(s => s.p1 = localPoint)\n    this.drawSnapToElementLines(snapLines)\n    return localPoint\n  }\n\n  snapTranslate(tx: number, ty: number): TSnapNudge\n  {\n    this.clearSnapToElementLines()\n    const nudge: TSnapNudge = { x: tx, y: ty }\n    if (!this.configuration.symbol && !this.configuration.guide) return nudge\n\n    const selectionSymbolPoints = this.selectionSnapPoints.map(p => ({ x: p.x + tx, y: p.y + ty }))\n\n    let lastDeltaX = Infinity\n    let lastDeltaY = Infinity\n\n    if (this.configuration.guide) {\n      selectionSymbolPoints.forEach(p =>\n      {\n        const gridPoint = this.getGuidePointToSnap(p)\n        if (lastDeltaX > Math.abs(gridPoint.x - p.x)) {\n          nudge.x = gridPoint.x - p.x + tx\n          lastDeltaX = Math.abs(gridPoint.x - p.x)\n        }\n        if (lastDeltaY > Math.abs(gridPoint.y - p.y)) {\n          nudge.y = gridPoint.y - p.y + ty\n          lastDeltaY = Math.abs(gridPoint.y - p.y)\n        }\n      })\n    }\n\n    const snapLines: TSegment[] = []\n    if (this.configuration.symbol) {\n      const snapLinesInfos = this.getSnapLinesInfos(selectionSymbolPoints, this.otherSnapPoints)\n      if (lastDeltaX >= Math.abs(snapLinesInfos.nudge.x) && snapLinesInfos.verticales.length) {\n        nudge.x = snapLinesInfos.nudge.x + tx\n        snapLines.push(...snapLinesInfos.verticales)\n      }\n      if (lastDeltaY >= Math.abs(snapLinesInfos.nudge.y) && snapLinesInfos.horizontales.length) {\n        nudge.y = snapLinesInfos.nudge.y + ty\n        snapLines.push(...snapLinesInfos.horizontales)\n      }\n    }\n    if (snapLines.length) {\n      snapLines.forEach(l =>\n      {\n        l.p1.x += nudge.x - tx\n        l.p1.y += nudge.y - ty\n      })\n      this.drawSnapToElementLines(snapLines)\n    }\n    return nudge\n  }\n\n  snapRotation(angleDegree: number): number\n  {\n    if (this.configuration.angle > 0) {\n      return this.configuration.angle * Math.round(angleDegree / this.configuration.angle)\n    }\n    return angleDegree\n  }\n}\n","import { mergeDeep, PartialDeep } from \"../utils\"\nimport { DefaultStyle, TStyle } from \"../style\"\nimport { DefaultLoggerConfiguration, TLoggerConfiguration } from \"../logger\"\nimport { DefaultGrabberConfiguration, TGrabberConfiguration } from \"../grabber\"\nimport { DefaultHistoryConfiguration, THistoryConfiguration } from \"../history\"\nimport { DefaultMenuConfiguration, TMenuConfiguration } from \"../menu\"\nimport { DefaultRecognizerWebSocketConfiguration, RecognizerWebSocketConfiguration, TRecognitionWebSocketConfiguration, TRecognizerWebSocketConfiguration, TServerWebsocketConfiguration } from \"../recognizer\"\nimport { DefaultIIRendererConfiguration, TIIRendererConfiguration } from \"../renderer\"\nimport { DefaultGestureConfiguration, TGestureConfiguration } from \"../gesture\"\nimport { TEditorConfiguration } from \"./AbstractEditor\"\nimport { DefaultSnapConfiguration, SnapConfiguration, TSnapConfiguration } from \"../snap\"\n\n/**\n * @group Editor\n */\nexport type TInteractiveInkEditorConfiguration = TEditorConfiguration & TRecognizerWebSocketConfiguration & {\n \"undo-redo\": THistoryConfiguration\n  rendering: TIIRendererConfiguration\n  grabber: TGrabberConfiguration\n  menu: TMenuConfiguration\n  penStyle: TStyle,\n  fontStyle: {\n    size: number | \"auto\"\n    weight: \"bold\" | \"normal\" | \"auto\"\n  }\n  gesture: TGestureConfiguration\n  snap: TSnapConfiguration\n}\n\n/**\n * @group Editor\n * @source\n */\nexport const DefaultInteractiveInkEditorConfiguration: TInteractiveInkEditorConfiguration = {\n  server: DefaultRecognizerWebSocketConfiguration.server,\n  recognition: DefaultRecognizerWebSocketConfiguration.recognition,\n  menu: DefaultMenuConfiguration,\n  rendering: DefaultIIRendererConfiguration,\n  logger: DefaultLoggerConfiguration,\n  grabber: DefaultGrabberConfiguration,\n  \"undo-redo\": DefaultHistoryConfiguration,\n\n  penStyle: DefaultStyle,\n  fontStyle: {\n    size: \"auto\",\n    weight: \"auto\",\n  },\n  gesture: DefaultGestureConfiguration,\n  snap: DefaultSnapConfiguration\n}\n\n/**\n * @group Editor\n */\nexport class InteractiveInkEditorConfiguration implements TInteractiveInkEditorConfiguration\n{\n  grabber: TGrabberConfiguration\n  logger: TLoggerConfiguration\n  server: TServerWebsocketConfiguration\n  recognition: TRecognitionWebSocketConfiguration\n  rendering: TIIRendererConfiguration\n  \"undo-redo\": THistoryConfiguration\n  menu: TMenuConfiguration\n\n  penStyle: TStyle\n  fontStyle: {\n    size: number | \"auto\"\n    weight: \"bold\" | \"normal\" | \"auto\"\n  }\n  gesture: TGestureConfiguration\n  snap: TSnapConfiguration\n\n  constructor(configuration?: PartialDeep<TInteractiveInkEditorConfiguration>)\n  {\n    const { server, recognition } =  new RecognizerWebSocketConfiguration(configuration)\n    this.recognition = recognition\n    this.server = server\n\n    this.grabber = mergeDeep({}, DefaultInteractiveInkEditorConfiguration.grabber, configuration?.grabber)\n    this.logger = mergeDeep({}, DefaultInteractiveInkEditorConfiguration.logger, configuration?.logger)\n    this.rendering = mergeDeep({}, DefaultInteractiveInkEditorConfiguration.rendering, configuration?.rendering)\n    this[\"undo-redo\"] = mergeDeep({}, DefaultInteractiveInkEditorConfiguration[\"undo-redo\"], configuration?.[\"undo-redo\"])\n    this.menu = mergeDeep({}, DefaultInteractiveInkEditorConfiguration.menu, configuration?.menu)\n    this.gesture = mergeDeep({}, DefaultInteractiveInkEditorConfiguration.gesture, configuration?.gesture)\n    this.snap = new SnapConfiguration(configuration?.snap)\n\n    this.penStyle = mergeDeep({}, DefaultInteractiveInkEditorConfiguration.penStyle, configuration?.penStyle)\n    this.fontStyle = mergeDeep({}, DefaultInteractiveInkEditorConfiguration.fontStyle, configuration?.fontStyle)\n  }\n}\n","import { EditorTool, SELECTION_MARGIN } from \"../Constants\"\nimport { JIIXEdgeKind, JIIXELementType, JIIXNodeKind, IIModel, TExport, TJIIXStrokeItem } from \"../model\"\nimport\n{\n  Box,\n  EdgeKind,\n  IIDecorator,\n  TIIEdge,\n  IIEdgeArc,\n  IIEdgeLine,\n  IIEdgePolyLine,\n  TIIShape,\n  IIShapeCircle,\n  IIShapeEllipse,\n  IIShapePolygon,\n  IIStroke,\n  IIRecognizedText,\n  IISymbolGroup,\n  IIText,\n  ShapeKind,\n  SymbolType,\n  TIISymbol,\n  convertPartialStrokesToOIStrokes,\n  TIIRecognized,\n  IIRecognizedLine,\n  IIRecognizedPolyLine,\n  IIRecognizedArc,\n} from \"../symbol\"\nimport { RecognizerWebSocket } from \"../recognizer\"\nimport { SVGRenderer, SVGBuilder, TIIRendererConfiguration } from \"../renderer\"\nimport { TStyle } from \"../style\"\nimport\n{\n  IIConversionManager,\n  IIWriterManager,\n  IISelectionManager,\n  IIResizeManager,\n  IIRotationManager,\n  IITranslateManager,\n  IITextManager,\n  EraseManager,\n  IIDebugSVGManager,\n  IIMoveManager,\n} from \"../manager\"\nimport { RecognizedKind, IIRecognizedCircle, IIRecognizedEllipse, IIRecognizedPolygon } from \"../symbol\"\nimport { IIHistoryManager, TIIHistoryBackendChanges, TIIHistoryChanges, THistoryContext } from \"../history\"\nimport { PartialDeep, convertMillimeterToPixel, mergeDeep } from \"../utils\"\nimport { IIMenuAction, IIMenuManager, IIMenuStyle, IIMenuTool } from \"../menu\"\nimport { AbstractEditor, EditorOptionsBase } from \"./AbstractEditor\"\nimport { InteractiveInkEditorConfiguration, TInteractiveInkEditorConfiguration } from \"./InteractiveInkEditorConfiguration\"\nimport { IIGestureManager } from \"../gesture\"\nimport { IISnapManager } from \"../snap\"\n\n/**\n * @group Editor\n */\nexport type TInteractiveInkEditorOptions = PartialDeep<EditorOptionsBase &\n  {\n    configuration: TInteractiveInkEditorConfiguration\n  }> &\n  {\n    override?: {\n      recognizer?: RecognizerWebSocket\n      menu?: {\n        style?: IIMenuStyle\n        tool?: IIMenuTool\n        action?: IIMenuAction\n      }\n    }\n  }\n/**\n * @group Editor\n */\nexport class InteractiveInkEditor extends AbstractEditor\n{\n  #configuration: InteractiveInkEditorConfiguration\n  #model: IIModel\n  #tool: EditorTool = EditorTool.Write\n  #layerUITimer?: ReturnType<typeof setTimeout>\n  #recognizeStrokeTimer?: ReturnType<typeof setTimeout>\n\n  renderer: SVGRenderer\n  recognizer: RecognizerWebSocket\n\n  #penStyle: TStyle\n\n  history: IIHistoryManager\n  writer: IIWriterManager\n  eraser: EraseManager\n  gesture: IIGestureManager\n  resizer: IIResizeManager\n  rotator: IIRotationManager\n  translator: IITranslateManager\n  converter: IIConversionManager\n  texter: IITextManager\n  selector: IISelectionManager\n  svgDebugger: IIDebugSVGManager\n  snaps: IISnapManager\n  move: IIMoveManager\n  menu: IIMenuManager\n\n  constructor(rootElement: HTMLElement, options?: TInteractiveInkEditorOptions)\n  {\n    super(rootElement, options)\n\n    this.#configuration = new InteractiveInkEditorConfiguration(options?.configuration)\n    this.#penStyle = Object.assign({}, this.#configuration.penStyle)\n\n    if (options?.override?.recognizer) {\n      const CustomRecognizer = options?.override.recognizer as unknown as typeof RecognizerWebSocket\n      this.recognizer = new CustomRecognizer(this.#configuration)\n    }\n    else {\n      this.recognizer = new RecognizerWebSocket(this.#configuration)\n    }\n    this.recognizer.event.addErrorListener(this.manageError.bind(this))\n    this.recognizer.event.addExportedListener(this.event.emitExported.bind(this.event))\n    this.recognizer.event.addContentChangedListener(this.onContentChanged.bind(this))\n    this.recognizer.event.addSessionOpenedListener(this.event.emitSessionOpened.bind(this.event))\n    this.recognizer.event.addEndInitialization(this.layers.hideMessageModal.bind(this.layers))\n    this.recognizer.event.addIdleListener(this.updateLayerState.bind(this))\n\n    this.renderer = new SVGRenderer(this.#configuration.rendering)\n\n    this.history = new IIHistoryManager(this.#configuration[\"undo-redo\"], this.event)\n\n    this.writer = new IIWriterManager(this)\n    this.eraser = new EraseManager(this)\n    this.selector = new IISelectionManager(this)\n    this.move = new IIMoveManager(this)\n\n    this.gesture = new IIGestureManager(this, this.#configuration.gesture)\n    this.resizer = new IIResizeManager(this)\n    this.rotator = new IIRotationManager(this)\n    this.translator = new IITranslateManager(this)\n    this.converter = new IIConversionManager(this)\n    this.texter = new IITextManager(this)\n    this.svgDebugger = new IIDebugSVGManager(this)\n    this.snaps = new IISnapManager(this, this.#configuration.snap)\n    this.menu = new IIMenuManager(this, options?.override?.menu)\n\n    this.#model = new IIModel(this.#configuration.rendering.minWidth, this.#configuration.rendering.minHeight, this.configuration.rendering.guides.gap)\n  }\n\n  get initializationPromise(): Promise<void>\n  {\n    return this.recognizer.initialized.promise\n  }\n\n  //#region Properties\n  get tool(): EditorTool\n  {\n    return this.#tool\n  }\n  set tool(i: EditorTool)\n  {\n    this.#tool = i\n    this.menu.tool.update()\n    this.setCursorStyle()\n    this.unselectAll()\n\n    this.eraser.detach()\n    this.selector.detach()\n    this.move.detach()\n    this.writer.detach()\n    switch (this.#tool) {\n      case EditorTool.Erase:\n        this.eraser.attach(this.layers.rendering)\n        break\n      case EditorTool.Select:\n        this.selector.attach(this.layers.rendering)\n        break\n      case EditorTool.Move:\n        this.move.attach(this.layers.rendering)\n        break\n      default:\n        this.writer.attach(this.layers.rendering)\n        break\n    }\n    this.event.emitToolChanged(i)\n  }\n\n  get model(): IIModel\n  {\n    return this.#model\n  }\n\n  get configuration(): InteractiveInkEditorConfiguration\n  {\n    return this.#configuration\n  }\n  set renderingConfiguration(renderingConfiguration: TIIRendererConfiguration)\n  {\n    this.configuration.rendering = mergeDeep(this.configuration.rendering, renderingConfiguration)\n    const height = Math.max(this.renderer.parent.clientHeight, this.configuration.rendering.minHeight)\n    const width = Math.max(this.renderer.parent.clientWidth, this.configuration.rendering.minWidth)\n    this.renderer.resize(height, width)\n    this.model.rowHeight = this.configuration.rendering.guides.gap\n    this.history.stack.forEach(i => i.model.rowHeight = this.model.rowHeight)\n    this.event.emitUIpdated()\n  }\n  //#endregion\n\n  //#region Style\n  get penStyle(): TStyle\n  {\n    return this.#penStyle\n  }\n  set penStyle(penStyle: PartialDeep<TStyle>)\n  {\n    this.logger.info(\"set penStyle\", { penStyle })\n    this.#penStyle = Object.assign({}, this.#penStyle, penStyle)\n  }\n  //#endregion\n\n  protected updateLayerState(idle: boolean): void\n  {\n    this.event.emitIdle(idle)\n    this.layers.updateState(idle)\n  }\n\n  updateLayerUI(timeout: number = 500): void\n  {\n    clearTimeout(this.#layerUITimer)\n    this.#layerUITimer = setTimeout(() =>\n    {\n      this.menu.update()\n      this.svgDebugger.apply()\n      this.waitForIdle()\n      this.event.emitUIpdated()\n    }, timeout)\n  }\n\n  manageError(error: Error): void\n  {\n    this.layers.showMessageError(error)\n    this.event.emitError(error)\n  }\n\n  protected setCursorStyle(): void\n  {\n    switch (this.#tool) {\n      case EditorTool.Erase:\n        this.layers.root.classList.remove(\"draw\")\n        this.layers.root.classList.add(\"erase\")\n        this.layers.root.classList.remove(\"select\")\n        this.layers.root.classList.remove(\"move\")\n        break\n      case EditorTool.Select:\n        this.layers.root.classList.remove(\"draw\")\n        this.layers.root.classList.remove(\"erase\")\n        this.layers.root.classList.add(\"select\")\n        this.layers.root.classList.remove(\"move\")\n        break\n      case EditorTool.Move:\n        this.layers.root.classList.remove(\"draw\")\n        this.layers.root.classList.remove(\"erase\")\n        this.layers.root.classList.remove(\"select\")\n        this.layers.root.classList.add(\"move\")\n        break\n      default:\n        this.layers.root.classList.add(\"draw\")\n        this.layers.root.classList.remove(\"erase\")\n        this.layers.root.classList.remove(\"select\")\n        this.layers.root.classList.remove(\"move\")\n        break\n    }\n  }\n\n  protected async onContentChanged(undoRedoContext: THistoryContext): Promise<void>\n  {\n    clearTimeout(this.#recognizeStrokeTimer)\n    this.#recognizeStrokeTimer = setTimeout(async () =>\n    {\n      await this.synchronizeStrokesWithJIIX()\n      this.updateLayerUI(0)\n      this.event.emitChanged(undoRedoContext)\n    }, 500)\n  }\n\n  async initialize(): Promise<void>\n  {\n    try {\n      this.logger.info(\"initialize\")\n      this.layers.render()\n      this.layers.showLoader()\n      this.tool = EditorTool.Write\n      this.renderer.init(this.layers.rendering)\n      this.menu.render(this.layers.ui.root)\n\n      const compStyles = window.getComputedStyle(this.layers.root)\n      this.model.width = Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.#configuration.rendering.minWidth)\n      this.model.height = Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.#configuration.rendering.minHeight)\n      this.model.rowHeight = this.configuration.rendering.guides.gap\n      this.history.init(this.model)\n\n      if(!this.recognizer.configuration.server.version) {\n        await this.loadInfo(this.configuration.server)\n        this.recognizer.configuration.server.version = this.info!.version\n      }\n      await this.recognizer.init()\n    } catch (error) {\n      this.logger.error(\"initialize\", error)\n      this.layers.showMessageError(error as Error)\n      throw error\n    }\n    finally {\n      this.logger.debug(\"initialize\", \"finally\")\n      this.layers.hideLoader()\n      this.layers.updateState(true)\n    }\n  }\n\n  async changeLanguage(code: string): Promise<void>\n  {\n    try {\n      this.logger.info(\"changeLanguage\", { code })\n      this.updateLayerState(false)\n      this.configuration.recognition.lang = code\n      await this.recognizer.newSession(this.configuration)\n      this.recognizer.addStrokes(this.extractStrokesFromSymbols(this.model.symbols), false)\n      await this.synchronizeStrokesWithJIIX(true)\n      this.layers.hideLoader()\n      this.event.emitLoaded()\n    }\n    catch (error) {\n      this.logger.error(\"changeLanguage\", error)\n      this.manageError(error as Error)\n      throw error\n    }\n    finally {\n      this.updateLayerUI()\n    }\n  }\n\n  protected buildShape(partialShape: PartialDeep<TIIShape>): TIIShape\n  {\n    switch (partialShape.kind) {\n      case ShapeKind.Circle:\n        return IIShapeCircle.create(partialShape as PartialDeep<IIShapeCircle>)\n      case ShapeKind.Ellipse:\n        return IIShapeEllipse.create(partialShape as PartialDeep<IIShapeEllipse>)\n      case ShapeKind.Polygon:\n        return IIShapePolygon.create(partialShape as PartialDeep<IIShapePolygon>)\n      default:\n        throw new Error(`Unable to create shape, kind: \"${ partialShape.kind }\" is unknown`)\n    }\n  }\n\n  protected buildEdge(partialEdge: PartialDeep<TIIEdge>): TIIEdge\n  {\n    switch (partialEdge.kind) {\n      case EdgeKind.Arc:\n        return IIEdgeArc.create(partialEdge as PartialDeep<IIEdgeArc>)\n      case EdgeKind.Line:\n        return IIEdgeLine.create(partialEdge as PartialDeep<IIEdgeLine>)\n      case EdgeKind.PolyEdge:\n        return IIEdgePolyLine.create(partialEdge as PartialDeep<IIEdgePolyLine>)\n      default:\n        throw new Error(`Unable to create edge, kind: \"${ partialEdge.kind }\" is unknown`)\n    }\n  }\n\n  protected buildRecognized(partialSymbol: PartialDeep<TIIRecognized>): TIIRecognized\n  {\n    switch (partialSymbol.kind) {\n      case RecognizedKind.Text:\n        return IIRecognizedText.create(partialSymbol)\n      case RecognizedKind.Arc:\n        return IIRecognizedArc.create(partialSymbol)\n      case RecognizedKind.Circle:\n        return IIRecognizedCircle.create(partialSymbol)\n      case RecognizedKind.Ellipse:\n        return IIRecognizedEllipse.create(partialSymbol)\n      case RecognizedKind.Polygone:\n        return IIRecognizedPolygon.create(partialSymbol)\n      case RecognizedKind.Line:\n        return IIRecognizedLine.create(partialSymbol)\n      case RecognizedKind.PolyEdge:\n        return IIRecognizedPolyLine.create(partialSymbol)\n      default:\n        throw new Error(`Unable to create recognized, symbol type '${ JSON.stringify(partialSymbol) } is unknow`)\n    }\n  }\n\n  protected buildGroup(partialGroup: PartialDeep<IISymbolGroup>): IISymbolGroup\n  {\n    if (!partialGroup.children?.length) {\n      throw new Error(`Unable to create group, no children`)\n    }\n\n    const children = partialGroup.children.map(partialSymbol =>\n    {\n      switch (partialSymbol?.type) {\n        case SymbolType.Stroke:\n          return IIStroke.create(partialSymbol as PartialDeep<IIStroke>)\n        case SymbolType.Shape:\n          return this.buildShape(partialSymbol as PartialDeep<TIIShape>)\n        case SymbolType.Edge:\n          return this.buildEdge(partialSymbol as PartialDeep<TIIEdge>)\n        case SymbolType.Text:\n          return IIText.create(partialSymbol as PartialDeep<IIText>)\n        case SymbolType.Group:\n          return this.buildGroup(partialSymbol as PartialDeep<IISymbolGroup>)\n        case SymbolType.Recognized:\n          return this.buildRecognized(partialSymbol as PartialDeep<TIIRecognized>)\n        default:\n          throw new Error(`Unable to create group, symbol type '${ JSON.stringify(partialSymbol) } is unknow`)\n      }\n    })\n    const group = new IISymbolGroup(children, partialGroup.style)\n    if (partialGroup.id) {\n      group.id = partialGroup.id\n    }\n    if (partialGroup.decorators) {\n      group.decorators = partialGroup.decorators.map(d => new IIDecorator(d!.kind!, d!.style as TStyle))\n    }\n    return group\n  }\n\n  protected buildStroke(partialSymbol: PartialDeep<IIStroke>): IIStroke\n  {\n    return IIStroke.create(partialSymbol as PartialDeep<IIStroke>)\n  }\n\n  protected buildStrokeText(partialSymbol: PartialDeep<IIRecognizedText>): IIRecognizedText\n  {\n    return IIRecognizedText.create(partialSymbol as PartialDeep<IIRecognizedText>)\n  }\n\n  protected buildText(partialSymbol: PartialDeep<IIText>): IIText\n  {\n    return IIText.create(partialSymbol as PartialDeep<IIText>)\n  }\n\n  protected buildSymbol(partialSymbol: PartialDeep<TIISymbol>): TIISymbol\n  {\n    try {\n      switch (partialSymbol.type) {\n        case SymbolType.Stroke:\n          return this.buildStroke(partialSymbol)\n        case SymbolType.Shape:\n          return this.buildShape(partialSymbol)\n        case SymbolType.Edge:\n          return this.buildEdge(partialSymbol)\n        case SymbolType.Text:\n          return this.buildText(partialSymbol)\n        case SymbolType.Group:\n          return this.buildGroup(partialSymbol)\n        case SymbolType.Recognized:\n          return this.buildRecognized(partialSymbol as PartialDeep<TIIRecognized>)\n        default:\n          throw new Error(`Unable to build symbol, type: \"${ partialSymbol.type }\" is unknown`)\n      }\n    }\n    catch (error) {\n      this.logger.error(\"createSymbol\", error)\n      this.manageError(error as Error)\n      throw error\n    }\n  }\n\n  async createSymbol(partialSymbol: PartialDeep<TIISymbol>): Promise<TIISymbol>\n  {\n    try {\n      return await this.addSymbol(this.buildSymbol(partialSymbol))\n    }\n    catch (error) {\n      this.logger.error(\"createSymbol\", error)\n      this.manageError(error as Error)\n      throw error\n    }\n    finally {\n      this.updateLayerUI()\n    }\n  }\n\n  async createSymbols(partialSymbols: PartialDeep<TIISymbol>[]): Promise<TIISymbol[]>\n  {\n    try {\n      const errors: string[] = []\n      const symbols: TIISymbol[] = []\n      partialSymbols.forEach(partialSymbol =>\n      {\n        try {\n          symbols.push(this.buildSymbol(partialSymbol))\n        } catch (error) {\n          errors.push(((error as Error).message || error) as string)\n        }\n      })\n      if (errors.length) {\n        throw new Error(errors.join(\"\\n\"))\n      }\n      return await this.addSymbols(symbols)\n    } catch (error) {\n      this.logger.error(\"createSymbols\", error)\n      this.manageError(error as Error)\n      throw error\n    }\n  }\n\n  /** @hidden */\n  protected updateTextBounds(symbol: TIISymbol): void\n  {\n    if (symbol.type === SymbolType.Text) {\n      this.texter.updateBounds(symbol)\n    }\n    else if (symbol.type === SymbolType.Group) {\n      symbol.extractText().forEach(t => this.texter.updateBounds(t))\n    }\n  }\n\n  /** @hidden */\n  async addSymbol(sym: TIISymbol, addToHistory = true): Promise<TIISymbol>\n  {\n    this.logger.info(\"addSymbol\", { sym })\n    this.updateLayerState(false)\n    this.updateTextBounds(sym)\n    this.model.addSymbol(sym)\n    this.renderer.drawSymbol(sym)\n\n    const strokes = this.extractStrokesFromSymbols([sym])\n    this.recognizer.addStrokes(strokes, false)\n\n    if (addToHistory) {\n      this.history.push(this.model, { added: [sym] })\n    }\n    this.updateLayerUI()\n    return sym\n  }\n\n  /** @hidden */\n  async addSymbols(symList: TIISymbol[], addToHistory = true): Promise<TIISymbol[]>\n  {\n    this.logger.info(\"addSymbol\", { symList })\n    this.updateLayerState(false)\n    symList.forEach(s =>\n    {\n      this.updateTextBounds(s)\n      this.model.addSymbol(s)\n      this.renderer.drawSymbol(s)\n    })\n    const strokes = this.extractStrokesFromSymbols(symList)\n    this.recognizer.addStrokes(strokes, false)\n    if (addToHistory) {\n      this.history.push(this.model, { added: symList })\n    }\n    this.updateLayerUI()\n    return symList\n  }\n\n  async updateSymbol(sym: TIISymbol, addToHistory = true): Promise<TIISymbol>\n  {\n    this.logger.info(\"updateSymbol\", { sym })\n    this.updateLayerState(false)\n    this.updateTextBounds(sym)\n    this.model.updateSymbol(sym)\n    this.renderer.drawSymbol(sym)\n    const strokes = this.extractStrokesFromSymbols([sym])\n    this.recognizer.replaceStrokes(strokes.map(s => s.id), strokes)\n    if (addToHistory) {\n      this.history.push(this.model, { updated: [sym] })\n    }\n    this.updateLayerUI()\n    return sym\n  }\n\n  async updateSymbols(symList: TIISymbol[], addToHistory = true): Promise<TIISymbol[]>\n  {\n    this.logger.info(\"updateSymbol\", { symList })\n    this.updateLayerState(false)\n    symList.forEach(s =>\n    {\n      this.updateTextBounds(s)\n      this.model.updateSymbol(s)\n      this.renderer.drawSymbol(s)\n    })\n    const strokes = this.extractStrokesFromSymbols(symList)\n    this.recognizer.replaceStrokes(strokes.map(s => s.id), strokes)\n    if (addToHistory) {\n      this.history.push(this.model, { updated: symList })\n    }\n    this.updateLayerUI()\n    return symList\n  }\n\n  updateSymbolsStyle(symbolIds: string[], style: PartialDeep<TStyle>, addToHistory = true): void\n  {\n    this.logger.info(\"updateSymbolsStyle\", { symbolIds, style })\n    const symbols: TIISymbol[] = []\n    this.model.symbols.forEach(s =>\n    {\n      if (symbolIds.includes(s.id)) {\n        s.style = Object.assign({}, s.style, style)\n        if (\n          SymbolType.Text === s.type ||\n          SymbolType.Group === s.type ||\n          SymbolType.Recognized === s.type) {\n          s.updateChildrenStyle()\n        }\n        this.renderer.drawSymbol(s)\n        this.model.updateSymbol(s)\n        s.modificationDate = Date.now()\n        symbols.push(s)\n      }\n    })\n    if (symbols.length) {\n      symbols.forEach(s =>\n      {\n        if (s.type === SymbolType.Text) {\n          const lastWidth = s.bounds.width\n          this.texter.updateBounds(s)\n          const tx = s.bounds.width - lastWidth\n          if (tx !== 0) {\n            this.texter.moveTextAfter(s, tx)\n          }\n        }\n      })\n    }\n    if (addToHistory && symbols.length) {\n      this.history.push(this.model, { style: { symbols, style } })\n    }\n  }\n\n  updateTextFontStyle(textIds: string[], { fontSize, fontWeight }: { fontSize?: number, fontWeight?: \"normal\" | \"bold\" | \"auto\" }): void\n  {\n    this.logger.info(\"updateTextFontStyle\", { textIds, fontSize, fontWeight })\n    const symbols: (IIText | IISymbolGroup)[] = []\n    const translate: { symbols: TIISymbol[], tx: number, ty: number }[] = []\n    this.model.symbols.forEach(s =>\n    {\n      if (textIds.includes(s.id)) {\n        if (s.type === SymbolType.Text) {\n          s.updateChildrenFont({ fontSize, fontWeight: fontWeight === \"auto\" ? undefined : fontWeight })\n          const lastWidth = s.bounds.width\n          this.texter.updateBounds(s)\n          this.renderer.drawSymbol(s)\n          const tx = s.bounds.width - lastWidth\n          if (tx !== 0) {\n            const symbolsTranslated = this.texter.moveTextAfter(s, tx)\n            if (symbolsTranslated?.length) {\n              translate.push({\n                symbols: symbolsTranslated,\n                tx,\n                ty: 0\n              })\n            }\n          }\n          s.modificationDate = Date.now()\n          symbols.push(s)\n        }\n        else if (s.type === SymbolType.Group) {\n          const textChildren = s.extractText()\n          if (textChildren.length) {\n            textChildren.forEach(text =>\n            {\n              text.updateChildrenFont({ fontSize, fontWeight: fontWeight === \"auto\" ? undefined : fontWeight })\n              const lastWidth = s.bounds.width\n              this.texter.updateBounds(text)\n              const tx = s.bounds.width - lastWidth\n              const symbolsTranslated = this.texter.moveTextAfter(text, tx)\n              if (symbolsTranslated?.length) {\n                translate.push({\n                  symbols: symbolsTranslated,\n                  tx,\n                  ty: 0\n                })\n              }\n            })\n            s.modificationDate = Date.now()\n            this.renderer.drawSymbol(s)\n            symbols.push(s)\n          }\n\n        }\n      }\n    })\n    if (symbols.length) {\n      this.history.push(this.model, { style: { symbols, fontSize }, translate })\n    }\n  }\n\n  async replaceSymbols(oldSymbols: TIISymbol[], newSymbols: TIISymbol[], addToHistory = true): Promise<void>\n  {\n    this.logger.info(\"replaceSymbol\", { oldSymbols, newSymbols })\n    this.updateLayerState(false)\n\n    const oldStrokes = this.extractStrokesFromSymbols(oldSymbols)\n    const newStrokes = this.extractStrokesFromSymbols(newSymbols)\n\n    const symToReplace = oldSymbols.shift()\n\n    if (symToReplace) {\n      oldSymbols.forEach(s =>\n      {\n        this.renderer.removeSymbol(s.id)\n        this.model.removeSymbol(s.id)\n      })\n\n      this.model.replaceSymbol(symToReplace.id, newSymbols)\n      this.renderer.replaceSymbol(symToReplace.id, newSymbols)\n\n\n      if (oldStrokes.length && newStrokes.length) {\n        this.recognizer.replaceStrokes(oldStrokes.map(s => s.id), newStrokes)\n      }\n      else if (oldStrokes.length) {\n        this.recognizer.eraseStrokes(oldStrokes.map(s => s.id))\n      }\n      else {\n        this.recognizer.addStrokes(newStrokes, false)\n      }\n\n      if (addToHistory) {\n        this.history.push(this.model, { replaced: { oldSymbols, newSymbols } })\n      }\n      this.updateLayerUI()\n    }\n  }\n\n  changeOrderSymbol(symbol: TIISymbol, position: \"first\" | \"last\" | \"forward\" | \"backward\"): void\n  {\n    this.model.changeOrderSymbol(symbol.id, position)\n    this.renderer.changeOrderSymbol(symbol, position)\n    this.history.push(this.model, { order: { symbols: [symbol], position } })\n  }\n\n  changeOrderSymbols(symbols: TIISymbol[], position: \"first\" | \"last\" | \"forward\" | \"backward\")\n  {\n    symbols.forEach(s =>\n    {\n      this.model.changeOrderSymbol(s.id, position)\n      this.renderer.changeOrderSymbol(s, position)\n    })\n    this.history.push(this.model, { order: { symbols, position } })\n  }\n\n  groupSymbols(symbols: TIISymbol[]): IISymbolGroup\n  {\n    const group = this.buildGroup({ children: symbols })\n    symbols.forEach(s =>\n    {\n      this.model.removeSymbol(s.id)\n      this.renderer.removeSymbol(s.id)\n    })\n    this.model.addSymbol(group)\n    this.history.push(this.model, { group: { symbols } })\n    return group\n  }\n\n  ungroupSymbol(group: IISymbolGroup): TIISymbol[]\n  {\n    group.children.forEach(s => this.renderer.drawSymbol(s))\n    this.renderer.removeSymbol(group.id)\n    this.model.replaceSymbol(group.id, group.children)\n    this.history.push(this.model, { ungroup: { group } })\n    return group.children\n  }\n\n  async synchronizeStrokesWithJIIX(force: boolean = false): Promise<void>\n  {\n    //if there is no stroke, jiix should not have changed\n    const strokes = this.model.symbols.filter(s => s.type === SymbolType.Stroke)\n    if (!force && !strokes.length) {\n      this.event.emitSynchronized()\n      return\n    }\n    await this.export([\"application/vnd.myscript.jiix\"])\n\n    const getSymbolsAndStrokesAssociatedFromJIIXStrokeItems = (items: TJIIXStrokeItem[] = []): { symbols: TIISymbol[], strokes: IIStroke[] } =>\n    {\n      const symbols: TIISymbol[] = []\n      const strokes: IIStroke[] = []\n      const strokeIdsUsed: string[] = []\n      items.forEach(i =>\n      {\n        const strokeId = i[\"full-id\"]!\n        if (strokeIdsUsed.includes(strokeId)) {\n          return\n        }\n        strokeIdsUsed.push(strokeId)\n        const sym = this.model.getRootSymbol(strokeId)\n        if (sym) {\n          switch (sym?.type) {\n            // we do not modify a group created by the user\n            // case SymbolType.Group:\n            //   strokes.push(...sym.extractStrokes())\n            //   break\n            case SymbolType.Recognized:\n              // if it's recognized symbol with same number of strokes\n              // the recognition has been already done\n              // if (sym.strokes.length === items.length) {\n              //   return\n              // }\n              strokes.push(sym.strokes.find(s => s.id === i[\"full-id\"]!)!)\n              break\n            default:\n              strokes.push(sym as IIStroke)\n              break\n          }\n          const symIdx = symbols.findIndex(s => s.id === sym.id)\n          if (symIdx < 0) {\n            symbols.push(sym)\n          }\n          else {\n            symbols[symIdx] = sym\n          }\n        }\n      })\n      return {\n        symbols,\n        strokes\n      }\n    }\n\n    const jiix = this.model.exports?.[\"application/vnd.myscript.jiix\"]\n    jiix?.elements?.forEach(el =>\n    {\n      switch (el.type) {\n        case JIIXELementType.Text: {\n          el.words?.forEach(w =>\n          {\n            const jiixAssociation = getSymbolsAndStrokesAssociatedFromJIIXStrokeItems(w.items)\n            if (jiixAssociation.strokes.length) {\n              if (jiixAssociation.symbols.length === 1) {\n                const symAsso = jiixAssociation.symbols[0]\n                if (\n                  symAsso.type === SymbolType.Recognized && symAsso.kind === RecognizedKind.Text &&\n                  symAsso.label === w.label &&\n                  symAsso.strokes.length === symAsso.strokes.length\n                ) {\n                  return\n                }\n              }\n              const line = el.lines!.find(l => l[\"first-char\"]! <= w[\"first-char\"]! && l[\"last-char\"]! >= w[\"last-char\"]!)!\n              const recognizedText = new IIRecognizedText(jiixAssociation.strokes, { baseline: convertMillimeterToPixel(line[\"baseline-y\"]), xHeight: convertMillimeterToPixel(line[\"x-height\"]) })\n              recognizedText.label = w.label\n              jiixAssociation.symbols.forEach(sym =>\n              {\n                if (sym.type === SymbolType.Recognized && sym.kind === RecognizedKind.Text) {\n                  sym.decorators.forEach(d =>\n                  {\n                    if (!recognizedText.decorators.some(wd => wd.kind === d.kind)) {\n                      recognizedText.decorators.push(d)\n                    }\n                  })\n                }\n                this.model.removeSymbol(sym.id)\n                this.renderer.removeSymbol(sym.id)\n              })\n              this.model.addSymbol(recognizedText)\n              this.renderer.drawSymbol(recognizedText)\n            }\n          })\n          break\n        }\n        case JIIXELementType.Node: {\n          let symbolRecognized: TIIRecognized | undefined\n          const jiixAssociation = getSymbolsAndStrokesAssociatedFromJIIXStrokeItems(el.items)\n          if (jiixAssociation.strokes.length) {\n            if (jiixAssociation.symbols.length === 1) {\n              const symAsso = jiixAssociation.symbols[0]\n              if (symAsso.type === SymbolType.Recognized &&\n                symAsso.strokes.length === jiixAssociation.strokes.length) {\n                return\n              }\n            }\n            switch (el.kind) {\n              case JIIXNodeKind.Circle: {\n                symbolRecognized = new IIRecognizedCircle(jiixAssociation.strokes)\n                break\n              }\n              case JIIXNodeKind.Ellipse: {\n                symbolRecognized = new IIRecognizedEllipse(jiixAssociation.strokes)\n                break\n              }\n              case JIIXNodeKind.Rectangle:\n              case JIIXNodeKind.Triangle:\n              case JIIXNodeKind.Parallelogram:\n              case JIIXNodeKind.Polygon:\n              case JIIXNodeKind.Rhombus: {\n                symbolRecognized = new IIRecognizedPolygon(jiixAssociation.strokes)\n                break\n              }\n              default:\n                this.logger.warn(\"synchronizeStrokesWithJIIX\", `Can not create recognized shape symbol, kind unknow: ${ el }`)\n                break\n            }\n            if (symbolRecognized) {\n              jiixAssociation.symbols.forEach(sym =>\n              {\n                this.model.removeSymbol(sym.id)\n                this.renderer.removeSymbol(sym.id)\n              })\n              this.model.addSymbol(symbolRecognized)\n              this.renderer.drawSymbol(symbolRecognized)\n            }\n          }\n          break\n        }\n        case JIIXELementType.Edge: {\n          let symbolRecognized: TIIRecognized | undefined\n          const jiixAssociation = getSymbolsAndStrokesAssociatedFromJIIXStrokeItems(el.kind === JIIXEdgeKind.PolyEdge ? el.edges.flatMap(e => e.items!) : el.items)\n          if (jiixAssociation.strokes.length) {\n            if (jiixAssociation.symbols.length === 1) {\n              const symAsso = jiixAssociation.symbols[0]\n              if (symAsso.type === SymbolType.Recognized &&\n                symAsso.strokes.length === jiixAssociation.strokes.length) {\n                return\n              }\n            }\n            switch (el.kind) {\n              case JIIXEdgeKind.Line: {\n                symbolRecognized = new IIRecognizedLine(jiixAssociation.strokes)\n                break\n              }\n              case JIIXEdgeKind.PolyEdge: {\n                symbolRecognized = new IIRecognizedPolyLine(jiixAssociation.strokes)\n                break\n              }\n              case JIIXEdgeKind.Arc: {\n                symbolRecognized = new IIRecognizedArc(jiixAssociation.strokes)\n                break\n              }\n              default:\n                this.logger.warn(\"synchronizeStrokesWithJIIX\", `Can not create recognized edge symbol, kind unknow: ${ el }`)\n                break\n            }\n            if (symbolRecognized) {\n              jiixAssociation.symbols.forEach(sym =>\n              {\n                this.model.removeSymbol(sym.id)\n                this.renderer.removeSymbol(sym.id)\n              })\n              this.model.addSymbol(symbolRecognized)\n              this.renderer.drawSymbol(symbolRecognized)\n            }\n          }\n          break\n        }\n        default:\n          this.logger.warn(\"synchronizeStrokesWithJIIX\", `Can not create recognized symbol, type unknow: ${ el }`)\n          break\n      }\n    })\n    // because model.export is emptied when you change symbols\n    this.model.mergeExport({ \"application/vnd.myscript.jiix\": jiix })\n    this.history.update(this.model)\n    this.event.emitSynchronized()\n  }\n\n  async removeSymbol(id: string, addToHistory = true): Promise<void>\n  {\n    this.logger.info(\"removeSymbol\", { id })\n    const symbol = this.model.getRootSymbol(id)\n    if (symbol) {\n      this.updateLayerState(false)\n      if (symbol.type === SymbolType.Group) {\n        const groupStrokeIds = symbol.extractStrokes().map(s => s.id)\n        symbol.removeChilds([id])\n        if (symbol.children.length) {\n          this.model.updateSymbol(symbol)\n          this.renderer.drawSymbol(symbol)\n          if (groupStrokeIds.includes(id)) {\n            this.recognizer.eraseStrokes([id])\n          }\n        }\n        else {\n          this.recognizer.eraseStrokes(groupStrokeIds)\n          this.model.removeSymbol(symbol.id)\n          this.renderer.removeSymbol(symbol.id)\n        }\n      }\n      else {\n        this.recognizer.eraseStrokes([id])\n        this.model.removeSymbol(symbol.id)\n        this.renderer.removeSymbol(symbol.id)\n      }\n      if (addToHistory) {\n        this.history.push(this.model, { erased: [symbol] })\n      }\n      this.updateLayerUI()\n    }\n    else {\n      this.renderer.removeSymbol(id)\n      this.recognizer.eraseStrokes([id])\n    }\n  }\n\n  async removeSymbols(ids: string[], addToHistory = true): Promise<TIISymbol[]>\n  {\n    this.logger.info(\"removeSymbol\", { ids })\n    const symbolsToRemove: TIISymbol[] = []\n    const symbolsToUpdate: TIISymbol[] = []\n    const strokesIds: string[] = []\n    ids.forEach(id =>\n    {\n      const sym = this.model.getRootSymbol(id)\n      if (sym) {\n        /** we remove root element */\n        if (sym.id === id) {\n          symbolsToRemove.push(sym)\n          switch (sym.type) {\n            case SymbolType.Stroke:\n              strokesIds.push(sym.id)\n              break\n            case SymbolType.Recognized:\n              strokesIds.push(...sym.strokes.map(s => s.id))\n              break\n            case SymbolType.Group:\n              strokesIds.push(...sym.extractStrokes().map(s => s.id))\n              break\n          }\n        }\n        else {\n          /** we want to remove child */\n          switch (sym.type) {\n            case SymbolType.Group: {\n              const gr = sym.clone()\n              strokesIds.push(...gr.extractStrokes().map(s => s.id).filter(id => ids.includes(id)))\n              gr.removeChilds(ids)\n              if (gr.children.length) {\n                symbolsToUpdate.push(gr)\n              }\n              else {\n                symbolsToRemove.push(gr)\n              }\n              break\n            }\n            case SymbolType.Recognized: {\n              strokesIds.push(id)\n              const ws = sym.clone()\n              ws.removeStrokes(ids)\n              if (ws.strokes.length) {\n                symbolsToUpdate.push(ws)\n              }\n              else {\n                symbolsToRemove.push(ws)\n              }\n              break\n            }\n          }\n\n        }\n      }\n    })\n    this.recognizer.eraseStrokes(strokesIds)\n    symbolsToRemove.forEach(s =>\n    {\n      this.model.removeSymbol(s.id)\n      this.renderer.removeSymbol(s.id)\n    })\n\n    symbolsToUpdate.forEach(s =>\n    {\n      this.model.updateSymbol(s)\n      this.renderer.drawSymbol(s)\n    })\n\n\n    if (addToHistory) {\n      const changes: TIIHistoryChanges = {}\n      if (symbolsToRemove.length || symbolsToUpdate.length) {\n        if (symbolsToRemove.length) {\n          changes.erased = symbolsToRemove\n        }\n        if (symbolsToUpdate.length) {\n          changes.updated = symbolsToUpdate\n        }\n        this.history.push(this.model, changes)\n        this.updateLayerUI()\n      }\n    }\n    this.updateLayerState(false)\n    return symbolsToRemove\n  }\n\n  select(ids: string[]): void\n  {\n    this.selector.removeSelectedGroup()\n    this.model.symbols.forEach(s =>\n    {\n      s.selected = ids.includes(s.id)\n      this.renderer.drawSymbol(s)\n    })\n    this.selector.drawSelectedGroup(this.model.symbolsSelected)\n    this.updateLayerUI()\n    this.event.emitSelected(this.model.symbolsSelected)\n  }\n\n  selectAll(): void\n  {\n    this.selector.removeSelectedGroup()\n    this.model.symbols.forEach(s =>\n    {\n      s.selected = true\n      this.renderer.drawSymbol(s)\n    })\n    this.selector.drawSelectedGroup(this.model.symbolsSelected)\n    this.updateLayerUI()\n    this.event.emitSelected(this.model.symbolsSelected)\n  }\n\n  unselectAll(): void\n  {\n    if (this.model.symbolsSelected.length) {\n      this.model.symbolsSelected.forEach(s =>\n      {\n        s.selected = false\n        this.renderer.drawSymbol(s)\n      })\n      this.selector.removeSelectedGroup()\n      this.updateLayerUI()\n      this.event.emitSelected(this.model.symbolsSelected)\n    }\n  }\n\n  async importPointEvents(partialStrokes: PartialDeep<IIStroke>[]): Promise<IIModel>\n  {\n    this.logger.info(\"importPointEvents\", { partialStrokes })\n    this.updateLayerState(false)\n    const strokes = convertPartialStrokesToOIStrokes(partialStrokes)\n    strokes.forEach(s =>\n    {\n      this.model.addSymbol(s)\n      this.renderer.drawSymbol(s)\n    })\n    this.recognizer.addStrokes(strokes, false)\n    this.history.push(this.model, { added: strokes })\n    this.logger.debug(\"importPointEvents\", this.model)\n    this.updateLayerUI()\n    this.event.emitImported(this.model.exports as TExport)\n    return this.model\n  }\n\n  protected triggerDownload(fileName: string, urlData: string): void\n  {\n    const downloadAnchorNode = document.createElement(\"a\")\n    downloadAnchorNode.setAttribute(\"href\", urlData)\n    downloadAnchorNode.setAttribute(\"download\", fileName)\n    document.body.appendChild(downloadAnchorNode)\n    downloadAnchorNode.click()\n    downloadAnchorNode.remove()\n  }\n\n  getSymbolsBounds(symbols: TIISymbol[], margin: number = SELECTION_MARGIN): Box\n  {\n    const box = Box.createFromBoxes(symbols.map(s => s.bounds))\n    box.x -= margin\n    box.y -= margin\n    box.width += margin * 2\n    box.height += margin * 2\n    return box\n  }\n\n  protected buildBlobFromSymbols(symbols: TIISymbol[], box: Box): Blob\n  {\n    const svgNode = SVGBuilder.createLayer(box)\n    symbols.forEach(s =>\n    {\n      const el = this.renderer.getElementById(s.id)?.cloneNode(true)\n      if (el) {\n        svgNode.appendChild(el)\n      }\n    })\n\n    const svgString = (new XMLSerializer()).serializeToString(svgNode)\n\n    return new Blob([svgString], {\n      type: \"image/svg+xml;charset=utf-8\"\n    })\n  }\n\n  protected getExportName(extension: string): string\n  {\n    const options: Intl.DateTimeFormatOptions = { year: \"numeric\", month: \"numeric\", day: \"numeric\", hour: \"2-digit\", minute: \"2-digit\", second: \"2-digit\" }\n    try {\n      return `iink-ts-${ new Date().toLocaleDateString(navigator.language, options) }.${ extension }`\n    }\n    catch {\n      return `iink-ts-${ new Date().toLocaleDateString(\"en-US\", options) }.${ extension }`\n    }\n  }\n\n  downloadAsSVG(selection = false)\n  {\n    const symbols = selection ? this.model.symbolsSelected : this.model.symbols\n    const box = this.getSymbolsBounds(symbols)\n    const svgBlob = this.buildBlobFromSymbols(symbols, box)\n    const url = URL.createObjectURL(svgBlob)\n    this.triggerDownload(this.getExportName(\"svg\"), url)\n  }\n\n  downloadAsPNG(selection = false)\n  {\n    const symbols = selection ? this.model.symbolsSelected : this.model.symbols\n    const box = this.getSymbolsBounds(symbols)\n    const svgBlob = this.buildBlobFromSymbols(symbols, box)\n\n    const url = URL.createObjectURL(svgBlob)\n    const image = new Image(box.width, box.height)\n    image.src = url\n    image.onload = () =>\n    {\n      const canvas = document.createElement(\"canvas\")\n      canvas.width = image.width\n      canvas.height = image.height\n\n      const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D\n      ctx.drawImage(image, 0, 0)\n      URL.revokeObjectURL(url)\n\n      const imgURI = canvas\n        .toDataURL(\"image/png\")\n        .replace(\"image/png\", \"image/octet-stream\")\n\n      this.triggerDownload(this.getExportName(\"png\"), imgURI)\n    }\n  }\n\n  downloadAsJson(selection = false)\n  {\n    const symbolsToExport = selection ? this.model.symbolsSelected : this.model.symbols\n    const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(symbolsToExport, null, 2))\n    this.triggerDownload(this.getExportName(\"json\"), dataStr)\n  }\n\n  extractStrokesFromSymbols(symbols: TIISymbol[] | undefined): IIStroke[]\n  {\n    if (!symbols?.length) return []\n    const strokes: IIStroke[] = []\n    symbols.forEach(s =>\n    {\n      switch (s.type) {\n        case SymbolType.Stroke:\n          strokes.push(s)\n          break\n        case SymbolType.Recognized:\n          strokes.push(...s.strokes)\n          break\n        case SymbolType.Group:\n          strokes.push(...s.extractStrokes())\n          break\n      }\n    })\n    return strokes\n  }\n\n  extractTextsFromSymbols(symbols: TIISymbol[] | undefined): IIText[]\n  {\n    if (!symbols?.length) return []\n    const texts: IIText[] = []\n    symbols.forEach(s =>\n    {\n      switch (s.type) {\n        case SymbolType.Text:\n          texts.push(s)\n          break\n        case SymbolType.Group:\n          texts.push(...s.extractText())\n          break\n      }\n    })\n    return texts\n  }\n\n  protected extractBackendChanges(changes: TIIHistoryChanges): TIIHistoryBackendChanges\n  {\n    const backendChanges: TIIHistoryBackendChanges = {}\n    backendChanges.added = this.extractStrokesFromSymbols(changes.added)\n    backendChanges.erased = this.extractStrokesFromSymbols(changes.erased)\n\n    const updated = this.extractStrokesFromSymbols(changes.updated)\n\n    const oldStrokes = updated.concat(this.extractStrokesFromSymbols(changes.replaced?.oldSymbols))\n    const newStrokes = updated.concat(this.extractStrokesFromSymbols(changes.replaced?.newSymbols))\n    if (oldStrokes.length && newStrokes.length) {\n      backendChanges.replaced = {\n        oldStrokes,\n        newStrokes\n      }\n    }\n    else {\n      backendChanges.added.push(...newStrokes)\n      backendChanges.erased.push(...oldStrokes)\n    }\n\n    if (changes.matrix) {\n      backendChanges.matrix = {\n        strokes: this.extractStrokesFromSymbols(changes.matrix.symbols),\n        matrix: changes.matrix.matrix,\n      }\n    }\n\n    if (changes.translate?.length) {\n      backendChanges.translate = []\n      changes.translate.forEach(tr =>\n      {\n        const strokes = this.extractStrokesFromSymbols(tr.symbols)\n        if (strokes.length) {\n          backendChanges.translate!.push({\n            strokes,\n            tx: tr.tx,\n            ty: tr.ty\n          })\n        }\n      })\n    }\n    if (changes.scale?.length) {\n      backendChanges.scale = []\n      changes.scale.forEach(tr =>\n      {\n        const strokes = this.extractStrokesFromSymbols(tr.symbols)\n        if (strokes.length) {\n          backendChanges.scale!.push({\n            strokes,\n            origin: tr.origin,\n            scaleX: tr.scaleX,\n            scaleY: tr.scaleY\n          })\n        }\n      })\n    }\n    if (changes.rotate?.length) {\n      backendChanges.rotate = []\n      changes.rotate.forEach(tr =>\n      {\n        const strokes = this.extractStrokesFromSymbols(tr.symbols)\n        if (strokes.length) {\n          backendChanges.rotate!.push({\n            strokes,\n            center: tr.center,\n            angle: tr.angle\n          })\n        }\n      })\n    }\n    return backendChanges\n  }\n\n  async undo(): Promise<IIModel>\n  {\n    this.logger.info(\"undo\")\n    if (this.history.context.canUndo) {\n      this.updateLayerState(false)\n      this.unselectAll()\n      const previousStackItem = this.history.undo()\n      const modifications = previousStackItem.model.extractDifferenceSymbols(this.model)\n      this.#model = previousStackItem.model.clone()\n      this.logger.debug(\"undo\", { previousStackItem })\n      const actionsToBackend = this.extractBackendChanges(previousStackItem.changes)\n      modifications.removed.forEach(s => this.renderer.removeSymbol(s.id))\n      modifications.added.forEach(s => this.renderer.drawSymbol(s))\n      if (\n        actionsToBackend.added?.length ||\n        actionsToBackend.erased?.length ||\n        actionsToBackend.replaced ||\n        actionsToBackend.matrix ||\n        actionsToBackend.translate?.length ||\n        actionsToBackend.scale?.length ||\n        actionsToBackend.rotate?.length\n      ) {\n        await this.recognizer.undo(actionsToBackend)\n      }\n      this.updateLayerUI()\n    }\n    return this.model\n  }\n\n  async redo(): Promise<IIModel>\n  {\n    this.logger.info(\"redo\")\n\n    if (this.history.context.canRedo) {\n      this.updateLayerState(false)\n      this.unselectAll()\n      const nextStackItem = this.history.redo()\n      const modifications = nextStackItem.model.extractDifferenceSymbols(this.model)\n      this.#model = nextStackItem.model.clone()\n      this.logger.debug(\"redo\", { modifications })\n      const actionsToBackend = this.extractBackendChanges(nextStackItem.changes)\n      modifications.removed.forEach(s => this.renderer.removeSymbol(s.id))\n      modifications.added.forEach(s => this.renderer.drawSymbol(s))\n      if (\n        actionsToBackend.added?.length ||\n        actionsToBackend.erased?.length ||\n        actionsToBackend.replaced ||\n        actionsToBackend.matrix ||\n        actionsToBackend.translate?.length ||\n        actionsToBackend.scale?.length ||\n        actionsToBackend.rotate?.length\n      ) {\n        await this.recognizer.redo(actionsToBackend)\n      }\n\n      this.updateLayerUI()\n    }\n    return this.model\n  }\n\n  async export(mimeTypes?: string[]): Promise<IIModel>\n  {\n    try {\n      this.logger.info(\"export\", { mimeTypes })\n      const exports = await this.recognizer.export(mimeTypes)\n      this.model.mergeExport(exports as TExport)\n    }\n    catch (error) {\n      this.logger.error(\"export\", { error })\n      this.manageError(error as Error)\n      throw error\n    }\n    return this.model\n  }\n\n  async convert(): Promise<void>\n  {\n    await this.convertSymbols()\n  }\n\n  async convertSymbols(symbols?: TIISymbol[]): Promise<void>\n  {\n    try {\n      this.updateLayerState(false)\n      await this.converter.apply(symbols)\n      this.event.emitConverted(this.model.converts as TExport)\n    }\n    catch (error) {\n      this.logger.error(\"convert\", error)\n      this.manageError(error as Error)\n      throw error\n    }\n    finally {\n      this.updateLayerUI()\n    }\n  }\n\n  async waitForIdle(): Promise<void>\n  {\n    return this.recognizer.waitForIdle()\n  }\n\n  async resize({ height, width }: { height?: number, width?: number } = {}): Promise<void>\n  {\n    try {\n      this.logger.info(\"resize\", { height, width })\n      const compStyles = window.getComputedStyle(this.layers.root)\n      height = height || Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.configuration.rendering.minHeight)\n      width = width || Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.configuration.rendering.minWidth)\n\n      this.updateLayerState(false)\n      this.model.height = height\n      this.model.width = width\n      this.renderer.resize(height, width)\n      this.updateLayerUI(50)\n      this.updateLayerState(true)\n    } catch (error) {\n      this.manageError(error as Error)\n    }\n  }\n\n  async clear(): Promise<void>\n  {\n    try {\n      this.logger.info(\"clear\")\n      this.updateLayerState(false)\n      if (this.model.symbols.length) {\n        this.selector.removeSelectedGroup()\n        const erased = this.model.symbols\n        this.renderer.clear()\n        this.model.clear()\n        this.history.push(this.model, { erased })\n        this.recognizer.clear()\n        this.event.emitSelected(this.model.symbolsSelected)\n      }\n      this.updateLayerUI()\n      this.event.emitCleared()\n    } catch (error) {\n      this.manageError(error as Error)\n    }\n  }\n\n  async destroy(): Promise<void>\n  {\n    this.logger.info(\"destroy\")\n    this.eraser.detach()\n    this.selector.detach()\n    this.move.detach()\n    this.writer.detach()\n\n    this.renderer.destroy()\n    this.menu.destroy()\n    this.recognizer.destroy()\n    this.model.clear()\n    this.history.clear()\n    return Promise.resolve()\n  }\n}\n","/**\n * @group Editor\n * @remarks\n * Configure when the action is triggered.\n *\n * POINTER_UP :   Action is triggered on every PenUP.\n *                This is the recommended mode for CDK V3 WebSocket recognitions.\n *\n * QUIET_PERIOD : Action is triggered after a quiet period in milli-seconds on every pointer up.\n *                The value is set to 1000 for example recognition will be triggered when the user stops writing for 1 seconds.\n *                This is the recommended mode for all REST discoveries.\n *\n * DEMAND :       Action is triggered on external demande\n */\nexport type TIEditorTriggerConfiguration = {\n    exportContent: \"QUIET_PERIOD\" | \"POINTER_UP\" | \"DEMAND\"\n    exportContentDelay: number\n    resizeTriggerDelay: number\n  }\n\n  /**\n   * @group Editor\n   * @source\n   */\n  export const DefaultIEditorTriggerConfiguration: TIEditorTriggerConfiguration = {\n    exportContent: \"QUIET_PERIOD\",\n    exportContentDelay: 1000,\n    resizeTriggerDelay: 100\n  }\n","import { DefaultGrabberConfiguration, TGrabberConfiguration } from \"../grabber\"\nimport { DefaultHistoryConfiguration, THistoryConfiguration } from \"../history\"\nimport { DefaultLoggerConfiguration, TLoggerConfiguration } from \"../logger\"\nimport { DefaultRecognizerHTTPV1Configuration, RecognizerHTTPV1Configuration, TRecognitionHTTPV1Configuration, TRecognizerHTTPV1Configuration, TServerHTTPConfiguration } from \"../recognizer\"\nimport { DefaultRendererConfiguration, TRendererConfiguration } from \"../renderer\"\nimport { DefaultTheme, TPenStyle, TTheme } from \"../style\"\nimport { mergeDeep, PartialDeep } from \"../utils\"\nimport { TEditorConfiguration } from \"./AbstractEditor\"\nimport { DefaultIEditorTriggerConfiguration, TIEditorTriggerConfiguration } from \"./IEditorTriggerConfiguration\"\n\n\n/**\n * @group Editor\n */\nexport type TInkEditorDeprecatedConfiguration = TEditorConfiguration & TRecognizerHTTPV1Configuration & {\n  rendering: TRendererConfiguration\n  \"undo-redo\": THistoryConfiguration\n  grabber: TGrabberConfiguration\n  triggers: TIEditorTriggerConfiguration\n  logger: TLoggerConfiguration\n  penStyle: TPenStyle,\n  penStyleClasses?: string\n  theme: TTheme\n}\n\n/**\n * @group Editor\n * @source\n */\nexport const DefaultInkEditorDeprecatedConfiguration: TInkEditorDeprecatedConfiguration = {\n  server: DefaultRecognizerHTTPV1Configuration.server,\n  recognition: DefaultRecognizerHTTPV1Configuration.recognition,\n  rendering: DefaultRendererConfiguration,\n  grabber: DefaultGrabberConfiguration,\n  triggers: DefaultIEditorTriggerConfiguration,\n  \"undo-redo\": DefaultHistoryConfiguration,\n  logger: DefaultLoggerConfiguration,\n  penStyle: {},\n  theme: DefaultTheme\n}\n\n/**\n * @group Editor\n */\nexport class InkEditorDeprecatedConfiguration implements TInkEditorDeprecatedConfiguration\n{\n  server: TServerHTTPConfiguration\n  recognition: TRecognitionHTTPV1Configuration\n  rendering: TRendererConfiguration\n  \"undo-redo\": THistoryConfiguration\n  grabber: TGrabberConfiguration\n  triggers: TIEditorTriggerConfiguration\n  logger: TLoggerConfiguration\n  penStyle: TPenStyle\n  penStyleClasses?: string\n  theme: TTheme\n\n  constructor(configuration?: PartialDeep<TInkEditorDeprecatedConfiguration>)\n  {\n    const { server, recognition } = new RecognizerHTTPV1Configuration(configuration)\n    this.server = server\n    this.recognition = recognition\n    this.rendering = mergeDeep({}, DefaultInkEditorDeprecatedConfiguration.rendering, configuration?.rendering)\n    this.grabber = mergeDeep({}, DefaultInkEditorDeprecatedConfiguration.grabber, configuration?.grabber)\n    this[\"undo-redo\"] = mergeDeep({}, DefaultInkEditorDeprecatedConfiguration[\"undo-redo\"], configuration?.[\"undo-redo\"])\n    this.triggers = mergeDeep({}, DefaultInkEditorDeprecatedConfiguration.triggers, configuration?.triggers)\n    this.logger = mergeDeep({}, DefaultInkEditorDeprecatedConfiguration.logger, configuration?.logger)\n    this.penStyle = mergeDeep({}, DefaultInkEditorDeprecatedConfiguration.penStyle, configuration?.penStyle)\n    this.penStyleClasses = configuration?.penStyleClasses || this.penStyleClasses\n    this.theme = mergeDeep({}, DefaultInkEditorDeprecatedConfiguration.theme, configuration?.theme)\n  }\n}\n","import { EditorTool } from \"../Constants\"\nimport { PointerEventGrabber, PointerInfo } from \"../grabber\"\nimport { Model, TExport } from \"../model\"\nimport { Stroke, TStroke, TPointer } from \"../symbol\"\nimport { RecognizerHTTPV1, TConverstionState } from \"../recognizer\"\nimport { CanvasRenderer } from \"../renderer\"\nimport { DefaultPenStyle, StyleManager, TPenStyle, TTheme } from \"../style\"\nimport { HistoryManager } from \"../history\"\nimport { DeferredPromise, PartialDeep } from \"../utils\"\nimport { AbstractEditor, EditorOptionsBase } from \"./AbstractEditor\"\nimport { InkEditorDeprecatedConfiguration, TInkEditorDeprecatedConfiguration } from \"./InkEditorDeprecatedConfiguration\"\n\n/**\n * @group Editor\n */\nexport type TInkEditorDeprecatedOptions = PartialDeep<EditorOptionsBase &\n{\n  configuration: TInkEditorDeprecatedConfiguration\n}> &\n{\n  override?: {\n    grabber?: PointerEventGrabber\n    recognizer?: RecognizerHTTPV1\n  }\n}\n\n/**\n * @group Editor\n * @deprecated Use {@link InkEditor} instead.\n */\nexport class InkEditorDeprecated extends AbstractEditor\n{\n  #configuration: InkEditorDeprecatedConfiguration\n  #model: Model\n  #resizeTimer?: ReturnType<typeof setTimeout>\n  #exportTimer?: ReturnType<typeof setTimeout>\n\n  grabber: PointerEventGrabber\n  renderer: CanvasRenderer\n  recognizer: RecognizerHTTPV1\n  history: HistoryManager\n  styleManager: StyleManager\n  #tool: EditorTool = EditorTool.Write\n\n  constructor(rootElement: HTMLElement, options?: TInkEditorDeprecatedOptions)\n  {\n    super(rootElement, options)\n\n    this.#configuration = new InkEditorDeprecatedConfiguration(options?.configuration)\n    this.styleManager = new StyleManager(options?.configuration?.penStyle, options?.configuration?.theme)\n\n    if (options?.override?.grabber) {\n      const CustomGrabber = options.override.grabber as unknown as typeof PointerEventGrabber\n      this.grabber = new CustomGrabber(this.#configuration.grabber)\n    }\n    else {\n      this.grabber = new PointerEventGrabber(this.#configuration.grabber)\n    }\n    this.grabber.onPointerDown = this.onPointerDown.bind(this)\n    this.grabber.onPointerMove = this.onPointerMove.bind(this)\n    this.grabber.onPointerUp = this.onPointerUp.bind(this)\n\n    if (options?.override?.recognizer) {\n      const CustomRecognizer = options.override.recognizer as unknown as typeof RecognizerHTTPV1\n      this.recognizer = new CustomRecognizer(this.#configuration)\n    }\n    else {\n      this.recognizer = new RecognizerHTTPV1(this.#configuration)\n    }\n    this.renderer = new CanvasRenderer(this.#configuration.rendering)\n\n    this.tool = EditorTool.Write\n    this.#model = new Model()\n    this.history = new HistoryManager(this.#configuration[\"undo-redo\"], this.event)\n  }\n\n  protected onPointerDown(info: PointerInfo): void\n  {\n    this.logger.info(\"onPointerDown\", { tool: this.tool, info })\n    const style: TPenStyle = Object.assign({}, this.theme?.ink, this.currentPenStyle)\n    switch (this.tool) {\n      case EditorTool.Erase: {\n        if (this.model.removeStrokesFromPoint(info.pointer).length > 0) {\n          this.renderer.drawModel(this.model)\n        }\n        break\n      }\n      case EditorTool.Write:\n        this.model.initCurrentStroke(info.pointer, info.pointerType, style)\n        this.drawCurrentStroke()\n        break\n      default:\n        this.logger.warn(\"#onPointerDown\", `onPointerDown tool unknow: \"${ this.tool }\"`)\n        break\n    }\n  }\n\n  protected onPointerMove(info: PointerInfo): void\n  {\n    this.logger.info(\"onPointerMove\", { tool: this.tool, info })\n    switch (this.tool) {\n      case EditorTool.Erase: {\n        if (this.model.removeStrokesFromPoint(info.pointer).length > 0) {\n          this.renderer.drawModel(this.model)\n        }\n        break\n      }\n      case EditorTool.Write:\n        this.model.appendToCurrentStroke(info.pointer)\n        this.drawCurrentStroke()\n        break\n      default:\n        this.logger.warn(\"#onPointerMove\", `onPointerMove tool unknow: \"${ this.tool }\"`)\n        break\n    }\n  }\n\n  protected async onPointerUp(info: PointerInfo): Promise<void>\n  {\n    try {\n      this.logger.info(\"onPointerUp\", { tool: this.tool, info })\n      switch (this.tool) {\n        case EditorTool.Erase:\n          this.model.removeStrokesFromPoint(info.pointer)\n          if (this.history.stack.at(-1)?.modificationDate !== this.model.modificationDate) {\n            await this.updateModelRendering()\n          }\n          break\n        case EditorTool.Write:\n          this.model.endCurrentStroke(info.pointer)\n          await this.updateModelRendering()\n          break\n        default:\n          this.logger.warn(\"#onPointerUp\", `onPointerUp tool unknow: \"${ this.tool }\"`)\n          break\n      }\n    } catch (error) {\n      this.layers.showMessageError(error as Error)\n      this.event.emitError(error as Error)\n      throw error\n    }\n  }\n\n  get initializationPromise(): Promise<void>\n  {\n    return Promise.resolve()\n  }\n\n  get tool(): EditorTool\n  {\n    return this.#tool\n  }\n  set tool(i: EditorTool)\n  {\n    this.#tool = i\n    this.setCursorStyle()\n  }\n\n  protected setCursorStyle(): void\n  {\n    switch (this.tool) {\n      case EditorTool.Erase:\n        this.layers.root.classList.remove(\"draw\")\n        this.layers.root.classList.add(\"erase\")\n        break\n      default:\n        this.layers.root.classList.add(\"draw\")\n        this.layers.root.classList.remove(\"erase\")\n        break\n    }\n  }\n\n  get model(): Model\n  {\n    return this.#model\n  }\n\n  get currentPenStyle(): TPenStyle\n  {\n    return this.styleManager.currentPenStyle\n  }\n\n  get penStyle(): TPenStyle\n  {\n    return this.styleManager.penStyle\n  }\n  set penStyle(penStyle: TPenStyle | undefined)\n  {\n    this.logger.info(\"setPenStyle\", { penStyle })\n    this.styleManager.setPenStyle(penStyle)\n  }\n\n  get penStyleClasses(): string\n  {\n    return this.styleManager.penStyleClasses\n  }\n  set penStyleClasses(penStyleClasses: string | undefined)\n  {\n    this.logger.info(\"setPenStyleClasses\", { penStyleClasses })\n    this.styleManager.setPenStyleClasses(penStyleClasses)\n  }\n\n  get theme(): TTheme\n  {\n    return this.styleManager.theme\n  }\n  set theme(theme: PartialDeep<TTheme>)\n  {\n    this.logger.info(\"setTheme\", { theme })\n    this.styleManager.setTheme(theme)\n  }\n\n  get configuration(): InkEditorDeprecatedConfiguration\n  {\n    return this.#configuration\n  }\n\n  async initialize(): Promise<void>\n  {\n    try {\n      this.logger.info(\"initialize\")\n      this.layers.render()\n      this.layers.showLoader()\n\n      const compStyles = window.getComputedStyle(this.layers.root)\n      this.model.width = Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.#configuration.rendering.minWidth)\n      this.model.height = Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.#configuration.rendering.minHeight)\n      this.history.push(this.model)\n      this.layers.rendering.classList.add(this.configuration.recognition.type.toLowerCase().replace(\" \", \"-\"))\n      this.renderer.init(this.layers.rendering, { x: 50, y: 50 })\n      this.grabber.attach(this.layers.rendering)\n    } catch (error) {\n      this.logger.error(\"initialize\", error)\n      this.layers.showMessageError(error as Error)\n      throw error\n    }\n    finally {\n      this.logger.debug(\"initialize\", \"finally\")\n      this.layers.hideLoader()\n      this.layers.updateState(true)\n    }\n  }\n\n  drawCurrentStroke(): void\n  {\n    this.logger.debug(\"drawCurrentStroke\", { stroke: this.model.currentSymbol })\n    this.renderer.drawPendingStroke(this.model.currentSymbol)\n  }\n\n  async updateModelRendering(): Promise<Model>\n  {\n    this.logger.info(\"updateModelRendering\")\n    this.renderer.drawModel(this.model)\n    const deferred = new DeferredPromise<Model>()\n    this.history.push(this.model)\n    if (this.#configuration.triggers.exportContent !== \"DEMAND\") {\n      clearTimeout(this.#exportTimer)\n      let currentModel = this.model.clone()\n      this.#exportTimer = setTimeout(async () =>\n      {\n        try {\n          currentModel = await this.recognizer.export(currentModel)\n          this.history.updateStack(currentModel)\n          if (this.model.modificationDate === currentModel.modificationDate) {\n            this.model.exports = currentModel.exports\n          }\n          deferred.resolve(this.model)\n        } catch (error) {\n          this.logger.error(\"updateModelRendering\", { error })\n          this.event.emitError(error as Error)\n          deferred.reject(error as Error)\n        }\n      }, this.#configuration.triggers.exportContent === \"QUIET_PERIOD\" ? this.#configuration.triggers.exportContentDelay : 0)\n    } else {\n      deferred.resolve(this.model)\n    }\n    await deferred.promise\n    this.event.emitExported(this.model.exports as TExport)\n    this.logger.debug(\"updateModelRendering\", this.model.exports)\n    return deferred.promise\n  }\n\n  async export(mimeTypes?: string[]): Promise<Model>\n  {\n    this.logger.info(\"export\", { mimeTypes })\n    const newModel = await this.recognizer.export(this.model.clone(), mimeTypes)\n    if (this.model.modificationDate === newModel.modificationDate) {\n      this.model.mergeExport(newModel.exports as TExport)\n    }\n    this.history.updateStack(newModel)\n    this.event.emitExported(this.model.exports as TExport)\n    this.logger.debug(\"export\", this.model)\n    return this.model\n  }\n\n  async convert(params?: { conversionState?: TConverstionState, mimeTypes?: string[] }): Promise<Model>\n  {\n    this.logger.info(\"convert\", { params })\n    const newModel = await this.recognizer.convert(this.model, params?.conversionState, params?.mimeTypes)\n    Object.assign(this.#model, newModel)\n    this.event.emitConverted(this.model.converts as TExport)\n    this.logger.debug(\"convert\", this.model)\n    return this.model\n  }\n\n  async importPointEvents(strokes: PartialDeep<TStroke>[]): Promise<Model>\n  {\n    const errors: string[] = []\n    strokes.forEach((s, strokeIndex) =>\n    {\n      let flag = true\n      const stroke = new Stroke(s.style || DefaultPenStyle, s.pointerType)\n      if (s.id) stroke.id = s.id\n      if (!s.pointers?.length) {\n        errors.push(`stroke ${ strokeIndex + 1 } has not pointers`)\n        flag = false\n        return\n      }\n      s.pointers?.forEach((pp, pIndex) =>\n      {\n        if (!pp) {\n          errors.push(`stroke ${ strokeIndex + 1 } has no pointer at ${ pIndex }`)\n          flag = false\n          return\n        }\n        const pointer: TPointer = {\n          p: pp.p || 1,\n          t: pp.t || pIndex,\n          x: 0,\n          y: 0\n        }\n        if (pp?.x == undefined || pp?.x == null) {\n          errors.push(`stroke ${ strokeIndex + 1 } has no x at pointer at ${ pIndex }`)\n          flag = false\n          return\n        }\n        else {\n          pointer.x = pp.x\n        }\n        if (pp?.y == undefined || pp?.y == null) {\n          errors.push(`stroke ${ strokeIndex + 1 } has no y at pointer at ${ pIndex }`)\n          flag = false\n          return\n        }\n        else {\n          pointer.y = pp.y\n        }\n        if (flag) {\n          stroke.pointers.push(pointer)\n        }\n      })\n      if (flag) {\n        this.model.addStroke(stroke)\n      }\n    })\n\n    if (errors.length) {\n      this.event.emitError(new Error(errors.join(\"\\n\")))\n    }\n    try {\n      const newModel = await this.updateModelRendering()\n      Object.assign(this.#model, newModel)\n      this.event.emitImported(this.model.exports as TExport)\n      return this.model\n    } catch (error) {\n      this.event.emitError(error as Error)\n      throw error as Error\n    }\n  }\n  async resize({ height, width }: { height?: number, width?: number } = {}): Promise<void>\n  {\n    this.logger.info(\"resize\", { height, width })\n    const deferredResize = new DeferredPromise<Model>()\n    const compStyles = window.getComputedStyle(this.layers.root)\n    this.model.height = height || Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.configuration.rendering.minHeight)\n    this.model.width = width || Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.configuration.rendering.minWidth)\n    this.renderer.resize(this.model)\n    if (this.model.symbols.length) {\n      clearTimeout(this.#resizeTimer)\n      this.#resizeTimer = setTimeout(async () =>\n      {\n        const resizeModel = await this.recognizer.resize(this.model)\n        deferredResize.resolve(resizeModel)\n      }, this.#configuration.triggers.resizeTriggerDelay)\n    } else {\n      deferredResize.resolve(this.model)\n    }\n    this.#model = await deferredResize.promise\n    this.logger.debug(\"resize\", { model: this.model })\n    this.event.emitExported(this.model.exports as TExport)\n  }\n\n  async undo(): Promise<void>\n  {\n    this.logger.info(\"undo\")\n    this.#model = this.history.undo() as Model\n    this.renderer.drawModel(this.#model)\n    this.#model = await this.recognizer.export(this.#model)\n    this.history.updateStack(this.#model)\n    this.event.emitExported(this.#model.exports as TExport)\n    this.logger.debug(\"undo\", this.#model)\n  }\n\n  async redo(): Promise<void>\n  {\n    this.logger.info(\"redo\")\n    this.#model = this.history.redo() as Model\n    this.renderer.drawModel(this.#model)\n    this.#model = await this.recognizer.export(this.#model)\n    this.history.updateStack(this.#model)\n    this.event.emitExported(this.#model.exports as TExport)\n    this.logger.debug(\"redo\", this.#model)\n  }\n\n  async clear(): Promise<void>\n  {\n    this.logger.info(\"clear\")\n    this.model.clear()\n    this.history.push(this.model)\n    this.renderer.drawModel(this.model)\n    this.event.emitExported(this.model.exports as TExport)\n    this.event.emitCleared()\n    this.logger.debug(\"clear\", this.model)\n  }\n\n  async destroy(): Promise<void>\n  {\n    this.logger.info(\"destroy\")\n    this.event.removeAllListeners()\n    this.grabber.detach()\n    this.layers.destroy()\n    this.renderer.destroy()\n    return Promise.resolve()\n  }\n}\n","import style from \"./InteractiveInkSSRSmartGuide.css\"\nimport { InteractiveInkSSREditor } from \"../editor\"\nimport { LoggerCategory, LoggerManager } from \"../logger\"\nimport { ExportType, TJIIXExport, TJIIXWord } from \"../model\"\nimport { convertMillimeterToPixel, createUUID } from \"../utils\"\nimport { TMarginConfiguration } from \"../recognizer\"\n\n/**\n * @group InteractiveInkSSRSmartGuide\n */\nexport class InteractiveInkSSRSmartGuide\n{\n  uuid: string\n  #smartGuideElement!: HTMLDivElement\n  #wrapperElement!: HTMLDivElement\n  #prompterContainerElement!: HTMLDivElement\n  #prompterTextElement!: HTMLDivElement\n  #ellipsisElement!: HTMLDivElement\n  #tagElement!: HTMLDivElement\n  #candidatesElement!: HTMLDivElement\n  #menuElement!: HTMLDivElement\n  #convertElement!: HTMLButtonElement\n  #copyElement!: HTMLButtonElement\n  #deleteElement!: HTMLButtonElement\n  #isMenuOpen!: boolean\n  editor: InteractiveInkSSREditor\n  margin: TMarginConfiguration\n  jiix?: TJIIXExport\n  lastWord?: TJIIXWord\n  wordToChange?: TJIIXWord\n  #logger = LoggerManager.getLogger(LoggerCategory.SMARTGUIDE)\n\n  constructor(editor: InteractiveInkSSREditor)\n  {\n    this.#logger.info(\"constructor\")\n    this.uuid = createUUID()\n    this.editor = editor\n    this.margin = {\n      bottom: 0,\n      left: 0,\n      right: 0,\n      top: 0\n    }\n    this.#createRootElement()\n    this.#createWrapperElement()\n    this.#createPrompterContainerElement()\n    this.#createPrompterTextElement()\n    this.#createEllipsisElement()\n    this.#createTagElement()\n    this.#createCandidatesElement()\n    this.#createMoreMenuElement()\n    this.#createConvertElement()\n    this.#createCopyElement()\n    this.#createDeleteElement()\n  }\n\n  #createRootElement(): void\n  {\n    this.#smartGuideElement = document.createElement(\"div\")\n    this.#smartGuideElement.id = `smartguide-${ this.uuid }`\n    this.#smartGuideElement.classList.add(\"smartguide\")\n    this.#smartGuideElement.addEventListener(\"pointerdown\", e => {\n      e.preventDefault()\n      e.stopPropagation()\n    })\n  }\n\n  #createWrapperElement(): void\n  {\n    this.#wrapperElement = document.createElement(\"div\")\n    this.#wrapperElement.id = `smartguide-wrapper-${ this.uuid }`\n    this.#wrapperElement.classList.add(\"smartguide-wrapper\")\n  }\n\n  #createPrompterContainerElement(): void\n  {\n    this.#prompterContainerElement = document.createElement(\"div\")\n    this.#prompterContainerElement.id = `prompter-container-${ this.uuid }`\n    this.#prompterContainerElement.classList.add(\"prompter-container\")\n  }\n\n  #createPrompterTextElement(): void\n  {\n    this.#prompterTextElement = document.createElement(\"div\")\n    this.#prompterTextElement.id = `prompter-text-${ this.uuid }`\n    this.#prompterTextElement.classList.add(\"prompter-text\")\n    this.#prompterTextElement.setAttribute(\"touch-action\", \"none\")\n  }\n\n  #createEllipsisElement(): void\n  {\n    this.#ellipsisElement = document.createElement(\"div\")\n    this.#ellipsisElement.id = `ellipsis-${ this.uuid }`\n    this.#ellipsisElement.classList.add(\"ellipsis\")\n    this.#ellipsisElement.innerHTML = \"...\"\n  }\n\n  #createTagElement(): void\n  {\n    this.#tagElement = document.createElement(\"div\")\n    this.#tagElement.id = `tag-icon-${ this.uuid }`\n    this.#tagElement.classList.add(\"tag-icon\")\n    this.#tagElement.innerHTML = \"&#182;\"\n  }\n\n  #createCandidatesElement(): void\n  {\n    this.#candidatesElement = document.createElement(\"div\")\n    this.#candidatesElement.id = `candidates-${ this.uuid }`\n    this.#candidatesElement.classList.add(\"candidates\")\n  }\n\n  #createMoreMenuElement(): void\n  {\n    this.#menuElement = document.createElement(\"div\")\n    this.#menuElement.id = `more-menu-${ this.uuid }`\n    this.#menuElement.classList.add(\"more-menu\")\n  }\n\n  #createConvertElement(): void\n  {\n    this.#convertElement = document.createElement(\"button\")\n    this.#convertElement.id = `convert-${ this.uuid }`\n    this.#convertElement.classList.add(\"options-label-button\")\n    this.#convertElement.innerHTML = \"Convert\"\n  }\n\n  #createCopyElement(): void\n  {\n    this.#copyElement = document.createElement(\"button\")\n    this.#copyElement.id = `copy-${ this.uuid }`\n    this.#copyElement.classList.add(\"options-label-button\")\n    this.#copyElement.innerHTML = \"Copy\"\n  }\n\n  #createDeleteElement(): void\n  {\n    this.#deleteElement = document.createElement(\"button\")\n    this.#deleteElement.id = `delete-${ this.uuid }`\n    this.#deleteElement.classList.add(\"options-label-button\")\n    this.#deleteElement.innerHTML = \"Delete\"\n  }\n\n  init(domElement: HTMLElement, margin: TMarginConfiguration): void\n  {\n    this.#logger.info(\"init\", { domElement, margin })\n\n    const styleElement = document.createElement(\"style\")\n    styleElement.appendChild(document.createTextNode(style as string))\n    domElement.appendChild(styleElement)\n\n\n    domElement.appendChild(this.#smartGuideElement)\n    this.#smartGuideElement.appendChild(this.#wrapperElement)\n\n    this.#wrapperElement.appendChild(this.#tagElement)\n\n    this.#prompterContainerElement.appendChild(this.#prompterTextElement)\n    this.#wrapperElement.appendChild(this.#prompterContainerElement)\n\n    this.#wrapperElement.appendChild(this.#ellipsisElement)\n\n    this.#menuElement.appendChild(this.#convertElement)\n    this.#menuElement.appendChild(this.#copyElement)\n    this.#menuElement.appendChild(this.#deleteElement)\n    this.#menuElement.classList.add(\"close\")\n    this.#wrapperElement.appendChild(this.#menuElement)\n    this.#isMenuOpen = false\n\n    this.#candidatesElement.style.display = \"none\"\n    this.#wrapperElement.appendChild(this.#candidatesElement)\n    this.margin = margin\n    this.#addListeners()\n\n    this.resize()\n  }\n\n  #showCandidates = (target: HTMLElement) =>\n  {\n    this.#logger.info(\"showCandidates\", { target })\n    const wordId = parseInt(target.id.replace(\"word-\", \"\").replace(this.uuid, \"\"))\n    const words = this.jiix?.words as TJIIXWord[]\n    this.wordToChange = words[wordId]\n    if (this.wordToChange) {\n      this.wordToChange.id = wordId.toString()\n      this.#candidatesElement.innerHTML = \"\"\n      if (this.wordToChange?.candidates) {\n        this.#candidatesElement.style.display = \"flex\"\n        this.wordToChange.candidates.forEach((word, index) =>\n        {\n          if (this.wordToChange?.label === word) {\n            this.#candidatesElement.innerHTML += `<span id=\"cdt-${ index }${ this.uuid }\" class=\"selected-word\">${ word }</span>`\n          } else {\n            this.#candidatesElement.innerHTML += `<span id=\"cdt-${ index }${ this.uuid }\">${ word }</span>`\n          }\n        })\n\n        target.appendChild(this.#candidatesElement)\n      }\n    }\n  }\n  #hideCandidates(): void\n  {\n    this.#candidatesElement.style.display = \"none\"\n  }\n\n  #openMenu(): void\n  {\n    this.#menuElement.classList.add(\"open\")\n    this.#menuElement.classList.remove(\"close\")\n    this.#isMenuOpen = true\n  }\n  #closeMenu(): void\n  {\n    this.#menuElement.classList.add(\"close\")\n    this.#menuElement.classList.remove(\"open\")\n    this.#isMenuOpen = false\n  }\n\n  #onClickEllipsis = (evt: Event) =>\n  {\n    this.#logger.info(\"onClickEllipsis\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    this.#isMenuOpen ? this.#closeMenu() : this.#openMenu()\n    this.#hideCandidates()\n  }\n\n  #onClickConvert = (evt: Event) =>\n  {\n    this.#logger.info(\"onClickConvert\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    this.editor.convert()\n    this.#closeMenu()\n  }\n\n  #createTextAreaElement(value: string): HTMLTextAreaElement\n  {\n    const isRTL = document.documentElement.getAttribute(\"dir\") === \"rtl\"\n    const textArea = document.createElement(\"textarea\")\n    textArea.style.fontSize = \"12pt\"\n    textArea.style.display = \"absolute\"\n    textArea.style[isRTL ? \"right\" : \"left\"] = \"-9999px\"\n    const yPosition = window.pageYOffset || document.documentElement.scrollTop\n    textArea.style.top = `${ yPosition }px`\n    textArea.setAttribute(\"readonly\", \"\")\n    textArea.value = value\n    return textArea\n  }\n\n  #selectText(textArea: HTMLTextAreaElement)\n  {\n    if (navigator.userAgent.match(/ipad|iphone/i)) {\n      const range = document.createRange()\n      range.selectNodeContents(textArea)\n      const selection = window.getSelection()\n      if (selection) {\n        selection.removeAllRanges()\n        selection.addRange(range)\n        textArea.setSelectionRange(0, 999999)\n      }\n    } else {\n      textArea.select()\n    }\n  }\n\n  #onClickCopy = async (evt: Event): Promise<void> =>\n  {\n    this.#logger.info(\"onClickCopy\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    try {\n      this.#closeMenu()\n      let message = \"Nothing to copy\"\n      if (this.#prompterTextElement.innerText) {\n        message = `\"${ this.#prompterTextElement.innerText }\" copied to clipboard`\n        const fakeEl = this.#createTextAreaElement(this.#prompterTextElement.innerText)\n        this.#prompterContainerElement.appendChild(fakeEl)\n        this.#selectText(fakeEl)\n        document.execCommand(\"copy\")\n        fakeEl.remove()\n      }\n      this.editor.event.emitNotif({ message, timeout: 1500 })\n    } catch (error) {\n      this.#logger.error(\"onClickCopy\", error)\n      this.editor.event.emitError(error as Error)\n    }\n  }\n\n  #onClickDelete = (evt: Event) =>\n  {\n    this.#logger.info(\"onClickDelete\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    this.editor.clear()\n    this.#closeMenu()\n  }\n\n  #onClickCandidate = (evt: Event) =>\n  {\n    this.#logger.info(\"onClickCandidate\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    const target = evt.target as HTMLElement\n    const candidate = target.innerText\n    if (this.jiix?.words && candidate !== this.wordToChange?.label && this.wordToChange?.candidates?.includes(candidate)) {\n      this.jiix.words[parseInt(this.wordToChange?.id as string)].label = candidate\n      this.editor.import(new Blob([JSON.stringify(this.jiix)], { type: ExportType.JIIX }), ExportType.JIIX)\n    }\n    this.#candidatesElement.style.display = \"none\"\n  }\n\n  #onClickPrompter = (evt: Event): void =>\n  {\n    this.#logger.info(\"onClickPrompter\", { evt })\n    evt.preventDefault()\n    evt.stopPropagation()\n    this.#closeMenu()\n    const target = evt.target as HTMLElement\n    if (target.id !== this.#prompterTextElement.id) {\n      this.#showCandidates(target)\n    } else {\n      this.#hideCandidates()\n    }\n  }\n\n  #stopPropagation = (evt: Event) =>\n  {\n    evt.preventDefault()\n    evt.stopPropagation()\n  }\n\n  #onClickOutSide = () =>\n  {\n    this.#hideCandidates()\n    this.#closeMenu()\n  }\n\n  #addListeners(): void\n  {\n    this.#smartGuideElement.addEventListener(\"pointerdown\", this.#stopPropagation.bind(this))\n    this.#ellipsisElement.addEventListener(\"pointerdown\", this.#onClickEllipsis.bind(this))\n    this.#convertElement.addEventListener(\"pointerdown\", this.#onClickConvert.bind(this))\n    this.#copyElement.addEventListener(\"pointerdown\", this.#onClickCopy.bind(this))\n    this.#deleteElement.addEventListener(\"pointerdown\", this.#onClickDelete.bind(this))\n    this.#prompterTextElement.addEventListener(\"pointerdown\", this.#onClickPrompter.bind(this))\n    this.#candidatesElement.addEventListener(\"pointerdown\", this.#onClickCandidate.bind(this))\n    document.addEventListener(\"pointerdown\", this.#onClickOutSide.bind(this))\n  }\n\n  #removeListeners(): void\n  {\n    this.#smartGuideElement.addEventListener(\"pointerdown\", this.#stopPropagation)\n    this.#ellipsisElement.removeEventListener(\"pointerdown\", this.#onClickEllipsis)\n    this.#convertElement.removeEventListener(\"pointerdown\", this.#onClickConvert)\n    this.#copyElement.removeEventListener(\"pointerdown\", this.#onClickCopy)\n    this.#deleteElement.removeEventListener(\"pointerdown\", this.#onClickDelete)\n    this.#prompterTextElement.removeEventListener(\"pointerdown\", this.#onClickPrompter)\n    this.#candidatesElement.removeEventListener(\"pointerdown\", this.#onClickCandidate)\n    document.removeEventListener(\"pointerdown\", this.#onClickOutSide)\n  }\n\n  resize(): void\n  {\n    this.#logger.info(\"resize\")\n    const marginLeft = convertMillimeterToPixel(this.margin.left)\n    const marginRight = convertMillimeterToPixel(this.margin.right)\n    this.#wrapperElement.style.marginLeft = `${ marginLeft }px`\n    this.#wrapperElement.style.marginRight = `${ marginRight }px`\n  }\n\n  update(exports: TJIIXExport): void\n  {\n    this.#logger.info(\"update\", { exports })\n    this.jiix = exports\n    const createWordSpan = (index: number, word?: TJIIXWord) =>\n    {\n      const span = document.createElement(\"span\")\n      span.id = `word-${ index }${ this.uuid }`\n      if (word) {\n        span.textContent = word.label\n      } else {\n        span.innerHTML = \"&nbsp;\"\n      }\n      this.#logger.debug(\"update\", { span })\n      return span\n    }\n\n    const populatePrompter = () =>\n    {\n      this.#logger.info(\"populatePrompter\")\n      this.#prompterTextElement.innerHTML = \"\"\n      if (this.jiix?.words) {\n        const words = this.jiix.words as TJIIXWord[]\n        const myFragment = document.createDocumentFragment()\n        words.forEach((word, index) =>\n        {\n          if (word.label === \" \" || word.label.includes(\"\\n\")) {\n            myFragment.appendChild(createWordSpan(index))\n          } else if (index !== words.length - 1) {\n            myFragment.appendChild(createWordSpan(index, word))\n          } else {\n            this.#prompterTextElement.appendChild(myFragment)\n            if (this.lastWord) {\n              this.lastWord = word\n            }\n            const span = createWordSpan(index, word)\n            // This is used to scroll to last word if last word is modified\n\n            if ((this.lastWord?.candidates !== word.candidates) && (this.lastWord?.label !== word.label)) {\n              this.lastWord = word\n            }\n            if (this.wordToChange?.id === index.toString()) {\n              span.classList.add(\"modified-word\")\n              this.wordToChange = undefined\n            }\n            else {\n              span.classList.add(\"added-word\")\n            }\n            this.#prompterTextElement.appendChild(span)\n            this.#prompterContainerElement.scrollLeft = span.offsetLeft\n            this.#logger.debug(\"update => populatePrompter\", { span, lastWord: this.lastWord })\n          }\n        })\n      }\n    }\n    populatePrompter()\n    if (this.jiix?.words?.length) {\n      this.#ellipsisElement.style.setProperty(\"pointer-events\", \"auto\")\n    }\n    else {\n      this.#ellipsisElement.style.setProperty(\"pointer-events\", \"none\")\n    }\n  }\n\n  clear(): void\n  {\n    this.#logger.info(\"clear\")\n    this.#prompterTextElement.innerHTML = \"\"\n    this.#candidatesElement.innerHTML = \"\"\n  }\n\n  destroy(): void\n  {\n    this.#logger.info(\"destroy\")\n    this.#removeListeners()\n    this.#smartGuideElement.remove()\n  }\n}","/**\n * @group Editor\n * @remarks\n * Configure when the action is triggered.\n *\n * POINTER_UP :   Action is triggered on every PenUP.\n *                This is the recommended mode for CDK V3 WebSocket recognitions.\n *\n * QUIET_PERIOD : Action is triggered after a quiet period in milli-seconds on every pointer up.\n *                The value is set to 1000 for example recognition will be triggered when the user stops writing for 1 seconds.\n *                This is the recommended mode for all REST discoveries.\n *\n * DEMAND :       Action is triggered on external demande\n */\nexport type TIIEditorTriggerConfiguration = {\n    exportContent: \"QUIET_PERIOD\" | \"POINTER_UP\" | \"DEMAND\"\n    exportContentDelay: number\n    resizeTriggerDelay: number\n  }\n\n  /**\n   * @group Editor\n   * @source\n   */\n  export const DefaultIIEditorTriggerConfiguration: TIIEditorTriggerConfiguration = {\n    exportContent: \"POINTER_UP\",\n    exportContentDelay: 1000,\n    resizeTriggerDelay: 100\n  }\n","import { DefaultGrabberConfiguration, TGrabberConfiguration } from \"../grabber\"\nimport { DefaultHistoryConfiguration, THistoryConfiguration } from \"../history\"\nimport { DefaultLoggerConfiguration, TLoggerConfiguration } from \"../logger\"\nimport { DefaultRecognizerWebSocketSSRConfiguration, TRecognizerWebSocketSSRRecognitionConfiguration, TRecognizerWebSocketSSRConfiguration, RecognizerWebSocketSSRConfiguration, TServerWebsocketConfiguration } from \"../recognizer\"\nimport { DefaultRendererConfiguration, TRendererConfiguration } from \"../renderer\"\nimport { DefaultTheme, TPenStyle, TTheme } from \"../style\"\nimport { mergeDeep, PartialDeep } from \"../utils\"\nimport { TEditorConfiguration } from \"./AbstractEditor\"\nimport { DefaultIIEditorTriggerConfiguration, TIIEditorTriggerConfiguration } from \"./IIEditorTriggerConfiguration\"\n\n/**\n * @group Editor\n */\nexport type TInteractiveInkSSREditorConfiguration = TEditorConfiguration & TRecognizerWebSocketSSRConfiguration & {\n  rendering: TRendererConfiguration\n  smartGuide: {\n    enable: boolean\n  },\n  \"undo-redo\": THistoryConfiguration\n  grabber: TGrabberConfiguration\n  triggers: TIIEditorTriggerConfiguration\n  logger: TLoggerConfiguration\n  penStyle: TPenStyle,\n  penStyleClasses?: string\n  theme: TTheme\n}\n\n/**\n * @group Editor\n * @source\n */\nexport const DefaultInteractiveInkSSREditorConfiguration: TInteractiveInkSSREditorConfiguration = {\n  server: DefaultRecognizerWebSocketSSRConfiguration.server,\n  recognition: DefaultRecognizerWebSocketSSRConfiguration.recognition,\n  rendering: DefaultRendererConfiguration,\n  smartGuide: {\n    enable: true\n  },\n  grabber: DefaultGrabberConfiguration,\n  triggers: DefaultIIEditorTriggerConfiguration,\n  \"undo-redo\": DefaultHistoryConfiguration,\n  logger: DefaultLoggerConfiguration,\n  penStyle: {},\n  theme: DefaultTheme\n}\n\n/**\n * @group Editor\n */\nexport class InteractiveInkSSREditorConfiguration implements TInteractiveInkSSREditorConfiguration\n{\n  server: TServerWebsocketConfiguration\n  recognition: TRecognizerWebSocketSSRRecognitionConfiguration\n  rendering: TRendererConfiguration\n  smartGuide: {\n    enable: boolean\n  }\n  \"undo-redo\": THistoryConfiguration\n  grabber: TGrabberConfiguration\n  triggers: TIIEditorTriggerConfiguration\n  logger: TLoggerConfiguration\n  penStyle: TPenStyle\n  penStyleClasses?: string\n  theme: TTheme\n\n  constructor(configuration?: PartialDeep<TInteractiveInkSSREditorConfiguration>)\n  {\n    const { server, recognition } = new RecognizerWebSocketSSRConfiguration(configuration)\n    this.server = server\n    this.recognition = recognition\n\n    this.rendering = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration.rendering, configuration?.rendering)\n    this.smartGuide = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration.smartGuide, configuration?.smartGuide)\n    this[\"undo-redo\"] = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration[\"undo-redo\"], configuration?.[\"undo-redo\"])\n    this.grabber = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration.grabber, configuration?.grabber)\n    this.triggers = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration.triggers, configuration?.triggers)\n    this.logger = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration.logger, configuration?.logger)\n    this.penStyle = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration.penStyle, configuration?.penStyle)\n    this.penStyleClasses = configuration?.penStyleClasses || this.penStyleClasses\n    this.theme = mergeDeep({}, DefaultInteractiveInkSSREditorConfiguration.theme, configuration?.theme)\n\n    if (this.recognition.type !== \"TEXT\") {\n      this.smartGuide.enable = false\n    }\n    if (this.smartGuide.enable && !this.recognition.text.mimeTypes.includes(\"application/vnd.myscript.jiix\")) {\n      this.recognition.text.mimeTypes.push(\"application/vnd.myscript.jiix\")\n    }\n\n  }\n}\n","import { EditorTool } from \"../Constants\"\nimport { PointerEventGrabber, PointerInfo } from \"../grabber\"\nimport { Model, TExport, TJIIXExport } from \"../model\"\nimport { TRecognizerWebSocketSSRMessageSVGPatch, RecognizerWebSocketSSR, DefaultMarginConfiguration, TConverstionState, TMarginConfiguration } from \"../recognizer\"\nimport { InteractiveInkSSRSmartGuide } from \"../smartguide\"\nimport { InteractiveInkSSRSVGRenderer } from \"../renderer\"\nimport { DefaultPenStyle, StyleManager, TPenStyle, TTheme } from \"../style\"\nimport { HistoryManager, THistoryContext } from \"../history\"\nimport { DeferredPromise, PartialDeep } from \"../utils\"\nimport { Stroke, TStroke, TPointer } from \"../symbol\"\nimport { AbstractEditor, EditorOptionsBase } from \"./AbstractEditor\"\nimport { InteractiveInkSSREditorConfiguration } from \"./InteractiveInkSSREditorConfiguration\"\n\n/**\n * @group Editor\n */\nexport type TInteractiveInkSSREditorOptions = PartialDeep<EditorOptionsBase &\n  {\n    configuration: InteractiveInkSSREditorConfiguration\n  }> &\n  {\n    override?: {\n      grabber?: PointerEventGrabber\n      recognizer?: RecognizerWebSocketSSR\n    }\n  }\n\n/**\n * @group Editor\n */\nexport class InteractiveInkSSREditor extends AbstractEditor\n{\n  #configuration: InteractiveInkSSREditorConfiguration\n  #model: Model\n  #resizeTimer?: ReturnType<typeof setTimeout>\n\n  smartGuide?: InteractiveInkSSRSmartGuide\n  grabber: PointerEventGrabber\n  renderer: InteractiveInkSSRSVGRenderer\n  recognizer: RecognizerWebSocketSSR\n  history: HistoryManager\n  styleManager: StyleManager\n  #tool: EditorTool = EditorTool.Write\n\n  constructor(rootElement: HTMLElement, options?: TInteractiveInkSSREditorOptions)\n  {\n    super(rootElement, options)\n\n    this.#configuration = new InteractiveInkSSREditorConfiguration(options?.configuration)\n    this.styleManager = new StyleManager(options?.configuration?.penStyle, options?.configuration?.theme)\n\n    if (options?.override?.grabber) {\n      const CustomGrabber = options.override.grabber as unknown as typeof PointerEventGrabber\n      this.grabber = new CustomGrabber(this.#configuration.grabber)\n    }\n    else {\n      this.grabber = new PointerEventGrabber(this.#configuration.grabber)\n    }\n\n    if (options?.override?.recognizer) {\n      const CustomRecognizer = options.override.recognizer as unknown as typeof RecognizerWebSocketSSR\n      this.recognizer = new CustomRecognizer(this.#configuration)\n    }\n    else {\n      this.recognizer = new RecognizerWebSocketSSR(this.#configuration)\n    }\n\n    this.renderer = new InteractiveInkSSRSVGRenderer(this.#configuration.rendering)\n\n    this.tool = EditorTool.Write\n    this.#model = new Model()\n    this.history = new HistoryManager(this.#configuration[\"undo-redo\"], this.event)\n  }\n\n  get initializationPromise(): Promise<void>\n  {\n    return this.recognizer.initialized.promise\n  }\n\n  get tool(): EditorTool\n  {\n    return this.#tool\n  }\n  set tool(i: EditorTool)\n  {\n    this.#tool = i\n    this.setCursorStyle()\n  }\n\n  protected setCursorStyle(): void\n  {\n    switch (this.tool) {\n      case EditorTool.Erase:\n        this.layers.root.classList.remove(\"draw\")\n        this.layers.root.classList.add(\"erase\")\n        break\n      default:\n        this.layers.root.classList.add(\"draw\")\n        this.layers.root.classList.remove(\"erase\")\n        break\n    }\n  }\n\n  get model(): Model\n  {\n    return this.#model\n  }\n\n  get configuration(): InteractiveInkSSREditorConfiguration\n  {\n    return this.#configuration\n  }\n\n  get currentPenStyle(): TPenStyle\n  {\n    return this.styleManager.currentPenStyle\n  }\n\n  get penStyle(): TPenStyle\n  {\n    return this.styleManager.penStyle\n  }\n  set penStyle(penStyle: PartialDeep<TPenStyle>)\n  {\n    this.logger.info(\"setPenStyle\", { penStyle })\n    this.styleManager.setPenStyle(penStyle)\n    this.logger.debug(\"setPenStyle\", this.styleManager.penStyle)\n    this.recognizer.setPenStyle(this.styleManager.penStyle)\n  }\n\n  get penStyleClasses(): string\n  {\n    return this.styleManager.penStyleClasses\n  }\n  set penStyleClasses(penClass: string)\n  {\n    this.logger.info(\"setPenStyleClasses\", { penClass })\n    this.styleManager.setPenStyleClasses(penClass)\n    this.logger.debug(\"setPenStyleClasses\", this.styleManager.penStyleClasses)\n    this.recognizer.setPenStyleClasses(this.styleManager.penStyleClasses)\n  }\n\n  get theme(): TTheme\n  {\n    return this.styleManager.theme\n  }\n  set theme(theme: PartialDeep<TTheme>)\n  {\n    this.logger.info(\"setTheme\", { theme })\n    this.styleManager.setTheme(theme)\n    this.logger.debug(\"setTheme\", this.styleManager.theme)\n    this.recognizer.setTheme(this.styleManager.theme)\n  }\n\n  protected async syncStyle(): Promise<void>\n  {\n    await Promise.all([\n      this.recognizer.setPenStyle(this.styleManager.penStyle),\n      this.recognizer.setPenStyleClasses(this.styleManager.penStyleClasses),\n      this.recognizer.setTheme(this.styleManager.theme)\n    ])\n  }\n\n  protected onExport(exports: TExport): void\n  {\n    this.logger.debug(\"onExport\", { exports })\n    if (this.smartGuide && exports?.[\"application/vnd.myscript.jiix\"]) {\n      const jjix = exports[\"application/vnd.myscript.jiix\"] as TJIIXExport\n      this.smartGuide.update(jjix)\n    }\n    this.model.mergeExport(exports)\n    this.event.emitExported(exports)\n  }\n\n  protected onPointerDown(info: PointerInfo): void\n  {\n    this.logger.info(\"onPointerDown\", { tool: this.tool, info })\n    const style: TPenStyle = Object.assign({}, this.theme?.ink, this.currentPenStyle)\n    this.model.initCurrentStroke(info.pointer, this.tool === EditorTool.Erase ? \"eraser\" : info.pointerType, style)\n    this.drawCurrentStroke()\n  }\n\n  protected onPointerMove(info: PointerInfo): void\n  {\n    this.logger.info(\"onPointerMove\", { tool: this.tool, info })\n    this.model.appendToCurrentStroke(info.pointer)\n    this.drawCurrentStroke()\n  }\n\n  protected async onPointerUp(info: PointerInfo): Promise<void>\n  {\n    try {\n      this.logger.info(\"onPointerUp\", { tool: this.tool, info })\n      this.model.endCurrentStroke(info.pointer)\n      await this.synchronizeModelWithBackend()\n    } catch (error) {\n      this.event.emitError(error as Error)\n    }\n  }\n\n  protected onSVGPatch(evt: TRecognizerWebSocketSSRMessageSVGPatch): void\n  {\n    this.logger.info(\"onSVGPatch\", { evt })\n    this.renderer.updatesLayer(evt.layer, evt.updates)\n  }\n\n  protected initializeSmartGuide(): void\n  {\n    this.smartGuide?.destroy()\n    this.logger.info(\"initializeSmartGuide\", { smartGuide: this.configuration.smartGuide })\n    if (this.configuration.smartGuide.enable) {\n      this.smartGuide = new InteractiveInkSSRSmartGuide(this)\n      let margin: TMarginConfiguration = DefaultMarginConfiguration\n      switch (this.configuration.recognition.type) {\n        case \"TEXT\":\n          margin = this.configuration.recognition.text.margin\n          break\n        case \"MATH\":\n          margin = this.configuration.recognition.math.margin\n          break\n      }\n      this.smartGuide.init(this.layers.ui.root, margin)\n    }\n  }\n\n  protected onContetChaned(undoRedoContext: THistoryContext): void\n  {\n    this.history.context = undoRedoContext\n    this.event.emitChanged(undoRedoContext)\n  }\n\n  protected onError(error: Error): void\n  {\n    this.layers.showMessageError(error)\n    this.event.emitError(error)\n  }\n\n  async initialize(): Promise<void>\n  {\n    try {\n      this.logger.info(\"initialize\")\n      this.layers.render()\n      this.layers.showLoader()\n\n      const compStyles = window.getComputedStyle(this.layers.root)\n      this.model.width = Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.#configuration.rendering.minWidth)\n      this.model.height = Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.#configuration.rendering.minHeight)\n      this.history.push(this.model)\n      this.renderer.init(this.layers.rendering)\n\n      this.grabber.attach(this.layers.rendering)\n      this.grabber.onPointerDown = this.onPointerDown.bind(this)\n      this.grabber.onPointerMove = this.onPointerMove.bind(this)\n      this.grabber.onPointerUp = this.onPointerUp.bind(this)\n\n      this.initializeSmartGuide()\n\n      if(!this.recognizer.configuration.server.version) {\n        await this.loadInfo(this.configuration.server)\n        this.recognizer.configuration.server.version = this.info!.version\n      }\n      await this.recognizer.init(this.model.height, this.model.width)\n      this.recognizer.event.addExportedListener(this.onExport.bind(this))\n      this.recognizer.event.addSVGPatchListener(this.onSVGPatch.bind(this))\n      this.recognizer.event.addContentChangedListener(this.onContetChaned.bind(this))\n      this.recognizer.event.addIdleListener(this.event.emitIdle.bind(this.event))\n      this.recognizer.event.addErrorListener(this.onError.bind(this))\n\n      await this.syncStyle()\n    } catch (error) {\n      this.logger.error(\"initialize\", error)\n      this.layers.showMessageError(error as Error)\n      throw error\n    }\n    finally {\n      this.logger.debug(\"initialize\", \"finally\")\n      this.layers.hideLoader()\n      this.layers.updateState(true)\n    }\n  }\n\n  drawCurrentStroke(): void\n  {\n    this.logger.debug(\"drawCurrentStroke\", { stroke: this.model.currentSymbol })\n    const currentSymbol = this.model.currentSymbol as Stroke\n    if (currentSymbol) {\n      this.renderer.drawPendingStroke(currentSymbol)\n    }\n  }\n\n  async synchronizeModelWithBackend(): Promise<Model>\n  {\n    this.logger.info(\"synchronizeModelWithBackend\")\n    if (this.#configuration.triggers.exportContent !== \"DEMAND\") {\n      const unsentStrokes = this.model.extractUnsentStrokes()\n      this.model.updatePositionSent()\n      this.history.push(this.model)\n      this.renderer.clearErasingStrokes()\n      const exports = await this.recognizer.addStrokes(unsentStrokes)\n      this.model.mergeExport(exports)\n      this.history.updateStack(this.model)\n    }\n    this.logger.debug(\"synchronizeModelWithBackend\", this.model)\n    return this.model\n  }\n\n  async waitForIdle(): Promise<void>\n  {\n    return this.recognizer.waitForIdle()\n  }\n\n  async export(mimeTypes?: string[]): Promise<Model>\n  {\n    this.logger.info(\"export\", { mimeTypes })\n    try {\n      if (this.#configuration.triggers.exportContent === \"DEMAND\") {\n        const unsentStrokes = this.model.extractUnsentStrokes()\n        this.history.push(this.model)\n        this.history.stack.push(this.model.clone())\n        this.model.updatePositionSent()\n        const exports = await this.recognizer.addStrokes(unsentStrokes)\n        this.model.updatePositionReceived()\n        this.model.mergeExport(exports)\n        this.logger.debug(\"export\", this.model)\n      } else {\n        return await this.recognizer.export(this.model, mimeTypes)\n      }\n    } catch (error) {\n      this.logger.error(\"export\", { error })\n      this.event.emitError(error as Error)\n      return Promise.reject(error)\n    }\n    return this.model\n  }\n\n  async convert(params?: { conversionState?: TConverstionState }): Promise<Model>\n  {\n    this.logger.info(\"convert\", { params })\n    this.history.push(this.model)\n    this.history.stack.push(this.model.clone())\n    this.#model = await this.recognizer.convert(this.model, params?.conversionState)\n    this.logger.debug(\"convert\", this.model)\n    this.history.push(this.model)\n    this.event.emitConverted(this.model.converts as TExport)\n    return this.model\n  }\n\n  async import(data: Blob | string | TJIIXExport, mimeType?: string): Promise<Model>\n  {\n    let blobToImport: Blob\n    if (data instanceof Blob) {\n      blobToImport = data\n    }\n    else if (typeof data === \"string\") {\n      blobToImport = new Blob([data])\n    }\n    else {\n      blobToImport = new Blob([JSON.stringify(data)])\n    }\n    this.logger.info(\"import\", { data, mimeType })\n    this.history.stack.push(this.model.clone())\n    this.#model = await this.recognizer.import(this.model, blobToImport, mimeType)\n    this.history.push(this.model)\n    this.event.emitImported(this.model.exports as TExport)\n    return this.model\n  }\n\n  async importPointEvents(strokes: PartialDeep<TStroke>[]): Promise<Model>\n  {\n    this.logger.info(\"importPointEvents\", { strokes })\n    const errors: string[] = []\n    const strokesToImport = strokes.map((s, strokeIndex) =>\n    {\n      const str = new Stroke(s.style || DefaultPenStyle, s.pointerType)\n      if (s.id) str.id = s.id\n      if (s.pointerType) str.pointerType = s.pointerType\n      if (!s.pointers?.length) {\n        errors.push(`stroke ${ strokeIndex + 1 } has not pointers`)\n      }\n      let flag = true\n      s.pointers?.forEach((pp, pIndex) =>\n      {\n        flag = true\n        if (!pp) {\n          errors.push(`stroke ${ strokeIndex + 1 } has no pointer at ${ pIndex }`)\n          return\n        }\n        const pointer: TPointer = {\n          p: pp.p || 1,\n          t: pp.t || pIndex,\n          x: 0,\n          y: 0\n        }\n        if (pp?.x == undefined || pp?.x == null) {\n          errors.push(`stroke ${ strokeIndex + 1 } has no x at pointer at ${ pIndex }`)\n          flag = false\n        }\n        else {\n          pointer.x = pp.x\n        }\n        if (pp?.y == undefined || pp?.y == null) {\n          errors.push(`stroke ${ strokeIndex + 1 } has no y at pointer at ${ pIndex }`)\n          flag = false\n        }\n        else {\n          pointer.y = pp.y\n        }\n        if (flag) {\n          str.pointers.push(pointer)\n        }\n      })\n      return str\n    })\n    if (errors.length) {\n      this.event.emitError(new Error(errors.join(\"\\n\")))\n    }\n    strokesToImport.map(s => this.model.addStroke(s))\n    const exportPoints = await this.recognizer.importPointEvents(strokesToImport)\n    this.model.mergeExport(exportPoints)\n    this.event.emitImported(this.model.exports as TExport)\n    this.logger.debug(\"importPointEvents\", this.model)\n    return this.model\n  }\n\n  async resize({ height, width }: { height?: number, width?: number } = {}): Promise<void>\n  {\n    this.logger.info(\"resize\", { height, width })\n    const deferredResize = new DeferredPromise<Model>()\n    const compStyles = window.getComputedStyle(this.layers.root)\n    this.model.height = height || Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.configuration.rendering.minHeight)\n    this.model.width = width || Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.configuration.rendering.minWidth)\n    const clonedModel = this.model.clone()\n    this.renderer.resize(clonedModel)\n    clearTimeout(this.#resizeTimer)\n    this.#resizeTimer = setTimeout(async () =>\n    {\n      try {\n        const resizeModel = await this.recognizer.resize(clonedModel)\n        deferredResize.resolve(resizeModel)\n      } catch (error) {\n        this.logger.error(\"resize\", { height, width, error })\n        deferredResize.reject(error as Error)\n      }\n    }, this.#configuration.triggers.resizeTriggerDelay)\n\n    this.#model = await deferredResize.promise\n    this.smartGuide?.resize()\n    this.event.emitExported(this.model.exports as TExport)\n    this.logger.debug(\"resize\", this.model)\n  }\n\n  async undo(): Promise<Model>\n  {\n    this.logger.info(\"undo\")\n    if (this.history.context.canUndo) {\n      this.#model = this.history.undo() as Model\n      return this.recognizer.undo(this.model)\n    }\n    else {\n      throw new Error(\"Undo not allowed\")\n    }\n  }\n\n  async redo(): Promise<Model>\n  {\n    this.logger.info(\"redo\")\n    if (this.history.context.canRedo) {\n      this.#model = this.history.redo() as Model\n      this.logger.debug(\"undo\", this.#model)\n      return this.recognizer.redo(this.model)\n    }\n    else {\n      throw new Error(\"Redo not allowed\")\n    }\n  }\n\n  async clear(): Promise<void>\n  {\n    this.logger.info(\"clear\")\n    this.model.clear()\n    this.history.push(this.model)\n    await this.recognizer.clear(this.model)\n    this.event.emitCleared()\n  }\n\n  async destroy(): Promise<void>\n  {\n    this.logger.info(\"destroy\")\n    this.event.removeAllListeners()\n    this.grabber.detach()\n    this.layers.destroy()\n    this.renderer.destroy()\n    this.recognizer.destroy()\n    this.smartGuide?.destroy()\n    return Promise.resolve()\n  }\n}\n","import { DefaultGrabberConfiguration, TGrabberConfiguration } from \"../grabber\"\nimport { DefaultHistoryConfiguration, THistoryConfiguration } from \"../history\"\nimport { DefaultLoggerConfiguration, TLoggerConfiguration } from \"../logger\"\nimport { DefaultRecognizerHTTPV2Configuration, RecognizerHTTPV2Configuration, TRecognizerHTTPV2Configuration, TRecognizerHTTPV2RecognitionConfiguration, TServerHTTPConfiguration } from \"../recognizer\"\nimport { DefaultIIRendererConfiguration, TIIRendererConfiguration } from \"../renderer\"\nimport { DefaultStyle, TStyle } from \"../style\"\nimport { convertPixelToMillimeter, mergeDeep, PartialDeep } from \"../utils\"\nimport { TEditorConfiguration } from \"./AbstractEditor\"\nimport { DefaultIEditorTriggerConfiguration, TIEditorTriggerConfiguration } from \"./IEditorTriggerConfiguration\"\n\n\n/**\n * @group Editor\n */\nexport type TInkEditorConfiguration = TEditorConfiguration & TRecognizerHTTPV2Configuration & {\n  rendering: TIIRendererConfiguration\n  \"undo-redo\": THistoryConfiguration\n  grabber: TGrabberConfiguration\n  triggers: TIEditorTriggerConfiguration\n  logger: TLoggerConfiguration\n  penStyle: TStyle\n}\n\n/**\n * @group Editor\n * @source\n */\nexport const DefaultInkEditorConfiguration: TInkEditorConfiguration = {\n  server: DefaultRecognizerHTTPV2Configuration.server,\n  recognition: DefaultRecognizerHTTPV2Configuration.recognition,\n  rendering: DefaultIIRendererConfiguration,\n  grabber: DefaultGrabberConfiguration,\n  triggers: DefaultIEditorTriggerConfiguration,\n  \"undo-redo\": DefaultHistoryConfiguration,\n  logger: DefaultLoggerConfiguration,\n  penStyle: DefaultStyle,\n}\n\n/**\n * @group Editor\n */\nexport class InkEditorConfiguration implements TInkEditorConfiguration\n{\n  server: TServerHTTPConfiguration\n  recognition: TRecognizerHTTPV2RecognitionConfiguration\n  rendering: TIIRendererConfiguration\n  \"undo-redo\": THistoryConfiguration\n  grabber: TGrabberConfiguration\n  triggers: TIEditorTriggerConfiguration\n  logger: TLoggerConfiguration\n  penStyle: TStyle\n\n  constructor(configuration?: PartialDeep<InkEditorConfiguration>)\n  {\n    const { server, recognition } = new RecognizerHTTPV2Configuration(configuration)\n    this.server = server\n    this.recognition = recognition\n    this.rendering = mergeDeep({}, DefaultInkEditorConfiguration.rendering, configuration?.rendering)\n    this.recognition.text.guides.enable = this.rendering.guides.enable\n    if (this.rendering.guides.enable)\n    {\n      this.recognition.text.guides[\"line-gap-mm\"] = convertPixelToMillimeter(this.rendering.guides.gap)\n    }\n    this.grabber = mergeDeep({}, DefaultInkEditorConfiguration.grabber, configuration?.grabber)\n    this[\"undo-redo\"] = mergeDeep({}, DefaultInkEditorConfiguration[\"undo-redo\"], configuration?.[\"undo-redo\"])\n    this.triggers = mergeDeep({}, DefaultInkEditorConfiguration.triggers, configuration?.triggers)\n    this.logger = mergeDeep({}, DefaultInkEditorConfiguration.logger, configuration?.logger)\n    this.penStyle = mergeDeep({}, DefaultInkEditorConfiguration.penStyle, configuration?.penStyle)\n  }\n}\n","import { InkEditor } from \"../editor\";\nimport { PointerInfo } from \"../grabber\";\nimport { IModel } from \"../model\";\nimport { TStyle } from \"../style\";\nimport { IIStroke, SymbolType, TIISymbol, TPointer } from \"../symbol\";\nimport { DeferredPromise } from \"../utils\";\nimport { AbstractWriterManager } from \"./AbstractWriterManager\";\n\nexport class IWriterManager extends AbstractWriterManager {\n  editor: InkEditor\n  #exportTimer?: ReturnType<typeof setTimeout>\n\n  constructor(editor: InkEditor) {\n    super(editor)\n    this.editor = editor\n  }\n\n  get model(): IModel {\n    return this.editor.model\n  }\n\n  protected createCurrentSymbol(pointer: TPointer, style: TStyle, pointerType: string): TIISymbol {\n    this.model.currentStroke = new IIStroke(style, pointerType)\n    this.model.currentStroke.addPointer(pointer)\n    return this.model.currentStroke\n  }\n\n  protected updateCurrentSymbol(pointer: TPointer): IIStroke {\n    if (this.model.currentStroke?.type === SymbolType.Stroke) {\n      this.model.currentStroke.addPointer(pointer)\n    }\n    return this.model.currentStroke!\n  }\n\n  async end(info: PointerInfo): Promise<void> {\n    const localPointer = info.pointer\n    const localSymbol = this.updateCurrentSymbol(localPointer)\n    this.model.currentStroke = undefined\n    this.renderer.drawSymbol(localSymbol)\n    this.model.addStroke(localSymbol)\n    this.editor.history.push(this.model, { added: [localSymbol] })\n    const deferred = new DeferredPromise<void>()\n\n    if (this.editor.configuration.triggers.exportContent !== \"DEMAND\") {\n      clearTimeout(this.#exportTimer)\n      this.#exportTimer = setTimeout(async () => {\n        this.editor.export()\n      }, this.editor.configuration.triggers.exportContent === \"QUIET_PERIOD\" ? this.editor.configuration.triggers.exportContentDelay : 0)\n    } else {\n      deferred.resolve()\n    }\n    return deferred.promise\n\n  }\n}\n","import { EditorTool } from \"../Constants\"\nimport { PointerEventGrabber } from \"../grabber\"\nimport { IModel, TExport, TExportV2 } from \"../model\"\nimport { RecognizerHTTPV2 } from \"../recognizer\"\nimport { SVGRenderer } from \"../renderer\"\nimport { TStyle } from \"../style\"\nimport { IHistoryManager } from \"../history\"\nimport { PartialDeep } from \"../utils\"\nimport { AbstractEditor, EditorOptionsBase } from \"./AbstractEditor\"\nimport { InkEditorConfiguration, TInkEditorConfiguration } from \"./InkEditorConfiguration\"\nimport { IWriterManager } from \"../manager/IWriterManager\"\nimport { IDebugSVGManager, EraseManager } from \"../manager\"\n\n/**\n * @group Editor\n */\nexport type TInkEditorOptions = PartialDeep<EditorOptionsBase &\n{\n  configuration: TInkEditorConfiguration\n}> &\n{\n  override?: {\n    grabber?: PointerEventGrabber\n    recognizer?: RecognizerHTTPV2\n  }\n}\n\n/**\n * @group Editor\n */\nexport class InkEditor extends AbstractEditor\n{\n  #configuration: InkEditorConfiguration\n  #model: IModel\n  #penStyle: TStyle\n  renderer: SVGRenderer\n  recognizer: RecognizerHTTPV2\n  history: IHistoryManager\n  writer: IWriterManager\n  eraser: EraseManager\n  debugger: IDebugSVGManager\n  #tool: EditorTool = EditorTool.Write\n\n  constructor(rootElement: HTMLElement, options?: TInkEditorOptions)\n  {\n    super(rootElement, options)\n\n    this.#configuration = new InkEditorConfiguration(options?.configuration)\n\n    this.#penStyle = Object.assign({}, this.#configuration.penStyle)\n\n    if (options?.override?.recognizer) {\n      const CustomRecognizer = options.override.recognizer as unknown as typeof RecognizerHTTPV2\n      this.recognizer = new CustomRecognizer(this.#configuration)\n    }\n    else {\n      this.recognizer = new RecognizerHTTPV2(this.#configuration)\n    }\n    this.renderer = new SVGRenderer(this.#configuration.rendering)\n\n    this.#model = new IModel()\n    this.writer = new IWriterManager(this)\n    this.eraser = new EraseManager(this)\n    this.debugger = new IDebugSVGManager(this)\n    this.tool = EditorTool.Write\n    this.history = new IHistoryManager(this.#configuration[\"undo-redo\"], this.event)\n  }\n\n  get penStyle(): TStyle\n  {\n    return this.#penStyle\n  }\n  set penStyle(penStyle: PartialDeep<TStyle>)\n  {\n    this.logger.info(\"set penStyle\", { penStyle })\n    this.#penStyle = Object.assign({}, this.#penStyle, penStyle)\n  }\n\n  get initializationPromise(): Promise<void>\n  {\n    return Promise.resolve()\n  }\n\n  get tool(): EditorTool\n  {\n    return this.#tool\n  }\n  set tool(i: EditorTool)\n  {\n    this.#tool = i\n    this.writer.detach()\n    this.eraser.detach()\n\n    switch (this.tool) {\n      case EditorTool.Erase:\n        this.eraser.attach(this.layers.root)\n        this.layers.root.classList.remove(\"draw\")\n        this.layers.root.classList.add(\"erase\")\n        break\n      default:\n        this.writer.attach(this.layers.root)\n        this.layers.root.classList.add(\"draw\")\n        this.layers.root.classList.remove(\"erase\")\n        break\n    }\n\n  }\n\n  get model(): IModel\n  {\n    return this.#model\n  }\n\n  get configuration(): InkEditorConfiguration\n  {\n    return this.#configuration\n  }\n\n  async initialize(): Promise<void>\n  {\n    try {\n      this.logger.info(\"initialize\")\n      this.layers.render()\n      this.layers.showLoader()\n      this.tool = EditorTool.Write\n      this.renderer.init(this.layers.rendering)\n\n      const compStyles = window.getComputedStyle(this.layers.root)\n      this.model.width = Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.#configuration.rendering.minWidth)\n      this.model.height = Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.#configuration.rendering.minHeight)\n      this.model.rowHeight = this.configuration.rendering.guides.gap\n      this.history.init(this.model)\n\n      if (!this.recognizer.configuration.server.version) {\n        await this.loadInfo(this.configuration.server)\n        this.recognizer.configuration.server.version = this.info!.version\n      }\n    } catch (error) {\n      this.logger.error(\"initialize\", error)\n      this.layers.showMessageError(error as Error)\n      throw error\n    }\n    finally {\n      this.logger.debug(\"initialize\", \"finally\")\n      this.layers.hideLoader()\n      this.layers.updateState(true)\n    }\n  }\n\n  //updateBoundingBox\n  updateSymbolsStyle(symbolIds: string[], style: PartialDeep<TStyle>): void\n  {\n    this.logger.info(\"updateSymbolsStyle\", { symbolIds, style })\n    this.model.strokes.forEach(s =>\n    {\n      if (symbolIds.includes(s.id)) {\n        s.style = Object.assign({}, s.style, style)\n        this.renderer.drawSymbol(s)\n        this.model.updateStroke(s)\n        s.modificationDate = Date.now()\n      }\n    })\n  }\n\n  async export(requestedMimeTypes?: string[]): Promise<TExportV2>\n  {\n    this.logger.info(\"export\")\n    const currentModel = this.model.clone()\n\n    const exports = await this.recognizer.send(currentModel.strokes, requestedMimeTypes)\n    currentModel.mergeExport(exports)\n    if (this.model.modificationDate === currentModel.modificationDate) {\n      this.model.exports = currentModel.exports\n    }\n    this.history.updateModelStack(currentModel)\n    this.event.emitExported(this.model.exports || {})\n    return exports\n  }\n\n  async resize({ height, width }: { height?: number, width?: number } = {}): Promise<void>\n  {\n    this.logger.info(\"resize\", { height, width })\n    const compStyles = window.getComputedStyle(this.layers.root)\n    this.model.height = height || Math.max(parseInt(compStyles.height.replace(\"px\", \"\")), this.configuration.rendering.minHeight)\n    this.model.width = width || Math.max(parseInt(compStyles.width.replace(\"px\", \"\")), this.configuration.rendering.minWidth)\n    this.renderer.resize(this.model.height, this.model.width)\n    this.logger.debug(\"resize\", { model: this.model })\n    this.event.emitExported(this.model.exports || {})\n  }\n\n  async removeStrokes(strokeIds: string[]): Promise<void>\n  {\n    this.logger.info(\"removeStrokes\", { strokeIds })\n    const removedStrokes = this.model.strokes.filter(s => strokeIds.includes(s.id))\n    if (removedStrokes.length === 0) {\n      this.logger.warn(\"removeStrokes\", \"No strokes found to remove\")\n      return\n    }\n    this.#model = this.model.clone()\n    removedStrokes.forEach(s => {\n      this.renderer.removeSymbol(s.id)\n      this.model.removeStroke(s.id)\n    })\n    this.history.push(this.#model, { removed: removedStrokes })\n    const exports = await this.recognizer.send(this.model.strokes)\n    this.model.mergeExport(exports)\n    this.history.updateModelStack(this.model)\n    this.event.emitExported(this.#model.exports as TExport)\n    this.logger.debug(\"removeStrokes\", { model: this.#model })\n  }\n\n  async undo(): Promise<void>\n  {\n    this.logger.info(\"undo\")\n    const previousStackItem = this.history.undo()\n    const modifications = previousStackItem.model.extractDifferenceStrokes(this.model)\n    this.#model = previousStackItem.model.clone()\n    modifications.removed.forEach(s => this.renderer.removeSymbol(s.id))\n    modifications.added.forEach(s => this.renderer.drawSymbol(s))\n    await this.export()\n  }\n\n  async redo(): Promise<void>\n  {\n    this.logger.info(\"redo\")\n    const previousStackItem = this.history.redo()\n    const modifications = previousStackItem.model.extractDifferenceStrokes(this.model)\n    this.#model = previousStackItem.model.clone()\n    modifications.removed.forEach(s => this.renderer.removeSymbol(s.id))\n    modifications.added.forEach(s => this.renderer.drawSymbol(s))\n    await this.export()\n  }\n\n  async clear(): Promise<void>\n  {\n    this.logger.info(\"clear\")\n    const erased = this.model.strokes\n    this.model.clear()\n    this.history.push(this.model, { removed: erased })\n    this.renderer.clear()\n    this.event.emitExported(this.#model.exports as TExport)\n  }\n\n  async destroy(): Promise<void>\n  {\n    this.logger.info(\"destroy\")\n    this.event.removeAllListeners()\n    this.writer.detach()\n    this.layers.destroy()\n    this.renderer.destroy()\n    return Promise.resolve()\n  }\n}\n","import { LoggerCategory, LoggerManager } from \"../logger\"\nimport { EditorType } from \"./AbstractEditor\"\nimport { InteractiveInkEditor, TInteractiveInkEditorOptions } from \"./InteractiveInkEditor\"\nimport { InkEditorDeprecated, TInkEditorDeprecatedOptions } from \"./InkEditorDeprecated\"\nimport { InteractiveInkSSREditor, TInteractiveInkSSREditorOptions } from \"./InteractiveInkSSREditor\"\nimport { InkEditor, TInkEditorOptions } from \"./InkEditor\"\n\n/**\n * @group Editor\n * @hideconstructor\n */\nexport class Editor\n{\n  protected static logger = LoggerManager.getLogger(LoggerCategory.EDITOR)\n  protected static instance: InteractiveInkEditor | InkEditorDeprecated | InteractiveInkSSREditor | InkEditor |undefined\n\n  static async load<T extends EditorType>(rootElement: HTMLElement, type: T, options: T extends \"INTERACTIVEINK\" ? TInteractiveInkEditorOptions : T extends \"INKV1\" ? TInkEditorDeprecatedOptions : TInteractiveInkSSREditorOptions extends \"INKV2\" ? TInkEditorOptions : TInteractiveInkSSREditorOptions):\n    Promise<T extends \"INTERACTIVEINK\" ? InteractiveInkEditor : T extends \"INKV1\" ? InkEditorDeprecated : InteractiveInkSSREditor extends \"INKV2\" ? InkEditor : InteractiveInkSSREditor>\n  {\n    Editor.logger.info(\"load\", { type, options })\n    if (!options) {\n        throw new Error(`Param 'options' missing`)\n    }\n    if (Editor.instance) {\n      await Editor.instance.destroy()\n    }\n\n    switch (type) {\n      case \"INTERACTIVEINK\":\n        Editor.instance = new InteractiveInkEditor(rootElement, options as TInteractiveInkEditorOptions)\n        break\n      case \"INKV1\":\n        Editor.instance = new InkEditorDeprecated(rootElement, options as TInkEditorDeprecatedOptions)\n        break\n      case \"INKV2\":\n        Editor.instance = new InkEditor(rootElement, options as TInkEditorOptions)\n        break;\n      // case \"INTERACTIVEINKSSR\":\n      default:\n        Editor.instance = new InteractiveInkSSREditor(rootElement, options as TInteractiveInkSSREditorOptions)\n        break\n    }\n\n    await Editor.instance.initialize()\n\n    return Editor.instance as T extends \"INTERACTIVEINK\" ? InteractiveInkEditor : T extends \"INKV1\" ? InkEditorDeprecated : InteractiveInkSSREditor extends \"INKV2\" ? InkEditor : InteractiveInkSSREditor\n  }\n\n  static getInstance(): InteractiveInkEditor | InkEditorDeprecated | InteractiveInkSSREditor | InkEditor | undefined\n  {\n    return Editor.instance\n  }\n\n}\n","\n/**\n * @group Recognizer\n */\nexport type TConvertionConfiguration = {\n    force?: {\n        \"on-stylesheet-change\": boolean\n    }\n}\n\n/**\n * @group Recognizer\n * @source\n */\nexport const DefaultConvertionConfiguration: TConvertionConfiguration = {\n    force: {\n        \"on-stylesheet-change\": false\n    }\n}\n","import { TServerHTTPConfiguration } from \"../recognizer\"\nimport { PartialDeep } from \"./types\"\n\n/**\n * @group Utils\n */\nexport async function getAvailableFontList(configuration: PartialDeep<{ server: TServerHTTPConfiguration, recognition: { lang: string }}>): Promise<Array<string>>\n{\n  if (!configuration?.server?.scheme && !configuration?.server?.host) {\n    return Promise.reject(\"Failed to get fonts: configuration.server.scheme & configuration.server.host are required!\")\n  }\n  if (!configuration?.recognition?.lang) {\n    return Promise.reject(\"Failed to get fonts: configuration.recognition.lang is required!\")\n  }\n  const serverConfig = configuration.server\n  const response = await fetch(`${ serverConfig.scheme }://${ serverConfig.host }/api/v4.0/iink/font/google/language/` + configuration.recognition.lang)\n  const { result } = await response.json()\n  return result.sort()\n}\n"],"names":["EditorTool","EditorWriteTool","SvgElementRole","ResizeDirection","SELECTION_MARGIN","DeferredPromise","promise","resolve","reject","isFullFilled","isPending","constructor","this","Promise","async","v","isValidNumber","x","isNaN","parseFloat","toString","isFinite","isBetween","val","min","max","computeAverage","arr","reduce","p","c","length","computeDistance","p1","p2","distance","Math","hypot","y","computeAngleAxeRadian","begin","end","atan2","scalaire","v1","v2","computeNearestPointOnSegment","seg","vectP1P","vectP1P2","scalaireP1P_P1P2","scalaireP1P2_P1P2","t","convertRadianToDegree","radian","PI","toFixed","convertDegreeToRadian","degree","computeRotatedPoint","point","center","dx","dy","cos","sin","computePointOnEllipse","radiusX","radiusY","phi","theta","cosPhi","sinPhi","M","abs","N","findIntersectionBetween2Segment","seg1","seg2","S1dx","S1dy","S2dx","S2dy","S1S2dx","S1S2dy","ua_t","ub_t","u_b","ua","ub","findIntersectBetweenSegmentAndCircle","r","result","a","pow","b","cc","deter","e","sqrt","u1","u2","push","computeAngleRadian","p1c","p2c","p1p2","acos","getClosestPoints","points1","points2","minDistance","Number","MAX_SAFE_INTEGER","forEach","_p1","_p2","d","getClosestPoint","points","closest","index","i","isPointInsidePolygon","inside","j","isVersionSuperiorOrEqual","source","target","sourceParts","split","targetParts","computeHmac","message","applicationKey","hmacKey","enc","TextEncoder","messageEncoded","encode","keyEncoded","key","crypto","subtle","importKey","name","hash","signature","sign","buffer","Uint8Array","Array","prototype","map","call","padStart","join","convertMillimeterToPixel","mm","convertPixelToMillimeter","px","convertBoundingBoxMillimeterToPixel","box","width","height","createUUID","dt","Date","now","replace","random","floor","mergeDeep","sources","isObject","item","isArray","shift","Object","assign","concat","isDeepEqual","object1","object2","objKeys1","keys","objKeys2","value1","value2","isObjects","object","getAvailableLanguageList","configuration","server","scheme","host","serverConfig","fetch","json","computeLinksPointers","angle","radius","computeMiddlePointer","point1","point2","getApiInfos","response","ok","version","gitCommit","nativeVersion","LoggerLevel","LoggerCategory","Logger","category","level","debug","functionName","data","DEBUG","dataLog","from","console","info","INFO","warn","WARN","error","LoggerManager","static","Map","getLogger","loggerMap","has","set","ERROR","get","setLoggerLevel","config","lc","DefaultLoggerConfiguration","EDITOR","RECOGNIZER","GRABBER","RENDERER","EDITOR_EVENT","MODEL","SYMBOL","SMARTGUIDE","GESTURE","STYLE","HISTORY","TRANSFORMER","CONVERTER","WRITE","SELECTION","SVGDEBUG","MENU","EditorEventName","EditorEvent","EventTarget","logger","abortController","element","super","AbortController","removeAllListeners","abort","emit","type","evt","CustomEvent","bubbles","composed","detail","undefined","dispatchEvent","emitSessionOpened","sessionId","SESSION_OPENED","addSessionOpenedListener","callback","addEventListener","signal","emitLoaded","LOADED","addLoadedListener","emitNotif","notif","NOTIF","addNotifListener","emitError","err","addErrorListener","emitExported","exports","EXPORTED","addExportedListener","emitChanged","undoRedoContext","CHANGED","canClear","empty","addChangedListener","emitIdle","idle","IDLE","addIdleListener","emitCleared","CLEARED","addClearedListener","emitConverted","CONVERTED","addConvertedListener","emitImported","IMPORTED","addImportedListener","emitSelected","symbols","SELECTED","addSelectedListener","emitToolChanged","mode","TOOL_CHANGED","addToolChangedListener","emitUIpdated","UI_UPDATED","addUIpdatedListener","emitSynchronized","SYNCHRONIZED","addSynchronizedListener","emitGestured","gesture","GESTURED","addGesturedListener","ExportType","JIIXELementType","JIIXNodeKind","JIIXEdgeKind","ExportV2Type","JIIXV2ShapeKind","EditorLayer","root","ui","rendering","onCloseModal","rootClassCss","classList","add","createLayerRender","createLayerUI","render","styleElement","document","createElement","appendChild","createTextNode","prepend","createLoader","loaderHTML","style","display","showLoader","loader","hideLoader","createMessageOverlay","overlay","closeMessageModal","modal","contains","hideMessageModal","text","innerText","remove","createMessageModal","closeBtn","bind","createMessage","showMessageInfo","setTimeout","timeout","showMessageError","createBusy","busy","createState","showState","state","hideState","updateState","destroy","lastChild","removeChild","AbstractEditor","layers","event","loggerConfiguration","rootElement","options","override","cssClass","editor","loggerConfig","loadInfo","Box","boundindBox","Error","createFromBoxes","boxes","createFromPoints","getCorners","getSide","getCenter","getSides","vertices","isContained","wrapper","containsPoint","child","overlaps","box1","box2","xMin","xMid","xMax","yMin","yMid","yMax","corners","side","snapPoints","boundaries","DefaultStyle","color","DefaultPenStyle","DefaultTheme","ink","module","o","n","l","m","defineProperty","configurable","enumerable","__esModule","default","hasOwnProperty","s","TypeError","value","Symbol","iterator","toJSON","u","trim","indexOf","substring","_trimSemiColon","toCSS","slice","parser","JsonCSS","StyleHelper","themeToCSS","themeToJSON","theme","penStyleToCSS","penStyle","css","penStyleToJSON","penStyleString","stringToJSON","JSONToString","entries","k","StyleManager","penStyleClasses","currentPenStyle","setTheme","setPenStyleClasses","setPenStyle","structuredClone","penStyleClass","DecoratorKind","SymbolType","EdgeKind","ShapeKind","RecognizedKind","IIDecorator","id","kind","clone","MatrixTransform","xx","yx","xy","yy","tx","ty","identity","applyToPoint","mat","rotation","hypotAc","hypotBd","toCssString","matrix","invert","denom","multiply","translate","rotate","cosAngle","round","sinAngle","scale","IISymbolBase","creationTime","modificationDate","selected","deleting","transform","opacity","edges","isClosed","isIntersected","some","edge","EdgeDecoration","OIEdgeBase","startDecoration","endDecoration","Edge","bounds","bb","e1","e2","isValidPoint","IIEdgeArc","startAngle","sweepAngle","_vertices","Arc","verticesId","computedVertices","nbVertices","angleStep","endAngle","at","create","partial","arc","IIEdgeLine","start","Line","line","IIEdgePolyLine","PolyEdge","polyline","OIShapeBase","Shape","IIShapeCircle","_bounds","Circle","computedBondingBox","firstPoint","perimeter","nbPoint","rad","boundingBox","createBetweenPoints","origin","updateBetweenPoints","circle","IIShapeEllipse","orientation","Ellipse","ellipse","IIShapePolygon","Polygon","polygon","createTriangleBetweenPoints","updateTriangleBetweenPoints","poly","createParallelogramBetweenPoints","updateParallelogramBetweenPoints","createRectangleBetweenPoints","updateRectangleBetweenPoints","createRhombusBetweenPoints","updateRhombusBetweenPoints","IIStroke","pointerType","decorators","pointers","Stroke","strokeToSplit","before","after","substract","stroke","partStroke","lastPointBeforeStroke","closestLastPointBeforeStroke","newStrokes","strokeAfter","firstPointAfterStroke","closestFirstPointStrokeAfter","computePressure","ratio","pressure","filterPointByAcquisitionDelta","lastPointer","delta","addPointer","pointer","formatToSend","errors","flag","pp","pIndex","convertPartialStrokesToOIStrokes","strokes","IIRecognizedBase","Recognized","flatMap","updateChildrenStyle","containsStroke","strokeId","removeStrokes","strokeIds","strokeRemoved","filter","includes","IIRecognizedArc","JSON","parse","stringify","ws","IIRecognizedCircle","IIRecognizedEllipse","IIRecognizedLine","IIRecognizedPolyLine","IIRecognizedPolygon","Polygone","IIRecognizedText","baseline","xHeight","label","lines","Text","IISymbolGroup","children","Group","chars","containsSymbol","containsOnlyStroke","extractText","extractStrokes","removeChilds","symbolIds","group","every","texts","symbolId","symbol","s1","IIText","offsetY","getCharCorners","char","boxBox","updateChildrenFont","fontSize","fontWeight","getCharsOverlaps","charCorners","fill","IIEraser","Eraser","Model","positions","currentSymbol","converts","rowHeight","creationDate","lastSentPosition","lastReceivedPosition","globalDistance","getStrokeFromPoint","_strokeList","strokePointer","addPoint","addStroke","updateStroke","updatedStroke","strokeIndex","findIndex","splice","removeStroke","removeStrokesFromPoint","strokeToRemove","extractUnsentStrokes","initCurrentStroke","dpi","pxWidth","appendToCurrentStroke","endCurrentStroke","updatePositionSent","position","updatePositionReceived","mergeExport","mergeConvert","clonedModel","clear","IIModel","symbolsSelected","symbolsToDelete","selectSymbol","find","unselectSymbol","resetSelection","getRootSymbol","getSymbolRowIndex","getSymbolsByRowOrdered","rows","rowIndex","row","sort","s2","r1","r2","roundToLineGuide","isSymbolAbove","isSymbolInRow","isSymbolBelow","getFirstSymbol","previous","current","getLastSymbol","addSymbol","updateSymbol","updatedSymbol","sIndex","replaceSymbol","changeOrderSymbol","fromIndex","toIndex","sym","removeSymbol","symbolIndex","extractDifferenceSymbols","model","added","removed","IModel","currentStroke","strokesToDelete","extractDifferenceStrokes","DefaultServerHTTPConfiguration","DefaultServerWebsocketConfiguration","websocket","pingEnabled","pingDelay","maxPingLostCount","autoReconnect","maxRetryCount","fileChunkSize","DefaultEraserConfiguration","DefaultDiagramConvertConfiguration","types","DefaultDiagramConfiguration","convert","eraser","mimeTypes","DefaultJiixConfiguration","ids","words","DefaultExportConfiguration","jiix","DefaultMarginConfiguration","top","left","right","bottom","DefaultSolverConfiguration","enable","DefaultMathUndoRedoConfiguration","DefaultMathConfiguration","solver","margin","DefaultRawContentConfiguration","recognition","classification","DefaultDebugConfiguration","DefaultRecognitionRendererConfiguration","DefaultTextGuidesConfiguration","DefaultTextConfiguration","guides","DefaultTextGuidesConfigurationV2","DefaultTexConfigurationV2","DefaultShapeConvertConfiguration","DefaultShapeBeautificationConfiguration","DefaultShapeConfiguration","beautification","RecognizerEventName","RecognizerError","RecognizerEvent","emitStartInitialization","START_INITIALIZATION","addStartInitialization","emitEndtInitialization","END_INITIALIZATION","addEndInitialization","emitContentChanged","CONTENT_CHANGED","addContentChangedListener","emitConnectionClose","code","CONNECTION_CLOSE","addConnectionCloseListener","emitSVGPatch","svgPatch","SVG_PATCH","addSVGPatchListener","DefaulRecognitionHTTPV1ConfigurationConfiguration","export","math","diagram","renderer","lang","DefaultRecognizerHTTPV1Configuration","RecognizerHTTPV1Configuration","Set","RecognizerHTTPV1","url","postConfig","buildData","strokeGroupByPenStyle","groupIndex","sg","isPenStyleEqual","ps1","ps2","strokeGroupsToSend","newGroup","contentType","charAt","toUpperCase","toLowerCase","xDPI","yDPI","strokeGroups","post","mimeType","headers","Headers","append","hmac","reqInit","method","body","request","Request","blob","catch","tryFetch","then","res","UNKNOW","WRONG_CREDENTIALS","CANT_ESTABLISH","getMimeTypes","requestedMimeTypes","conversionState","myModel","dataToConcert","promises","mt","all","String","mimeTypesRequiringExport","resize","DefaultRecognizerHTTPV2RecognitionConfiguration","shape","DefaultRecognizerHTTPV2Configuration","RecognizerHTTPV2Configuration","RecognizerHTTPV2","formatStrokes","scaleX","scaleY","send","TRecognizerWebSocketMessageType","DefaultRecognitionWebSocketConfiguration","gestures","ignoreGestureStrokes","DefaultRecognizerWebSocketConfiguration","RecognizerWebSocketConfiguration","RecognizerWebSocket","socket","pingWorker","pingCount","reconnectionCount","currentPartId","currentErrorCode","addStrokeDeferred","contextlessGestureDeferred","transformStrokeDeferred","eraseStrokeDeferred","replaceStrokeDeferred","exportDeferredMap","closeDeferred","waitForIdleDeferred","undoDeferred","redoDeferred","clearDeferred","initialized","readyState","OPEN","rejectDeferredPending","values","resetAllDeferred","clearSocketListener","removeEventListener","openCallback","closeCallback","messageCallback","reason","GOING_AWAY","PROTOCOL_ERROR","UNSUPPORTED_DATA","ABNORMAL_CLOSURE","INVALID_FRAME_PAYLOAD","POLICY_VIOLATION","MESSAGE_TOO_BIG","INTERNAL_ERROR","SERVICE_RESTART","TRY_AGAIN","BAD_GATEWAY","TLS_HANDSHAKE","terminate","manageHMACChallenge","hmacChallengeMessage","hmacChallenge","initPing","PingWorker","postMessage","onmessage","close","manageAuthenticated","pixelTomm","iinkSessionId","manageSessionDescriptionMessage","sessionDescriptionMessage","manageNewPartMessage","newPartMessage","managePartChangeMessage","partChangeMessage","partId","manageContentChangedMessage","contentChangeMessage","canRedo","canUndo","manageExportMessage","exportMessage","manageWaitForIdle","manageErrorMessage","errorMessage","NO_ACTIVITY","TOO_OLD","NO_SESSION_FOUND","manageGestureDetected","gestureMessage","manageContextlessGesture","websocketMessage","Pong","HMAC_Challenge","Authenticated","SessionDescription","NewPart","PartChanged","ContentChanged","Exported","GestureDetected","ContextlessGesture","Idle","newSession","init","WebSocket","CONNECTING","CLOSING","CLOSED","waitForIdle","buildAddStrokesMessage","processGestures","addStrokes","buildReplaceStrokesMessage","oldStrokeIds","replaceStrokes","buildTransformTranslateMessage","transformationType","transformTranslate","buildTransformRotateMessage","x0","y0","transformRotate","buildTransformScaleMessage","transformScale","buildTransformMatrixMessage","transformMatrix","buildEraseStrokesMessage","eraseStrokes","recognizeGesture","buildUndoRedoChanges","changes","changesMessages","erased","replaced","oldStrokes","tr","undo","actions","redo","DefaultRecognizerWebSocketSSRRecognitionConfiguration","DefaultRecognizerWebSocketSSRConfiguration","RecognizerWebSocketSSRConfiguration","RecognizerWebSocketSSR","viewSizeHeight","viewSizeWidth","connected","ackDeferred","exportDeferred","convertDeferred","importDeferred","resizeDeferred","importPointEventsDeferred","toLocaleLowerCase","infinitePing","params","xDpi","yDpi","manageAckMessage","manageContentPackageDescriptionMessage","manageContentChangeMessage","context","stackIndex","undoStackIndex","possibleUndoCount","manageSVGPatchMessage","svgPatchMessage","styleClasses","localModel","import","chunkSize","importFileId","readBlob","fileReader","FileReader","onloadend","ev","onerror","readAsText","importFileMessage","size","blobPart","fileChuckMessage","lastChunk","importPointEvents","events","myExportConverted","undoExports","redoExports","clearExports","CanvasRendererShape","table","returnedAngle","drawEllipseArc","context2D","shapeEllipse","centerPoint","maxRadius","minRadius","z1","z2","z3","z4","boundariesPoints","save","beginPath","alpha","cosAlpha","sinAlpha","moveTo","lineTo","restore","drawLine","drawArrowHead","headPoint","beta","fillStyle","strokeStyle","drawShapeEllipse","beginDecoration","beginTangentAngle","endTangentAngle","drawShapeLine","shapeLine","lastPoint","draw","lineWidth","CanvasRendererStroke","renderArc","context2d","renderLine","linkPoints1","linkPoints2","renderFinal","linkPoints","newAngle","renderQuadratic","ctrl","linkPoints3","quadraticCurveTo","NUMBER_POINTS","NUMBER_QUADRATICS","secondPoint","beginLine","endLine","beginFinal","endFinal","closePath","CanvasRendererText","string","textLine","drawUnderline","textUnderline","underline","topLeftPoint","firstCharacter","lastCharacter","drawText","font","textHeight","textAlign","justificationType","textBaseline","fillText","drawTextLine","underlineList","CanvasRenderer","strokeRenderer","shapeRenderer","textRenderer","createCanvas","canvas","resizeContent","pixelRatio","window","devicePixelRatio","renderingCanvas","capturingCanvas","domElement","parentNode","minWidth","clientWidth","minHeight","clientHeight","getContext","drawSymbol","guide","setAttribute","backgroundSize","parent","renderingCanvasContext","capturingCanvasContext","drawModel","clearRect","drawPendingStroke","innerHTML","SVGRendererConst","arrowHeadStartMarker","arrowHeadEndMaker","selectionFilterId","removalFilterId","crossMarker","noSelection","XMLNS","SVGBuilder","createLayer","attrs","svgEl","createElementNS","createFilter","createDefs","createMarker","marker","createComponentTransfert","createDropShadow","deviation","shadow","createTransfertFunctionTable","feFunc","createGroup","groupEl","createLine","lineEl","createCircle","circleEl","createPath","pathEl","createPolygon","polygonEl","createRect","rectEl","createTSpan","tSpanEl","textContent","createForeignObject","node","objEl","createText","textEl","SVGRendererEdgeUtil","getLinePath","getPolyLinePath","getArcPath","getSVGPath","getSVGElement","pathAttrs","Arrow","SVGRendererEraserUtil","startPath","strokeWith","acc","shadowBlur","SVGRendererDecoratorUtil","decorator","Highlight","Surround","Strikethrough","Underline","SVGRendererShapeUtil","getPolygonePath","getCirclePath","getEllipsePath","SVGRendererStrokeUtil","getFinalPath","parts","getQuadraticPath","central","STROKE_LENGTH","STROKE_WIDTH","NB_QUADRATICS","beforeLastPoint","strokeGroup","strokeAttrs","deco","SVGRendererTextUtil","textGroup","textElement","SVGRendererRecognizedUtil","recognizedSymbol","SVGRendererGroupUtil","getChildElement","symbolGroup","SVGRenderer","groupGuidesId","layer","definitionGroup","verticalGuides","horizontalGuides","initLayer","setProperty","createSVGTools","defs","REFX","SIZE","REFY","arrowHeadMarkerAttrs","markerWidth","markerHeight","refX","refY","arrowHeadStart","orient","arrowHeadEnd","crossMarkerAttrs","viewBox","cross","createFilters","filtersGroup","removalFilter","filterUnits","bfeComponentTransfer","bfeFuncA","selectionFilter","drawGuides","getAttribute","offSet","gap","subOffSet","role","Guide","guidesGroup","svgLine","subY","subX","svgPoint","removeGuides","querySelector","oncontextmenu","buildElementFromSymbol","prependElement","el","symbolToMove","moveEl","insertAdjacentElement","nextElementSibling","previousElementSibling","appendElement","removeElement","oldStroke","oldNode","replaceWith","elements","drawCircle","drawRect","drawConnectionBetweenBox","attrsLine","getElementById","getElements","tagName","query","querySelectorAll","clearElements","firstChild","SVGStroker","buildSVGPath","drawStroke","svgElement","svgPathElement","svgPath","InteractiveInkSSRSVGRenderer","stroker","replaceAll","layerName","update","oldLayer","insertAdjacentHTML","svg","pendingStrokesGroup","replaceElement","elementToRemove","parentSelector","parentId","insertBefore","refId","selector","removeAttribute","updateLayer","updatesLayer","updates","clearPendingStroke","pendingStrokeGroup","clearErasingStrokes","erasingStroke","rect","getBoundingClientRect","svgList","DefaultGuidesConfiguration","DefaultRendererConfiguration","DefaultIIRendererConfiguration","DefaultListenerConfiguration","capture","passive","DefaultGrabberConfiguration","listenerOptions","xyFloatPrecision","timestampFloatPrecision","delayLongTouch","PointerEventGrabber","layerCapture","capturing","prevent","preventDefault","onPointerDown","onPointerMove","onPointerUp","onContextMenu","roundFloat","oneFloat","requestedFloatPrecision","floatPrecision","extractPointer","clientX","clientY","changedTouches","clientLeft","scrollLeft","clientTop","scrollTop","getPointerInfos","isPrimary","button","buttons","pointerDownHandler","pointerInfo","pointerMoveHandler","pointerUpHandler","pointerOutHandler","contextMenuHandler","stopPointerEvent","attach","detach","removeProperty","AbstractWriterManager","grabber","detectGesture","continue","localPointer","createCurrentSymbol","updateCurrentSymbol","IIConversionManager","fontStyle","computeFontSize","buildChar","grid","weight","buildText","word","charSymbols","charFontSize","charStrokes","items","hightlight","strikethrough","surround","convertText","onlyText","jiixWords","jiixChars","textFontSize","isNewLine","currentY","leftX","currentX","texter","getSpaceWidth","wordStrokes","wordSymbol","nbRow","setBounds","buildCircle","cx","cy","buildEllipse","rx","ry","buildRectangle","rectangle","buildPolygon","buildRhombus","buildTriangle","buildParallelogram","convertNode","associatedStroke","uniqStrokes","Rectangle","Triangle","Parallelogram","Rhombus","buildLine","x1","y1","x2","y2","p1Decoration","p2Decoration","buildPolyEdge","unshift","buildArc","convertEdge","apply","removeSelectedGroup","strokesToConvert","extractStrokesFromSymbols","conversionResults","conversion","addSymbols","cs","removeSymbols","history","IIResizeManager","interactElementsGroup","direction","transformOrigin","keepRatio","applyToStroke","applyToShape","applyToEdge","applyOnText","updateBounds","applyOnGroup","applyToSymbol","applyOnRecognizedSymbol","setTransformOrigin","originX","originY","scaleElement","sx","sy","InteractElementsGroup","localPoint","horizontalResize","verticalResize","snaps","snapResize","deltaX","deltaY","clearSnapToElementLines","oldSymbols","strokesFromSymbols","recognizer","svgDebugger","IIRotationManager","angleRad","strokeText","rotateElement","angleDegree","snapRotation","IISelectionManager","selectingId","startSelectionPoint","endSelectionPoint","selectedGroup","rotator","translator","resizer","selectionBox","drawSelectingRect","clearSelectingRect","getPoint","createTranslateRect","Translate","boxWithMarge","translateEl","handler","stopPropagation","endHandler","cursor","resetSelectedGroup","hideInteractElements","createRotateGroup","Rotate","attrs1","attrs2","attrs3","createResizeGroup","Resize","P_NW","P_NE","P_SE","P_SW","bindEl","def","lineResize","cornerResize","createInteractElementsGroup","symbolElementMap","surroundGroup","SURROUND_ATTRS","createEdgeResizeGroup","pointIndex","pointEl","createInteractEdgeGroup","drawSelectedGroup","groupBox","getBBox","menu","show","hide","updatedSymbols","found","currentEl","symbolTypesAllowed","parentElement","unselectAll","updateLayerUI","IITextManager","drawSymbolHidden","setCharsBounds","textGroupEl","getNumberOfChars","ext","getExtentOfChar","getElementBoundingBox","markers","clipped","getBoundingBox","charSymbol","textSymbol","moveTextAfter","textsAfter","IITranslateManager","addToHistory","translateElement","nudge","snapTranslate","IIWriterManager","tool","Pencil","currentSymbolOrigin","wt","gestureManager","needContextLessGesture","strokeBoundsWithMargin","getSymbolsBounds","DoubleArrow","updateCurrentSymbolShape","updateCurrentSymbolEdge","interactWithBackend","localStroke","gestureFromContextLess","getGestureFromContextLess","pop","localSymbol","IIDebugSVGManager","snapPointsVisibility","verticesVisibility","boundingBoxVisibility","recognitionBoxVisibility","recognitionItemBoxVisibility","debugSnapPoints","debugVertices","showBoundingBox","hideBoundingBox","debugRecognitionBox","debugRecognitionItemBox","showSnapPoints","hideSnapPoints","showVertices","hideVertices","drawBoundingBox","symbolAttrs","charAttrs","symEl","ca","sa","debugBoundingBox","drawRecognitionBox","infos","COLOR","recognitionGroup","infosGroup","infoX","infoY","TEXT_HEIGHT","w","infosGroupBox","rectBox","rectTranslate","newRectBox","showRecognitionBox","hideProperties","candidates","inf","clearRecognitionBox","drawRecognitionItemBox","recognitionItemGroup","charX","charY","charsGroup","charsGroupBox","showRecognitionItemBox","clearRecognitionItemBox","IIMoveManager","IDebugSVGManager","recognitionBoxItemsVisibility","debugRecognitionBoxItems","debugAttr","rectAttr","buildInfos","obj","currentPath","localPath","associatedStrokes","range","to","h","showRecognitionBoxItems","spans","clearRecognitionBoxItems","EraseManager","currentEraser","lastSeg","InteractiveInkEditor","getInitialHistoryContext","HistoryManager","stack","updateContext","maxStackSize","updateStack","previousModel","nextModel","IIHistoryManager","isChangesEmpty","updated","order","ungroup","stackIdx","reverseChanges","reversedChanges","newSymbols","currentStackItem","previousStackItem","nextStackItem","IHistoryManager","updateModelStack","DefaultHistoryConfiguration","IIMenu","thicknessList","fontSizeList","fontWeightList","colors","createWrapCollapsible","title","head","btn","ArrowDown","content","toggle","createMenuItemBoolean","labelEl","checkbox","disabled","initValue","indeterminate","checked","createMenuItemSelect","select","opt","Option","createMenuItemButton","icon","createMenuItemButtonList","createMenuItemColorList","createColorList","list","colorEl","createMenuItem","SurroundAction","StrikeThroughAction","InsertAction","DefaultGestureConfiguration","Select","strikeThrough","Draw","insert","LineBreak","IIGestureManager","insertAction","surroundAction","strikeThroughAction","gestureAction","strokeSpaceWidth","applySurroundGesture","gestureStroke","symWithDec","highlight","computeScratchOnStrokes","partPointersToRemove","subStrokes","ss","fullStrokeId","strokePartToErase","computeScratchOnText","charsToRemove","cIndex","c1","computeScratchOnSymbol","strokesScratchedResult","childrenNotTouch","results","strokesToConserve","symbolsGroup","textScratchedResult","applyScratch","symbolsToUpdate","symbolsToErase","symbolsToReplace","updateSymbols","replaceSymbols","applyJoinGesture","symbolsAbove","symbolsRow","symbolsBeforeGestureInRow","symbolsOnGestureInRow","symbolsAfterGestureInRow","symbolsBelow","symbolToJoin","childBefore","childAfter","lastSymbBefore","firstSymbolAfter","translateX","lastSymbBeforeClone","firstSymbolAfterClone","symbolsToGroup","strokeTexts","d1","rest","lastSymbolBeforeGesture","firstSymbolAfterGesture","symbolInNextRow","symbolsAfterNextRow","lastSymbolAbove","createStrokesFromGestureSubStroke","strokeOrigin","subStroke","computeSplitStroke","computeSplitStrokeInGroup","newGroups","symbolsBefore","symbolsAfter","strokeIdToSplit","gs","computeChangesOnSplitStroke","symbolToSplit","strokesToSplit","strokesBefore","strokesAfter","computeChangesOnSplitGroup","groupToSplit","groupSymbolsBefore","groupsSymbolsAfter","groupBefore","grouAfter","computeChangesOnSplitStrokeText","strokeTextToSplit","strokeTextBefore","strokeTextAfter","computeChangesOnSplitText","textToSplit","charsBefore","charsAfter","newTexts","textBefore","pointAfter","textAfter","applyInsertGesture","Insert","applyUnderlineGesture","applyStrikeThroughGesture","Erase","updateSymbolsStyle","synchronizeStrokesWithJIIX","gestureType","gestureStrokeId","strokeAfterIds","strokeBeforeIds","symbolsToUnderline","symbolsToStrikeThrough","IIMenuSub","param","trigger","menuTitle","menuTitleElement","subMenu","open","unwrap","wrap","IIMenuAction","menuLanguage","menuClear","menuUndo","menuRedo","menuConvert","guideGaps","isMobile","createMenuClear","createMenuLanguage","triggerBtn","languages","changeLanguage","createMenuUndo","createMenuRedo","createMenuConvert","createMenuGesture","subMenuWrapper","surroundActionValues","strikeThroughActionValues","splitActionValues","writer","Write","createMenuGuide","renderingConfiguration","createMenuSnap","createMenuDebug","menuItems","createMenuExport","downloadAsJson","downloadAsSVG","downloadAsPNG","readFileAsText","file","reader","onload","createMenuImport","importInput","accept","multiple","importBtn","files","fileString","createSymbols","closeAllSubMenu","action","menuTrigger","visibility","IIMenuTool","writeBtn","menuSelect","menuMove","menuErase","menuShape","subMenuShape","menuEdge","subMenuEdge","createMenuWrite","createMenuMove","Move","createMenuSelect","createMenuErase","createShapeSubMenu","subMenuContent","nextSibling","createMenuShape","rectangleIcon","triangle","rhombus","createEdgeSubMenu","square","createMenuEdge","lineIcon","arrow","doubleArrow","IIMenuStyle","menuColorStroke","menuColorFill","menuThickness","menuFontSize","menuFontWeight","menuStrokeOpacity","writeShape","createMenuStroke","symbolsStyles","st","menuColorStrokeDef","menuColor","createMenuColorFill","createMenuThickness","createMenuFontSize","textSymbols","updateTextFontStyle","createMenuFontWeight","createMenuOpacity","currentOpacity","input","output","shapeSelected","IIMenuContext","editMenu","editInput","editSaveBtn","reorderMenu","decoratorMenu","menuExport","duplicateBtn","groupBtn","convertBtn","removeBtn","haveSymbolsSelected","symbolsDecorable","showDecorator","createMenuEdit","firstChar","createMenuDuplicate","symbolsToDuplicate","updateDeepIdInGroup","gr","duplicatedSymbols","createMenuGroup","ungroupSymbol","groupSymbols","convertSymbols","createMenuRemove","createMenuReorder","changeOrderSymbols","reverse","createDecoratorSubMenu","labelEL","decoIndex","_c","createMenuDecorator","createMenuSelectAll","selectAll","updateDecoratorSubMenu","decos","btnToActivate","updateGroupMenu","DefaultMenuConfiguration","IIMenuManager","custom","CustomMenuStyle","CustomMenuTool","CustomMenuAction","DefaultSnapConfiguration","SnapConfiguration","IISnapManager","selectionSnapPoints","otherSnapPoints","selectSymbolIds","snapThreshold","getNearestVerticalGuide","prev","curr","getNearestHorizontalGuide","getGuidePointToSnap","drawSnapToElementLines","getSnapLinesInfos","sourcePoints","targetPoints","Infinity","verticales","horizontales","horizontal","vertical","snapLines","snapLinesInfos","selectionSymbolPoints","lastDeltaX","lastDeltaY","gridPoint","DefaultInteractiveInkEditorConfiguration","snap","InteractiveInkEditorConfiguration","layerUITimer","recognizeStrokeTimer","converter","move","CustomRecognizer","manageError","onContentChanged","updateLayerState","initializationPromise","setCursorStyle","clearTimeout","initialize","compStyles","getComputedStyle","parseInt","buildShape","partialShape","buildEdge","partialEdge","buildRecognized","partialSymbol","buildGroup","partialGroup","buildStroke","buildStrokeText","buildSymbol","createSymbol","partialSymbols","updateTextBounds","symList","lastWidth","textIds","symbolsTranslated","textChildren","symToReplace","force","getSymbolsAndStrokesAssociatedFromJIIXStrokeItems","strokeIdsUsed","symIdx","jiixAssociation","symAsso","recognizedText","wd","Node","symbolRecognized","groupStrokeIds","symbolsToRemove","strokesIds","partialStrokes","triggerDownload","fileName","urlData","downloadAnchorNode","click","buildBlobFromSymbols","svgNode","cloneNode","svgString","XMLSerializer","serializeToString","Blob","getExportName","extension","year","month","day","hour","minute","second","toLocaleDateString","navigator","language","selection","svgBlob","URL","createObjectURL","image","Image","src","drawImage","revokeObjectURL","imgURI","toDataURL","symbolsToExport","dataStr","encodeURIComponent","extractTextsFromSymbols","extractBackendChanges","backendChanges","modifications","actionsToBackend","DefaultIEditorTriggerConfiguration","exportContent","exportContentDelay","resizeTriggerDelay","DefaultInkEditorDeprecatedConfiguration","triggers","InkEditorDeprecatedConfiguration","InkEditorDeprecated","resizeTimer","exportTimer","styleManager","CustomGrabber","drawCurrentStroke","updateModelRendering","deferred","currentModel","newModel","deferredResize","resizeModel","InteractiveInkSSRSmartGuide","uuid","smartGuideElement","wrapperElement","prompterContainerElement","prompterTextElement","ellipsisElement","tagElement","candidatesElement","menuElement","convertElement","copyElement","deleteElement","isMenuOpen","lastWord","wordToChange","createRootElement","createWrapperElement","createPrompterContainerElement","createPrompterTextElement","createEllipsisElement","createTagElement","createCandidatesElement","createMoreMenuElement","createConvertElement","createCopyElement","createDeleteElement","addListeners","showCandidates","wordId","hideCandidates","openMenu","closeMenu","onClickEllipsis","onClickConvert","createTextAreaElement","isRTL","documentElement","textArea","yPosition","pageYOffset","selectText","userAgent","match","createRange","selectNodeContents","getSelection","removeAllRanges","addRange","setSelectionRange","onClickCopy","fakeEl","execCommand","onClickDelete","onClickCandidate","candidate","JIIX","onClickPrompter","onClickOutSide","removeListeners","marginLeft","marginRight","createWordSpan","span","myFragment","createDocumentFragment","offsetLeft","populatePrompter","DefaultIIEditorTriggerConfiguration","DefaultInteractiveInkSSREditorConfiguration","smartGuide","InteractiveInkSSREditorConfiguration","InteractiveInkSSREditor","penClass","syncStyle","onExport","jjix","synchronizeModelWithBackend","onSVGPatch","initializeSmartGuide","onContetChaned","onError","unsentStrokes","blobToImport","strokesToImport","str","exportPoints","DefaultInkEditorConfiguration","InkEditorConfiguration","IWriterManager","InkEditor","debugger","removedStrokes","Editor","load","instance","getInstance","computeDistanceBetweenPointAndSegment","convertPartialStrokesToStrokes","ji","createPointsOnSegment","spaceBetweenPoint","spaceWithP1","getAvailableFontList","isPointInsideBox"],"mappings":"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","x_google_ignoreList":[24]}